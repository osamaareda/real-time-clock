

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 13 11:06:23 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1,inline
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1,inline
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1,inline
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1,inline
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1,inline
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1,inline
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1,inline
   172                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,inline
   174                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   175                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   176                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   177  0000                     
   178                           ; Generated 23/03/2023 GMT
   179                           ; 
   180                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution. Publication is not required when
   194                           ;        this file is used in an embedded application.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F4620 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213                           	psect	idataCOMRAM
   214  004684                     __pidataCOMRAM:
   215                           	callstack 0
   216                           
   217                           ;initializer for _RB7_Flag
   218  004684  01                 	db	1
   219                           
   220                           ;initializer for _RB6_Flag
   221  004685  01                 	db	1
   222                           
   223                           ;initializer for _RB5_Flag
   224  004686  01                 	db	1
   225                           
   226                           ;initializer for _RB4_Flag
   227  004687  01                 	db	1
   228                           
   229                           ;initializer for _n
   230  004688  04                 	db	4
   231                           
   232                           ;initializer for _lcd
   233  004689  23                 	db	35
   234  00468A  2B                 	db	43
   235  00468B  03                 	db	3
   236  00468C  0B                 	db	11
   237  00468D  13                 	db	19
   238  00468E  1B                 	db	27
   239                           
   240                           ;initializer for _year_counter
   241  00468F  01                 	db	1
   242                           
   243                           ;initializer for _month_counter
   244  004690  01                 	db	1
   245                           
   246                           ;initializer for _day_counter
   247  004691  01                 	db	1
   248                           
   249                           	psect	idataBANK0
   250  004738                     __pidataBANK0:
   251                           	callstack 0
   252                           
   253                           ;initializer for _MY_INT0
   254  004738  F8                 	db	low _APP_INT0_ISR
   255  004739  2F                 	db	high _APP_INT0_ISR
   256  00473A  01                 	db	1
   257  00473B  01                 	db	1
   258  00473C  00                 	db	0
   259  00473D  00                 	db	0
   260                           
   261                           	psect	idataBANK1
   262  0043DA                     __pidataBANK1:
   263                           	callstack 0
   264                           
   265                           ;initializer for _portx
   266  0043DA  80                 	db	128
   267  0043DB  0F                 	db	15
   268  0043DC  81                 	db	129
   269  0043DD  0F                 	db	15
   270  0043DE  82                 	db	130
   271  0043DF  0F                 	db	15
   272  0043E0  83                 	db	131
   273  0043E1  0F                 	db	15
   274  0043E2  84                 	db	132
   275  0043E3  0F                 	db	15
   276                           
   277                           ;initializer for _latx
   278  0043E4  89                 	db	137
   279  0043E5  0F                 	db	15
   280  0043E6  8A                 	db	138
   281  0043E7  0F                 	db	15
   282  0043E8  8B                 	db	139
   283  0043E9  0F                 	db	15
   284  0043EA  8C                 	db	140
   285  0043EB  0F                 	db	15
   286  0043EC  8D                 	db	141
   287  0043ED  0F                 	db	15
   288                           
   289                           ;initializer for _trisx
   290  0043EE  92                 	db	146
   291  0043EF  0F                 	db	15
   292  0043F0  93                 	db	147
   293  0043F1  0F                 	db	15
   294  0043F2  94                 	db	148
   295  0043F3  0F                 	db	15
   296  0043F4  95                 	db	149
   297  0043F5  0F                 	db	15
   298  0043F6  96                 	db	150
   299  0043F7  0F                 	db	15
   300                           
   301                           ;initializer for _MY_INT1
   302  0043F8  1A                 	db	low _APP_INT1_ISR
   303  0043F9  22                 	db	high _APP_INT1_ISR
   304  0043FA  09                 	db	9
   305  0043FB  01                 	db	1
   306  0043FC  01                 	db	1
   307  0043FD  00                 	db	0
   308                           
   309                           	psect	smallconst
   310  001000                     __psmallconst:
   311                           	callstack 0
   312  001000  00                 	db	0
   313  001001                     _i2c_fsmStateTable:
   314                           	callstack 0
   315  001001  84                 	db	low _I2C_DO_IDLE
   316  001002  45                 	db	high _I2C_DO_IDLE
   317  001003  C6                 	db	low _I2C_DO_SEND_ADR_READ
   318  001004  44                 	db	high _I2C_DO_SEND_ADR_READ
   319  001005  F8                 	db	low _I2C_DO_SEND_ADR_WRITE
   320  001006  44                 	db	high _I2C_DO_SEND_ADR_WRITE
   321  001007  46                 	db	low _I2C_DO_TX
   322  001008  27                 	db	high _I2C_DO_TX
   323  001009  F6                 	db	low _I2C_DO_RX
   324  00100A  2B                 	db	high _I2C_DO_RX
   325  00100B  6E                 	db	low _I2C_DO_RCEN
   326  00100C  45                 	db	high _I2C_DO_RCEN
   327  00100D  42                 	db	low _I2C_DO_TX_EMPTY
   328  00100E  33                 	db	high _I2C_DO_TX_EMPTY
   329  00100F  42                 	db	low _I2C_DO_SEND_RESTART_READ
   330  001010  46                 	db	high _I2C_DO_SEND_RESTART_READ
   331  001011  30                 	db	low _I2C_DO_SEND_RESTART_WRITE
   332  001012  46                 	db	high _I2C_DO_SEND_RESTART_WRITE
   333  001013  1E                 	db	low _I2C_DO_SEND_RESTART
   334  001014  46                 	db	high _I2C_DO_SEND_RESTART
   335  001015  0C                 	db	low _I2C_DO_SEND_STOP
   336  001016  46                 	db	high _I2C_DO_SEND_STOP
   337  001017  FA                 	db	low _I2C_DO_RX_ACK
   338  001018  45                 	db	high _I2C_DO_RX_ACK
   339  001019  E8                 	db	low _I2C_DO_RX_NACK_STOP
   340  00101A  45                 	db	high _I2C_DO_RX_NACK_STOP
   341  00101B  D6                 	db	low _I2C_DO_RX_NACK_RESTART
   342  00101C  45                 	db	high _I2C_DO_RX_NACK_RESTART
   343  00101D  58                 	db	low _I2C_DO_RESET
   344  00101E  45                 	db	high _I2C_DO_RESET
   345  00101F  6C                 	db	low _I2C_DO_ADDRESS_NACK
   346  001020  39                 	db	high _I2C_DO_ADDRESS_NACK
   347  001021                     __end_of_i2c_fsmStateTable:
   348                           	callstack 0
   349  0000                     _INTCON2bits	set	4081
   350  0000                     _SSPSTATbits	set	4039
   351  0000                     _SSPCON2bits	set	4037
   352  0000                     _SSPCON1bits	set	4038
   353  0000                     _PORTE	set	3972
   354  0000                     _PORTD	set	3971
   355  0000                     _PORTC	set	3970
   356  0000                     _PORTB	set	3969
   357  0000                     _PORTA	set	3968
   358  0000                     _LATA	set	3977
   359  0000                     _TRISA	set	3986
   360  0000                     _PIE1bits	set	3997
   361  0000                     _PIR2bits	set	4001
   362  0000                     _SSPCON2	set	4037
   363  0000                     _SSPCON1	set	4038
   364  0000                     _SSPSTAT	set	4039
   365  0000                     _INTCON3bits	set	4080
   366  0000                     _INTCONbits	set	4082
   367  0000                     _TRISE	set	3990
   368  0000                     _TRISD	set	3989
   369  0000                     _TRISC	set	3988
   370  0000                     _TRISB	set	3987
   371  0000                     _LATE	set	3981
   372  0000                     _LATD	set	3980
   373  0000                     _LATC	set	3979
   374  0000                     _LATB	set	3978
   375  0000                     _SSPBUF	set	4041
   376  0000                     _SSPADD	set	4040
   377  0000                     _PIR1bits	set	3998
   378  001021                     STR_6:
   379  001021  73                 	db	115	;'s'
   380  001022  65                 	db	101	;'e'
   381  001023  63                 	db	99	;'c'
   382  001024  6F                 	db	111	;'o'
   383  001025  6E                 	db	110	;'n'
   384  001026  64                 	db	100	;'d'
   385  001027  73                 	db	115	;'s'
   386  001028  3A                 	db	58	;':'
   387  001029  00                 	db	0
   388  00102A                     STR_7:
   389  00102A  6D                 	db	109	;'m'
   390  00102B  69                 	db	105	;'i'
   391  00102C  6E                 	db	110	;'n'
   392  00102D  75                 	db	117	;'u'
   393  00102E  74                 	db	116	;'t'
   394  00102F  65                 	db	101	;'e'
   395  001030  73                 	db	115	;'s'
   396  001031  3A                 	db	58	;':'
   397  001032  00                 	db	0
   398  001033                     STR_10:
   399  001033  6D                 	db	109	;'m'
   400  001034  6F                 	db	111	;'o'
   401  001035  6E                 	db	110	;'n'
   402  001036  74                 	db	116	;'t'
   403  001037  68                 	db	104	;'h'
   404  001038  3A                 	db	58	;':'
   405  001039  00                 	db	0
   406  00103A                     STR_8:
   407  00103A  68                 	db	104	;'h'
   408  00103B  6F                 	db	111	;'o'
   409  00103C  75                 	db	117	;'u'
   410  00103D  72                 	db	114	;'r'
   411  00103E  73                 	db	115	;'s'
   412  00103F  3A                 	db	58	;':'
   413  001040  00                 	db	0
   414  001041                     STR_4:
   415  001041  54                 	db	84	;'T'
   416  001042  49                 	db	73	;'I'
   417  001043  4D                 	db	77	;'M'
   418  001044  45                 	db	69	;'E'
   419  001045  3A                 	db	58	;':'
   420  001046  00                 	db	0
   421  001047                     STR_5:
   422  001047  44                 	db	68	;'D'
   423  001048  41                 	db	65	;'A'
   424  001049  54                 	db	84	;'T'
   425  00104A  45                 	db	69	;'E'
   426  00104B  3A                 	db	58	;':'
   427  00104C  00                 	db	0
   428  00104D                     STR_11:
   429  00104D  79                 	db	121	;'y'
   430  00104E  65                 	db	101	;'e'
   431  00104F  61                 	db	97	;'a'
   432  001050  72                 	db	114	;'r'
   433  001051  3A                 	db	58	;':'
   434  001052  00                 	db	0
   435  001053                     STR_9:
   436  001053  64                 	db	100	;'d'
   437  001054  61                 	db	97	;'a'
   438  001055  79                 	db	121	;'y'
   439  001056  3A                 	db	58	;':'
   440  001057  00                 	db	0
   441  001058                     STR_1:
   442  001058  25                 	db	37
   443  001059  69                 	db	105	;'i'
   444  00105A  00                 	db	0
   445  00105B  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           ; #config settings
   448                           
   449                           	psect	cinit
   450  003088                     __pcinit:
   451                           	callstack 0
   452  003088                     start_initialization:
   453                           	callstack 0
   454  003088                     __initialization:
   455                           	callstack 0
   456                           
   457                           ; Initialize objects allocated to BANK1 (36 bytes)
   458                           ; load TBLPTR registers with __pidataBANK1
   459  003088  0EDA               	movlw	low __pidataBANK1
   460  00308A  6EF6               	movwf	tblptrl,c
   461  00308C  0E43               	movlw	high __pidataBANK1
   462  00308E  6EF7               	movwf	tblptrh,c
   463  003090  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   464  003092  6EF8               	movwf	tblptru,c
   465  003094  EE01  F026         	lfsr	0,__pdataBANK1
   466  003098  EE10 F024          	lfsr	1,36
   467  00309C                     copy_data0:
   468  00309C  0009               	tblrd		*+
   469  00309E  CFF5 FFEE          	movff	tablat,postinc0
   470  0030A2  50E5               	movf	postdec1,w,c
   471  0030A4  50E1               	movf	fsr1l,w,c
   472  0030A6  E1FA               	bnz	copy_data0
   473                           
   474                           ; Initialize objects allocated to BANK0 (6 bytes)
   475                           ; load TBLPTR registers with __pidataBANK0
   476  0030A8  0E38               	movlw	low __pidataBANK0
   477  0030AA  6EF6               	movwf	tblptrl,c
   478  0030AC  0E47               	movlw	high __pidataBANK0
   479  0030AE  6EF7               	movwf	tblptrh,c
   480  0030B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   481  0030B2  6EF8               	movwf	tblptru,c
   482  0030B4  EE00  F0FA         	lfsr	0,__pdataBANK0
   483  0030B8  EE10 F006          	lfsr	1,6
   484  0030BC                     copy_data1:
   485  0030BC  0009               	tblrd		*+
   486  0030BE  CFF5 FFEE          	movff	tablat,postinc0
   487  0030C2  50E5               	movf	postdec1,w,c
   488  0030C4  50E1               	movf	fsr1l,w,c
   489  0030C6  E1FA               	bnz	copy_data1
   490                           
   491                           ; Initialize objects allocated to COMRAM (14 bytes)
   492                           ; load TBLPTR registers with __pidataCOMRAM
   493  0030C8  0E84               	movlw	low __pidataCOMRAM
   494  0030CA  6EF6               	movwf	tblptrl,c
   495  0030CC  0E46               	movlw	high __pidataCOMRAM
   496  0030CE  6EF7               	movwf	tblptrh,c
   497  0030D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   498  0030D2  6EF8               	movwf	tblptru,c
   499  0030D4  EE00  F04B         	lfsr	0,__pdataCOMRAM
   500  0030D8  EE10 F00E          	lfsr	1,14
   501  0030DC                     copy_data2:
   502  0030DC  0009               	tblrd		*+
   503  0030DE  CFF5 FFEE          	movff	tablat,postinc0
   504  0030E2  50E5               	movf	postdec1,w,c
   505  0030E4  50E1               	movf	fsr1l,w,c
   506  0030E6  E1FA               	bnz	copy_data2
   507                           
   508                           ; Clear objects allocated to BANK1 (38 bytes)
   509  0030E8  EE01  F000         	lfsr	0,__pbssBANK1
   510  0030EC  0E26               	movlw	38
   511  0030EE                     clear_0:
   512  0030EE  6AEE               	clrf	postinc0,c
   513  0030F0  06E8               	decf	wreg,f,c
   514  0030F2  E1FD               	bnz	clear_0
   515                           
   516                           ; Clear objects allocated to BANK0 (47 bytes)
   517  0030F4  EE00  F0CB         	lfsr	0,__pbssBANK0
   518  0030F8  0E2F               	movlw	47
   519  0030FA                     clear_1:
   520  0030FA  6AEE               	clrf	postinc0,c
   521  0030FC  06E8               	decf	wreg,f,c
   522  0030FE  E1FD               	bnz	clear_1
   523                           
   524                           ; Clear objects allocated to COMRAM (26 bytes)
   525  003100  EE00  F031         	lfsr	0,__pbssCOMRAM
   526  003104  0E1A               	movlw	26
   527  003106                     clear_2:
   528  003106  6AEE               	clrf	postinc0,c
   529  003108  06E8               	decf	wreg,f,c
   530  00310A  E1FD               	bnz	clear_2
   531  00310C                     end_of_initialization:
   532                           	callstack 0
   533  00310C                     __end_of__initialization:
   534                           	callstack 0
   535  00310C  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   536  00310E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   537  003110  0100               	movlb	0
   538  003112  EF2E  F008         	goto	_main	;jump to C main() function
   539                           
   540                           	psect	bssCOMRAM
   541  000031                     __pbssCOMRAM:
   542                           	callstack 0
   543  000031                     _prec:
   544                           	callstack 0
   545  000031                     	ds	2
   546  000033                     _flags:
   547                           	callstack 0
   548  000033                     	ds	2
   549  000035                     _INT2_InterruptHandler:
   550                           	callstack 0
   551  000035                     	ds	2
   552  000037                     _INT1_InterruptHandler:
   553                           	callstack 0
   554  000037                     	ds	2
   555  000039                     _INT0_InterruptHandler:
   556                           	callstack 0
   557  000039                     	ds	2
   558  00003B                     _option_counter:
   559                           	callstack 0
   560  00003B                     	ds	1
   561  00003C                     	ds	1
   562  00003D                     	ds	1
   563  00003E                     	ds	1
   564  00003F                     	ds	1
   565  000040                     lcd_send_custom_char@counter:
   566                           	callstack 0
   567  000040                     	ds	1
   568  000041                     _RTC1307:
   569                           	callstack 0
   570  000041                     	ds	6
   571  000047                     _hours_counter:
   572                           	callstack 0
   573  000047                     	ds	1
   574  000048                     _minutes_counter:
   575                           	callstack 0
   576  000048                     	ds	1
   577  000049                     _seconds_counter:
   578                           	callstack 0
   579  000049                     	ds	1
   580  00004A                     lcd_send_number@number:
   581                           	callstack 0
   582  00004A                     	ds	1
   583                           
   584                           	psect	dataCOMRAM
   585  00004B                     __pdataCOMRAM:
   586                           	callstack 0
   587  00004B                     _RB7_Flag:
   588                           	callstack 0
   589  00004B                     	ds	1
   590  00004C                     _RB6_Flag:
   591                           	callstack 0
   592  00004C                     	ds	1
   593  00004D                     _RB5_Flag:
   594                           	callstack 0
   595  00004D                     	ds	1
   596  00004E                     _RB4_Flag:
   597                           	callstack 0
   598  00004E                     	ds	1
   599  00004F                     _n:
   600                           	callstack 0
   601  00004F                     	ds	1
   602  000050                     _lcd:
   603                           	callstack 0
   604  000050                     	ds	6
   605  000056                     _year_counter:
   606                           	callstack 0
   607  000056                     	ds	1
   608  000057                     _month_counter:
   609                           	callstack 0
   610  000057                     	ds	1
   611  000058                     _day_counter:
   612                           	callstack 0
   613  000058                     	ds	1
   614                           
   615                           	psect	bssBANK0
   616  0000CB                     __pbssBANK0:
   617                           	callstack 0
   618  0000CB                     _I2C_Status:
   619                           	callstack 0
   620  0000CB                     	ds	36
   621  0000EF                     _RTC1307@RealTimeClockDS1307$F281:
   622                           	callstack 0
   623  0000EF                     	ds	6
   624  0000F5                     _nout:
   625                           	callstack 0
   626  0000F5                     	ds	2
   627  0000F7                     _width:
   628                           	callstack 0
   629  0000F7                     	ds	2
   630  0000F9                     lcd_send_number_pos@number:
   631                           	callstack 0
   632  0000F9                     	ds	1
   633                           
   634                           	psect	dataBANK0
   635  0000FA                     __pdataBANK0:
   636                           	callstack 0
   637  0000FA                     _MY_INT0:
   638                           	callstack 0
   639  0000FA                     	ds	6
   640                           
   641                           	psect	bssBANK1
   642  000100                     __pbssBANK1:
   643                           	callstack 0
   644  000100                     	ds	6
   645  000106                     _dbuf:
   646                           	callstack 0
   647  000106                     	ds	32
   648                           
   649                           	psect	dataBANK1
   650  000126                     __pdataBANK1:
   651                           	callstack 0
   652  000126                     _portx:
   653                           	callstack 0
   654  000126                     	ds	10
   655  000130                     _latx:
   656                           	callstack 0
   657  000130                     	ds	10
   658  00013A                     _trisx:
   659                           	callstack 0
   660  00013A                     	ds	10
   661  000144                     _MY_INT1:
   662                           	callstack 0
   663  000144                     	ds	6
   664                           
   665                           	psect	cstackBANK1
   666  00014A                     __pcstackBANK1:
   667                           	callstack 0
   668  00014A                     vfprintf@cfmt:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x0
   672  00014A                     	ds	2
   673  00014C                     ?_sprintf:
   674                           	callstack 0
   675  00014C                     sprintf@s:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x2
   679  00014C                     	ds	2
   680  00014E                     sprintf@fmt:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x4
   684  00014E                     	ds	4
   685  000152                     sprintf@ap:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689  000152                     	ds	2
   690  000154                     sprintf@f:
   691                           	callstack 0
   692                           
   693                           ; 11 bytes @ 0xA
   694  000154                     	ds	11
   695  00015F                     convert_uint8_to_string@str:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x15
   699  00015F                     	ds	2
   700  000161                     convert_uint8_to_string@value:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x17
   704  000161                     	ds	1
   705  000162                     lcd_send_number_pos@lcd:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x18
   709  000162                     	ds	2
   710  000164                     lcd_send_number_pos@row:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x1A
   714  000164                     	ds	1
   715  000165                     lcd_send_number_pos@column:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x1B
   719  000165                     	ds	1
   720  000166                     lcd_send_number_pos@num:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x1C
   724  000166                     	ds	1
   725  000167                     lcd_send_number_pos@gpio_ret:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x1D
   729  000167                     	ds	1
   730  000168                     lcd_send_number_pos@lcd_ret:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x1E
   734  000168                     	ds	1
   735  000169                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x1F
   738  000169                     	ds	2
   739                           
   740                           	psect	cstackBANK0
   741  000080                     __pcstackBANK0:
   742                           	callstack 0
   743  000080                     ?___aodiv:
   744                           	callstack 0
   745  000080                     ?___aomod:
   746                           	callstack 0
   747  000080                     lcd_send_nbits@lcd:
   748                           	callstack 0
   749  000080                     lcd_send_enable@lcd:
   750                           	callstack 0
   751  000080                     gpio_pin_output_low_init@pin:
   752                           	callstack 0
   753  000080                     gpio_pin_input_init@pin:
   754                           	callstack 0
   755  000080                     rd1RegCompleteHandler@ptr:
   756                           	callstack 0
   757  000080                     rd2RegCompleteHandler@ptr:
   758                           	callstack 0
   759  000080                     wr1RegCompleteHandler@ptr:
   760                           	callstack 0
   761  000080                     wr2RegCompleteHandler@ptr:
   762                           	callstack 0
   763  000080                     rdBlkRegCompleteHandler@ptr:
   764                           	callstack 0
   765  000080                     I2C_CallbackReturnReset@funPtr:
   766                           	callstack 0
   767  000080                     memset@k:
   768                           	callstack 0
   769  000080                     fputs@s:
   770                           	callstack 0
   771  000080                     ___aodiv@dividend:
   772                           	callstack 0
   773  000080                     ___aomod@dividend:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x0
   777  000080                     	ds	2
   778  000082                     ??_gpio_pin_output_low_init:
   779  000082                     ??_I2C_DO_TX:
   780  000082                     ??_I2C_DO_RX:
   781  000082                     ??_I2C_DO_TX_EMPTY:
   782  000082                     ??_I2C_DO_ADDRESS_NACK:
   783  000082                     ??_gpio_pin_input_init:
   784  000082                     lcd_send_nbits@data_or_command:
   785                           	callstack 0
   786  000082                     lcd_send_enable@gpio_ret:
   787                           	callstack 0
   788  000082                     memset@s:
   789                           	callstack 0
   790  000082                     fputs@fp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2
   794  000082                     	ds	1
   795  000083                     ??_lcd_send_nbits:
   796  000083                     gpio_pin_output_low_init@gpio_ret:
   797                           	callstack 0
   798  000083                     gpio_pin_input_init@gpio_ret:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x3
   802  000083                     	ds	1
   803  000084                     ??_I2C_MasterFsm:
   804  000084                     gpio_pin_output_low_init@ret:
   805                           	callstack 0
   806  000084                     gpio_pin_input_init@ret:
   807                           	callstack 0
   808  000084                     fputs@c:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x4
   812  000084                     	ds	1
   813  000085                     interrupt_INTx_pin_init@_interrupt:
   814                           	callstack 0
   815  000085                     fputs@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x5
   819  000085                     	ds	1
   820  000086                     I2C_MasterOperation@read:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x6
   824  000086                     	ds	1
   825  000087                     ?_pad:
   826                           	callstack 0
   827  000087                     lcd_send_nbits@ret:
   828                           	callstack 0
   829  000087                     interrupt_INTx_pin_init@ret:
   830                           	callstack 0
   831  000087                     I2C_MasterOperation@returnValue:
   832                           	callstack 0
   833  000087                     pad@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x7
   837  000087                     	ds	1
   838  000088                     lcd_send_nbits@pin_counter:
   839                           	callstack 0
   840  000088                     I2C_Read1ByteRegister@address:
   841                           	callstack 0
   842  000088                     interrupt_INTx_init@_interrupt:
   843                           	callstack 0
   844  000088                     ___aodiv@divisor:
   845                           	callstack 0
   846  000088                     ___aomod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x8
   850  000088                     	ds	1
   851  000089                     I2C_Read1ByteRegister@returnValue:
   852                           	callstack 0
   853  000089                     lcd_send_command@lcd:
   854                           	callstack 0
   855  000089                     lcd_send_char_data@lcd:
   856                           	callstack 0
   857  000089                     pad@buf:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x9
   861  000089                     	ds	1
   862  00008A                     ?_RealTimeClockDS1307_Get_Date_Time:
   863                           	callstack 0
   864  00008A                     interrupt_INTx_init@ret:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0xA
   868  00008A                     	ds	1
   869  00008B                     lcd_send_command@command:
   870                           	callstack 0
   871  00008B                     lcd_send_char_data@data:
   872                           	callstack 0
   873  00008B                     pad@p:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xB
   877  00008B                     	ds	1
   878  00008C                     lcd_send_command@gpio_ret:
   879                           	callstack 0
   880  00008C                     lcd_send_char_data@gpio_ret:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0xC
   884  00008C                     	ds	1
   885  00008D                     lcd_send_command@lcd_ret:
   886                           	callstack 0
   887  00008D                     lcd_send_char_data@lcd_ret:
   888                           	callstack 0
   889  00008D                     pad@i:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0xD
   893  00008D                     	ds	1
   894  00008E                     lcd_send_command@ret:
   895                           	callstack 0
   896  00008E                     lcd_send_char_data@ret:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0xE
   900  00008E                     	ds	1
   901  00008F                     lcd_init@lcd:
   902                           	callstack 0
   903  00008F                     lcd_send_string@lcd:
   904                           	callstack 0
   905  00008F                     lcd_set_curser@lcd:
   906                           	callstack 0
   907  00008F                     pad@w:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0xF
   911  00008F                     	ds	2
   912  000091                     ??_lcd_init:
   913  000091                     ?_dtoa:
   914                           	callstack 0
   915  000091                     lcd_set_curser@row:
   916                           	callstack 0
   917  000091                     lcd_send_string@str:
   918                           	callstack 0
   919  000091                     dtoa@fp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x11
   923  000091                     	ds	1
   924  000092                     lcd_set_curser@column:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x12
   928  000092                     	ds	1
   929  000093                     ??_lcd_set_curser:
   930  000093                     lcd_init@gpio_ret:
   931                           	callstack 0
   932  000093                     lcd_send_string@gpio_ret:
   933                           	callstack 0
   934  000093                     dtoa@d:
   935                           	callstack 0
   936                           
   937                           ; 8 bytes @ 0x13
   938  000093                     	ds	1
   939  000094                     lcd_init@pins_counter:
   940                           	callstack 0
   941  000094                     lcd_send_string@lcd_ret:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x14
   945  000094                     	ds	1
   946  000095                     lcd_init@lcd_ret:
   947                           	callstack 0
   948  000095                     lcd_send_string@ret:
   949                           	callstack 0
   950  000095                     lcd_set_curser@gpio_ret:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x15
   954  000095                     	ds	1
   955  000096                     lcd_set_curser@lcd_ret:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x16
   959  000096                     	ds	1
   960  000097                     lcd_send_char_data_pos@lcd:
   961                           	callstack 0
   962  000097                     lcd_send_string_pos@lcd:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x17
   966  000097                     	ds	2
   967  000099                     lcd_send_char_data_pos@row:
   968                           	callstack 0
   969  000099                     lcd_send_string_pos@row:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x19
   973  000099                     	ds	1
   974  00009A                     lcd_send_char_data_pos@column:
   975                           	callstack 0
   976  00009A                     lcd_send_string_pos@column:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x1A
   980  00009A                     	ds	1
   981  00009B                     ??_dtoa:
   982  00009B                     lcd_send_char_data_pos@data:
   983                           	callstack 0
   984  00009B                     lcd_send_string_pos@str:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x1B
   988  00009B                     	ds	1
   989  00009C                     lcd_send_char_data_pos@gpio_ret:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x1C
   993  00009C                     	ds	1
   994  00009D                     lcd_send_char_data_pos@lcd_ret:
   995                           	callstack 0
   996  00009D                     lcd_send_string_pos@gpio_ret:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x1D
  1000  00009D                     	ds	1
  1001  00009E                     lcd_send_char_data_pos@ret:
  1002                           	callstack 0
  1003  00009E                     lcd_send_string_pos@lcd_ret:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x1E
  1007  00009E                     	ds	5
  1008  0000A3                     _dtoa$2400:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x23
  1012  0000A3                     	ds	2
  1013  0000A5                     dtoa@p:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x25
  1017  0000A5                     	ds	2
  1018  0000A7                     dtoa@w:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x27
  1022  0000A7                     	ds	2
  1023  0000A9                     dtoa@s:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x29
  1027  0000A9                     	ds	2
  1028  0000AB                     dtoa@n:
  1029                           	callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x2B
  1032  0000AB                     	ds	8
  1033  0000B3                     dtoa@i:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x33
  1037  0000B3                     	ds	2
  1038  0000B5                     ?_vfpfcnvrt:
  1039                           	callstack 0
  1040  0000B5                     vfpfcnvrt@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x35
  1044  0000B5                     	ds	2
  1045  0000B7                     vfpfcnvrt@fmt:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x37
  1049  0000B7                     	ds	2
  1050  0000B9                     vfpfcnvrt@ap:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x39
  1054  0000B9                     	ds	2
  1055  0000BB                     ??_vfpfcnvrt:
  1056                           
  1057                           ; 1 bytes @ 0x3B
  1058  0000BB                     	ds	2
  1059  0000BD                     vfpfcnvrt@ll:
  1060                           	callstack 0
  1061                           
  1062                           ; 8 bytes @ 0x3D
  1063  0000BD                     	ds	8
  1064  0000C5                     ?_vfprintf:
  1065                           	callstack 0
  1066  0000C5                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x45
  1070  0000C5                     	ds	2
  1071  0000C7                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x47
  1075  0000C7                     	ds	2
  1076  0000C9                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x49
  1080  0000C9                     	ds	2
  1081                           
  1082                           	psect	cstackCOMRAM
  1083  000001                     __pcstackCOMRAM:
  1084                           	callstack 0
  1085  000001                     ?___awdiv:
  1086                           	callstack 0
  1087  000001                     ?___awmod:
  1088                           	callstack 0
  1089  000001                     i2I2C_Open@address:
  1090                           	callstack 0
  1091  000001                     i2I2C_Close@returnValue:
  1092                           	callstack 0
  1093  000001                     i2I2C_MasterSendTxData@data:
  1094                           	callstack 0
  1095  000001                     ___awdiv@dividend:
  1096                           	callstack 0
  1097  000001                     ___awmod@dividend:
  1098                           	callstack 0
  1099  000001                     i2I2C_SetBuffer@buffer:
  1100                           	callstack 0
  1101  000001                     i2I2C_SetCallback@cb:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x0
  1105  000001                     	ds	1
  1106  000002                     i2I2C_Open@returnValue:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x1
  1110  000002                     	ds	1
  1111  000003                     ___awdiv@divisor:
  1112                           	callstack 0
  1113  000003                     ___awmod@divisor:
  1114                           	callstack 0
  1115  000003                     i2I2C_SetBuffer@bufferSize:
  1116                           	callstack 0
  1117  000003                     i2I2C_SetCallback@ptr:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x2
  1121  000003                     	ds	2
  1122  000005                     ___awdiv@counter:
  1123                           	callstack 0
  1124  000005                     ___awmod@counter:
  1125                           	callstack 0
  1126  000005                     i2I2C_SetCallback@idx:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x4
  1130  000005                     	ds	1
  1131  000006                     ___awdiv@sign:
  1132                           	callstack 0
  1133  000006                     ___awmod@sign:
  1134                           	callstack 0
  1135  000006                     i2I2C_SetDataCompleteCallback@cb:
  1136                           	callstack 0
  1137  000006                     i2I2C_SetAddressNackCallback@cb:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x5
  1141  000006                     	ds	1
  1142  000007                     ___awdiv@quotient:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x6
  1146  000007                     	ds	1
  1147  000008                     i2I2C_SetDataCompleteCallback@ptr:
  1148                           	callstack 0
  1149  000008                     i2I2C_SetAddressNackCallback@ptr:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x7
  1153  000008                     	ds	1
  1154  000009                     convert_int_to_BCD@BCD_num:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x8
  1158  000009                     	ds	1
  1159  00000A                     i2rd1RegCompleteHandler@ptr:
  1160                           	callstack 0
  1161  00000A                     i2rd2RegCompleteHandler@ptr:
  1162                           	callstack 0
  1163  00000A                     i2wr1RegCompleteHandler@ptr:
  1164                           	callstack 0
  1165  00000A                     i2wr2RegCompleteHandler@ptr:
  1166                           	callstack 0
  1167  00000A                     i2rdBlkRegCompleteHandler@ptr:
  1168                           	callstack 0
  1169  00000A                     
  1170                           ; 2 bytes @ 0x9
  1171  00000A                     	ds	1
  1172  00000B                     convert_int_to_BCD@int_num:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0xA
  1176  00000B                     	ds	1
  1177  00000C                     ??i2_I2C_DO_TX:
  1178  00000C                     ??i2_I2C_DO_RX:
  1179  00000C                     ??i2_I2C_DO_TX_EMPTY:
  1180  00000C                     ??i2_I2C_DO_ADDRESS_NACK:
  1181  00000C                     convert_int_to_BCD@l_nipple:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0xB
  1185  00000C                     	ds	1
  1186  00000D                     convert_int_to_BCD@h_nipple:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0xC
  1190  00000D                     	ds	1
  1191  00000E                     ??i2_I2C_MasterFsm:
  1192                           
  1193                           ; 1 bytes @ 0xD
  1194  00000E                     	ds	2
  1195  000010                     i2I2C_MasterOperation@read:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0xF
  1199  000010                     	ds	1
  1200  000011                     i2I2C_MasterOperation@returnValue:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x10
  1204  000011                     	ds	1
  1205  000012                     I2C_Write1ByteRegister@reg:
  1206                           	callstack 0
  1207  000012                     i2I2C_Read1ByteRegister@reg:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211  000012                     	ds	1
  1212  000013                     I2C_Write1ByteRegister@data:
  1213                           	callstack 0
  1214  000013                     i2I2C_Read1ByteRegister@address:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x12
  1218  000013                     	ds	1
  1219  000014                     I2C_Write1ByteRegister@address:
  1220                           	callstack 0
  1221  000014                     i2I2C_Read1ByteRegister@returnValue:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x13
  1225  000014                     	ds	1
  1226  000015                     ?i2_RealTimeClockDS1307_Get_Date_Time:
  1227                           	callstack 0
  1228                           
  1229                           ; 6 bytes @ 0x14
  1230  000015                     	ds	6
  1231  00001B                     ??_InterruptManager:
  1232  00001B                     
  1233                           ; 1 bytes @ 0x1A
  1234  00001B                     	ds	12
  1235  000027                     ?_strlen:
  1236                           	callstack 0
  1237  000027                     I2C_Open@address:
  1238                           	callstack 0
  1239  000027                     I2C_Close@returnValue:
  1240                           	callstack 0
  1241  000027                     I2C_MasterSendTxData@data:
  1242                           	callstack 0
  1243  000027                     ___aodiv@counter:
  1244                           	callstack 0
  1245  000027                     ___aomod@counter:
  1246                           	callstack 0
  1247  000027                     convert_BCD_to_int@int_num:
  1248                           	callstack 0
  1249  000027                     gpio_pin_direction_init@pin:
  1250                           	callstack 0
  1251  000027                     gpio_pin_logic_write@pin:
  1252                           	callstack 0
  1253  000027                     interrupt_INTx_enable@_interrupt:
  1254                           	callstack 0
  1255  000027                     interrupt_INTx_disable@_interrupt:
  1256                           	callstack 0
  1257  000027                     interrupt_INTx_clear_flag@_interrupt:
  1258                           	callstack 0
  1259  000027                     interrupt_INTx_edge_init@_interrupt:
  1260                           	callstack 0
  1261  000027                     INT0_set_InterruptHandler@InterruptHandler:
  1262                           	callstack 0
  1263  000027                     INT1_set_InterruptHandler@InterruptHandler:
  1264                           	callstack 0
  1265  000027                     INT2_set_InterruptHandler@InterruptHandler:
  1266                           	callstack 0
  1267  000027                     I2C_SetBuffer@buffer:
  1268                           	callstack 0
  1269  000027                     I2C_SetCallback@cb:
  1270                           	callstack 0
  1271  000027                     memset@dest:
  1272                           	callstack 0
  1273  000027                     fputc@c:
  1274                           	callstack 0
  1275  000027                     strlen@s:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x26
  1279  000027                     	ds	1
  1280  000028                     I2C_Open@returnValue:
  1281                           	callstack 0
  1282  000028                     ___aodiv@sign:
  1283                           	callstack 0
  1284  000028                     ___aomod@sign:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x27
  1288  000028                     	ds	1
  1289  000029                     ??_interrupt_INTx_disable:
  1290  000029                     ??_interrupt_INTx_clear_flag:
  1291  000029                     ??_interrupt_INTx_edge_init:
  1292  000029                     ??_interrupt_INTx_enable:
  1293  000029                     ??_convert_BCD_to_int:
  1294  000029                     ?_abs:
  1295                           	callstack 0
  1296  000029                     gpio_pin_direction_init@pin_direction:
  1297                           	callstack 0
  1298  000029                     gpio_pin_logic_write@pin_logic:
  1299                           	callstack 0
  1300  000029                     INT0_set_InterruptHandler@ret:
  1301                           	callstack 0
  1302  000029                     INT1_set_InterruptHandler@ret:
  1303                           	callstack 0
  1304  000029                     INT2_set_InterruptHandler@ret:
  1305                           	callstack 0
  1306  000029                     I2C_SetBuffer@bufferSize:
  1307                           	callstack 0
  1308  000029                     I2C_SetCallback@ptr:
  1309                           	callstack 0
  1310  000029                     memset@c:
  1311                           	callstack 0
  1312  000029                     abs@a:
  1313                           	callstack 0
  1314  000029                     fputc@fp:
  1315                           	callstack 0
  1316  000029                     strlen@a:
  1317                           	callstack 0
  1318  000029                     ___aodiv@quotient:
  1319                           	callstack 0
  1320                           
  1321                           ; 8 bytes @ 0x28
  1322  000029                     	ds	1
  1323  00002A                     ??_gpio_pin_logic_write:
  1324  00002A                     ??_gpio_pin_direction_init:
  1325  00002A                     INTx_select_InterruptHandler@_interrupt:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x29
  1329  00002A                     	ds	1
  1330  00002B                     ??_fputc:
  1331  00002B                     ??_abs:
  1332  00002B                     convert_BCD_to_int@BCD_num:
  1333                           	callstack 0
  1334  00002B                     interrupt_INTx_enable@ret:
  1335                           	callstack 0
  1336  00002B                     interrupt_INTx_disable@ret:
  1337                           	callstack 0
  1338  00002B                     interrupt_INTx_clear_flag@ret:
  1339                           	callstack 0
  1340  00002B                     interrupt_INTx_edge_init@ret:
  1341                           	callstack 0
  1342  00002B                     I2C_SetCallback@idx:
  1343                           	callstack 0
  1344  00002B                     memset@n:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x2A
  1348  00002B                     	ds	1
  1349  00002C                     ??_INTx_select_InterruptHandler:
  1350  00002C                     convert_BCD_to_int@tens:
  1351                           	callstack 0
  1352  00002C                     I2C_SetDataCompleteCallback@cb:
  1353                           	callstack 0
  1354  00002C                     I2C_SetAddressNackCallback@cb:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x2B
  1358  00002C                     	ds	1
  1359  00002D                     ??_memset:
  1360  00002D                     convert_BCD_to_int@ones:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x2C
  1364  00002D                     	ds	1
  1365  00002E                     INTx_select_InterruptHandler@ret:
  1366                           	callstack 0
  1367  00002E                     I2C_SetDataCompleteCallback@ptr:
  1368                           	callstack 0
  1369  00002E                     I2C_SetAddressNackCallback@ptr:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x2D
  1373  00002E                     	ds	2
  1374  000030                     ??_pad:
  1375  000030                     gpio_pin_direction_init@ret:
  1376                           	callstack 0
  1377  000030                     gpio_pin_logic_write@ret:
  1378                           	callstack 0
  1379  000030                     I2C_Read1ByteRegister@reg:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x2F
  1383  000030                     	ds	1
  1384  000031                     
  1385                           ; 1 bytes @ 0x30
  1386 ;;
  1387 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1388 ;;
  1389 ;; *************** function _main *****************
  1390 ;; Defined at:
  1391 ;;		line 79 in file "app.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:        2 bytes
  1410 ;; Hardware stack levels required when called: 23
  1411 ;; This function calls:
  1412 ;;		_RealTimeClockDS1307_Get_Date_Time
  1413 ;;		__Initialize
  1414 ;;		_convert_BCD_to_int
  1415 ;;		_lcd_send_char_data_pos
  1416 ;;		_lcd_send_command
  1417 ;;		_lcd_send_number_pos
  1418 ;;		_lcd_send_string_pos
  1419 ;; This function is called by:
  1420 ;;		Startup code after reset
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text0
  1425  00105C                     __ptext0:
  1426                           	callstack 0
  1427  00105C                     _main:
  1428                           	callstack 8
  1429  00105C                     
  1430                           ;app.c: 82:     _Initialize();
  1431  00105C  ECCD  F020         	call	__Initialize	;wreg free
  1432  001060                     l9454:
  1433                           
  1434                           ;app.c: 85:     {;app.c: 86:         if(option_counter==0){
  1435  001060  503B               	movf	_option_counter^0,w,c	;volatile
  1436  001062  A4D8               	btfss	status,2,c
  1437  001064  EF36  F008         	goto	u6621
  1438  001068  EF38  F008         	goto	u6620
  1439  00106C                     u6621:
  1440  00106C  EF23  F009         	goto	l9498
  1441  001070                     u6620:
  1442  001070                     
  1443                           ;app.c: 88:             lcd_send_command(&lcd,0X01);
  1444  001070  0E50               	movlw	low _lcd
  1445  001072  0100               	movlb	0	; () banked
  1446  001074  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1447  001076  0E00               	movlw	high _lcd
  1448  001078  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1449  00107A  0E01               	movlw	1
  1450  00107C  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1451  00107E  EC5D  F019         	call	_lcd_send_command	;wreg free
  1452  001082                     
  1453                           ;app.c: 89:             RTC1307 = RealTimeClockDS1307_Get_Date_Time();
  1454  001082  EC96  F01D         	call	_RealTimeClockDS1307_Get_Date_Time	;wreg free
  1455  001086  EE20  F041         	lfsr	2,_RTC1307	;volatile
  1456  00108A  0E05               	movlw	5
  1457  00108C                     u6631:
  1458  00108C  CFEB FFDB          	movff	plusw0,plusw2
  1459  001090  06E8               	decf	wreg,f,c
  1460  001092  E2FC               	bc	u6631
  1461  001094                     
  1462                           ;app.c: 90:             lcd_send_string_pos(&lcd,1,1,"TIME:");
  1463  001094  0E50               	movlw	low _lcd
  1464  001096  0100               	movlb	0	; () banked
  1465  001098  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1466  00109A  0E00               	movlw	high _lcd
  1467  00109C  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1468  00109E  0E01               	movlw	1
  1469  0010A0  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1470  0010A2  0E01               	movlw	1
  1471  0010A4  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1472  0010A6  0E41               	movlw	low STR_4
  1473  0010A8  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1474  0010AA  0E10               	movlw	high STR_4
  1475  0010AC  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1476  0010AE  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1477  0010B2                     
  1478                           ;app.c: 91:             convert_BCD_to_int(RTC1307._Hours,&hours_counter);
  1479  0010B2  0E47               	movlw	low _hours_counter
  1480  0010B4  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1481  0010B6  0E00               	movlw	high _hours_counter
  1482  0010B8  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1483  0010BA  5041               	movf	_RTC1307^0,w,c	;volatile
  1484  0010BC  EC62  F00D         	call	_convert_BCD_to_int
  1485  0010C0                     
  1486                           ;app.c: 92:             lcd_send_number_pos(&lcd,1,7,hours_counter);
  1487  0010C0  0E50               	movlw	low _lcd
  1488  0010C2  0101               	movlb	1	; () banked
  1489  0010C4  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1490  0010C6  0E00               	movlw	high _lcd
  1491  0010C8  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1492  0010CA  0E01               	movlw	1
  1493  0010CC  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1494  0010CE  0E07               	movlw	7
  1495  0010D0  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1496  0010D2  C047  F166         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  1497  0010D6  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1498  0010DA                     
  1499                           ;app.c: 93:             lcd_send_char_data_pos(&lcd,1,9,':');
  1500  0010DA  0E50               	movlw	low _lcd
  1501  0010DC  0100               	movlb	0	; () banked
  1502  0010DE  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1503  0010E0  0E00               	movlw	high _lcd
  1504  0010E2  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1505  0010E4  0E01               	movlw	1
  1506  0010E6  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1507  0010E8  0E09               	movlw	9
  1508  0010EA  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1509  0010EC  0E3A               	movlw	58
  1510  0010EE  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1511  0010F0  EC95  F01B         	call	_lcd_send_char_data_pos	;wreg free
  1512  0010F4                     
  1513                           ;app.c: 94:             convert_BCD_to_int(RTC1307._Minutes,&minutes_counter);
  1514  0010F4  0E48               	movlw	low _minutes_counter
  1515  0010F6  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1516  0010F8  0E00               	movlw	high _minutes_counter
  1517  0010FA  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1518  0010FC  5042               	movf	(_RTC1307+1)^0,w,c	;volatile
  1519  0010FE  EC62  F00D         	call	_convert_BCD_to_int
  1520  001102                     
  1521                           ;app.c: 95:             lcd_send_number_pos(&lcd,1,10,minutes_counter);
  1522  001102  0E50               	movlw	low _lcd
  1523  001104  0101               	movlb	1	; () banked
  1524  001106  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1525  001108  0E00               	movlw	high _lcd
  1526  00110A  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1527  00110C  0E01               	movlw	1
  1528  00110E  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1529  001110  0E0A               	movlw	10
  1530  001112  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1531  001114  C048  F166         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  1532  001118  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1533  00111C                     
  1534                           ;app.c: 96:             lcd_send_char_data_pos(&lcd,1,12,':');
  1535  00111C  0E50               	movlw	low _lcd
  1536  00111E  0100               	movlb	0	; () banked
  1537  001120  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1538  001122  0E00               	movlw	high _lcd
  1539  001124  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1540  001126  0E01               	movlw	1
  1541  001128  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1542  00112A  0E0C               	movlw	12
  1543  00112C  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1544  00112E  0E3A               	movlw	58
  1545  001130  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1546  001132  EC95  F01B         	call	_lcd_send_char_data_pos	;wreg free
  1547  001136                     
  1548                           ;app.c: 97:             convert_BCD_to_int(RTC1307._Seconds,&seconds_counter);
  1549  001136  0E49               	movlw	low _seconds_counter
  1550  001138  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1551  00113A  0E00               	movlw	high _seconds_counter
  1552  00113C  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1553  00113E  5043               	movf	(_RTC1307+2)^0,w,c	;volatile
  1554  001140  EC62  F00D         	call	_convert_BCD_to_int
  1555  001144                     
  1556                           ;app.c: 98:             lcd_send_number_pos(&lcd,1,13,seconds_counter);
  1557  001144  0E50               	movlw	low _lcd
  1558  001146  0101               	movlb	1	; () banked
  1559  001148  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1560  00114A  0E00               	movlw	high _lcd
  1561  00114C  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1562  00114E  0E01               	movlw	1
  1563  001150  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1564  001152  0E0D               	movlw	13
  1565  001154  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1566  001156  C049  F166         	movff	_seconds_counter,lcd_send_number_pos@num	;volatile
  1567  00115A  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1568  00115E                     
  1569                           ;app.c: 101:             lcd_send_string_pos(&lcd,2,1,"DATE:");
  1570  00115E  0E50               	movlw	low _lcd
  1571  001160  0100               	movlb	0	; () banked
  1572  001162  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1573  001164  0E00               	movlw	high _lcd
  1574  001166  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1575  001168  0E02               	movlw	2
  1576  00116A  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1577  00116C  0E01               	movlw	1
  1578  00116E  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1579  001170  0E47               	movlw	low STR_5
  1580  001172  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1581  001174  0E10               	movlw	high STR_5
  1582  001176  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1583  001178  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1584  00117C                     
  1585                           ;app.c: 102:             convert_BCD_to_int(RTC1307._Day,&day_counter);
  1586  00117C  0E58               	movlw	low _day_counter
  1587  00117E  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1588  001180  0E00               	movlw	high _day_counter
  1589  001182  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1590  001184  5046               	movf	(_RTC1307+5)^0,w,c	;volatile
  1591  001186  EC62  F00D         	call	_convert_BCD_to_int
  1592  00118A                     
  1593                           ;app.c: 103:             lcd_send_number_pos(&lcd,2,7,day_counter);
  1594  00118A  0E50               	movlw	low _lcd
  1595  00118C  0101               	movlb	1	; () banked
  1596  00118E  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1597  001190  0E00               	movlw	high _lcd
  1598  001192  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1599  001194  0E02               	movlw	2
  1600  001196  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1601  001198  0E07               	movlw	7
  1602  00119A  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1603  00119C  C058  F166         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  1604  0011A0  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1605  0011A4                     
  1606                           ;app.c: 104:             lcd_send_char_data_pos(&lcd,2,9,'/');
  1607  0011A4  0E50               	movlw	low _lcd
  1608  0011A6  0100               	movlb	0	; () banked
  1609  0011A8  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1610  0011AA  0E00               	movlw	high _lcd
  1611  0011AC  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1612  0011AE  0E02               	movlw	2
  1613  0011B0  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1614  0011B2  0E09               	movlw	9
  1615  0011B4  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1616  0011B6  0E2F               	movlw	47
  1617  0011B8  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1618  0011BA  EC95  F01B         	call	_lcd_send_char_data_pos	;wreg free
  1619  0011BE                     
  1620                           ;app.c: 105:             convert_BCD_to_int(RTC1307._Month,&month_counter);
  1621  0011BE  0E57               	movlw	low _month_counter
  1622  0011C0  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1623  0011C2  0E00               	movlw	high _month_counter
  1624  0011C4  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1625  0011C6  5045               	movf	(_RTC1307+4)^0,w,c	;volatile
  1626  0011C8  EC62  F00D         	call	_convert_BCD_to_int
  1627  0011CC                     
  1628                           ;app.c: 106:             lcd_send_number_pos(&lcd,2,10,RTC1307._Month);
  1629  0011CC  0E50               	movlw	low _lcd
  1630  0011CE  0101               	movlb	1	; () banked
  1631  0011D0  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1632  0011D2  0E00               	movlw	high _lcd
  1633  0011D4  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1634  0011D6  0E02               	movlw	2
  1635  0011D8  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1636  0011DA  0E0A               	movlw	10
  1637  0011DC  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1638  0011DE  C045  F166         	movff	_RTC1307+4,lcd_send_number_pos@num	;volatile
  1639  0011E2  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1640  0011E6                     
  1641                           ;app.c: 107:             lcd_send_char_data_pos(&lcd,2,12,'/');
  1642  0011E6  0E50               	movlw	low _lcd
  1643  0011E8  0100               	movlb	0	; () banked
  1644  0011EA  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1645  0011EC  0E00               	movlw	high _lcd
  1646  0011EE  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1647  0011F0  0E02               	movlw	2
  1648  0011F2  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1649  0011F4  0E0C               	movlw	12
  1650  0011F6  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1651  0011F8  0E2F               	movlw	47
  1652  0011FA  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1653  0011FC  EC95  F01B         	call	_lcd_send_char_data_pos	;wreg free
  1654  001200                     
  1655                           ;app.c: 108:             convert_BCD_to_int(RTC1307._Year,&year_counter);
  1656  001200  0E56               	movlw	low _year_counter
  1657  001202  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1658  001204  0E00               	movlw	high _year_counter
  1659  001206  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1660  001208  5044               	movf	(_RTC1307+3)^0,w,c	;volatile
  1661  00120A  EC62  F00D         	call	_convert_BCD_to_int
  1662  00120E                     
  1663                           ;app.c: 109:             lcd_send_number_pos(&lcd,2,13,year_counter);
  1664  00120E  0E50               	movlw	low _lcd
  1665  001210  0101               	movlb	1	; () banked
  1666  001212  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1667  001214  0E00               	movlw	high _lcd
  1668  001216  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1669  001218  0E02               	movlw	2
  1670  00121A  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1671  00121C  0E0D               	movlw	13
  1672  00121E  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1673  001220  C056  F166         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  1674  001224  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1675  001228                     l9496:
  1676                           
  1677                           ;app.c: 110:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1678  001228  0E06               	movlw	6
  1679  00122A  0101               	movlb	1	; () banked
  1680  00122C  6F6A               	movwf	(??_main+1)& (0+255),b
  1681  00122E  0E13               	movlw	19
  1682  001230  6F69               	movwf	??_main& (0+255),b
  1683  001232  0EAD               	movlw	173
  1684  001234                     u6707:
  1685  001234  2EE8               	decfsz	wreg,f,c
  1686  001236  D7FE               	bra	u6707
  1687  001238  2F69               	decfsz	??_main& (0+255),f,b
  1688  00123A  D7FC               	bra	u6707
  1689  00123C  2F6A               	decfsz	(??_main+1)& (0+255),f,b
  1690  00123E  D7FA               	bra	u6707
  1691  001240  D000               	nop2	
  1692                           
  1693                           ;app.c: 111:         }
  1694  001242  EF30  F008         	goto	l9454
  1695  001246                     l9498:
  1696  001246  043B               	decf	_option_counter^0,w,c	;volatile
  1697  001248  A4D8               	btfss	status,2,c
  1698  00124A  EF29  F009         	goto	u6641
  1699  00124E  EF2B  F009         	goto	u6640
  1700  001252                     u6641:
  1701  001252  EF52  F009         	goto	l9508
  1702  001256                     u6640:
  1703  001256                     
  1704                           ;app.c: 114:             lcd_send_command(&lcd,0X01);
  1705  001256  0E50               	movlw	low _lcd
  1706  001258  0100               	movlb	0	; () banked
  1707  00125A  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1708  00125C  0E00               	movlw	high _lcd
  1709  00125E  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1710  001260  0E01               	movlw	1
  1711  001262  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1712  001264  EC5D  F019         	call	_lcd_send_command	;wreg free
  1713  001268                     
  1714                           ;app.c: 115:             lcd_send_string_pos(&lcd,1,1,"seconds:");
  1715  001268  0E50               	movlw	low _lcd
  1716  00126A  0100               	movlb	0	; () banked
  1717  00126C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1718  00126E  0E00               	movlw	high _lcd
  1719  001270  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1720  001272  0E01               	movlw	1
  1721  001274  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1722  001276  0E01               	movlw	1
  1723  001278  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1724  00127A  0E21               	movlw	low STR_6
  1725  00127C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1726  00127E  0E10               	movlw	high STR_6
  1727  001280  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1728  001282  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1729  001286                     
  1730                           ;app.c: 116:             lcd_send_number_pos(&lcd,1,10,seconds_counter);
  1731  001286  0E50               	movlw	low _lcd
  1732  001288  0101               	movlb	1	; () banked
  1733  00128A  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1734  00128C  0E00               	movlw	high _lcd
  1735  00128E  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1736  001290  0E01               	movlw	1
  1737  001292  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1738  001294  0E0A               	movlw	10
  1739  001296  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1740  001298  C049  F166         	movff	_seconds_counter,lcd_send_number_pos@num	;volatile
  1741  00129C  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1742  0012A0  EF14  F009         	goto	l9496
  1743  0012A4                     l9508:
  1744  0012A4  0E02               	movlw	2
  1745  0012A6  183B               	xorwf	_option_counter^0,w,c	;volatile
  1746  0012A8  A4D8               	btfss	status,2,c
  1747  0012AA  EF59  F009         	goto	u6651
  1748  0012AE  EF5B  F009         	goto	u6650
  1749  0012B2                     u6651:
  1750  0012B2  EF82  F009         	goto	l9518
  1751  0012B6                     u6650:
  1752  0012B6                     
  1753                           ;app.c: 121:             lcd_send_command(&lcd,0X01);
  1754  0012B6  0E50               	movlw	low _lcd
  1755  0012B8  0100               	movlb	0	; () banked
  1756  0012BA  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1757  0012BC  0E00               	movlw	high _lcd
  1758  0012BE  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1759  0012C0  0E01               	movlw	1
  1760  0012C2  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1761  0012C4  EC5D  F019         	call	_lcd_send_command	;wreg free
  1762  0012C8                     
  1763                           ;app.c: 122:             lcd_send_string_pos(&lcd,1,1,"minutes:");
  1764  0012C8  0E50               	movlw	low _lcd
  1765  0012CA  0100               	movlb	0	; () banked
  1766  0012CC  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1767  0012CE  0E00               	movlw	high _lcd
  1768  0012D0  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1769  0012D2  0E01               	movlw	1
  1770  0012D4  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1771  0012D6  0E01               	movlw	1
  1772  0012D8  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1773  0012DA  0E2A               	movlw	low STR_7
  1774  0012DC  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1775  0012DE  0E10               	movlw	high STR_7
  1776  0012E0  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1777  0012E2  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1778  0012E6                     
  1779                           ;app.c: 123:             lcd_send_number_pos(&lcd,1,10,minutes_counter);
  1780  0012E6  0E50               	movlw	low _lcd
  1781  0012E8  0101               	movlb	1	; () banked
  1782  0012EA  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1783  0012EC  0E00               	movlw	high _lcd
  1784  0012EE  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1785  0012F0  0E01               	movlw	1
  1786  0012F2  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1787  0012F4  0E0A               	movlw	10
  1788  0012F6  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1789  0012F8  C048  F166         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  1790  0012FC  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1791  001300  EF14  F009         	goto	l9496
  1792  001304                     l9518:
  1793  001304  0E03               	movlw	3
  1794  001306  183B               	xorwf	_option_counter^0,w,c	;volatile
  1795  001308  A4D8               	btfss	status,2,c
  1796  00130A  EF89  F009         	goto	u6661
  1797  00130E  EF8B  F009         	goto	u6660
  1798  001312                     u6661:
  1799  001312  EFB2  F009         	goto	l9528
  1800  001316                     u6660:
  1801  001316                     
  1802                           ;app.c: 128:             lcd_send_command(&lcd,0X01);
  1803  001316  0E50               	movlw	low _lcd
  1804  001318  0100               	movlb	0	; () banked
  1805  00131A  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1806  00131C  0E00               	movlw	high _lcd
  1807  00131E  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1808  001320  0E01               	movlw	1
  1809  001322  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1810  001324  EC5D  F019         	call	_lcd_send_command	;wreg free
  1811  001328                     
  1812                           ;app.c: 129:             lcd_send_string_pos(&lcd,1,1,"hours:");
  1813  001328  0E50               	movlw	low _lcd
  1814  00132A  0100               	movlb	0	; () banked
  1815  00132C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1816  00132E  0E00               	movlw	high _lcd
  1817  001330  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1818  001332  0E01               	movlw	1
  1819  001334  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1820  001336  0E01               	movlw	1
  1821  001338  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1822  00133A  0E3A               	movlw	low STR_8
  1823  00133C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1824  00133E  0E10               	movlw	high STR_8
  1825  001340  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1826  001342  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1827  001346                     
  1828                           ;app.c: 130:             lcd_send_number_pos(&lcd,1,8,hours_counter);
  1829  001346  0E50               	movlw	low _lcd
  1830  001348  0101               	movlb	1	; () banked
  1831  00134A  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1832  00134C  0E00               	movlw	high _lcd
  1833  00134E  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1834  001350  0E01               	movlw	1
  1835  001352  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1836  001354  0E08               	movlw	8
  1837  001356  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1838  001358  C047  F166         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  1839  00135C  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1840  001360  EF14  F009         	goto	l9496
  1841  001364                     l9528:
  1842  001364  0E04               	movlw	4
  1843  001366  183B               	xorwf	_option_counter^0,w,c	;volatile
  1844  001368  A4D8               	btfss	status,2,c
  1845  00136A  EFB9  F009         	goto	u6671
  1846  00136E  EFBB  F009         	goto	u6670
  1847  001372                     u6671:
  1848  001372  EFE2  F009         	goto	l9538
  1849  001376                     u6670:
  1850  001376                     
  1851                           ;app.c: 135:             lcd_send_command(&lcd,0X01);
  1852  001376  0E50               	movlw	low _lcd
  1853  001378  0100               	movlb	0	; () banked
  1854  00137A  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1855  00137C  0E00               	movlw	high _lcd
  1856  00137E  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1857  001380  0E01               	movlw	1
  1858  001382  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1859  001384  EC5D  F019         	call	_lcd_send_command	;wreg free
  1860  001388                     
  1861                           ;app.c: 136:             lcd_send_string_pos(&lcd,1,1,"day:");
  1862  001388  0E50               	movlw	low _lcd
  1863  00138A  0100               	movlb	0	; () banked
  1864  00138C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1865  00138E  0E00               	movlw	high _lcd
  1866  001390  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1867  001392  0E01               	movlw	1
  1868  001394  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1869  001396  0E01               	movlw	1
  1870  001398  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1871  00139A  0E53               	movlw	low STR_9
  1872  00139C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1873  00139E  0E10               	movlw	high STR_9
  1874  0013A0  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1875  0013A2  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1876  0013A6                     
  1877                           ;app.c: 137:             lcd_send_number_pos(&lcd,1,6,day_counter);
  1878  0013A6  0E50               	movlw	low _lcd
  1879  0013A8  0101               	movlb	1	; () banked
  1880  0013AA  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1881  0013AC  0E00               	movlw	high _lcd
  1882  0013AE  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1883  0013B0  0E01               	movlw	1
  1884  0013B2  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1885  0013B4  0E06               	movlw	6
  1886  0013B6  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1887  0013B8  C058  F166         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  1888  0013BC  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1889  0013C0  EF14  F009         	goto	l9496
  1890  0013C4                     l9538:
  1891  0013C4  0E05               	movlw	5
  1892  0013C6  183B               	xorwf	_option_counter^0,w,c	;volatile
  1893  0013C8  A4D8               	btfss	status,2,c
  1894  0013CA  EFE9  F009         	goto	u6681
  1895  0013CE  EFEB  F009         	goto	u6680
  1896  0013D2                     u6681:
  1897  0013D2  EF12  F00A         	goto	l9548
  1898  0013D6                     u6680:
  1899  0013D6                     
  1900                           ;app.c: 142:             lcd_send_command(&lcd,0X01);
  1901  0013D6  0E50               	movlw	low _lcd
  1902  0013D8  0100               	movlb	0	; () banked
  1903  0013DA  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1904  0013DC  0E00               	movlw	high _lcd
  1905  0013DE  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1906  0013E0  0E01               	movlw	1
  1907  0013E2  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1908  0013E4  EC5D  F019         	call	_lcd_send_command	;wreg free
  1909  0013E8                     
  1910                           ;app.c: 143:             lcd_send_string_pos(&lcd,1,1,"month:");
  1911  0013E8  0E50               	movlw	low _lcd
  1912  0013EA  0100               	movlb	0	; () banked
  1913  0013EC  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1914  0013EE  0E00               	movlw	high _lcd
  1915  0013F0  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1916  0013F2  0E01               	movlw	1
  1917  0013F4  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1918  0013F6  0E01               	movlw	1
  1919  0013F8  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1920  0013FA  0E33               	movlw	low STR_10
  1921  0013FC  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1922  0013FE  0E10               	movlw	high STR_10
  1923  001400  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1924  001402  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1925  001406                     
  1926                           ;app.c: 144:             lcd_send_number_pos(&lcd,1,8,month_counter);
  1927  001406  0E50               	movlw	low _lcd
  1928  001408  0101               	movlb	1	; () banked
  1929  00140A  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1930  00140C  0E00               	movlw	high _lcd
  1931  00140E  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1932  001410  0E01               	movlw	1
  1933  001412  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1934  001414  0E08               	movlw	8
  1935  001416  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1936  001418  C057  F166         	movff	_month_counter,lcd_send_number_pos@num	;volatile
  1937  00141C  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1938  001420  EF14  F009         	goto	l9496
  1939  001424                     l9548:
  1940  001424  0E06               	movlw	6
  1941  001426  183B               	xorwf	_option_counter^0,w,c	;volatile
  1942  001428  A4D8               	btfss	status,2,c
  1943  00142A  EF19  F00A         	goto	u6691
  1944  00142E  EF1B  F00A         	goto	u6690
  1945  001432                     u6691:
  1946  001432  EF42  F00A         	goto	l1059
  1947  001436                     u6690:
  1948  001436                     
  1949                           ;app.c: 149:             lcd_send_command(&lcd,0X01);
  1950  001436  0E50               	movlw	low _lcd
  1951  001438  0100               	movlb	0	; () banked
  1952  00143A  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1953  00143C  0E00               	movlw	high _lcd
  1954  00143E  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1955  001440  0E01               	movlw	1
  1956  001442  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1957  001444  EC5D  F019         	call	_lcd_send_command	;wreg free
  1958  001448                     
  1959                           ;app.c: 150:             lcd_send_string_pos(&lcd,1,1,"year:");
  1960  001448  0E50               	movlw	low _lcd
  1961  00144A  0100               	movlb	0	; () banked
  1962  00144C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1963  00144E  0E00               	movlw	high _lcd
  1964  001450  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1965  001452  0E01               	movlw	1
  1966  001454  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1967  001456  0E01               	movlw	1
  1968  001458  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1969  00145A  0E4D               	movlw	low STR_11
  1970  00145C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1971  00145E  0E10               	movlw	high STR_11
  1972  001460  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1973  001462  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  1974  001466                     
  1975                           ;app.c: 151:             lcd_send_number_pos(&lcd,1,7,year_counter);
  1976  001466  0E50               	movlw	low _lcd
  1977  001468  0101               	movlb	1	; () banked
  1978  00146A  6F62               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1979  00146C  0E00               	movlw	high _lcd
  1980  00146E  6F63               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1981  001470  0E01               	movlw	1
  1982  001472  6F64               	movwf	lcd_send_number_pos@row& (0+255),b
  1983  001474  0E07               	movlw	7
  1984  001476  6F65               	movwf	lcd_send_number_pos@column& (0+255),b
  1985  001478  C056  F166         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  1986  00147C  EC17  F01F         	call	_lcd_send_number_pos	;wreg free
  1987  001480  EF14  F009         	goto	l9496
  1988  001484                     l1059:
  1989  001484  EF30  F008         	goto	l9454
  1990  001488  EF07  F000         	goto	start
  1991  00148C                     __end_of_main:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _lcd_send_number_pos *****************
  1995 ;; Defined at:
  1996 ;;		line 289 in file "ECUAL/LCD/lcd.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  lcd             2   24[BANK1 ] PTR struct .
  1999 ;;		 -> lcd(6), 
  2000 ;;  row             1   26[BANK1 ] unsigned char 
  2001 ;;  column          1   27[BANK1 ] unsigned char 
  2002 ;;  num             1   28[BANK1 ] unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  ret             1    0        unsigned char 
  2005 ;;  lcd_ret         1   30[BANK1 ] unsigned char 
  2006 ;;  gpio_ret        1   29[BANK1 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      unsigned char 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        7 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 22
  2023 ;; This function calls:
  2024 ;;		_convert_uint8_to_string
  2025 ;;		_lcd_send_string_pos
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text1
  2032  003E2E                     __ptext1:
  2033                           	callstack 0
  2034  003E2E                     _lcd_send_number_pos:
  2035                           	callstack 8
  2036  003E2E                     
  2037                           ;ECUAL/LCD/lcd.c: 295:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2038  003E2E  0E00               	movlw	0
  2039  003E30  0101               	movlb	1	; () banked
  2040  003E32  6F67               	movwf	lcd_send_number_pos@gpio_ret& (0+255),b
  2041                           
  2042                           ;ECUAL/LCD/lcd.c: 296:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2043  003E34  0E00               	movlw	0
  2044  003E36  6F68               	movwf	lcd_send_number_pos@lcd_ret& (0+255),b
  2045  003E38                     
  2046                           ; BSR set to: 1
  2047                           ;ECUAL/LCD/lcd.c: 297:     if(((void*)0)==lcd){
  2048  003E38  5162               	movf	lcd_send_number_pos@lcd& (0+255),w,b
  2049  003E3A  1163               	iorwf	(lcd_send_number_pos@lcd+1)& (0+255),w,b
  2050  003E3C  A4D8               	btfss	status,2,c
  2051  003E3E  EF23  F01F         	goto	u6241
  2052  003E42  EF25  F01F         	goto	u6240
  2053  003E46                     u6241:
  2054  003E46  EF27  F01F         	goto	l9192
  2055  003E4A                     u6240:
  2056  003E4A                     
  2057                           ; BSR set to: 1
  2058                           ;ECUAL/LCD/lcd.c: 299:     }
  2059  003E4A  EF3D  F01F         	goto	l99
  2060  003E4E                     l9192:
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;ECUAL/LCD/lcd.c: 301:         convert_uint8_to_string(num,number);
  2064  003E4E  0EF9               	movlw	low lcd_send_number_pos@number
  2065  003E50  6F5F               	movwf	convert_uint8_to_string@str& (0+255),b
  2066  003E52  0E00               	movlw	high lcd_send_number_pos@number
  2067  003E54  6F60               	movwf	(convert_uint8_to_string@str+1)& (0+255),b
  2068  003E56  5166               	movf	lcd_send_number_pos@num& (0+255),w,b
  2069  003E58  ECC2  F01E         	call	_convert_uint8_to_string
  2070  003E5C                     
  2071                           ;ECUAL/LCD/lcd.c: 302:         lcd_send_string_pos(lcd,row,column,number);
  2072  003E5C  C162  F097         	movff	lcd_send_number_pos@lcd,lcd_send_string_pos@lcd
  2073  003E60  C163  F098         	movff	lcd_send_number_pos@lcd+1,lcd_send_string_pos@lcd+1
  2074  003E64  C164  F099         	movff	lcd_send_number_pos@row,lcd_send_string_pos@row
  2075  003E68  C165  F09A         	movff	lcd_send_number_pos@column,lcd_send_string_pos@column
  2076  003E6C  0EF9               	movlw	low lcd_send_number_pos@number
  2077  003E6E  0100               	movlb	0	; () banked
  2078  003E70  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2079  003E72  0E00               	movlw	high lcd_send_number_pos@number
  2080  003E74  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2081  003E76  EC24  F01A         	call	_lcd_send_string_pos	;wreg free
  2082  003E7A                     l99:
  2083  003E7A  0012               	return		;funcret
  2084  003E7C                     __end_of_lcd_send_number_pos:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _lcd_send_string_pos *****************
  2088 ;; Defined at:
  2089 ;;		line 206 in file "ECUAL/LCD/lcd.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  lcd             2   23[BANK0 ] PTR struct .
  2092 ;;		 -> lcd(6), 
  2093 ;;  row             1   25[BANK0 ] unsigned char 
  2094 ;;  column          1   26[BANK0 ] unsigned char 
  2095 ;;  str             2   27[BANK0 ] PTR unsigned char 
  2096 ;;		 -> STR_11(6), STR_10(7), STR_9(5), STR_8(7), 
  2097 ;;		 -> STR_7(9), STR_6(9), STR_5(6), STR_4(6), 
  2098 ;;		 -> lcd_send_number_pos@number(1), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  ret             1    0        unsigned char 
  2101 ;;  lcd_ret         1   30[BANK0 ] unsigned char 
  2102 ;;  gpio_ret        1   29[BANK0 ] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      unsigned char 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2112 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;Total ram usage:        8 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 17
  2119 ;; This function calls:
  2120 ;;		_lcd_send_string
  2121 ;;		_lcd_set_curser
  2122 ;; This function is called by:
  2123 ;;		_lcd_send_number_pos
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129  003448                     __ptext2:
  2130                           	callstack 0
  2131  003448                     _lcd_send_string_pos:
  2132                           	callstack 13
  2133  003448                     
  2134                           ;ECUAL/LCD/lcd.c: 209:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2135  003448  0E00               	movlw	0
  2136  00344A  0100               	movlb	0	; () banked
  2137  00344C  6F9D               	movwf	lcd_send_string_pos@gpio_ret& (0+255),b
  2138                           
  2139                           ;ECUAL/LCD/lcd.c: 210:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2140  00344E  0E00               	movlw	0
  2141  003450  6F9E               	movwf	lcd_send_string_pos@lcd_ret& (0+255),b
  2142  003452                     
  2143                           ; BSR set to: 0
  2144                           ;ECUAL/LCD/lcd.c: 211:     if(((void*)0)==lcd || ((void*)0)==str || row>4 || column>40){
  2145  003452  5197               	movf	lcd_send_string_pos@lcd& (0+255),w,b
  2146  003454  1198               	iorwf	(lcd_send_string_pos@lcd+1)& (0+255),w,b
  2147  003456  B4D8               	btfsc	status,2,c
  2148  003458  EF30  F01A         	goto	u6101
  2149  00345C  EF32  F01A         	goto	u6100
  2150  003460                     u6101:
  2151  003460  EF4B  F01A         	goto	l9090
  2152  003464                     u6100:
  2153  003464                     
  2154                           ; BSR set to: 0
  2155  003464  519B               	movf	lcd_send_string_pos@str& (0+255),w,b
  2156  003466  119C               	iorwf	(lcd_send_string_pos@str+1)& (0+255),w,b
  2157  003468  B4D8               	btfsc	status,2,c
  2158  00346A  EF39  F01A         	goto	u6111
  2159  00346E  EF3B  F01A         	goto	u6110
  2160  003472                     u6111:
  2161  003472  EF4B  F01A         	goto	l9090
  2162  003476                     u6110:
  2163  003476                     
  2164                           ; BSR set to: 0
  2165  003476  0E05               	movlw	5
  2166  003478  6199               	cpfslt	lcd_send_string_pos@row& (0+255),b
  2167  00347A  EF41  F01A         	goto	u6121
  2168  00347E  EF43  F01A         	goto	u6120
  2169  003482                     u6121:
  2170  003482  EF4B  F01A         	goto	l9090
  2171  003486                     u6120:
  2172  003486                     
  2173                           ; BSR set to: 0
  2174  003486  0E28               	movlw	40
  2175  003488  659A               	cpfsgt	lcd_send_string_pos@column& (0+255),b
  2176  00348A  EF49  F01A         	goto	u6131
  2177  00348E  EF4B  F01A         	goto	u6130
  2178  003492                     u6131:
  2179  003492  EF4D  F01A         	goto	l9092
  2180  003496                     u6130:
  2181  003496                     l9090:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;ECUAL/LCD/lcd.c: 213:     }
  2185  003496  EF61  F01A         	goto	l66
  2186  00349A                     l9092:
  2187                           
  2188                           ; BSR set to: 0
  2189  00349A  C097  F08F         	movff	lcd_send_string_pos@lcd,lcd_set_curser@lcd
  2190  00349E  C098  F090         	movff	lcd_send_string_pos@lcd+1,lcd_set_curser@lcd+1
  2191  0034A2  C099  F091         	movff	lcd_send_string_pos@row,lcd_set_curser@row
  2192  0034A6  C09A  F092         	movff	lcd_send_string_pos@column,lcd_set_curser@column
  2193  0034AA  EC56  F017         	call	_lcd_set_curser	;wreg free
  2194  0034AE  C097  F08F         	movff	lcd_send_string_pos@lcd,lcd_send_string@lcd
  2195  0034B2  C098  F090         	movff	lcd_send_string_pos@lcd+1,lcd_send_string@lcd+1
  2196  0034B6  C09B  F091         	movff	lcd_send_string_pos@str,lcd_send_string@str
  2197  0034BA  C09C  F092         	movff	lcd_send_string_pos@str+1,lcd_send_string@str+1
  2198  0034BE  ECAC  F016         	call	_lcd_send_string	;wreg free
  2199  0034C2                     l66:
  2200  0034C2  0012               	return		;funcret
  2201  0034C4                     __end_of_lcd_send_string_pos:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _lcd_send_string *****************
  2205 ;; Defined at:
  2206 ;;		line 177 in file "ECUAL/LCD/lcd.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  lcd             2   15[BANK0 ] PTR struct .
  2209 ;;		 -> lcd(6), 
  2210 ;;  str             2   17[BANK0 ] PTR unsigned char 
  2211 ;;		 -> STR_11(6), STR_10(7), STR_9(5), STR_8(7), 
  2212 ;;		 -> STR_7(9), STR_6(9), STR_5(6), STR_4(6), 
  2213 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  ret             1   21[BANK0 ] unsigned char 
  2216 ;;  lcd_ret         1   20[BANK0 ] unsigned char 
  2217 ;;  gpio_ret        1   19[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      unsigned char 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:        7 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 16
  2234 ;; This function calls:
  2235 ;;		_lcd_send_char_data
  2236 ;; This function is called by:
  2237 ;;		_lcd_send_string_pos
  2238 ;;		_lcd_send_number
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text3
  2243  002D58                     __ptext3:
  2244                           	callstack 0
  2245  002D58                     _lcd_send_string:
  2246                           	callstack 13
  2247  002D58                     
  2248                           ;ECUAL/LCD/lcd.c: 180:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2249  002D58  0E00               	movlw	0
  2250  002D5A  0100               	movlb	0	; () banked
  2251  002D5C  6F93               	movwf	lcd_send_string@gpio_ret& (0+255),b
  2252                           
  2253                           ;ECUAL/LCD/lcd.c: 181:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2254  002D5E  0E00               	movlw	0
  2255  002D60  6F94               	movwf	lcd_send_string@lcd_ret& (0+255),b
  2256  002D62                     
  2257                           ; BSR set to: 0
  2258                           ;ECUAL/LCD/lcd.c: 182:     if(((void*)0)==lcd || ((void*)0)==str){
  2259  002D62  518F               	movf	lcd_send_string@lcd& (0+255),w,b
  2260  002D64  1190               	iorwf	(lcd_send_string@lcd+1)& (0+255),w,b
  2261  002D66  B4D8               	btfsc	status,2,c
  2262  002D68  EFB8  F016         	goto	u5811
  2263  002D6C  EFBA  F016         	goto	u5810
  2264  002D70                     u5811:
  2265  002D70  EFC3  F016         	goto	l8728
  2266  002D74                     u5810:
  2267  002D74                     
  2268                           ; BSR set to: 0
  2269  002D74  5191               	movf	lcd_send_string@str& (0+255),w,b
  2270  002D76  1192               	iorwf	(lcd_send_string@str+1)& (0+255),w,b
  2271  002D78  A4D8               	btfss	status,2,c
  2272  002D7A  EFC1  F016         	goto	u5821
  2273  002D7E  EFC3  F016         	goto	u5820
  2274  002D82                     u5821:
  2275  002D82  EFE3  F016         	goto	l8734
  2276  002D86                     u5820:
  2277  002D86                     l8728:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;ECUAL/LCD/lcd.c: 183:         ret=(Std_ReturnType)0x00;
  2281  002D86  0E00               	movlw	0
  2282  002D88  6F95               	movwf	lcd_send_string@ret& (0+255),b
  2283                           
  2284                           ;ECUAL/LCD/lcd.c: 184:     }
  2285  002D8A  EFFF  F016         	goto	l55
  2286  002D8E                     l8730:
  2287  002D8E  C08F  F089         	movff	lcd_send_string@lcd,lcd_send_char_data@lcd
  2288  002D92  C090  F08A         	movff	lcd_send_string@lcd+1,lcd_send_char_data@lcd+1
  2289  002D96  C091  FFF6         	movff	lcd_send_string@str,tblptrl
  2290  002D9A  C092  FFF7         	movff	lcd_send_string@str+1,tblptrh
  2291  002D9E  0E00               	movlw	low (__smallconst shr (0+16))
  2292  002DA0  6EF8               	movwf	tblptru,c
  2293  002DA2  0E0F               	movlw	(high __ramtop+-1)
  2294  002DA4  64F7               	cpfsgt	tblptrh,c
  2295  002DA6  D003               	bra	u5837
  2296  002DA8  0008               	tblrd		*
  2297  002DAA  50F5               	movf	tablat,w,c
  2298  002DAC  D005               	bra	u5830
  2299  002DAE                     u5837:
  2300  002DAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2301  002DB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2302  002DB6  50EF               	movf	indf0,w,c
  2303  002DB8                     u5830:
  2304  002DB8  0100               	movlb	0	; () banked
  2305  002DBA  6F8B               	movwf	lcd_send_char_data@data& (0+255),b
  2306  002DBC  EC19  F019         	call	_lcd_send_char_data	;wreg free
  2307  002DC0  0100               	movlb	0	; () banked
  2308  002DC2  4B91               	infsnz	lcd_send_string@str& (0+255),f,b
  2309  002DC4  2B92               	incf	(lcd_send_string@str+1)& (0+255),f,b
  2310  002DC6                     l8734:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;ECUAL/LCD/lcd.c: 186:         while(*str){
  2314  002DC6  C091  FFF6         	movff	lcd_send_string@str,tblptrl
  2315  002DCA  C092  FFF7         	movff	lcd_send_string@str+1,tblptrh
  2316  002DCE  0E00               	movlw	low (__smallconst shr (0+16))
  2317  002DD0  6EF8               	movwf	tblptru,c
  2318  002DD2  0E0F               	movlw	(high __ramtop+-1)
  2319  002DD4  64F7               	cpfsgt	tblptrh,c
  2320  002DD6  D003               	bra	u5847
  2321  002DD8  0008               	tblrd		*
  2322  002DDA  50F5               	movf	tablat,w,c
  2323  002DDC  D005               	bra	u5840
  2324  002DDE                     u5847:
  2325  002DDE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2326  002DE2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2327  002DE6  50EF               	movf	indf0,w,c
  2328  002DE8                     u5840:
  2329  002DE8  0900               	iorlw	0
  2330  002DEA  A4D8               	btfss	status,2,c
  2331  002DEC  EFFA  F016         	goto	u5851
  2332  002DF0  EFFC  F016         	goto	u5850
  2333  002DF4                     u5851:
  2334  002DF4  EFC7  F016         	goto	l8730
  2335  002DF8                     u5850:
  2336  002DF8                     
  2337                           ;ECUAL/LCD/lcd.c: 190:         ret=(Std_ReturnType)0x01;
  2338  002DF8  0E01               	movlw	1
  2339  002DFA  0100               	movlb	0	; () banked
  2340  002DFC  6F95               	movwf	lcd_send_string@ret& (0+255),b
  2341  002DFE                     l55:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;ECUAL/LCD/lcd.c: 193:     return ret;
  2345  002DFE  5195               	movf	lcd_send_string@ret& (0+255),w,b
  2346  002E00                     
  2347                           ; BSR set to: 0
  2348  002E00  0012               	return		;funcret
  2349  002E02                     __end_of_lcd_send_string:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _convert_uint8_to_string *****************
  2353 ;; Defined at:
  2354 ;;		line 316 in file "ECUAL/LCD/lcd.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  value           1    wreg     unsigned char 
  2357 ;;  str             2   21[BANK1 ] PTR unsigned char 
  2358 ;;		 -> lcd_send_number_pos@number(1), 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  value           1   23[BANK1 ] unsigned char 
  2361 ;;  ret             1    0        unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2371 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;Total ram usage:        3 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 21
  2378 ;; This function calls:
  2379 ;;		_memset
  2380 ;;		_sprintf
  2381 ;; This function is called by:
  2382 ;;		_lcd_send_number_pos
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text4
  2387  003D84                     __ptext4:
  2388                           	callstack 0
  2389  003D84                     _convert_uint8_to_string:
  2390                           	callstack 8
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;incstack = 0
  2394                           ;convert_uint8_to_string@value stored from wreg
  2395  003D84  0101               	movlb	1	; () banked
  2396  003D86  6F61               	movwf	convert_uint8_to_string@value& (0+255),b
  2397  003D88                     
  2398                           ;ECUAL/LCD/lcd.c: 318:     if(((void*)0) == str){
  2399  003D88  0101               	movlb	1	; () banked
  2400  003D8A  515F               	movf	convert_uint8_to_string@str& (0+255),w,b
  2401  003D8C  1160               	iorwf	(convert_uint8_to_string@str+1)& (0+255),w,b
  2402  003D8E  A4D8               	btfss	status,2,c
  2403  003D90  EFCC  F01E         	goto	u6141
  2404  003D94  EFCE  F01E         	goto	u6140
  2405  003D98                     u6141:
  2406  003D98  EFD0  F01E         	goto	l9106
  2407  003D9C                     u6140:
  2408  003D9C                     
  2409                           ; BSR set to: 1
  2410                           ;ECUAL/LCD/lcd.c: 320:     }
  2411  003D9C  EFEC  F01E         	goto	l104
  2412  003DA0                     l9106:
  2413                           
  2414                           ; BSR set to: 1
  2415                           ;ECUAL/LCD/lcd.c: 322:         memset((char *)str, '\0', 4);
  2416  003DA0  C15F  F027         	movff	convert_uint8_to_string@str,memset@dest
  2417  003DA4  C160  F028         	movff	convert_uint8_to_string@str+1,memset@dest+1
  2418  003DA8  0E00               	movlw	0
  2419  003DAA  6E2A               	movwf	(memset@c+1)^0,c
  2420  003DAC  0E00               	movlw	0
  2421  003DAE  6E29               	movwf	memset@c^0,c
  2422  003DB0  0E00               	movlw	0
  2423  003DB2  6E2C               	movwf	(memset@n+1)^0,c
  2424  003DB4  0E04               	movlw	4
  2425  003DB6  6E2B               	movwf	memset@n^0,c
  2426  003DB8  ECF0  F00E         	call	_memset	;wreg free
  2427  003DBC                     
  2428                           ;ECUAL/LCD/lcd.c: 323:         sprintf(str, "%i", value);
  2429  003DBC  C15F  F14C         	movff	convert_uint8_to_string@str,sprintf@s
  2430  003DC0  C160  F14D         	movff	convert_uint8_to_string@str+1,sprintf@s+1
  2431  003DC4  0E58               	movlw	low STR_1
  2432  003DC6  0101               	movlb	1	; () banked
  2433  003DC8  6F4E               	movwf	sprintf@fmt& (0+255),b
  2434  003DCA  0E10               	movlw	high STR_1
  2435  003DCC  6F4F               	movwf	(sprintf@fmt+1)& (0+255),b
  2436  003DCE  C161  F150         	movff	convert_uint8_to_string@value,?_sprintf+4
  2437  003DD2  6B51               	clrf	(?_sprintf+5)& (0+255),b
  2438  003DD4  ECED  F01E         	call	_sprintf	;wreg free
  2439  003DD8                     l104:
  2440  003DD8  0012               	return		;funcret
  2441  003DDA                     __end_of_convert_uint8_to_string:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _sprintf *****************
  2445 ;; Defined at:
  2446 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  s               2    2[BANK1 ] PTR unsigned char 
  2449 ;;		 -> convert_uint16_to_string@Temp_String(6), lcd_send_number_pos@number(1), 
  2450 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  2451 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  f              11   10[BANK1 ] struct _IO_FILE
  2454 ;;  ap              2    8[BANK1 ] PTR void [1]
  2455 ;;		 -> ?_sprintf(2), 
  2456 ;;  ret             2    0        int 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  2    2[BANK1 ] int 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2466 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:       19 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 20
  2473 ;; This function calls:
  2474 ;;		_vfprintf
  2475 ;; This function is called by:
  2476 ;;		_convert_uint8_to_string
  2477 ;;		_convert_uint16_to_string
  2478 ;;		_convert_uint32_to_string
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text5
  2483  003DDA                     __ptext5:
  2484                           	callstack 0
  2485  003DDA                     _sprintf:
  2486                           	callstack 8
  2487  003DDA  0E50               	movlw	low (?_sprintf+4)
  2488  003DDC  0101               	movlb	1	; () banked
  2489  003DDE  6F52               	movwf	sprintf@ap& (0+255),b
  2490  003DE0  0E01               	movlw	high (?_sprintf+4)
  2491  003DE2  6F53               	movwf	(sprintf@ap+1)& (0+255),b
  2492  003DE4  C14C  F154         	movff	sprintf@s,sprintf@f
  2493  003DE8  C14D  F155         	movff	sprintf@s+1,sprintf@f+1
  2494  003DEC                     
  2495                           ; BSR set to: 1
  2496  003DEC  0E00               	movlw	0
  2497  003DEE  6F58               	movwf	(sprintf@f+4)& (0+255),b
  2498  003DF0  0E00               	movlw	0
  2499  003DF2  6F57               	movwf	(sprintf@f+3)& (0+255),b
  2500  003DF4                     
  2501                           ; BSR set to: 1
  2502  003DF4  0E00               	movlw	0
  2503  003DF6  6F5E               	movwf	(sprintf@f+10)& (0+255),b
  2504  003DF8  0E00               	movlw	0
  2505  003DFA  6F5D               	movwf	(sprintf@f+9)& (0+255),b
  2506  003DFC                     
  2507                           ; BSR set to: 1
  2508  003DFC  0E54               	movlw	low sprintf@f
  2509  003DFE  0100               	movlb	0	; () banked
  2510  003E00  6FC5               	movwf	vfprintf@fp& (0+255),b
  2511  003E02  0E01               	movlw	high sprintf@f
  2512  003E04  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
  2513  003E06  C14E  F0C7         	movff	sprintf@fmt,vfprintf@fmt
  2514  003E0A  C14F  F0C8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2515  003E0E  0E52               	movlw	low sprintf@ap
  2516  003E10  6FC9               	movwf	vfprintf@ap& (0+255),b
  2517  003E12  0E01               	movlw	high sprintf@ap
  2518  003E14  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
  2519  003E16  EC31  F01E         	call	_vfprintf	;wreg free
  2520  003E1A  0101               	movlb	1	; () banked
  2521  003E1C  5157               	movf	(sprintf@f+3)& (0+255),w,b
  2522  003E1E  254C               	addwf	sprintf@s& (0+255),w,b
  2523  003E20  6ED9               	movwf	fsr2l,c
  2524  003E22  5158               	movf	(sprintf@f+4)& (0+255),w,b
  2525  003E24  214D               	addwfc	(sprintf@s+1)& (0+255),w,b
  2526  003E26  6EDA               	movwf	fsr2h,c
  2527  003E28  0E00               	movlw	0
  2528  003E2A  6EDF               	movwf	indf2,c
  2529  003E2C                     
  2530                           ; BSR set to: 1
  2531  003E2C  0012               	return		;funcret
  2532  003E2E                     __end_of_sprintf:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _vfprintf *****************
  2536 ;; Defined at:
  2537 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  fp              2   69[BANK0 ] PTR struct _IO_FILE
  2540 ;;		 -> sprintf@f(11), 
  2541 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  2542 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2543 ;;  ap              2   73[BANK0 ] PTR PTR void 
  2544 ;;		 -> sprintf@ap(2), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  2547 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2   69[BANK0 ] int 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2557 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;Total ram usage:        8 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 19
  2564 ;; This function calls:
  2565 ;;		_vfpfcnvrt
  2566 ;; This function is called by:
  2567 ;;		_sprintf
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text6
  2572  003C62                     __ptext6:
  2573                           	callstack 0
  2574  003C62                     _vfprintf:
  2575                           	callstack 8
  2576  003C62                     
  2577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2578  003C62  C0C7  F14A         	movff	vfprintf@fmt,vfprintf@cfmt
  2579  003C66  C0C8  F14B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2580  003C6A                     
  2581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2582  003C6A  0E00               	movlw	0
  2583  003C6C  0100               	movlb	0	; () banked
  2584  003C6E  6FF6               	movwf	(_nout+1)& (0+255),b
  2585  003C70  0E00               	movlw	0
  2586  003C72  6FF5               	movwf	_nout& (0+255),b
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2589  003C74  EF4F  F01E         	goto	l8662
  2590  003C78                     l8660:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2594  003C78  C0C5  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  2595  003C7C  C0C6  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2596  003C80  0E4A               	movlw	low vfprintf@cfmt
  2597  003C82  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  2598  003C84  0E01               	movlw	high vfprintf@cfmt
  2599  003C86  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2600  003C88  C0C9  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2601  003C8C  C0CA  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2602  003C90  ECB8  F00B         	call	_vfpfcnvrt	;wreg free
  2603  003C94  0100               	movlb	0	; () banked
  2604  003C96  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  2605  003C98  27F5               	addwf	_nout& (0+255),f,b
  2606  003C9A  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2607  003C9C  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2608  003C9E                     l8662:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2612  003C9E  C14A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2613  003CA2  C14B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2614  003CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2615  003CA6  6AF8               	clrf	tblptru,c
  2616  003CA8                     	endif
  2617  003CA8                     	if	0	;tblptru may be non-zero
  2618  003CA8                     	endif
  2619  003CA8  0008               	tblrd		*
  2620  003CAA  50F5               	movf	tablat,w,c
  2621  003CAC  0900               	iorlw	0
  2622  003CAE  A4D8               	btfss	status,2,c
  2623  003CB0  EF5C  F01E         	goto	u5761
  2624  003CB4  EF5E  F01E         	goto	u5760
  2625  003CB8                     u5761:
  2626  003CB8  EF3C  F01E         	goto	l8660
  2627  003CBC                     u5760:
  2628  003CBC                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2631  003CBC  C0F5  F0C5         	movff	_nout,?_vfprintf
  2632  003CC0  C0F6  F0C6         	movff	_nout+1,?_vfprintf+1
  2633  003CC4                     
  2634                           ; BSR set to: 0
  2635  003CC4  0012               	return		;funcret
  2636  003CC6                     __end_of_vfprintf:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _vfpfcnvrt *****************
  2640 ;; Defined at:
  2641 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2644 ;;		 -> sprintf@f(11), 
  2645 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2646 ;;		 -> vfprintf@cfmt(2), 
  2647 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2648 ;;		 -> sprintf@ap(2), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  ll              8   61[BANK0 ] long long 
  2651 ;;  llu             8    0        unsigned long long 
  2652 ;;  f               4    0        unsigned long long 
  2653 ;;  vp              3    0        PTR void 
  2654 ;;  ct              3    0        unsigned char [3]
  2655 ;;  cp              3    0        PTR unsigned char 
  2656 ;;  i               2    0        int 
  2657 ;;  done            2    0        int 
  2658 ;;  c               1    0        unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2   53[BANK0 ] int 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:       16 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 18
  2675 ;; This function calls:
  2676 ;;		_dtoa
  2677 ;;		_fputc
  2678 ;; This function is called by:
  2679 ;;		_vfprintf
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text7
  2684  001770                     __ptext7:
  2685                           	callstack 0
  2686  001770                     _vfpfcnvrt:
  2687                           	callstack 8
  2688  001770                     
  2689                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2690  001770  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2691  001774  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2692  001778  CFDE FFF6          	movff	postinc2,tblptrl
  2693  00177C  CFDD FFF7          	movff	postdec2,tblptrh
  2694  001780                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2695  001780  6AF8               	clrf	tblptru,c
  2696  001782                     	endif
  2697  001782                     	if	0	;tblptru may be non-zero
  2698  001782                     	endif
  2699  001782  0008               	tblrd		*
  2700  001784  50F5               	movf	tablat,w,c
  2701  001786  0A25               	xorlw	37
  2702  001788  A4D8               	btfss	status,2,c
  2703  00178A  EFC9  F00B         	goto	u5611
  2704  00178E  EFCB  F00B         	goto	u5610
  2705  001792                     u5611:
  2706  001792  EF7B  F00C         	goto	l8474
  2707  001796                     u5610:
  2708  001796                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2710  001796  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711  00179A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712  00179E  2ADE               	incf	postinc2,f,c
  2713  0017A0  0E00               	movlw	0
  2714  0017A2  22DD               	addwfc	postdec2,f,c
  2715  0017A4                     
  2716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2717  0017A4  0E00               	movlw	0
  2718  0017A6  0100               	movlb	0	; () banked
  2719  0017A8  6FF8               	movwf	(_width+1)& (0+255),b
  2720  0017AA  0E00               	movlw	0
  2721  0017AC  6FF7               	movwf	_width& (0+255),b
  2722  0017AE  C0F7  F033         	movff	_width,_flags
  2723  0017B2  C0F8  F034         	movff	_width+1,_flags+1
  2724  0017B6                     
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2727  0017B6  6831               	setf	_prec^0,c
  2728  0017B8  6832               	setf	(_prec+1)^0,c
  2729  0017BA                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2732  0017BA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2733  0017BE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2734  0017C2  CFDE FFF6          	movff	postinc2,tblptrl
  2735  0017C6  CFDD FFF7          	movff	postdec2,tblptrh
  2736  0017CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2737  0017CA  6AF8               	clrf	tblptru,c
  2738  0017CC                     	endif
  2739  0017CC                     	if	0	;tblptru may be non-zero
  2740  0017CC                     	endif
  2741  0017CC  0008               	tblrd		*
  2742  0017CE  50F5               	movf	tablat,w,c
  2743  0017D0  0A64               	xorlw	100
  2744  0017D2  B4D8               	btfsc	status,2,c
  2745  0017D4  EFEE  F00B         	goto	u5621
  2746  0017D8  EFF0  F00B         	goto	u5620
  2747  0017DC                     u5621:
  2748  0017DC  EF03  F00C         	goto	l8452
  2749  0017E0                     u5620:
  2750  0017E0                     
  2751                           ; BSR set to: 0
  2752  0017E0  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2753  0017E4  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2754  0017E8  CFDE FFF6          	movff	postinc2,tblptrl
  2755  0017EC  CFDD FFF7          	movff	postdec2,tblptrh
  2756  0017F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2757  0017F0  6AF8               	clrf	tblptru,c
  2758  0017F2                     	endif
  2759  0017F2                     	if	0	;tblptru may be non-zero
  2760  0017F2                     	endif
  2761  0017F2  0008               	tblrd		*
  2762  0017F4  50F5               	movf	tablat,w,c
  2763  0017F6  0A69               	xorlw	105
  2764  0017F8  A4D8               	btfss	status,2,c
  2765  0017FA  EF01  F00C         	goto	u5631
  2766  0017FE  EF03  F00C         	goto	u5630
  2767  001802                     u5631:
  2768  001802  EF43  F00C         	goto	l8458
  2769  001806                     u5630:
  2770  001806                     l8452:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2774  001806  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  00180A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  00180E  2ADE               	incf	postinc2,f,c
  2777  001810  0E00               	movlw	0
  2778  001812  22DD               	addwfc	postdec2,f,c
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2781  001814  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2782  001818  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2783  00181C  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
  2784  001820  0E02               	movlw	2
  2785  001822  26DE               	addwf	postinc2,f,c
  2786  001824  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
  2787  001828  0E00               	movlw	0
  2788  00182A  22DD               	addwfc	postdec2,f,c
  2789  00182C  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2790  001830  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2791  001834  CFDE F0BD          	movff	postinc2,vfpfcnvrt@ll
  2792  001838  CFDD F0BE          	movff	postdec2,vfpfcnvrt@ll+1
  2793  00183C  0E00               	movlw	0
  2794  00183E  BFBE               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2795  001840  0EFF               	movlw	-1
  2796  001842  6FBF               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2797  001844  6FC0               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2798  001846  6FC1               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2799  001848  6FC2               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2800  00184A  6FC3               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2801  00184C  6FC4               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2802  00184E                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2805  00184E  C0B5  F091         	movff	vfpfcnvrt@fp,dtoa@fp
  2806  001852  C0B6  F092         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2807  001856  C0BD  F093         	movff	vfpfcnvrt@ll,dtoa@d
  2808  00185A  C0BE  F094         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2809  00185E  C0BF  F095         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2810  001862  C0C0  F096         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2811  001866  C0C1  F097         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2812  00186A  C0C2  F098         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2813  00186E  C0C3  F099         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2814  001872  C0C4  F09A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2815  001876  EC46  F00A         	call	_dtoa	;wreg free
  2816  00187A  C091  F0B5         	movff	?_dtoa,?_vfpfcnvrt
  2817  00187E  C092  F0B6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2818  001882  EF97  F00C         	goto	l1823
  2819  001886                     l8458:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2823  001886  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  00188A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  00188E  CFDE FFF6          	movff	postinc2,tblptrl
  2826  001892  CFDD FFF7          	movff	postdec2,tblptrh
  2827  001896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2828  001896  6AF8               	clrf	tblptru,c
  2829  001898                     	endif
  2830  001898                     	if	0	;tblptru may be non-zero
  2831  001898                     	endif
  2832  001898  0008               	tblrd		*
  2833  00189A  50F5               	movf	tablat,w,c
  2834  00189C  0A25               	xorlw	37
  2835  00189E  A4D8               	btfss	status,2,c
  2836  0018A0  EF54  F00C         	goto	u5641
  2837  0018A4  EF56  F00C         	goto	u5640
  2838  0018A8                     u5641:
  2839  0018A8  EF6E  F00C         	goto	l8468
  2840  0018AC                     u5640:
  2841  0018AC                     
  2842                           ; BSR set to: 0
  2843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2844  0018AC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845  0018B0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846  0018B4  2ADE               	incf	postinc2,f,c
  2847  0018B6  0E00               	movlw	0
  2848  0018B8  22DD               	addwfc	postdec2,f,c
  2849  0018BA                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2852  0018BA  0E00               	movlw	0
  2853  0018BC  6E28               	movwf	(fputc@c+1)^0,c
  2854  0018BE  0E25               	movlw	37
  2855  0018C0  6E27               	movwf	fputc@c^0,c
  2856  0018C2  C0B5  F029         	movff	vfpfcnvrt@fp,fputc@fp
  2857  0018C6  C0B6  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2858  0018CA  EC0B  F014         	call	_fputc	;wreg free
  2859  0018CE                     l8464:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2862  0018CE  0E00               	movlw	0
  2863  0018D0  0100               	movlb	0	; () banked
  2864  0018D2  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2865  0018D4  0E01               	movlw	1
  2866  0018D6  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  2867  0018D8  EF97  F00C         	goto	l1823
  2868  0018DC                     l8468:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2872  0018DC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2873  0018E0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2874  0018E4  2ADE               	incf	postinc2,f,c
  2875  0018E6  0E00               	movlw	0
  2876  0018E8  22DD               	addwfc	postdec2,f,c
  2877  0018EA                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2880  0018EA  0E00               	movlw	0
  2881  0018EC  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2882  0018EE  0E00               	movlw	0
  2883  0018F0  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  2884  0018F2  EF97  F00C         	goto	l1823
  2885  0018F6                     l8474:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2888  0018F6  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2889  0018FA  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2890  0018FE  CFDE FFF6          	movff	postinc2,tblptrl
  2891  001902  CFDD FFF7          	movff	postdec2,tblptrh
  2892  001906                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2893  001906  6AF8               	clrf	tblptru,c
  2894  001908                     	endif
  2895  001908                     	if	0	;tblptru may be non-zero
  2896  001908                     	endif
  2897  001908  0008               	tblrd		*
  2898  00190A  50F5               	movf	tablat,w,c
  2899  00190C  6E27               	movwf	fputc@c^0,c
  2900  00190E  6A28               	clrf	(fputc@c+1)^0,c
  2901  001910  C0B5  F029         	movff	vfpfcnvrt@fp,fputc@fp
  2902  001914  C0B6  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2903  001918  EC0B  F014         	call	_fputc	;wreg free
  2904  00191C                     
  2905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2906  00191C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2907  001920  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2908  001924  2ADE               	incf	postinc2,f,c
  2909  001926  0E00               	movlw	0
  2910  001928  22DD               	addwfc	postdec2,f,c
  2911  00192A  EF67  F00C         	goto	l8464
  2912  00192E                     l1823:
  2913  00192E  0012               	return		;funcret
  2914  001930                     __end_of_vfpfcnvrt:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _dtoa *****************
  2918 ;; Defined at:
  2919 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  2922 ;;		 -> sprintf@f(11), 
  2923 ;;  d               8   19[BANK0 ] long long 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  n               8   43[BANK0 ] long long 
  2926 ;;  i               2   51[BANK0 ] int 
  2927 ;;  s               2   41[BANK0 ] int 
  2928 ;;  w               2   39[BANK0 ] int 
  2929 ;;  p               2   37[BANK0 ] int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2   17[BANK0 ] int 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:       36 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 17
  2946 ;; This function calls:
  2947 ;;		___aodiv
  2948 ;;		___aomod
  2949 ;;		_abs
  2950 ;;		_pad
  2951 ;; This function is called by:
  2952 ;;		_vfpfcnvrt
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text8
  2957  00148C                     __ptext8:
  2958                           	callstack 0
  2959  00148C                     _dtoa:
  2960                           	callstack 8
  2961  00148C                     
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2963  00148C  C093  F0AB         	movff	dtoa@d,dtoa@n
  2964  001490  C094  F0AC         	movff	dtoa@d+1,dtoa@n+1
  2965  001494  C095  F0AD         	movff	dtoa@d+2,dtoa@n+2
  2966  001498  C096  F0AE         	movff	dtoa@d+3,dtoa@n+3
  2967  00149C  C097  F0AF         	movff	dtoa@d+4,dtoa@n+4
  2968  0014A0  C098  F0B0         	movff	dtoa@d+5,dtoa@n+5
  2969  0014A4  C099  F0B1         	movff	dtoa@d+6,dtoa@n+6
  2970  0014A8  C09A  F0B2         	movff	dtoa@d+7,dtoa@n+7
  2971  0014AC                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2973  0014AC  0100               	movlb	0	; () banked
  2974  0014AE  BFB2               	btfsc	(dtoa@n+7)& (0+255),7,b
  2975  0014B0  EF5C  F00A         	goto	u5351
  2976  0014B4  EF5F  F00A         	goto	u5350
  2977  0014B8                     u5351:
  2978  0014B8  0E01               	movlw	1
  2979  0014BA  EF60  F00A         	goto	u5360
  2980  0014BE                     u5350:
  2981  0014BE  0E00               	movlw	0
  2982  0014C0                     u5360:
  2983  0014C0  6FA9               	movwf	dtoa@s& (0+255),b
  2984  0014C2  6BAA               	clrf	(dtoa@s+1)& (0+255),b
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2987  0014C4  51A9               	movf	dtoa@s& (0+255),w,b
  2988  0014C6  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  2989  0014C8  B4D8               	btfsc	status,2,c
  2990  0014CA  EF69  F00A         	goto	u5371
  2991  0014CE  EF6B  F00A         	goto	u5370
  2992  0014D2                     u5371:
  2993  0014D2  EF7B  F00A         	goto	l8298
  2994  0014D6                     u5370:
  2995  0014D6                     
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2998  0014D6  1FB2               	comf	(dtoa@n+7)& (0+255),f,b
  2999  0014D8  1FB1               	comf	(dtoa@n+6)& (0+255),f,b
  3000  0014DA  1FB0               	comf	(dtoa@n+5)& (0+255),f,b
  3001  0014DC  1FAF               	comf	(dtoa@n+4)& (0+255),f,b
  3002  0014DE  1FAE               	comf	(dtoa@n+3)& (0+255),f,b
  3003  0014E0  1FAD               	comf	(dtoa@n+2)& (0+255),f,b
  3004  0014E2  1FAC               	comf	(dtoa@n+1)& (0+255),f,b
  3005  0014E4  6DAB               	negf	dtoa@n& (0+255),b
  3006  0014E6  0E00               	movlw	0
  3007  0014E8  23AC               	addwfc	(dtoa@n+1)& (0+255),f,b
  3008  0014EA  23AD               	addwfc	(dtoa@n+2)& (0+255),f,b
  3009  0014EC  23AE               	addwfc	(dtoa@n+3)& (0+255),f,b
  3010  0014EE  23AF               	addwfc	(dtoa@n+4)& (0+255),f,b
  3011  0014F0  23B0               	addwfc	(dtoa@n+5)& (0+255),f,b
  3012  0014F2  23B1               	addwfc	(dtoa@n+6)& (0+255),f,b
  3013  0014F4  23B2               	addwfc	(dtoa@n+7)& (0+255),f,b
  3014  0014F6                     l8298:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3018  0014F6  BE32               	btfsc	(_prec+1)^0,7,c
  3019  0014F8  EF80  F00A         	goto	u5381
  3020  0014FC  EF82  F00A         	goto	u5380
  3021  001500                     u5381:
  3022  001500  EF83  F00A         	goto	l8302
  3023  001504                     u5380:
  3024  001504                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3027  001504  9233               	bcf	_flags^0,1,c
  3028  001506                     l8302:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3032  001506  BE32               	btfsc	(_prec+1)^0,7,c
  3033  001508  EF90  F00A         	goto	u5390
  3034  00150C  5032               	movf	(_prec+1)^0,w,c
  3035  00150E  E106               	bnz	u5391
  3036  001510  0431               	decf	_prec^0,w,c
  3037  001512  B0D8               	btfsc	status,0,c
  3038  001514  EF8E  F00A         	goto	u5391
  3039  001518  EF90  F00A         	goto	u5390
  3040  00151C                     u5391:
  3041  00151C  EF96  F00A         	goto	l1796
  3042  001520                     u5390:
  3043  001520                     
  3044                           ; BSR set to: 0
  3045  001520  0E00               	movlw	0
  3046  001522  6FA6               	movwf	(dtoa@p+1)& (0+255),b
  3047  001524  0E01               	movlw	1
  3048  001526  6FA5               	movwf	dtoa@p& (0+255),b
  3049  001528  EF9A  F00A         	goto	l1798
  3050  00152C                     l1796:
  3051                           
  3052                           ; BSR set to: 0
  3053  00152C  C031  F0A5         	movff	_prec,dtoa@p
  3054  001530  C032  F0A6         	movff	_prec+1,dtoa@p+1
  3055  001534                     l1798:
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3059  001534  C0F7  F0A7         	movff	_width,dtoa@w
  3060  001538  C0F8  F0A8         	movff	_width+1,dtoa@w+1
  3061  00153C                     
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3064  00153C  51A9               	movf	dtoa@s& (0+255),w,b
  3065  00153E  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3066  001540  A4D8               	btfss	status,2,c
  3067  001542  EFA5  F00A         	goto	u5401
  3068  001546  EFA7  F00A         	goto	u5400
  3069  00154A                     u5401:
  3070  00154A  EFAE  F00A         	goto	l8310
  3071  00154E                     u5400:
  3072  00154E                     
  3073                           ; BSR set to: 0
  3074  00154E  A433               	btfss	_flags^0,2,c
  3075  001550  EFAC  F00A         	goto	u5411
  3076  001554  EFAE  F00A         	goto	u5410
  3077  001558                     u5411:
  3078  001558  EFB1  F00A         	goto	l8312
  3079  00155C                     u5410:
  3080  00155C                     l8310:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3084  00155C  07A7               	decf	dtoa@w& (0+255),f,b
  3085  00155E  A0D8               	btfss	status,0,c
  3086  001560  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  3087  001562                     l8312:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3091  001562  0E00               	movlw	0
  3092  001564  6FB4               	movwf	(dtoa@i+1)& (0+255),b
  3093  001566  0E1F               	movlw	31
  3094  001568  6FB3               	movwf	dtoa@i& (0+255),b
  3095  00156A                     
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3098  00156A  0E00               	movlw	0
  3099  00156C  0101               	movlb	1	; () banked
  3100  00156E  6F25               	movwf	(_dbuf+31)& (0+255),b
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3103  001570  EF37  F00B         	goto	l8326
  3104  001574                     l8316:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3108  001574  07B3               	decf	dtoa@i& (0+255),f,b
  3109  001576  A0D8               	btfss	status,0,c
  3110  001578  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  3111  00157A                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3114  00157A  0E06               	movlw	low _dbuf
  3115  00157C  25B3               	addwf	dtoa@i& (0+255),w,b
  3116  00157E  6ED9               	movwf	fsr2l,c
  3117  001580  0E01               	movlw	high _dbuf
  3118  001582  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  3119  001584  6EDA               	movwf	fsr2h,c
  3120  001586  C0AB  F080         	movff	dtoa@n,___aomod@dividend
  3121  00158A  C0AC  F081         	movff	dtoa@n+1,___aomod@dividend+1
  3122  00158E  C0AD  F082         	movff	dtoa@n+2,___aomod@dividend+2
  3123  001592  C0AE  F083         	movff	dtoa@n+3,___aomod@dividend+3
  3124  001596  C0AF  F084         	movff	dtoa@n+4,___aomod@dividend+4
  3125  00159A  C0B0  F085         	movff	dtoa@n+5,___aomod@dividend+5
  3126  00159E  C0B1  F086         	movff	dtoa@n+6,___aomod@dividend+6
  3127  0015A2  C0B2  F087         	movff	dtoa@n+7,___aomod@dividend+7
  3128  0015A6  0E0A               	movlw	10
  3129  0015A8  6F88               	movwf	___aomod@divisor& (0+255),b
  3130  0015AA  0E00               	movlw	0
  3131  0015AC  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  3132  0015AE  0E00               	movlw	0
  3133  0015B0  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  3134  0015B2  0E00               	movlw	0
  3135  0015B4  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  3136  0015B6  0E00               	movlw	0
  3137  0015B8  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  3138  0015BA  0E00               	movlw	0
  3139  0015BC  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  3140  0015BE  0E00               	movlw	0
  3141  0015C0  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  3142  0015C2  0E00               	movlw	0
  3143  0015C4  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  3144  0015C6  ECAC  F00F         	call	___aomod	;wreg free
  3145  0015CA  C080  F09B         	movff	?___aomod,??_dtoa
  3146  0015CE  C081  F09C         	movff	?___aomod+1,??_dtoa+1
  3147  0015D2  C082  F09D         	movff	?___aomod+2,??_dtoa+2
  3148  0015D6  C083  F09E         	movff	?___aomod+3,??_dtoa+3
  3149  0015DA  C084  F09F         	movff	?___aomod+4,??_dtoa+4
  3150  0015DE  C085  F0A0         	movff	?___aomod+5,??_dtoa+5
  3151  0015E2  C086  F0A1         	movff	?___aomod+6,??_dtoa+6
  3152  0015E6  C087  F0A2         	movff	?___aomod+7,??_dtoa+7
  3153  0015EA  C09B  F029         	movff	??_dtoa,abs@a
  3154  0015EE  C09D  F02A         	movff	??_dtoa+2,abs@a+1
  3155  0015F2  ECCE  F01F         	call	_abs	;wreg free
  3156  0015F6  5029               	movf	?_abs^0,w,c
  3157  0015F8  0F30               	addlw	48
  3158  0015FA  6EDF               	movwf	indf2,c
  3159  0015FC                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3161  0015FC  0100               	movlb	0	; () banked
  3162  0015FE  07A5               	decf	dtoa@p& (0+255),f,b
  3163  001600  A0D8               	btfss	status,0,c
  3164  001602  07A6               	decf	(dtoa@p+1)& (0+255),f,b
  3165  001604                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3168  001604  07A7               	decf	dtoa@w& (0+255),f,b
  3169  001606  A0D8               	btfss	status,0,c
  3170  001608  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  3171  00160A                     
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3174  00160A  C0AB  F080         	movff	dtoa@n,___aodiv@dividend
  3175  00160E  C0AC  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  3176  001612  C0AD  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  3177  001616  C0AE  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  3178  00161A  C0AF  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  3179  00161E  C0B0  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  3180  001622  C0B1  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  3181  001626  C0B2  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  3182  00162A  0E0A               	movlw	10
  3183  00162C  6F88               	movwf	___aodiv@divisor& (0+255),b
  3184  00162E  0E00               	movlw	0
  3185  001630  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  3186  001632  0E00               	movlw	0
  3187  001634  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3188  001636  0E00               	movlw	0
  3189  001638  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3190  00163A  0E00               	movlw	0
  3191  00163C  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3192  00163E  0E00               	movlw	0
  3193  001640  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3194  001642  0E00               	movlw	0
  3195  001644  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3196  001646  0E00               	movlw	0
  3197  001648  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3198  00164A  EC2B  F00E         	call	___aodiv	;wreg free
  3199  00164E  C080  F0AB         	movff	?___aodiv,dtoa@n
  3200  001652  C081  F0AC         	movff	?___aodiv+1,dtoa@n+1
  3201  001656  C082  F0AD         	movff	?___aodiv+2,dtoa@n+2
  3202  00165A  C083  F0AE         	movff	?___aodiv+3,dtoa@n+3
  3203  00165E  C084  F0AF         	movff	?___aodiv+4,dtoa@n+4
  3204  001662  C085  F0B0         	movff	?___aodiv+5,dtoa@n+5
  3205  001666  C086  F0B1         	movff	?___aodiv+6,dtoa@n+6
  3206  00166A  C087  F0B2         	movff	?___aodiv+7,dtoa@n+7
  3207  00166E                     l8326:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3210  00166E  0100               	movlb	0	; () banked
  3211  001670  BFB4               	btfsc	(dtoa@i+1)& (0+255),7,b
  3212  001672  EF43  F00B         	goto	u5421
  3213  001676  51B4               	movf	(dtoa@i+1)& (0+255),w,b
  3214  001678  E108               	bnz	u5420
  3215  00167A  05B3               	decf	dtoa@i& (0+255),w,b
  3216  00167C  A0D8               	btfss	status,0,c
  3217  00167E  EF43  F00B         	goto	u5421
  3218  001682  EF45  F00B         	goto	u5420
  3219  001686                     u5421:
  3220  001686  EF75  F00B         	goto	l8336
  3221  00168A                     u5420:
  3222  00168A                     
  3223                           ; BSR set to: 0
  3224  00168A  51AB               	movf	dtoa@n& (0+255),w,b
  3225  00168C  11AC               	iorwf	(dtoa@n+1)& (0+255),w,b
  3226  00168E  11AD               	iorwf	(dtoa@n+2)& (0+255),w,b
  3227  001690  11AE               	iorwf	(dtoa@n+3)& (0+255),w,b
  3228  001692  11AF               	iorwf	(dtoa@n+4)& (0+255),w,b
  3229  001694  11B0               	iorwf	(dtoa@n+5)& (0+255),w,b
  3230  001696  11B1               	iorwf	(dtoa@n+6)& (0+255),w,b
  3231  001698  11B2               	iorwf	(dtoa@n+7)& (0+255),w,b
  3232  00169A  A4D8               	btfss	status,2,c
  3233  00169C  EF52  F00B         	goto	u5431
  3234  0016A0  EF54  F00B         	goto	u5430
  3235  0016A4                     u5431:
  3236  0016A4  EFBA  F00A         	goto	l8316
  3237  0016A8                     u5430:
  3238  0016A8                     
  3239                           ; BSR set to: 0
  3240  0016A8  BFA6               	btfsc	(dtoa@p+1)& (0+255),7,b
  3241  0016AA  EF61  F00B         	goto	u5440
  3242  0016AE  51A6               	movf	(dtoa@p+1)& (0+255),w,b
  3243  0016B0  E106               	bnz	u5441
  3244  0016B2  05A5               	decf	dtoa@p& (0+255),w,b
  3245  0016B4  B0D8               	btfsc	status,0,c
  3246  0016B6  EF5F  F00B         	goto	u5441
  3247  0016BA  EF61  F00B         	goto	u5440
  3248  0016BE                     u5441:
  3249  0016BE  EFBA  F00A         	goto	l8316
  3250  0016C2                     u5440:
  3251  0016C2                     
  3252                           ; BSR set to: 0
  3253  0016C2  BFA8               	btfsc	(dtoa@w+1)& (0+255),7,b
  3254  0016C4  EF6C  F00B         	goto	u5451
  3255  0016C8  51A8               	movf	(dtoa@w+1)& (0+255),w,b
  3256  0016CA  E108               	bnz	u5450
  3257  0016CC  05A7               	decf	dtoa@w& (0+255),w,b
  3258  0016CE  A0D8               	btfss	status,0,c
  3259  0016D0  EF6C  F00B         	goto	u5451
  3260  0016D4  EF6E  F00B         	goto	u5450
  3261  0016D8                     u5451:
  3262  0016D8  EF75  F00B         	goto	l8336
  3263  0016DC                     u5450:
  3264  0016DC                     
  3265                           ; BSR set to: 0
  3266  0016DC  B233               	btfsc	_flags^0,1,c
  3267  0016DE  EF73  F00B         	goto	u5461
  3268  0016E2  EF75  F00B         	goto	u5460
  3269  0016E6                     u5461:
  3270  0016E6  EFBA  F00A         	goto	l8316
  3271  0016EA                     u5460:
  3272  0016EA                     l8336:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3276  0016EA  51A9               	movf	dtoa@s& (0+255),w,b
  3277  0016EC  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3278  0016EE  A4D8               	btfss	status,2,c
  3279  0016F0  EF7C  F00B         	goto	u5471
  3280  0016F4  EF7E  F00B         	goto	u5470
  3281  0016F8                     u5471:
  3282  0016F8  EF85  F00B         	goto	l8340
  3283  0016FC                     u5470:
  3284  0016FC                     
  3285                           ; BSR set to: 0
  3286  0016FC  A433               	btfss	_flags^0,2,c
  3287  0016FE  EF83  F00B         	goto	u5481
  3288  001702  EF85  F00B         	goto	u5480
  3289  001706                     u5481:
  3290  001706  EFA3  F00B         	goto	l8350
  3291  00170A                     u5480:
  3292  00170A                     l8340:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3296  00170A  07B3               	decf	dtoa@i& (0+255),f,b
  3297  00170C  A0D8               	btfss	status,0,c
  3298  00170E  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  3299  001710                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3302  001710  51A9               	movf	dtoa@s& (0+255),w,b
  3303  001712  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3304  001714  A4D8               	btfss	status,2,c
  3305  001716  EF8F  F00B         	goto	u5491
  3306  00171A  EF91  F00B         	goto	u5490
  3307  00171E                     u5491:
  3308  00171E  EF97  F00B         	goto	l8346
  3309  001722                     u5490:
  3310  001722                     
  3311                           ; BSR set to: 0
  3312  001722  0E00               	movlw	0
  3313  001724  6FA4               	movwf	(_dtoa$2400+1)& (0+255),b
  3314  001726  0E2B               	movlw	43
  3315  001728  6FA3               	movwf	_dtoa$2400& (0+255),b
  3316  00172A  EF9B  F00B         	goto	l8348
  3317  00172E                     l8346:
  3318                           
  3319                           ; BSR set to: 0
  3320  00172E  0E00               	movlw	0
  3321  001730  6FA4               	movwf	(_dtoa$2400+1)& (0+255),b
  3322  001732  0E2D               	movlw	45
  3323  001734  6FA3               	movwf	_dtoa$2400& (0+255),b
  3324  001736                     l8348:
  3325                           
  3326                           ; BSR set to: 0
  3327  001736  0E06               	movlw	low _dbuf
  3328  001738  25B3               	addwf	dtoa@i& (0+255),w,b
  3329  00173A  6ED9               	movwf	fsr2l,c
  3330  00173C  0E01               	movlw	high _dbuf
  3331  00173E  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  3332  001740  6EDA               	movwf	fsr2h,c
  3333  001742  C0A3  FFDF         	movff	_dtoa$2400,indf2
  3334  001746                     l8350:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3338  001746  C091  F087         	movff	dtoa@fp,pad@fp
  3339  00174A  C092  F088         	movff	dtoa@fp+1,pad@fp+1
  3340  00174E  0E06               	movlw	low _dbuf
  3341  001750  25B3               	addwf	dtoa@i& (0+255),w,b
  3342  001752  6F89               	movwf	pad@buf& (0+255),b
  3343  001754  0E01               	movlw	high _dbuf
  3344  001756  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  3345  001758  6F8A               	movwf	(pad@buf+1)& (0+255),b
  3346  00175A  C0A7  F08B         	movff	dtoa@w,pad@p
  3347  00175E  C0A8  F08C         	movff	dtoa@w+1,pad@p+1
  3348  001762  EC70  F014         	call	_pad	;wreg free
  3349  001766  C087  F091         	movff	?_pad,?_dtoa
  3350  00176A  C088  F092         	movff	?_pad+1,?_dtoa+1
  3351  00176E  0012               	return		;funcret
  3352  001770                     __end_of_dtoa:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _pad *****************
  3356 ;; Defined at:
  3357 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  3360 ;;		 -> sprintf@f(11), 
  3361 ;;  buf             2    9[BANK0 ] PTR unsigned char 
  3362 ;;		 -> dbuf(32), 
  3363 ;;  p               2   11[BANK0 ] int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  w               2   15[BANK0 ] int 
  3366 ;;  i               2   13[BANK0 ] int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2    7[BANK0 ] int 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;Total ram usage:       11 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 16
  3383 ;; This function calls:
  3384 ;;		_fputc
  3385 ;;		_fputs
  3386 ;;		_strlen
  3387 ;; This function is called by:
  3388 ;;		_dtoa
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text9
  3393  0028E0                     __ptext9:
  3394                           	callstack 0
  3395  0028E0                     _pad:
  3396                           	callstack 8
  3397  0028E0                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3399  0028E0  A033               	btfss	_flags^0,0,c
  3400  0028E2  EF75  F014         	goto	u5191
  3401  0028E6  EF77  F014         	goto	u5190
  3402  0028EA                     u5191:
  3403  0028EA  EF81  F014         	goto	l8220
  3404  0028EE                     u5190:
  3405  0028EE                     
  3406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3407  0028EE  C089  F080         	movff	pad@buf,fputs@s
  3408  0028F2  C08A  F081         	movff	pad@buf+1,fputs@s+1
  3409  0028F6  C087  F082         	movff	pad@fp,fputs@fp
  3410  0028FA  C088  F083         	movff	pad@fp+1,fputs@fp+1
  3411  0028FE  EC64  F01F         	call	_fputs	;wreg free
  3412  002902                     l8220:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3415  002902  0100               	movlb	0	; () banked
  3416  002904  BF8C               	btfsc	(pad@p+1)& (0+255),7,b
  3417  002906  EF87  F014         	goto	u5201
  3418  00290A  EF89  F014         	goto	u5200
  3419  00290E                     u5201:
  3420  00290E  EF8F  F014         	goto	l8224
  3421  002912                     u5200:
  3422  002912                     
  3423                           ; BSR set to: 0
  3424  002912  C08B  F08F         	movff	pad@p,pad@w
  3425  002916  C08C  F090         	movff	pad@p+1,pad@w+1
  3426  00291A  EF93  F014         	goto	l1785
  3427  00291E                     l8224:
  3428                           
  3429                           ; BSR set to: 0
  3430  00291E  0E00               	movlw	0
  3431  002920  6F90               	movwf	(pad@w+1)& (0+255),b
  3432  002922  0E00               	movlw	0
  3433  002924  6F8F               	movwf	pad@w& (0+255),b
  3434  002926                     l1785:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3438  002926  0E00               	movlw	0
  3439  002928  6F8E               	movwf	(pad@i+1)& (0+255),b
  3440  00292A  0E00               	movlw	0
  3441  00292C  6F8D               	movwf	pad@i& (0+255),b
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3444  00292E  EFA6  F014         	goto	l8230
  3445  002932                     l8226:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3449  002932  0E00               	movlw	0
  3450  002934  6E28               	movwf	(fputc@c+1)^0,c
  3451  002936  0E20               	movlw	32
  3452  002938  6E27               	movwf	fputc@c^0,c
  3453  00293A  C087  F029         	movff	pad@fp,fputc@fp
  3454  00293E  C088  F02A         	movff	pad@fp+1,fputc@fp+1
  3455  002942  EC0B  F014         	call	_fputc	;wreg free
  3456  002946                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3458  002946  0100               	movlb	0	; () banked
  3459  002948  4B8D               	infsnz	pad@i& (0+255),f,b
  3460  00294A  2B8E               	incf	(pad@i+1)& (0+255),f,b
  3461  00294C                     l8230:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3465  00294C  518F               	movf	pad@w& (0+255),w,b
  3466  00294E  5D8D               	subwf	pad@i& (0+255),w,b
  3467  002950  518E               	movf	(pad@i+1)& (0+255),w,b
  3468  002952  0A80               	xorlw	128
  3469  002954  6E30               	movwf	??_pad^0,c
  3470  002956  5190               	movf	(pad@w+1)& (0+255),w,b
  3471  002958  0A80               	xorlw	128
  3472  00295A  5830               	subwfb	??_pad^0,w,c
  3473  00295C  A0D8               	btfss	status,0,c
  3474  00295E  EFB3  F014         	goto	u5211
  3475  002962  EFB5  F014         	goto	u5210
  3476  002966                     u5211:
  3477  002966  EF99  F014         	goto	l8226
  3478  00296A                     u5210:
  3479  00296A                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3482  00296A  B033               	btfsc	_flags^0,0,c
  3483  00296C  EFBA  F014         	goto	u5221
  3484  002970  EFBC  F014         	goto	u5220
  3485  002974                     u5221:
  3486  002974  EFC6  F014         	goto	l8234
  3487  002978                     u5220:
  3488  002978                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3491  002978  C089  F080         	movff	pad@buf,fputs@s
  3492  00297C  C08A  F081         	movff	pad@buf+1,fputs@s+1
  3493  002980  C087  F082         	movff	pad@fp,fputs@fp
  3494  002984  C088  F083         	movff	pad@fp+1,fputs@fp+1
  3495  002988  EC64  F01F         	call	_fputs	;wreg free
  3496  00298C                     l8234:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3499  00298C  C089  F027         	movff	pad@buf,strlen@s
  3500  002990  C08A  F028         	movff	pad@buf+1,strlen@s+1
  3501  002994  EC2C  F020         	call	_strlen	;wreg free
  3502  002998  0100               	movlb	0	; () banked
  3503  00299A  518F               	movf	pad@w& (0+255),w,b
  3504  00299C  2427               	addwf	?_strlen^0,w,c
  3505  00299E  6F87               	movwf	?_pad& (0+255),b
  3506  0029A0  5190               	movf	(pad@w+1)& (0+255),w,b
  3507  0029A2  2028               	addwfc	(?_strlen+1)^0,w,c
  3508  0029A4  6F88               	movwf	(?_pad+1)& (0+255),b
  3509  0029A6                     
  3510                           ; BSR set to: 0
  3511  0029A6  0012               	return		;funcret
  3512  0029A8                     __end_of_pad:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _strlen *****************
  3516 ;; Defined at:
  3517 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  s               2   38[COMRAM] PTR const unsigned char 
  3520 ;;		 -> dbuf(32), 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  a               2   40[COMRAM] PTR const unsigned char 
  3523 ;;		 -> dbuf(32), 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  2   38[COMRAM] unsigned int 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        4 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 13
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_pad
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text10
  3548  004058                     __ptext10:
  3549                           	callstack 0
  3550  004058                     _strlen:
  3551                           	callstack 10
  3552  004058  C027  F029         	movff	strlen@s,strlen@a
  3553  00405C  C028  F02A         	movff	strlen@s+1,strlen@a+1
  3554  004060  EF34  F020         	goto	l7964
  3555  004064                     l7962:
  3556  004064  4A27               	infsnz	strlen@s^0,f,c
  3557  004066  2A28               	incf	(strlen@s+1)^0,f,c
  3558  004068                     l7964:
  3559  004068  C027  FFD9         	movff	strlen@s,fsr2l
  3560  00406C  C028  FFDA         	movff	strlen@s+1,fsr2h
  3561  004070  50DF               	movf	indf2,w,c
  3562  004072  A4D8               	btfss	status,2,c
  3563  004074  EF3E  F020         	goto	u4951
  3564  004078  EF40  F020         	goto	u4950
  3565  00407C                     u4951:
  3566  00407C  EF32  F020         	goto	l7962
  3567  004080                     u4950:
  3568  004080  5029               	movf	strlen@a^0,w,c
  3569  004082  5C27               	subwf	strlen@s^0,w,c
  3570  004084  6E27               	movwf	?_strlen^0,c
  3571  004086  502A               	movf	(strlen@a+1)^0,w,c
  3572  004088  5828               	subwfb	(strlen@s+1)^0,w,c
  3573  00408A  6E28               	movwf	(?_strlen+1)^0,c
  3574  00408C  0012               	return		;funcret
  3575  00408E                     __end_of_strlen:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _fputs *****************
  3579 ;; Defined at:
  3580 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3583 ;;		 -> dbuf(32), 
  3584 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3585 ;;		 -> sprintf@f(11), 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  i               2    5[BANK0 ] int 
  3588 ;;  c               1    4[BANK0 ] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2    0[BANK0 ] int 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        7 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 15
  3605 ;; This function calls:
  3606 ;;		_fputc
  3607 ;; This function is called by:
  3608 ;;		_pad
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text11
  3613  003EC8                     __ptext11:
  3614                           	callstack 0
  3615  003EC8                     _fputs:
  3616                           	callstack 8
  3617  003EC8  0E00               	movlw	0
  3618  003ECA  0100               	movlb	0	; () banked
  3619  003ECC  6F86               	movwf	(fputs@i+1)& (0+255),b
  3620  003ECE  0E00               	movlw	0
  3621  003ED0  6F85               	movwf	fputs@i& (0+255),b
  3622  003ED2  EF77  F01F         	goto	l7958
  3623  003ED6                     l7954:
  3624                           
  3625                           ; BSR set to: 0
  3626  003ED6  C084  F027         	movff	fputs@c,fputc@c
  3627  003EDA  6A28               	clrf	(fputc@c+1)^0,c
  3628  003EDC  C082  F029         	movff	fputs@fp,fputc@fp
  3629  003EE0  C083  F02A         	movff	fputs@fp+1,fputc@fp+1
  3630  003EE4  EC0B  F014         	call	_fputc	;wreg free
  3631  003EE8  0100               	movlb	0	; () banked
  3632  003EEA  4B85               	infsnz	fputs@i& (0+255),f,b
  3633  003EEC  2B86               	incf	(fputs@i+1)& (0+255),f,b
  3634  003EEE                     l7958:
  3635                           
  3636                           ; BSR set to: 0
  3637  003EEE  5185               	movf	fputs@i& (0+255),w,b
  3638  003EF0  2580               	addwf	fputs@s& (0+255),w,b
  3639  003EF2  6ED9               	movwf	fsr2l,c
  3640  003EF4  5186               	movf	(fputs@i+1)& (0+255),w,b
  3641  003EF6  2181               	addwfc	(fputs@s+1)& (0+255),w,b
  3642  003EF8  6EDA               	movwf	fsr2h,c
  3643  003EFA  50DF               	movf	indf2,w,c
  3644  003EFC  6F84               	movwf	fputs@c& (0+255),b
  3645  003EFE  5184               	movf	fputs@c& (0+255),w,b
  3646  003F00  A4D8               	btfss	status,2,c
  3647  003F02  EF85  F01F         	goto	u4941
  3648  003F06  EF87  F01F         	goto	u4940
  3649  003F0A                     u4941:
  3650  003F0A  EF6B  F01F         	goto	l7954
  3651  003F0E                     u4940:
  3652  003F0E                     
  3653                           ; BSR set to: 0
  3654  003F0E  0012               	return		;funcret
  3655  003F10                     __end_of_fputs:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function _fputc *****************
  3659 ;; Defined at:
  3660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  c               2   38[COMRAM] int 
  3663 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  3664 ;;		 -> sprintf@f(11), 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2   38[COMRAM] int 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;Total ram usage:        9 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 14
  3683 ;; This function calls:
  3684 ;;		_putch
  3685 ;; This function is called by:
  3686 ;;		_pad
  3687 ;;		_vfpfcnvrt
  3688 ;;		_fputs
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text12
  3693  002816                     __ptext12:
  3694                           	callstack 0
  3695  002816                     _fputc:
  3696                           	callstack 11
  3697  002816  5029               	movf	fputc@fp^0,w,c
  3698  002818  102A               	iorwf	(fputc@fp+1)^0,w,c
  3699  00281A  B4D8               	btfsc	status,2,c
  3700  00281C  EF12  F014         	goto	u4821
  3701  002820  EF14  F014         	goto	u4820
  3702  002824                     u4821:
  3703  002824  EF1D  F014         	goto	l7712
  3704  002828                     u4820:
  3705  002828  5029               	movf	fputc@fp^0,w,c
  3706  00282A  102A               	iorwf	(fputc@fp+1)^0,w,c
  3707  00282C  A4D8               	btfss	status,2,c
  3708  00282E  EF1B  F014         	goto	u4831
  3709  002832  EF1D  F014         	goto	u4830
  3710  002836                     u4831:
  3711  002836  EF22  F014         	goto	l7714
  3712  00283A                     u4830:
  3713  00283A                     l7712:
  3714  00283A  5027               	movf	fputc@c^0,w,c
  3715  00283C  ECD3  F023         	call	_putch
  3716  002840  EF6F  F014         	goto	l1849
  3717  002844                     l7714:
  3718  002844  EE20 F009          	lfsr	2,9
  3719  002848  5029               	movf	fputc@fp^0,w,c
  3720  00284A  26D9               	addwf	fsr2l,f,c
  3721  00284C  502A               	movf	(fputc@fp+1)^0,w,c
  3722  00284E  22DA               	addwfc	fsr2h,f,c
  3723  002850  50DE               	movf	postinc2,w,c
  3724  002852  10DE               	iorwf	postinc2,w,c
  3725  002854  B4D8               	btfsc	status,2,c
  3726  002856  EF2F  F014         	goto	u4841
  3727  00285A  EF31  F014         	goto	u4840
  3728  00285E                     u4841:
  3729  00285E  EF4C  F014         	goto	l7718
  3730  002862                     u4840:
  3731  002862  EE20 F009          	lfsr	2,9
  3732  002866  5029               	movf	fputc@fp^0,w,c
  3733  002868  26D9               	addwf	fsr2l,f,c
  3734  00286A  502A               	movf	(fputc@fp+1)^0,w,c
  3735  00286C  22DA               	addwfc	fsr2h,f,c
  3736  00286E  EE10 F003          	lfsr	1,3
  3737  002872  5029               	movf	fputc@fp^0,w,c
  3738  002874  26E1               	addwf	fsr1l,f,c
  3739  002876  502A               	movf	(fputc@fp+1)^0,w,c
  3740  002878  22E2               	addwfc	fsr1h,f,c
  3741  00287A  50DE               	movf	postinc2,w,c
  3742  00287C  5CE6               	subwf	postinc1,w,c
  3743  00287E  50E6               	movf	postinc1,w,c
  3744  002880  0A80               	xorlw	128
  3745  002882  6E2F               	movwf	(??_fputc+4)^0,c
  3746  002884  50DE               	movf	postinc2,w,c
  3747  002886  0A80               	xorlw	128
  3748  002888  582F               	subwfb	(??_fputc+4)^0,w,c
  3749  00288A  B0D8               	btfsc	status,0,c
  3750  00288C  EF4A  F014         	goto	u4851
  3751  002890  EF4C  F014         	goto	u4850
  3752  002894                     u4851:
  3753  002894  EF6F  F014         	goto	l1849
  3754  002898                     u4850:
  3755  002898                     l7718:
  3756  002898  EE20 F003          	lfsr	2,3
  3757  00289C  5029               	movf	fputc@fp^0,w,c
  3758  00289E  26D9               	addwf	fsr2l,f,c
  3759  0028A0  502A               	movf	(fputc@fp+1)^0,w,c
  3760  0028A2  22DA               	addwfc	fsr2h,f,c
  3761  0028A4  CFDE F02B          	movff	postinc2,??_fputc
  3762  0028A8  CFDD F02C          	movff	postdec2,??_fputc+1
  3763  0028AC  C029  FFD9         	movff	fputc@fp,fsr2l
  3764  0028B0  C02A  FFDA         	movff	fputc@fp+1,fsr2h
  3765  0028B4  CFDE F02D          	movff	postinc2,??_fputc+2
  3766  0028B8  CFDD F02E          	movff	postdec2,??_fputc+3
  3767  0028BC  502B               	movf	??_fputc^0,w,c
  3768  0028BE  242D               	addwf	(??_fputc+2)^0,w,c
  3769  0028C0  6ED9               	movwf	fsr2l,c
  3770  0028C2  502C               	movf	(??_fputc+1)^0,w,c
  3771  0028C4  202E               	addwfc	(??_fputc+3)^0,w,c
  3772  0028C6  6EDA               	movwf	fsr2h,c
  3773  0028C8  C027  FFDF         	movff	fputc@c,indf2
  3774  0028CC  EE20 F003          	lfsr	2,3
  3775  0028D0  5029               	movf	fputc@fp^0,w,c
  3776  0028D2  26D9               	addwf	fsr2l,f,c
  3777  0028D4  502A               	movf	(fputc@fp+1)^0,w,c
  3778  0028D6  22DA               	addwfc	fsr2h,f,c
  3779  0028D8  2ADE               	incf	postinc2,f,c
  3780  0028DA  0E00               	movlw	0
  3781  0028DC  22DD               	addwfc	postdec2,f,c
  3782  0028DE                     l1849:
  3783  0028DE  0012               	return		;funcret
  3784  0028E0                     __end_of_fputc:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _putch *****************
  3788 ;; Defined at:
  3789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  c               1    wreg     unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  c               1    0[COMRAM] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 13
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_fputc
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text13
  3818  0047A6                     __ptext13:
  3819                           	callstack 0
  3820  0047A6                     _putch:
  3821                           	callstack 11
  3822  0047A6  0012               	return		;funcret
  3823  0047A8                     __end_of_putch:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _abs *****************
  3827 ;; Defined at:
  3828 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  a               2   40[COMRAM] int 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2   40[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        4 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 13
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_dtoa
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text14
  3857  003F9C                     __ptext14:
  3858                           	callstack 0
  3859  003F9C                     _abs:
  3860                           	callstack 11
  3861  003F9C  BE2A               	btfsc	(abs@a+1)^0,7,c
  3862  003F9E  EFDB  F01F         	goto	u5230
  3863  003FA2  502A               	movf	(abs@a+1)^0,w,c
  3864  003FA4  E106               	bnz	u5231
  3865  003FA6  0429               	decf	abs@a^0,w,c
  3866  003FA8  B0D8               	btfsc	status,0,c
  3867  003FAA  EFD9  F01F         	goto	u5231
  3868  003FAE  EFDB  F01F         	goto	u5230
  3869  003FB2                     u5231:
  3870  003FB2  EFE9  F01F         	goto	l1834
  3871  003FB6                     u5230:
  3872  003FB6  C029  F02B         	movff	abs@a,??_abs
  3873  003FBA  C02A  F02C         	movff	abs@a+1,??_abs+1
  3874  003FBE  1E2B               	comf	??_abs^0,f,c
  3875  003FC0  1E2C               	comf	(??_abs+1)^0,f,c
  3876  003FC2  4A2B               	infsnz	??_abs^0,f,c
  3877  003FC4  2A2C               	incf	(??_abs+1)^0,f,c
  3878  003FC6  C02B  F029         	movff	??_abs,?_abs
  3879  003FCA  C02C  F02A         	movff	??_abs+1,?_abs+1
  3880  003FCE  EFED  F01F         	goto	l1837
  3881  003FD2                     l1834:
  3882  003FD2  C029  F029         	movff	abs@a,?_abs
  3883  003FD6  C02A  F02A         	movff	abs@a+1,?_abs+1
  3884  003FDA                     l1837:
  3885  003FDA  0012               	return		;funcret
  3886  003FDC                     __end_of_abs:
  3887                           	callstack 0
  3888                           
  3889 ;; *************** function ___aomod *****************
  3890 ;; Defined at:
  3891 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  dividend        8    0[BANK0 ] long long 
  3894 ;;  divisor         8    8[BANK0 ] long long 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  sign            1   39[COMRAM] unsigned char 
  3897 ;;  counter         1   38[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  8    0[BANK0 ] long long 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:       18 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 13
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_dtoa
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text15
  3922  001F58                     __ptext15:
  3923                           	callstack 0
  3924  001F58                     ___aomod:
  3925                           	callstack 11
  3926  001F58  0E00               	movlw	0
  3927  001F5A  6E28               	movwf	___aomod@sign^0,c
  3928  001F5C  0100               	movlb	0	; () banked
  3929  001F5E  BF87               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3930  001F60  EFB6  F00F         	goto	u5130
  3931  001F64  EFB4  F00F         	goto	u5131
  3932  001F68                     u5131:
  3933  001F68  EFC8  F00F         	goto	l8188
  3934  001F6C                     u5130:
  3935  001F6C                     
  3936                           ; BSR set to: 0
  3937  001F6C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3938  001F6E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3939  001F70  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3940  001F72  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3941  001F74  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3942  001F76  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3943  001F78  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3944  001F7A  6D80               	negf	___aomod@dividend& (0+255),b
  3945  001F7C  0E00               	movlw	0
  3946  001F7E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3947  001F80  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3948  001F82  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3949  001F84  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3950  001F86  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3951  001F88  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3952  001F8A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3953  001F8C                     
  3954                           ; BSR set to: 0
  3955  001F8C  0E01               	movlw	1
  3956  001F8E  6E28               	movwf	___aomod@sign^0,c
  3957  001F90                     l8188:
  3958                           
  3959                           ; BSR set to: 0
  3960  001F90  BF8F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3961  001F92  EFCF  F00F         	goto	u5140
  3962  001F96  EFCD  F00F         	goto	u5141
  3963  001F9A                     u5141:
  3964  001F9A  EFDF  F00F         	goto	l8192
  3965  001F9E                     u5140:
  3966  001F9E                     
  3967                           ; BSR set to: 0
  3968  001F9E  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3969  001FA0  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3970  001FA2  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3971  001FA4  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3972  001FA6  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3973  001FA8  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3974  001FAA  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3975  001FAC  6D88               	negf	___aomod@divisor& (0+255),b
  3976  001FAE  0E00               	movlw	0
  3977  001FB0  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3978  001FB2  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3979  001FB4  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3980  001FB6  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3981  001FB8  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3982  001FBA  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3983  001FBC  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3984  001FBE                     l8192:
  3985                           
  3986                           ; BSR set to: 0
  3987  001FBE  5188               	movf	___aomod@divisor& (0+255),w,b
  3988  001FC0  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3989  001FC2  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3990  001FC4  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3991  001FC6  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3992  001FC8  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3993  001FCA  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3994  001FCC  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3995  001FCE  B4D8               	btfsc	status,2,c
  3996  001FD0  EFEC  F00F         	goto	u5151
  3997  001FD4  EFEE  F00F         	goto	u5150
  3998  001FD8                     u5151:
  3999  001FD8  EF36  F010         	goto	l8208
  4000  001FDC                     u5150:
  4001  001FDC                     
  4002                           ; BSR set to: 0
  4003  001FDC  0E01               	movlw	1
  4004  001FDE  6E27               	movwf	___aomod@counter^0,c
  4005  001FE0  EFFC  F00F         	goto	l8198
  4006  001FE4                     l8196:
  4007                           
  4008                           ; BSR set to: 0
  4009  001FE4  90D8               	bcf	status,0,c
  4010  001FE6  3788               	rlcf	___aomod@divisor& (0+255),f,b
  4011  001FE8  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4012  001FEA  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4013  001FEC  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4014  001FEE  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4015  001FF0  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4016  001FF2  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4017  001FF4  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4018  001FF6  2A27               	incf	___aomod@counter^0,f,c
  4019  001FF8                     l8198:
  4020                           
  4021                           ; BSR set to: 0
  4022  001FF8  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4023  001FFA  EF01  F010         	goto	u5161
  4024  001FFE  EF03  F010         	goto	u5160
  4025  002002                     u5161:
  4026  002002  EFF2  F00F         	goto	l8196
  4027  002006                     u5160:
  4028  002006                     l8200:
  4029                           
  4030                           ; BSR set to: 0
  4031  002006  5188               	movf	___aomod@divisor& (0+255),w,b
  4032  002008  5D80               	subwf	___aomod@dividend& (0+255),w,b
  4033  00200A  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4034  00200C  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4035  00200E  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4036  002010  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4037  002012  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4038  002014  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4039  002016  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4040  002018  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4041  00201A  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4042  00201C  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4043  00201E  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4044  002020  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4045  002022  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4046  002024  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4047  002026  A0D8               	btfss	status,0,c
  4048  002028  EF18  F010         	goto	u5171
  4049  00202C  EF1A  F010         	goto	u5170
  4050  002030                     u5171:
  4051  002030  EF2A  F010         	goto	l8204
  4052  002034                     u5170:
  4053  002034                     
  4054                           ; BSR set to: 0
  4055  002034  5188               	movf	___aomod@divisor& (0+255),w,b
  4056  002036  5F80               	subwf	___aomod@dividend& (0+255),f,b
  4057  002038  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4058  00203A  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4059  00203C  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4060  00203E  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4061  002040  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4062  002042  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4063  002044  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4064  002046  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4065  002048  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4066  00204A  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4067  00204C  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4068  00204E  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4069  002050  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4070  002052  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4071  002054                     l8204:
  4072                           
  4073                           ; BSR set to: 0
  4074  002054  90D8               	bcf	status,0,c
  4075  002056  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4076  002058  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4077  00205A  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4078  00205C  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4079  00205E  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4080  002060  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4081  002062  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4082  002064  3388               	rrcf	___aomod@divisor& (0+255),f,b
  4083  002066                     
  4084                           ; BSR set to: 0
  4085  002066  2E27               	decfsz	___aomod@counter^0,f,c
  4086  002068  EF03  F010         	goto	l8200
  4087  00206C                     l8208:
  4088                           
  4089                           ; BSR set to: 0
  4090  00206C  5028               	movf	___aomod@sign^0,w,c
  4091  00206E  B4D8               	btfsc	status,2,c
  4092  002070  EF3C  F010         	goto	u5181
  4093  002074  EF3E  F010         	goto	u5180
  4094  002078                     u5181:
  4095  002078  EF4E  F010         	goto	l8212
  4096  00207C                     u5180:
  4097  00207C                     
  4098                           ; BSR set to: 0
  4099  00207C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4100  00207E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4101  002080  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4102  002082  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4103  002084  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4104  002086  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4105  002088  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4106  00208A  6D80               	negf	___aomod@dividend& (0+255),b
  4107  00208C  0E00               	movlw	0
  4108  00208E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4109  002090  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4110  002092  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4111  002094  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4112  002096  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4113  002098  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4114  00209A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4115  00209C                     l8212:
  4116                           
  4117                           ; BSR set to: 0
  4118  00209C  C080  F080         	movff	___aomod@dividend,?___aomod
  4119  0020A0  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  4120  0020A4  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  4121  0020A8  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  4122  0020AC  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  4123  0020B0  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  4124  0020B4  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  4125  0020B8  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  4126  0020BC                     
  4127                           ; BSR set to: 0
  4128  0020BC  0012               	return		;funcret
  4129  0020BE                     __end_of___aomod:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function ___aodiv *****************
  4133 ;; Defined at:
  4134 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  dividend        8    0[BANK0 ] long long 
  4137 ;;  divisor         8    8[BANK0 ] long long 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  quotient        8   40[COMRAM] long long 
  4140 ;;  sign            1   39[COMRAM] unsigned char 
  4141 ;;  counter         1   38[COMRAM] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  8    0[BANK0 ] long long 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:       26 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 13
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_dtoa
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text16
  4166  001C56                     __ptext16:
  4167                           	callstack 0
  4168  001C56                     ___aodiv:
  4169                           	callstack 11
  4170  001C56  0E00               	movlw	0
  4171  001C58  6E28               	movwf	___aodiv@sign^0,c
  4172  001C5A  0100               	movlb	0	; () banked
  4173  001C5C  BF8F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4174  001C5E  EF35  F00E         	goto	u5060
  4175  001C62  EF33  F00E         	goto	u5061
  4176  001C66                     u5061:
  4177  001C66  EF47  F00E         	goto	l8144
  4178  001C6A                     u5060:
  4179  001C6A                     
  4180                           ; BSR set to: 0
  4181  001C6A  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4182  001C6C  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4183  001C6E  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4184  001C70  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4185  001C72  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4186  001C74  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4187  001C76  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4188  001C78  6D88               	negf	___aodiv@divisor& (0+255),b
  4189  001C7A  0E00               	movlw	0
  4190  001C7C  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4191  001C7E  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4192  001C80  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4193  001C82  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4194  001C84  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4195  001C86  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4196  001C88  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4197  001C8A                     
  4198                           ; BSR set to: 0
  4199  001C8A  0E01               	movlw	1
  4200  001C8C  6E28               	movwf	___aodiv@sign^0,c
  4201  001C8E                     l8144:
  4202                           
  4203                           ; BSR set to: 0
  4204  001C8E  BF87               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4205  001C90  EF4E  F00E         	goto	u5070
  4206  001C94  EF4C  F00E         	goto	u5071
  4207  001C98                     u5071:
  4208  001C98  EF60  F00E         	goto	l8150
  4209  001C9C                     u5070:
  4210  001C9C                     
  4211                           ; BSR set to: 0
  4212  001C9C  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4213  001C9E  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4214  001CA0  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4215  001CA2  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4216  001CA4  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4217  001CA6  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4218  001CA8  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4219  001CAA  6D80               	negf	___aodiv@dividend& (0+255),b
  4220  001CAC  0E00               	movlw	0
  4221  001CAE  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4222  001CB0  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4223  001CB2  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4224  001CB4  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4225  001CB6  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4226  001CB8  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4227  001CBA  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4228  001CBC                     
  4229                           ; BSR set to: 0
  4230  001CBC  0E01               	movlw	1
  4231  001CBE  1A28               	xorwf	___aodiv@sign^0,f,c
  4232  001CC0                     l8150:
  4233                           
  4234                           ; BSR set to: 0
  4235  001CC0  EE20  F029         	lfsr	2,___aodiv@quotient
  4236  001CC4  0E07               	movlw	7
  4237  001CC6                     u5081:
  4238  001CC6  6ADE               	clrf	postinc2,c
  4239  001CC8  06E8               	decf	wreg,f,c
  4240  001CCA  E2FD               	bc	u5081
  4241  001CCC                     
  4242                           ; BSR set to: 0
  4243  001CCC  5188               	movf	___aodiv@divisor& (0+255),w,b
  4244  001CCE  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4245  001CD0  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4246  001CD2  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4247  001CD4  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4248  001CD6  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4249  001CD8  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4250  001CDA  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4251  001CDC  B4D8               	btfsc	status,2,c
  4252  001CDE  EF73  F00E         	goto	u5091
  4253  001CE2  EF75  F00E         	goto	u5090
  4254  001CE6                     u5091:
  4255  001CE6  EFC7  F00E         	goto	l8172
  4256  001CEA                     u5090:
  4257  001CEA                     
  4258                           ; BSR set to: 0
  4259  001CEA  0E01               	movlw	1
  4260  001CEC  6E27               	movwf	___aodiv@counter^0,c
  4261  001CEE  EF83  F00E         	goto	l8158
  4262  001CF2                     l8156:
  4263                           
  4264                           ; BSR set to: 0
  4265  001CF2  90D8               	bcf	status,0,c
  4266  001CF4  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  4267  001CF6  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4268  001CF8  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4269  001CFA  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4270  001CFC  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4271  001CFE  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4272  001D00  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4273  001D02  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4274  001D04  2A27               	incf	___aodiv@counter^0,f,c
  4275  001D06                     l8158:
  4276                           
  4277                           ; BSR set to: 0
  4278  001D06  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4279  001D08  EF88  F00E         	goto	u5101
  4280  001D0C  EF8A  F00E         	goto	u5100
  4281  001D10                     u5101:
  4282  001D10  EF79  F00E         	goto	l8156
  4283  001D14                     u5100:
  4284  001D14                     l8160:
  4285                           
  4286                           ; BSR set to: 0
  4287  001D14  90D8               	bcf	status,0,c
  4288  001D16  3629               	rlcf	___aodiv@quotient^0,f,c
  4289  001D18  362A               	rlcf	(___aodiv@quotient+1)^0,f,c
  4290  001D1A  362B               	rlcf	(___aodiv@quotient+2)^0,f,c
  4291  001D1C  362C               	rlcf	(___aodiv@quotient+3)^0,f,c
  4292  001D1E  362D               	rlcf	(___aodiv@quotient+4)^0,f,c
  4293  001D20  362E               	rlcf	(___aodiv@quotient+5)^0,f,c
  4294  001D22  362F               	rlcf	(___aodiv@quotient+6)^0,f,c
  4295  001D24  3630               	rlcf	(___aodiv@quotient+7)^0,f,c
  4296  001D26                     
  4297                           ; BSR set to: 0
  4298  001D26  5188               	movf	___aodiv@divisor& (0+255),w,b
  4299  001D28  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  4300  001D2A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4301  001D2C  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4302  001D2E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4303  001D30  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4304  001D32  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4305  001D34  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4306  001D36  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4307  001D38  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4308  001D3A  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4309  001D3C  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4310  001D3E  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4311  001D40  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4312  001D42  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4313  001D44  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4314  001D46  A0D8               	btfss	status,0,c
  4315  001D48  EFA8  F00E         	goto	u5111
  4316  001D4C  EFAA  F00E         	goto	u5110
  4317  001D50                     u5111:
  4318  001D50  EFBB  F00E         	goto	l8168
  4319  001D54                     u5110:
  4320  001D54                     
  4321                           ; BSR set to: 0
  4322  001D54  5188               	movf	___aodiv@divisor& (0+255),w,b
  4323  001D56  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  4324  001D58  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4325  001D5A  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4326  001D5C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4327  001D5E  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4328  001D60  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4329  001D62  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4330  001D64  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4331  001D66  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4332  001D68  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4333  001D6A  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4334  001D6C  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4335  001D6E  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4336  001D70  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4337  001D72  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4338  001D74                     
  4339                           ; BSR set to: 0
  4340  001D74  8029               	bsf	___aodiv@quotient^0,0,c
  4341  001D76                     l8168:
  4342                           
  4343                           ; BSR set to: 0
  4344  001D76  90D8               	bcf	status,0,c
  4345  001D78  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4346  001D7A  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4347  001D7C  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4348  001D7E  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4349  001D80  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4350  001D82  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4351  001D84  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4352  001D86  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  4353  001D88                     
  4354                           ; BSR set to: 0
  4355  001D88  2E27               	decfsz	___aodiv@counter^0,f,c
  4356  001D8A  EF8A  F00E         	goto	l8160
  4357  001D8E                     l8172:
  4358                           
  4359                           ; BSR set to: 0
  4360  001D8E  5028               	movf	___aodiv@sign^0,w,c
  4361  001D90  B4D8               	btfsc	status,2,c
  4362  001D92  EFCD  F00E         	goto	u5121
  4363  001D96  EFCF  F00E         	goto	u5120
  4364  001D9A                     u5121:
  4365  001D9A  EFDF  F00E         	goto	l8176
  4366  001D9E                     u5120:
  4367  001D9E                     
  4368                           ; BSR set to: 0
  4369  001D9E  1E30               	comf	(___aodiv@quotient+7)^0,f,c
  4370  001DA0  1E2F               	comf	(___aodiv@quotient+6)^0,f,c
  4371  001DA2  1E2E               	comf	(___aodiv@quotient+5)^0,f,c
  4372  001DA4  1E2D               	comf	(___aodiv@quotient+4)^0,f,c
  4373  001DA6  1E2C               	comf	(___aodiv@quotient+3)^0,f,c
  4374  001DA8  1E2B               	comf	(___aodiv@quotient+2)^0,f,c
  4375  001DAA  1E2A               	comf	(___aodiv@quotient+1)^0,f,c
  4376  001DAC  6C29               	negf	___aodiv@quotient^0,c
  4377  001DAE  0E00               	movlw	0
  4378  001DB0  222A               	addwfc	(___aodiv@quotient+1)^0,f,c
  4379  001DB2  222B               	addwfc	(___aodiv@quotient+2)^0,f,c
  4380  001DB4  222C               	addwfc	(___aodiv@quotient+3)^0,f,c
  4381  001DB6  222D               	addwfc	(___aodiv@quotient+4)^0,f,c
  4382  001DB8  222E               	addwfc	(___aodiv@quotient+5)^0,f,c
  4383  001DBA  222F               	addwfc	(___aodiv@quotient+6)^0,f,c
  4384  001DBC  2230               	addwfc	(___aodiv@quotient+7)^0,f,c
  4385  001DBE                     l8176:
  4386                           
  4387                           ; BSR set to: 0
  4388  001DBE  C029  F080         	movff	___aodiv@quotient,?___aodiv
  4389  001DC2  C02A  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  4390  001DC6  C02B  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  4391  001DCA  C02C  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  4392  001DCE  C02D  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  4393  001DD2  C02E  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  4394  001DD6  C02F  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  4395  001DDA  C030  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  4396  001DDE                     
  4397                           ; BSR set to: 0
  4398  001DDE  0012               	return		;funcret
  4399  001DE0                     __end_of___aodiv:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function _memset *****************
  4403 ;; Defined at:
  4404 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  dest            2   38[COMRAM] PTR void 
  4407 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  4408 ;;  c               2   40[COMRAM] int 
  4409 ;;  n               2   42[COMRAM] unsigned int 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  s               2    2[BANK0 ] PTR unsigned char 
  4412 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  4413 ;;  k               2    0[BANK0 ] unsigned int 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  2   38[COMRAM] PTR void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:       12 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 13
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_convert_uint8_to_string
  4434 ;;		_convert_uint16_to_string
  4435 ;;		_convert_uint32_to_string
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text17
  4440  001DE0                     __ptext17:
  4441                           	callstack 0
  4442  001DE0                     _memset:
  4443                           	callstack 15
  4444  001DE0  C027  F082         	movff	memset@dest,memset@s
  4445  001DE4  C028  F083         	movff	memset@dest+1,memset@s+1
  4446  001DE8  502B               	movf	memset@n^0,w,c
  4447  001DEA  102C               	iorwf	(memset@n+1)^0,w,c
  4448  001DEC  A4D8               	btfss	status,2,c
  4449  001DEE  EFFB  F00E         	goto	u5861
  4450  001DF2  EFFD  F00E         	goto	u5860
  4451  001DF6                     u5861:
  4452  001DF6  EFFF  F00E         	goto	l8744
  4453  001DFA                     u5860:
  4454  001DFA  EFAB  F00F         	goto	l1745
  4455  001DFE                     l8744:
  4456  001DFE  C082  FFD9         	movff	memset@s,fsr2l
  4457  001E02  C083  FFDA         	movff	memset@s+1,fsr2h
  4458  001E06  C029  FFDF         	movff	memset@c,indf2
  4459  001E0A  502B               	movf	memset@n^0,w,c
  4460  001E0C  0100               	movlb	0	; () banked
  4461  001E0E  2582               	addwf	memset@s& (0+255),w,b
  4462  001E10  6E2D               	movwf	??_memset^0,c
  4463  001E12  502C               	movf	(memset@n+1)^0,w,c
  4464  001E14  2183               	addwfc	(memset@s+1)& (0+255),w,b
  4465  001E16  6E2E               	movwf	(??_memset+1)^0,c
  4466  001E18  0EFF               	movlw	255
  4467  001E1A  242D               	addwf	??_memset^0,w,c
  4468  001E1C  6ED9               	movwf	fsr2l,c
  4469  001E1E  0EFF               	movlw	255
  4470  001E20  202E               	addwfc	(??_memset+1)^0,w,c
  4471  001E22  6EDA               	movwf	fsr2h,c
  4472  001E24  C029  FFDF         	movff	memset@c,indf2
  4473  001E28  502C               	movf	(memset@n+1)^0,w,c
  4474  001E2A  E107               	bnz	u5871
  4475  001E2C  0E03               	movlw	3
  4476  001E2E  5C2B               	subwf	memset@n^0,w,c
  4477  001E30  B0D8               	btfsc	status,0,c
  4478  001E32  EF1D  F00F         	goto	u5871
  4479  001E36  EF1F  F00F         	goto	u5870
  4480  001E3A                     u5871:
  4481  001E3A  EF21  F00F         	goto	l8750
  4482  001E3E                     u5870:
  4483  001E3E  EFAB  F00F         	goto	l1745
  4484  001E42                     l8750:
  4485                           
  4486                           ; BSR set to: 0
  4487  001E42  EE20 F001          	lfsr	2,1
  4488  001E46  5182               	movf	memset@s& (0+255),w,b
  4489  001E48  26D9               	addwf	fsr2l,f,c
  4490  001E4A  5183               	movf	(memset@s+1)& (0+255),w,b
  4491  001E4C  22DA               	addwfc	fsr2h,f,c
  4492  001E4E  C029  FFDF         	movff	memset@c,indf2
  4493  001E52  EE20 F002          	lfsr	2,2
  4494  001E56  5182               	movf	memset@s& (0+255),w,b
  4495  001E58  26D9               	addwf	fsr2l,f,c
  4496  001E5A  5183               	movf	(memset@s+1)& (0+255),w,b
  4497  001E5C  22DA               	addwfc	fsr2h,f,c
  4498  001E5E  C029  FFDF         	movff	memset@c,indf2
  4499  001E62  502B               	movf	memset@n^0,w,c
  4500  001E64  2582               	addwf	memset@s& (0+255),w,b
  4501  001E66  6E2D               	movwf	??_memset^0,c
  4502  001E68  502C               	movf	(memset@n+1)^0,w,c
  4503  001E6A  2183               	addwfc	(memset@s+1)& (0+255),w,b
  4504  001E6C  6E2E               	movwf	(??_memset+1)^0,c
  4505  001E6E  0EFE               	movlw	254
  4506  001E70  242D               	addwf	??_memset^0,w,c
  4507  001E72  6ED9               	movwf	fsr2l,c
  4508  001E74  0EFF               	movlw	255
  4509  001E76  202E               	addwfc	(??_memset+1)^0,w,c
  4510  001E78  6EDA               	movwf	fsr2h,c
  4511  001E7A  C029  FFDF         	movff	memset@c,indf2
  4512  001E7E  502B               	movf	memset@n^0,w,c
  4513  001E80  2582               	addwf	memset@s& (0+255),w,b
  4514  001E82  6E2D               	movwf	??_memset^0,c
  4515  001E84  502C               	movf	(memset@n+1)^0,w,c
  4516  001E86  2183               	addwfc	(memset@s+1)& (0+255),w,b
  4517  001E88  6E2E               	movwf	(??_memset+1)^0,c
  4518  001E8A  0EFD               	movlw	253
  4519  001E8C  242D               	addwf	??_memset^0,w,c
  4520  001E8E  6ED9               	movwf	fsr2l,c
  4521  001E90  0EFF               	movlw	255
  4522  001E92  202E               	addwfc	(??_memset+1)^0,w,c
  4523  001E94  6EDA               	movwf	fsr2h,c
  4524  001E96  C029  FFDF         	movff	memset@c,indf2
  4525  001E9A                     
  4526                           ; BSR set to: 0
  4527  001E9A  502C               	movf	(memset@n+1)^0,w,c
  4528  001E9C  E107               	bnz	u5881
  4529  001E9E  0E07               	movlw	7
  4530  001EA0  5C2B               	subwf	memset@n^0,w,c
  4531  001EA2  B0D8               	btfsc	status,0,c
  4532  001EA4  EF56  F00F         	goto	u5881
  4533  001EA8  EF58  F00F         	goto	u5880
  4534  001EAC                     u5881:
  4535  001EAC  EF5A  F00F         	goto	l8756
  4536  001EB0                     u5880:
  4537  001EB0  EFAB  F00F         	goto	l1745
  4538  001EB4                     l8756:
  4539                           
  4540                           ; BSR set to: 0
  4541  001EB4  EE20 F003          	lfsr	2,3
  4542  001EB8  5182               	movf	memset@s& (0+255),w,b
  4543  001EBA  26D9               	addwf	fsr2l,f,c
  4544  001EBC  5183               	movf	(memset@s+1)& (0+255),w,b
  4545  001EBE  22DA               	addwfc	fsr2h,f,c
  4546  001EC0  C029  FFDF         	movff	memset@c,indf2
  4547  001EC4  502B               	movf	memset@n^0,w,c
  4548  001EC6  2582               	addwf	memset@s& (0+255),w,b
  4549  001EC8  6E2D               	movwf	??_memset^0,c
  4550  001ECA  502C               	movf	(memset@n+1)^0,w,c
  4551  001ECC  2183               	addwfc	(memset@s+1)& (0+255),w,b
  4552  001ECE  6E2E               	movwf	(??_memset+1)^0,c
  4553  001ED0  0EFC               	movlw	252
  4554  001ED2  242D               	addwf	??_memset^0,w,c
  4555  001ED4  6ED9               	movwf	fsr2l,c
  4556  001ED6  0EFF               	movlw	255
  4557  001ED8  202E               	addwfc	(??_memset+1)^0,w,c
  4558  001EDA  6EDA               	movwf	fsr2h,c
  4559  001EDC  C029  FFDF         	movff	memset@c,indf2
  4560  001EE0                     
  4561                           ; BSR set to: 0
  4562  001EE0  502C               	movf	(memset@n+1)^0,w,c
  4563  001EE2  E107               	bnz	u5891
  4564  001EE4  0E09               	movlw	9
  4565  001EE6  5C2B               	subwf	memset@n^0,w,c
  4566  001EE8  B0D8               	btfsc	status,0,c
  4567  001EEA  EF79  F00F         	goto	u5891
  4568  001EEE  EF7B  F00F         	goto	u5890
  4569  001EF2                     u5891:
  4570  001EF2  EF7D  F00F         	goto	l8762
  4571  001EF6                     u5890:
  4572  001EF6  EFAB  F00F         	goto	l1745
  4573  001EFA                     l8762:
  4574                           
  4575                           ; BSR set to: 0
  4576  001EFA  C082  F02D         	movff	memset@s,??_memset
  4577  001EFE  C083  F02E         	movff	memset@s+1,??_memset+1
  4578  001F02  1E2D               	comf	??_memset^0,f,c
  4579  001F04  1E2E               	comf	(??_memset+1)^0,f,c
  4580  001F06  4A2D               	infsnz	??_memset^0,f,c
  4581  001F08  2A2E               	incf	(??_memset+1)^0,f,c
  4582  001F0A  0E03               	movlw	3
  4583  001F0C  142D               	andwf	??_memset^0,w,c
  4584  001F0E  6F80               	movwf	memset@k& (0+255),b
  4585  001F10  6B81               	clrf	(memset@k+1)& (0+255),b
  4586  001F12  5180               	movf	memset@k& (0+255),w,b
  4587  001F14  2782               	addwf	memset@s& (0+255),f,b
  4588  001F16  5181               	movf	(memset@k+1)& (0+255),w,b
  4589  001F18  2383               	addwfc	(memset@s+1)& (0+255),f,b
  4590  001F1A  5180               	movf	memset@k& (0+255),w,b
  4591  001F1C  5E2B               	subwf	memset@n^0,f,c
  4592  001F1E  5181               	movf	(memset@k+1)& (0+255),w,b
  4593  001F20  5A2C               	subwfb	(memset@n+1)^0,f,c
  4594  001F22  0EFC               	movlw	252
  4595  001F24  162B               	andwf	memset@n^0,f,c
  4596  001F26  0EFF               	movlw	255
  4597  001F28  162C               	andwf	(memset@n+1)^0,f,c
  4598  001F2A  EFA2  F00F         	goto	l8770
  4599  001F2E                     l8764:
  4600                           
  4601                           ; BSR set to: 0
  4602  001F2E  C082  FFD9         	movff	memset@s,fsr2l
  4603  001F32  C083  FFDA         	movff	memset@s+1,fsr2h
  4604  001F36  C029  FFDF         	movff	memset@c,indf2
  4605  001F3A                     
  4606                           ; BSR set to: 0
  4607  001F3A  062B               	decf	memset@n^0,f,c
  4608  001F3C  A0D8               	btfss	status,0,c
  4609  001F3E  062C               	decf	(memset@n+1)^0,f,c
  4610  001F40                     
  4611                           ; BSR set to: 0
  4612  001F40  4B82               	infsnz	memset@s& (0+255),f,b
  4613  001F42  2B83               	incf	(memset@s+1)& (0+255),f,b
  4614  001F44                     l8770:
  4615                           
  4616                           ; BSR set to: 0
  4617  001F44  502B               	movf	memset@n^0,w,c
  4618  001F46  102C               	iorwf	(memset@n+1)^0,w,c
  4619  001F48  A4D8               	btfss	status,2,c
  4620  001F4A  EFA9  F00F         	goto	u5901
  4621  001F4E  EFAB  F00F         	goto	u5900
  4622  001F52                     u5901:
  4623  001F52  EF97  F00F         	goto	l8764
  4624  001F56                     u5900:
  4625  001F56                     l1745:
  4626  001F56  0012               	return		;funcret
  4627  001F58                     __end_of_memset:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _lcd_send_char_data_pos *****************
  4631 ;; Defined at:
  4632 ;;		line 151 in file "ECUAL/LCD/lcd.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  lcd             2   23[BANK0 ] PTR struct .
  4635 ;;		 -> lcd(6), 
  4636 ;;  row             1   25[BANK0 ] unsigned char 
  4637 ;;  column          1   26[BANK0 ] unsigned char 
  4638 ;;  data            1   27[BANK0 ] unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  ret             1   30[BANK0 ] unsigned char 
  4641 ;;  lcd_ret         1   29[BANK0 ] unsigned char 
  4642 ;;  gpio_ret        1   28[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        8 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; Hardware stack levels required when called: 17
  4659 ;; This function calls:
  4660 ;;		_lcd_send_char_data
  4661 ;;		_lcd_set_curser
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;;		_lcd_send_custom_char
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text18
  4669  00372A                     __ptext18:
  4670                           	callstack 0
  4671  00372A                     _lcd_send_char_data_pos:
  4672                           	callstack 13
  4673  00372A                     
  4674                           ;ECUAL/LCD/lcd.c: 154:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4675  00372A  0E00               	movlw	0
  4676  00372C  0100               	movlb	0	; () banked
  4677  00372E  6F9C               	movwf	lcd_send_char_data_pos@gpio_ret& (0+255),b
  4678                           
  4679                           ;ECUAL/LCD/lcd.c: 155:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  4680  003730  0E00               	movlw	0
  4681  003732  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  4682  003734                     
  4683                           ; BSR set to: 0
  4684                           ;ECUAL/LCD/lcd.c: 156:     if(((void*)0)==lcd || row>4 || column>20){
  4685  003734  5197               	movf	lcd_send_char_data_pos@lcd& (0+255),w,b
  4686  003736  1198               	iorwf	(lcd_send_char_data_pos@lcd+1)& (0+255),w,b
  4687  003738  B4D8               	btfsc	status,2,c
  4688  00373A  EFA1  F01B         	goto	u6211
  4689  00373E  EFA3  F01B         	goto	u6210
  4690  003742                     u6211:
  4691  003742  EFB3  F01B         	goto	l9176
  4692  003746                     u6210:
  4693  003746                     
  4694                           ; BSR set to: 0
  4695  003746  0E05               	movlw	5
  4696  003748  6199               	cpfslt	lcd_send_char_data_pos@row& (0+255),b
  4697  00374A  EFA9  F01B         	goto	u6221
  4698  00374E  EFAB  F01B         	goto	u6220
  4699  003752                     u6221:
  4700  003752  EFB3  F01B         	goto	l9176
  4701  003756                     u6220:
  4702  003756                     
  4703                           ; BSR set to: 0
  4704  003756  0E14               	movlw	20
  4705  003758  659A               	cpfsgt	lcd_send_char_data_pos@column& (0+255),b
  4706  00375A  EFB1  F01B         	goto	u6231
  4707  00375E  EFB3  F01B         	goto	u6230
  4708  003762                     u6231:
  4709  003762  EFB7  F01B         	goto	l9178
  4710  003766                     u6230:
  4711  003766                     l9176:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;ECUAL/LCD/lcd.c: 157:         ret=(Std_ReturnType)0x00;
  4715  003766  0E00               	movlw	0
  4716  003768  6F9E               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  4717                           
  4718                           ;ECUAL/LCD/lcd.c: 158:     }
  4719  00376A  EFCF  F01B         	goto	l9182
  4720  00376E                     l9178:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;ECUAL/LCD/lcd.c: 160:         lcd_ret=lcd_set_curser(lcd, row, column);
  4724  00376E  C097  F08F         	movff	lcd_send_char_data_pos@lcd,lcd_set_curser@lcd
  4725  003772  C098  F090         	movff	lcd_send_char_data_pos@lcd+1,lcd_set_curser@lcd+1
  4726  003776  C099  F091         	movff	lcd_send_char_data_pos@row,lcd_set_curser@row
  4727  00377A  C09A  F092         	movff	lcd_send_char_data_pos@column,lcd_set_curser@column
  4728  00377E  EC56  F017         	call	_lcd_set_curser	;wreg free
  4729  003782  0100               	movlb	0	; () banked
  4730  003784  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  4731                           
  4732                           ;ECUAL/LCD/lcd.c: 161:         lcd_ret=lcd_send_char_data(lcd, data);
  4733  003786  C097  F089         	movff	lcd_send_char_data_pos@lcd,lcd_send_char_data@lcd
  4734  00378A  C098  F08A         	movff	lcd_send_char_data_pos@lcd+1,lcd_send_char_data@lcd+1
  4735  00378E  C09B  F08B         	movff	lcd_send_char_data_pos@data,lcd_send_char_data@data
  4736  003792  EC19  F019         	call	_lcd_send_char_data	;wreg free
  4737  003796  0100               	movlb	0	; () banked
  4738  003798  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  4739  00379A                     
  4740                           ; BSR set to: 0
  4741                           ;ECUAL/LCD/lcd.c: 162:         ret=(Std_ReturnType)0x01;
  4742  00379A  0E01               	movlw	1
  4743  00379C  6F9E               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  4744  00379E                     l9182:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;ECUAL/LCD/lcd.c: 165:     return ret;
  4748  00379E  519E               	movf	lcd_send_char_data_pos@ret& (0+255),w,b
  4749  0037A0                     
  4750                           ; BSR set to: 0
  4751  0037A0  0012               	return		;funcret
  4752  0037A2                     __end_of_lcd_send_char_data_pos:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _lcd_set_curser *****************
  4756 ;; Defined at:
  4757 ;;		line 400 in file "ECUAL/LCD/lcd.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  lcd             2   15[BANK0 ] PTR struct .
  4760 ;;		 -> lcd(6), 
  4761 ;;  row             1   17[BANK0 ] unsigned char 
  4762 ;;  column          1   18[BANK0 ] unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  lcd_ret         1   22[BANK0 ] unsigned char 
  4765 ;;  ret             1    0        unsigned char 
  4766 ;;  gpio_ret        1   21[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      unsigned char 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:        8 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 16
  4783 ;; This function calls:
  4784 ;;		_lcd_send_command
  4785 ;; This function is called by:
  4786 ;;		_lcd_send_char_data_pos
  4787 ;;		_lcd_send_string_pos
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text19
  4792  002EAC                     __ptext19:
  4793                           	callstack 0
  4794  002EAC                     _lcd_set_curser:
  4795                           	callstack 13
  4796  002EAC                     
  4797                           ;ECUAL/LCD/lcd.c: 403:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4798  002EAC  0E00               	movlw	0
  4799  002EAE  0100               	movlb	0	; () banked
  4800  002EB0  6F95               	movwf	lcd_set_curser@gpio_ret& (0+255),b
  4801                           
  4802                           ;ECUAL/LCD/lcd.c: 404:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  4803  002EB2  0E00               	movlw	0
  4804  002EB4  6F96               	movwf	lcd_set_curser@lcd_ret& (0+255),b
  4805  002EB6                     
  4806                           ; BSR set to: 0
  4807                           ;ECUAL/LCD/lcd.c: 405:  column--;
  4808  002EB6  0792               	decf	lcd_set_curser@column& (0+255),f,b
  4809                           
  4810                           ;ECUAL/LCD/lcd.c: 413:     switch(row){
  4811  002EB8  EF8A  F017         	goto	l8712
  4812  002EBC                     l8702:
  4813                           
  4814                           ; BSR set to: 0
  4815  002EBC  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  4816  002EC0  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  4817  002EC4  5192               	movf	lcd_set_curser@column& (0+255),w,b
  4818  002EC6  0F80               	addlw	128
  4819  002EC8  6F8B               	movwf	lcd_send_command@command& (0+255),b
  4820  002ECA  EC5D  F019         	call	_lcd_send_command	;wreg free
  4821  002ECE  EFA7  F017         	goto	l8714
  4822  002ED2                     l8704:
  4823                           
  4824                           ; BSR set to: 0
  4825  002ED2  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  4826  002ED6  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  4827  002EDA  5192               	movf	lcd_set_curser@column& (0+255),w,b
  4828  002EDC  0FC0               	addlw	192
  4829  002EDE  6F8B               	movwf	lcd_send_command@command& (0+255),b
  4830  002EE0  EC5D  F019         	call	_lcd_send_command	;wreg free
  4831  002EE4  EFA7  F017         	goto	l8714
  4832  002EE8                     l8706:
  4833                           
  4834                           ; BSR set to: 0
  4835  002EE8  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  4836  002EEC  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  4837  002EF0  5192               	movf	lcd_set_curser@column& (0+255),w,b
  4838  002EF2  0F94               	addlw	148
  4839  002EF4  6F8B               	movwf	lcd_send_command@command& (0+255),b
  4840  002EF6  EC5D  F019         	call	_lcd_send_command	;wreg free
  4841  002EFA  EFA7  F017         	goto	l8714
  4842  002EFE                     l8708:
  4843                           
  4844                           ; BSR set to: 0
  4845  002EFE  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  4846  002F02  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  4847  002F06  5192               	movf	lcd_set_curser@column& (0+255),w,b
  4848  002F08  0FD4               	addlw	212
  4849  002F0A  6F8B               	movwf	lcd_send_command@command& (0+255),b
  4850  002F0C  EC5D  F019         	call	_lcd_send_command	;wreg free
  4851  002F10  EFA7  F017         	goto	l8714
  4852  002F14                     l8712:
  4853                           
  4854                           ; BSR set to: 0
  4855  002F14  5191               	movf	lcd_set_curser@row& (0+255),w,b
  4856  002F16  6F93               	movwf	??_lcd_set_curser& (0+255),b
  4857  002F18  6B94               	clrf	(??_lcd_set_curser+1)& (0+255),b
  4858                           
  4859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4860                           ; Switch size 1, requested type "simple"
  4861                           ; Number of cases is 1, Range of values is 0 to 0
  4862                           ; switch strategies available:
  4863                           ; Name         Instructions Cycles
  4864                           ; simple_byte            4     3 (average)
  4865                           ;	Chosen strategy is simple_byte
  4866  002F1A  5194               	movf	(??_lcd_set_curser+1)& (0+255),w,b
  4867  002F1C  0A00               	xorlw	0	; case 0
  4868  002F1E  B4D8               	btfsc	status,2,c
  4869  002F20  EF94  F017         	goto	l9958
  4870  002F24  EFA7  F017         	goto	l8714
  4871  002F28                     l9958:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 4, Range of values is 1 to 4
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte           13     7 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  002F28  5193               	movf	??_lcd_set_curser& (0+255),w,b
  4881  002F2A  0A01               	xorlw	1	; case 1
  4882  002F2C  B4D8               	btfsc	status,2,c
  4883  002F2E  EF5E  F017         	goto	l8702
  4884  002F32  0A03               	xorlw	3	; case 2
  4885  002F34  B4D8               	btfsc	status,2,c
  4886  002F36  EF69  F017         	goto	l8704
  4887  002F3A  0A01               	xorlw	1	; case 3
  4888  002F3C  B4D8               	btfsc	status,2,c
  4889  002F3E  EF74  F017         	goto	l8706
  4890  002F42  0A07               	xorlw	7	; case 4
  4891  002F44  B4D8               	btfsc	status,2,c
  4892  002F46  EF7F  F017         	goto	l8708
  4893  002F4A  EFA7  F017         	goto	l8714
  4894  002F4E                     l8714:
  4895                           
  4896                           ;ECUAL/LCD/lcd.c: 421:     return ret;
  4897  002F4E  0E00               	movlw	0
  4898  002F50  0012               	return		;funcret
  4899  002F52                     __end_of_lcd_set_curser:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function _lcd_send_char_data *****************
  4903 ;; Defined at:
  4904 ;;		line 115 in file "ECUAL/LCD/lcd.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  lcd             2    9[BANK0 ] PTR struct .
  4907 ;;		 -> lcd(6), 
  4908 ;;  data            1   11[BANK0 ] unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  ret             1   14[BANK0 ] unsigned char 
  4911 ;;  lcd_ret         1   13[BANK0 ] unsigned char 
  4912 ;;  gpio_ret        1   12[BANK0 ] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      unsigned char 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        6 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 15
  4929 ;; This function calls:
  4930 ;;		_gpio_pin_logic_write
  4931 ;;		_lcd_send_enable
  4932 ;;		_lcd_send_nbits
  4933 ;; This function is called by:
  4934 ;;		_lcd_send_char_data_pos
  4935 ;;		_lcd_send_string
  4936 ;;		_lcd_send_custom_char
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text20
  4941  003232                     __ptext20:
  4942                           	callstack 0
  4943  003232                     _lcd_send_char_data:
  4944                           	callstack 13
  4945  003232                     
  4946                           ;ECUAL/LCD/lcd.c: 118:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4947  003232  0E00               	movlw	0
  4948  003234  0100               	movlb	0	; () banked
  4949  003236  6F8C               	movwf	lcd_send_char_data@gpio_ret& (0+255),b
  4950                           
  4951                           ;ECUAL/LCD/lcd.c: 119:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  4952  003238  0E00               	movlw	0
  4953  00323A  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  4954  00323C                     
  4955                           ; BSR set to: 0
  4956                           ;ECUAL/LCD/lcd.c: 120:     if(((void*)0)==lcd){
  4957  00323C  5189               	movf	lcd_send_char_data@lcd& (0+255),w,b
  4958  00323E  118A               	iorwf	(lcd_send_char_data@lcd+1)& (0+255),w,b
  4959  003240  A4D8               	btfss	status,2,c
  4960  003242  EF25  F019         	goto	u5671
  4961  003246  EF27  F019         	goto	u5670
  4962  00324A                     u5671:
  4963  00324A  EF2B  F019         	goto	l8556
  4964  00324E                     u5670:
  4965  00324E                     
  4966                           ; BSR set to: 0
  4967                           ;ECUAL/LCD/lcd.c: 121:         ret=(Std_ReturnType)0x00;
  4968  00324E  0E00               	movlw	0
  4969  003250  6F8E               	movwf	lcd_send_char_data@ret& (0+255),b
  4970                           
  4971                           ;ECUAL/LCD/lcd.c: 122:     }
  4972  003252  EF5B  F019         	goto	l8560
  4973  003256                     l8556:
  4974                           
  4975                           ; BSR set to: 0
  4976  003256  C089  F027         	movff	lcd_send_char_data@lcd,gpio_pin_logic_write@pin
  4977  00325A  C08A  F028         	movff	lcd_send_char_data@lcd+1,gpio_pin_logic_write@pin+1
  4978  00325E  0E01               	movlw	1
  4979  003260  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4980  003262  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  4981                           
  4982                           ;ECUAL/LCD/lcd.c: 126:         lcd_ret=lcd_send_nbits(lcd,data>>4);
  4983  003266  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  4984  00326A  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_nbits@lcd+1
  4985  00326E  0100               	movlb	0	; () banked
  4986  003270  398B               	swapf	lcd_send_char_data@data& (0+255),w,b
  4987  003272  0B0F               	andlw	15
  4988  003274  6F82               	movwf	lcd_send_nbits@data_or_command& (0+255),b
  4989  003276  EC63  F01E         	call	_lcd_send_nbits	;wreg free
  4990  00327A  0100               	movlb	0	; () banked
  4991  00327C  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  4992                           
  4993                           ;ECUAL/LCD/lcd.c: 127:         lcd_ret=lcd_send_enable(lcd);
  4994  00327E  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  4995  003282  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  4996  003286  EC0E  F020         	call	_lcd_send_enable	;wreg free
  4997  00328A  0100               	movlb	0	; () banked
  4998  00328C  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  4999                           
  5000                           ;ECUAL/LCD/lcd.c: 128:         lcd_ret=lcd_send_nbits(lcd,data);
  5001  00328E  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  5002  003292  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_nbits@lcd+1
  5003  003296  C08B  F082         	movff	lcd_send_char_data@data,lcd_send_nbits@data_or_command
  5004  00329A  EC63  F01E         	call	_lcd_send_nbits	;wreg free
  5005  00329E  0100               	movlb	0	; () banked
  5006  0032A0  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5007                           
  5008                           ;ECUAL/LCD/lcd.c: 129:         lcd_ret=lcd_send_enable(lcd);
  5009  0032A2  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  5010  0032A6  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  5011  0032AA  EC0E  F020         	call	_lcd_send_enable	;wreg free
  5012  0032AE  0100               	movlb	0	; () banked
  5013  0032B0  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5014  0032B2                     
  5015                           ; BSR set to: 0
  5016                           ;ECUAL/LCD/lcd.c: 136:         ret=(Std_ReturnType)0x01;
  5017  0032B2  0E01               	movlw	1
  5018  0032B4  6F8E               	movwf	lcd_send_char_data@ret& (0+255),b
  5019  0032B6                     l8560:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;ECUAL/LCD/lcd.c: 139:     return ret;
  5023  0032B6  518E               	movf	lcd_send_char_data@ret& (0+255),w,b
  5024  0032B8                     
  5025                           ; BSR set to: 0
  5026  0032B8  0012               	return		;funcret
  5027  0032BA                     __end_of_lcd_send_char_data:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _convert_BCD_to_int *****************
  5031 ;; Defined at:
  5032 ;;		line 21 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  BCD_num         1    wreg     unsigned char 
  5035 ;;  int_num         2   38[COMRAM] PTR unsigned char 
  5036 ;;		 -> year_counter(1), month_counter(1), day_counter(1), hours_counter(1), 
  5037 ;;		 -> minutes_counter(1), seconds_counter(1), 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  BCD_num         1   42[COMRAM] unsigned char 
  5040 ;;  ones            1   44[COMRAM] unsigned char 
  5041 ;;  tens            1   43[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;Total ram usage:        7 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 13
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text21
  5066  001AC4                     __ptext21:
  5067                           	callstack 0
  5068  001AC4                     _convert_BCD_to_int:
  5069                           	callstack 17
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;incstack = 0
  5073                           ;convert_BCD_to_int@BCD_num stored from wreg
  5074  001AC4  6E2B               	movwf	convert_BCD_to_int@BCD_num^0,c
  5075  001AC6                     
  5076                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 22:     uint8 tens,ones;;ECUAL/RealTim
      +                          eClockDS1307/RealTimeClockDS1307.c: 23:     switch(BCD_num&0x0f){
  5077  001AC6  EF8D  F00D         	goto	l6654
  5078  001ACA                     l6632:
  5079  001ACA  0E00               	movlw	0
  5080  001ACC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5081  001ACE  EFEB  F00D         	goto	l6678
  5082  001AD2                     l6634:
  5083  001AD2  0E01               	movlw	1
  5084  001AD4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5085  001AD6  EFEB  F00D         	goto	l6678
  5086  001ADA                     l6636:
  5087  001ADA  0E02               	movlw	2
  5088  001ADC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5089  001ADE  EFEB  F00D         	goto	l6678
  5090  001AE2                     l6638:
  5091  001AE2  0E03               	movlw	3
  5092  001AE4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5093  001AE6  EFEB  F00D         	goto	l6678
  5094  001AEA                     l6640:
  5095  001AEA  0E04               	movlw	4
  5096  001AEC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5097  001AEE  EFEB  F00D         	goto	l6678
  5098  001AF2                     l6642:
  5099  001AF2  0E05               	movlw	5
  5100  001AF4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5101  001AF6  EFEB  F00D         	goto	l6678
  5102  001AFA                     l6644:
  5103  001AFA  0E06               	movlw	6
  5104  001AFC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5105  001AFE  EFEB  F00D         	goto	l6678
  5106  001B02                     l6646:
  5107  001B02  0E07               	movlw	7
  5108  001B04  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5109  001B06  EFEB  F00D         	goto	l6678
  5110  001B0A                     l6648:
  5111  001B0A  0E08               	movlw	8
  5112  001B0C  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5113  001B0E  EFEB  F00D         	goto	l6678
  5114  001B12                     l6650:
  5115  001B12  0E09               	movlw	9
  5116  001B14  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5117  001B16  EFEB  F00D         	goto	l6678
  5118  001B1A                     l6654:
  5119  001B1A  502B               	movf	convert_BCD_to_int@BCD_num^0,w,c
  5120  001B1C  0B0F               	andlw	15
  5121  001B1E  6E29               	movwf	??_convert_BCD_to_int^0,c
  5122  001B20  6A2A               	clrf	(??_convert_BCD_to_int+1)^0,c
  5123                           
  5124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5125                           ; Switch size 1, requested type "simple"
  5126                           ; Number of cases is 1, Range of values is 0 to 0
  5127                           ; switch strategies available:
  5128                           ; Name         Instructions Cycles
  5129                           ; simple_byte            4     3 (average)
  5130                           ;	Chosen strategy is simple_byte
  5131  001B22  502A               	movf	(??_convert_BCD_to_int+1)^0,w,c
  5132  001B24  0A00               	xorlw	0	; case 0
  5133  001B26  B4D8               	btfsc	status,2,c
  5134  001B28  EF98  F00D         	goto	l9960
  5135  001B2C  EFEB  F00D         	goto	l6678
  5136  001B30                     l9960:
  5137                           
  5138                           ; Switch size 1, requested type "simple"
  5139                           ; Number of cases is 10, Range of values is 0 to 9
  5140                           ; switch strategies available:
  5141                           ; Name         Instructions Cycles
  5142                           ; simple_byte           31    16 (average)
  5143                           ;	Chosen strategy is simple_byte
  5144  001B30  5029               	movf	??_convert_BCD_to_int^0,w,c
  5145  001B32  0A00               	xorlw	0	; case 0
  5146  001B34  B4D8               	btfsc	status,2,c
  5147  001B36  EF65  F00D         	goto	l6632
  5148  001B3A  0A01               	xorlw	1	; case 1
  5149  001B3C  B4D8               	btfsc	status,2,c
  5150  001B3E  EF69  F00D         	goto	l6634
  5151  001B42  0A03               	xorlw	3	; case 2
  5152  001B44  B4D8               	btfsc	status,2,c
  5153  001B46  EF6D  F00D         	goto	l6636
  5154  001B4A  0A01               	xorlw	1	; case 3
  5155  001B4C  B4D8               	btfsc	status,2,c
  5156  001B4E  EF71  F00D         	goto	l6638
  5157  001B52  0A07               	xorlw	7	; case 4
  5158  001B54  B4D8               	btfsc	status,2,c
  5159  001B56  EF75  F00D         	goto	l6640
  5160  001B5A  0A01               	xorlw	1	; case 5
  5161  001B5C  B4D8               	btfsc	status,2,c
  5162  001B5E  EF79  F00D         	goto	l6642
  5163  001B62  0A03               	xorlw	3	; case 6
  5164  001B64  B4D8               	btfsc	status,2,c
  5165  001B66  EF7D  F00D         	goto	l6644
  5166  001B6A  0A01               	xorlw	1	; case 7
  5167  001B6C  B4D8               	btfsc	status,2,c
  5168  001B6E  EF81  F00D         	goto	l6646
  5169  001B72  0A0F               	xorlw	15	; case 8
  5170  001B74  B4D8               	btfsc	status,2,c
  5171  001B76  EF85  F00D         	goto	l6648
  5172  001B7A  0A01               	xorlw	1	; case 9
  5173  001B7C  B4D8               	btfsc	status,2,c
  5174  001B7E  EF89  F00D         	goto	l6650
  5175  001B82  EFEB  F00D         	goto	l6678
  5176  001B86                     l6656:
  5177  001B86  0E00               	movlw	0
  5178  001B88  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5179  001B8A  EF21  F00E         	goto	l6680
  5180  001B8E                     l6658:
  5181  001B8E  0E01               	movlw	1
  5182  001B90  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5183  001B92  EF21  F00E         	goto	l6680
  5184  001B96                     l6660:
  5185  001B96  0E02               	movlw	2
  5186  001B98  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5187  001B9A  EF21  F00E         	goto	l6680
  5188  001B9E                     l6662:
  5189  001B9E  0E03               	movlw	3
  5190  001BA0  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5191  001BA2  EF21  F00E         	goto	l6680
  5192  001BA6                     l6664:
  5193  001BA6  0E04               	movlw	4
  5194  001BA8  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5195  001BAA  EF21  F00E         	goto	l6680
  5196  001BAE                     l6666:
  5197  001BAE  0E05               	movlw	5
  5198  001BB0  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5199  001BB2  EF21  F00E         	goto	l6680
  5200  001BB6                     l6668:
  5201  001BB6  0E06               	movlw	6
  5202  001BB8  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5203  001BBA  EF21  F00E         	goto	l6680
  5204  001BBE                     l6670:
  5205  001BBE  0E07               	movlw	7
  5206  001BC0  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5207  001BC2  EF21  F00E         	goto	l6680
  5208  001BC6                     l6672:
  5209  001BC6  0E08               	movlw	8
  5210  001BC8  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5211  001BCA  EF21  F00E         	goto	l6680
  5212  001BCE                     l6674:
  5213  001BCE  0E09               	movlw	9
  5214  001BD0  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5215  001BD2  EF21  F00E         	goto	l6680
  5216  001BD6                     l6678:
  5217  001BD6  382B               	swapf	convert_BCD_to_int@BCD_num^0,w,c
  5218  001BD8  0B0F               	andlw	15
  5219  001BDA  6E29               	movwf	??_convert_BCD_to_int^0,c
  5220  001BDC  6A2A               	clrf	(??_convert_BCD_to_int+1)^0,c
  5221                           
  5222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5223                           ; Switch size 1, requested type "simple"
  5224                           ; Number of cases is 1, Range of values is 0 to 0
  5225                           ; switch strategies available:
  5226                           ; Name         Instructions Cycles
  5227                           ; simple_byte            4     3 (average)
  5228                           ;	Chosen strategy is simple_byte
  5229  001BDE  502A               	movf	(??_convert_BCD_to_int+1)^0,w,c
  5230  001BE0  0A00               	xorlw	0	; case 0
  5231  001BE2  B4D8               	btfsc	status,2,c
  5232  001BE4  EFF6  F00D         	goto	l9962
  5233  001BE8  EF21  F00E         	goto	l6680
  5234  001BEC                     l9962:
  5235                           
  5236                           ; Switch size 1, requested type "simple"
  5237                           ; Number of cases is 10, Range of values is 0 to 9
  5238                           ; switch strategies available:
  5239                           ; Name         Instructions Cycles
  5240                           ; simple_byte           31    16 (average)
  5241                           ;	Chosen strategy is simple_byte
  5242  001BEC  5029               	movf	??_convert_BCD_to_int^0,w,c
  5243  001BEE  0A00               	xorlw	0	; case 0
  5244  001BF0  B4D8               	btfsc	status,2,c
  5245  001BF2  EFC3  F00D         	goto	l6656
  5246  001BF6  0A01               	xorlw	1	; case 1
  5247  001BF8  B4D8               	btfsc	status,2,c
  5248  001BFA  EFC7  F00D         	goto	l6658
  5249  001BFE  0A03               	xorlw	3	; case 2
  5250  001C00  B4D8               	btfsc	status,2,c
  5251  001C02  EFCB  F00D         	goto	l6660
  5252  001C06  0A01               	xorlw	1	; case 3
  5253  001C08  B4D8               	btfsc	status,2,c
  5254  001C0A  EFCF  F00D         	goto	l6662
  5255  001C0E  0A07               	xorlw	7	; case 4
  5256  001C10  B4D8               	btfsc	status,2,c
  5257  001C12  EFD3  F00D         	goto	l6664
  5258  001C16  0A01               	xorlw	1	; case 5
  5259  001C18  B4D8               	btfsc	status,2,c
  5260  001C1A  EFD7  F00D         	goto	l6666
  5261  001C1E  0A03               	xorlw	3	; case 6
  5262  001C20  B4D8               	btfsc	status,2,c
  5263  001C22  EFDB  F00D         	goto	l6668
  5264  001C26  0A01               	xorlw	1	; case 7
  5265  001C28  B4D8               	btfsc	status,2,c
  5266  001C2A  EFDF  F00D         	goto	l6670
  5267  001C2E  0A0F               	xorlw	15	; case 8
  5268  001C30  B4D8               	btfsc	status,2,c
  5269  001C32  EFE3  F00D         	goto	l6672
  5270  001C36  0A01               	xorlw	1	; case 9
  5271  001C38  B4D8               	btfsc	status,2,c
  5272  001C3A  EFE7  F00D         	goto	l6674
  5273  001C3E  EF21  F00E         	goto	l6680
  5274  001C42                     l6680:
  5275                           
  5276                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 47:     *int_num=tens*10+ones;
  5277  001C42  502C               	movf	convert_BCD_to_int@tens^0,w,c
  5278  001C44  0D0A               	mullw	10
  5279  001C46  50F3               	movf	243,w,c
  5280  001C48  242D               	addwf	convert_BCD_to_int@ones^0,w,c
  5281  001C4A  C027  FFD9         	movff	convert_BCD_to_int@int_num,fsr2l
  5282  001C4E  C028  FFDA         	movff	convert_BCD_to_int@int_num+1,fsr2h
  5283  001C52  6EDF               	movwf	indf2,c
  5284  001C54  0012               	return		;funcret
  5285  001C56                     __end_of_convert_BCD_to_int:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function __Initialize *****************
  5289 ;; Defined at:
  5290 ;;		line 31 in file "mcc_generated_files/init.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;		None
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;Total ram usage:        0 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 17
  5311 ;; This function calls:
  5312 ;;		_I2C_Initialize
  5313 ;;		_interrupt_INTx_init
  5314 ;;		_lcd_init
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text22
  5321  00419A                     __ptext22:
  5322                           	callstack 0
  5323  00419A                     __Initialize:
  5324                           	callstack 13
  5325  00419A                     
  5326                           ;mcc_generated_files/init.c: 33:     I2C_Initialize();
  5327  00419A  ECCD  F022         	call	_I2C_Initialize	;wreg free
  5328  00419E                     
  5329                           ;mcc_generated_files/init.c: 34:     lcd_init(&lcd);
  5330  00419E  0E50               	movlw	low _lcd
  5331  0041A0  0100               	movlb	0	; () banked
  5332  0041A2  6F8F               	movwf	lcd_init@lcd& (0+255),b
  5333  0041A4  0E00               	movlw	high _lcd
  5334  0041A6  6F90               	movwf	(lcd_init@lcd+1)& (0+255),b
  5335  0041A8  EC5F  F010         	call	_lcd_init	;wreg free
  5336  0041AC                     
  5337                           ;mcc_generated_files/init.c: 35:     interrupt_INTx_init(&MY_INT0);
  5338  0041AC  0EFA               	movlw	low _MY_INT0
  5339  0041AE  0100               	movlb	0	; () banked
  5340  0041B0  6F88               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  5341  0041B2  0E00               	movlw	high _MY_INT0
  5342  0041B4  6F89               	movwf	(interrupt_INTx_init@_interrupt+1)& (0+255),b
  5343  0041B6  ECDE  F01A         	call	_interrupt_INTx_init	;wreg free
  5344  0041BA                     
  5345                           ;mcc_generated_files/init.c: 36:     interrupt_INTx_init(&MY_INT1);
  5346  0041BA  0E44               	movlw	low _MY_INT1
  5347  0041BC  0100               	movlb	0	; () banked
  5348  0041BE  6F88               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  5349  0041C0  0E01               	movlw	high _MY_INT1
  5350  0041C2  6F89               	movwf	(interrupt_INTx_init@_interrupt+1)& (0+255),b
  5351  0041C4  ECDE  F01A         	call	_interrupt_INTx_init	;wreg free
  5352  0041C8  0012               	return		;funcret
  5353  0041CA                     __end_of__Initialize:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function _lcd_init *****************
  5357 ;; Defined at:
  5358 ;;		line 30 in file "ECUAL/LCD/lcd.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  lcd             2   15[BANK0 ] PTR struct .
  5361 ;;		 -> lcd(6), 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  lcd_ret         1   21[BANK0 ] unsigned char 
  5364 ;;  pins_counter    1   20[BANK0 ] unsigned char 
  5365 ;;  gpio_ret        1   19[BANK0 ] unsigned char 
  5366 ;;  ret             1    0        unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;Total ram usage:        7 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 16
  5383 ;; This function calls:
  5384 ;;		_gpio_pin_output_low_init
  5385 ;;		_lcd_send_command
  5386 ;; This function is called by:
  5387 ;;		__Initialize
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text23
  5392  0020BE                     __ptext23:
  5393                           	callstack 0
  5394  0020BE                     _lcd_init:
  5395                           	callstack 13
  5396  0020BE                     
  5397                           ;ECUAL/LCD/lcd.c: 33:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5398  0020BE  0E00               	movlw	0
  5399  0020C0  0100               	movlb	0	; () banked
  5400  0020C2  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  5401                           
  5402                           ;ECUAL/LCD/lcd.c: 34:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  5403  0020C4  0E00               	movlw	0
  5404  0020C6  6F95               	movwf	lcd_init@lcd_ret& (0+255),b
  5405  0020C8                     
  5406                           ; BSR set to: 0
  5407                           ;ECUAL/LCD/lcd.c: 35:     uint8 pins_counter;;ECUAL/LCD/lcd.c: 36:     if(((void*)0)==lc
      +                          d){
  5408  0020C8  518F               	movf	lcd_init@lcd& (0+255),w,b
  5409  0020CA  1190               	iorwf	(lcd_init@lcd+1)& (0+255),w,b
  5410  0020CC  A4D8               	btfss	status,2,c
  5411  0020CE  EF6B  F010         	goto	u6081
  5412  0020D2  EF6D  F010         	goto	u6080
  5413  0020D6                     u6081:
  5414  0020D6  EF6F  F010         	goto	l9044
  5415  0020DA                     u6080:
  5416  0020DA                     
  5417                           ; BSR set to: 0
  5418                           ;ECUAL/LCD/lcd.c: 38:     }
  5419  0020DA  EF0C  F011         	goto	l32
  5420  0020DE                     l9044:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;ECUAL/LCD/lcd.c: 40:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_en));
  5424  0020DE  0E01               	movlw	1
  5425  0020E0  258F               	addwf	lcd_init@lcd& (0+255),w,b
  5426  0020E2  6F80               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  5427  0020E4  0E00               	movlw	0
  5428  0020E6  2190               	addwfc	(lcd_init@lcd+1)& (0+255),w,b
  5429  0020E8  6F81               	movwf	(gpio_pin_output_low_init@pin+1)& (0+255),b
  5430  0020EA  EC0B  F01C         	call	_gpio_pin_output_low_init	;wreg free
  5431  0020EE  0100               	movlb	0	; () banked
  5432  0020F0  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  5433                           
  5434                           ;ECUAL/LCD/lcd.c: 41:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_rs));
  5435  0020F2  C08F  F080         	movff	lcd_init@lcd,gpio_pin_output_low_init@pin
  5436  0020F6  C090  F081         	movff	lcd_init@lcd+1,gpio_pin_output_low_init@pin+1
  5437  0020FA  EC0B  F01C         	call	_gpio_pin_output_low_init	;wreg free
  5438  0020FE  0100               	movlb	0	; () banked
  5439  002100  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  5440  002102                     
  5441                           ; BSR set to: 0
  5442                           ;ECUAL/LCD/lcd.c: 42:         for(pins_counter=0;pins_counter<n;pins_counter++){
  5443  002102  0E00               	movlw	0
  5444  002104  6F94               	movwf	lcd_init@pins_counter& (0+255),b
  5445  002106  EF95  F010         	goto	l9052
  5446  00210A                     l9048:
  5447                           
  5448                           ; BSR set to: 0
  5449  00210A  5194               	movf	lcd_init@pins_counter& (0+255),w,b
  5450  00210C  258F               	addwf	lcd_init@lcd& (0+255),w,b
  5451  00210E  6F91               	movwf	??_lcd_init& (0+255),b
  5452  002110  0E00               	movlw	0
  5453  002112  2190               	addwfc	(lcd_init@lcd+1)& (0+255),w,b
  5454  002114  6F92               	movwf	(??_lcd_init+1)& (0+255),b
  5455  002116  0E02               	movlw	2
  5456  002118  2591               	addwf	??_lcd_init& (0+255),w,b
  5457  00211A  6F80               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  5458  00211C  0E00               	movlw	0
  5459  00211E  2192               	addwfc	(??_lcd_init+1)& (0+255),w,b
  5460  002120  6F81               	movwf	(gpio_pin_output_low_init@pin+1)& (0+255),b
  5461  002122  EC0B  F01C         	call	_gpio_pin_output_low_init	;wreg free
  5462  002126                     
  5463                           ;ECUAL/LCD/lcd.c: 44:         }
  5464  002126  0100               	movlb	0	; () banked
  5465  002128  2B94               	incf	lcd_init@pins_counter& (0+255),f,b
  5466  00212A                     l9052:
  5467                           
  5468                           ; BSR set to: 0
  5469  00212A  0E03               	movlw	3
  5470  00212C  6594               	cpfsgt	lcd_init@pins_counter& (0+255),b
  5471  00212E  EF9B  F010         	goto	u6091
  5472  002132  EF9D  F010         	goto	u6090
  5473  002136                     u6091:
  5474  002136  EF85  F010         	goto	l9048
  5475  00213A                     u6090:
  5476  00213A                     
  5477                           ; BSR set to: 0
  5478                           ;ECUAL/LCD/lcd.c: 45:         _delay((unsigned long)((20)*(8000000/4000.0)));
  5479  00213A  0E34               	movlw	52
  5480  00213C  0100               	movlb	0	; () banked
  5481  00213E  6F91               	movwf	??_lcd_init& (0+255),b
  5482  002140  0EF1               	movlw	241
  5483  002142                     u6717:
  5484  002142  2EE8               	decfsz	wreg,f,c
  5485  002144  D7FE               	bra	u6717
  5486  002146  2F91               	decfsz	??_lcd_init& (0+255),f,b
  5487  002148  D7FC               	bra	u6717
  5488  00214A  D000               	nop2	
  5489  00214C  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5490  002150  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5491  002154  0E38               	movlw	56
  5492  002156  0100               	movlb	0	; () banked
  5493  002158  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5494  00215A  EC5D  F019         	call	_lcd_send_command	;wreg free
  5495  00215E                     
  5496                           ;ECUAL/LCD/lcd.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
  5497  00215E  0E0D               	movlw	13
  5498  002160  0100               	movlb	0	; () banked
  5499  002162  6F91               	movwf	??_lcd_init& (0+255),b
  5500  002164  0EFB               	movlw	251
  5501  002166                     u6727:
  5502  002166  2EE8               	decfsz	wreg,f,c
  5503  002168  D7FE               	bra	u6727
  5504  00216A  2F91               	decfsz	??_lcd_init& (0+255),f,b
  5505  00216C  D7FC               	bra	u6727
  5506  00216E  D000               	nop2	
  5507  002170  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5508  002174  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5509  002178  0E38               	movlw	56
  5510  00217A  0100               	movlb	0	; () banked
  5511  00217C  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5512  00217E  EC5D  F019         	call	_lcd_send_command	;wreg free
  5513  002182                     
  5514                           ;ECUAL/LCD/lcd.c: 49:         _delay((unsigned long)((150)*(8000000/4000.0)));
  5515  002182  0E02               	movlw	2
  5516  002184  0100               	movlb	0	; () banked
  5517  002186  6F92               	movwf	(??_lcd_init+1)& (0+255),b
  5518  002188  0E86               	movlw	134
  5519  00218A  6F91               	movwf	??_lcd_init& (0+255),b
  5520  00218C  0E99               	movlw	153
  5521  00218E                     u6737:
  5522  00218E  2EE8               	decfsz	wreg,f,c
  5523  002190  D7FE               	bra	u6737
  5524  002192  2F91               	decfsz	??_lcd_init& (0+255),f,b
  5525  002194  D7FC               	bra	u6737
  5526  002196  2F92               	decfsz	(??_lcd_init+1)& (0+255),f,b
  5527  002198  D7FA               	bra	u6737
  5528  00219A  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5529  00219E  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5530  0021A2  0E38               	movlw	56
  5531  0021A4  0100               	movlb	0	; () banked
  5532  0021A6  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5533  0021A8  EC5D  F019         	call	_lcd_send_command	;wreg free
  5534  0021AC  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5535  0021B0  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5536  0021B4  0E01               	movlw	1
  5537  0021B6  0100               	movlb	0	; () banked
  5538  0021B8  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5539  0021BA  EC5D  F019         	call	_lcd_send_command	;wreg free
  5540  0021BE  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5541  0021C2  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5542  0021C6  0E02               	movlw	2
  5543  0021C8  0100               	movlb	0	; () banked
  5544  0021CA  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5545  0021CC  EC5D  F019         	call	_lcd_send_command	;wreg free
  5546  0021D0  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5547  0021D4  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5548  0021D8  0E06               	movlw	6
  5549  0021DA  0100               	movlb	0	; () banked
  5550  0021DC  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5551  0021DE  EC5D  F019         	call	_lcd_send_command	;wreg free
  5552  0021E2  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5553  0021E6  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5554  0021EA  0E0C               	movlw	12
  5555  0021EC  0100               	movlb	0	; () banked
  5556  0021EE  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5557  0021F0  EC5D  F019         	call	_lcd_send_command	;wreg free
  5558  0021F4  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5559  0021F8  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5560  0021FC  0E80               	movlw	128
  5561  0021FE  0100               	movlb	0	; () banked
  5562  002200  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5563  002202  EC5D  F019         	call	_lcd_send_command	;wreg free
  5564  002206  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  5565  00220A  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  5566  00220E  0E28               	movlw	40
  5567  002210  0100               	movlb	0	; () banked
  5568  002212  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5569  002214  EC5D  F019         	call	_lcd_send_command	;wreg free
  5570  002218                     l32:
  5571  002218  0012               	return		;funcret
  5572  00221A                     __end_of_lcd_init:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _lcd_send_command *****************
  5576 ;; Defined at:
  5577 ;;		line 78 in file "ECUAL/LCD/lcd.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  lcd             2    9[BANK0 ] PTR struct .
  5580 ;;		 -> lcd(6), 
  5581 ;;  command         1   11[BANK0 ] unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  ret             1   14[BANK0 ] unsigned char 
  5584 ;;  lcd_ret         1   13[BANK0 ] unsigned char 
  5585 ;;  gpio_ret        1   12[BANK0 ] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      unsigned char 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;Total ram usage:        6 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 15
  5602 ;; This function calls:
  5603 ;;		_gpio_pin_logic_write
  5604 ;;		_lcd_send_enable
  5605 ;;		_lcd_send_nbits
  5606 ;; This function is called by:
  5607 ;;		_lcd_init
  5608 ;;		_lcd_set_curser
  5609 ;;		_main
  5610 ;;		_lcd_send_custom_char
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text24
  5615  0032BA                     __ptext24:
  5616                           	callstack 0
  5617  0032BA                     _lcd_send_command:
  5618                           	callstack 13
  5619  0032BA                     
  5620                           ;ECUAL/LCD/lcd.c: 81:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5621  0032BA  0E00               	movlw	0
  5622  0032BC  0100               	movlb	0	; () banked
  5623  0032BE  6F8C               	movwf	lcd_send_command@gpio_ret& (0+255),b
  5624                           
  5625                           ;ECUAL/LCD/lcd.c: 82:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  5626  0032C0  0E00               	movlw	0
  5627  0032C2  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  5628  0032C4                     
  5629                           ; BSR set to: 0
  5630                           ;ECUAL/LCD/lcd.c: 83:     if(((void*)0)==lcd){
  5631  0032C4  5189               	movf	lcd_send_command@lcd& (0+255),w,b
  5632  0032C6  118A               	iorwf	(lcd_send_command@lcd+1)& (0+255),w,b
  5633  0032C8  A4D8               	btfss	status,2,c
  5634  0032CA  EF69  F019         	goto	u5661
  5635  0032CE  EF6B  F019         	goto	u5660
  5636  0032D2                     u5661:
  5637  0032D2  EF6F  F019         	goto	l8542
  5638  0032D6                     u5660:
  5639  0032D6                     
  5640                           ; BSR set to: 0
  5641                           ;ECUAL/LCD/lcd.c: 84:         ret=(Std_ReturnType)0x00;
  5642  0032D6  0E00               	movlw	0
  5643  0032D8  6F8E               	movwf	lcd_send_command@ret& (0+255),b
  5644                           
  5645                           ;ECUAL/LCD/lcd.c: 85:     }
  5646  0032DA  EF9F  F019         	goto	l8546
  5647  0032DE                     l8542:
  5648                           
  5649                           ; BSR set to: 0
  5650  0032DE  C089  F027         	movff	lcd_send_command@lcd,gpio_pin_logic_write@pin
  5651  0032E2  C08A  F028         	movff	lcd_send_command@lcd+1,gpio_pin_logic_write@pin+1
  5652  0032E6  0E00               	movlw	0
  5653  0032E8  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5654  0032EA  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  5655                           
  5656                           ;ECUAL/LCD/lcd.c: 89:         lcd_ret=lcd_send_nbits(lcd,command>>4);
  5657  0032EE  C089  F080         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  5658  0032F2  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_nbits@lcd+1
  5659  0032F6  0100               	movlb	0	; () banked
  5660  0032F8  398B               	swapf	lcd_send_command@command& (0+255),w,b
  5661  0032FA  0B0F               	andlw	15
  5662  0032FC  6F82               	movwf	lcd_send_nbits@data_or_command& (0+255),b
  5663  0032FE  EC63  F01E         	call	_lcd_send_nbits	;wreg free
  5664  003302  0100               	movlb	0	; () banked
  5665  003304  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  5666                           
  5667                           ;ECUAL/LCD/lcd.c: 90:         lcd_ret=lcd_send_enable(lcd);
  5668  003306  C089  F080         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  5669  00330A  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  5670  00330E  EC0E  F020         	call	_lcd_send_enable	;wreg free
  5671  003312  0100               	movlb	0	; () banked
  5672  003314  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  5673                           
  5674                           ;ECUAL/LCD/lcd.c: 91:         lcd_ret=lcd_send_nbits(lcd,command);
  5675  003316  C089  F080         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  5676  00331A  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_nbits@lcd+1
  5677  00331E  C08B  F082         	movff	lcd_send_command@command,lcd_send_nbits@data_or_command
  5678  003322  EC63  F01E         	call	_lcd_send_nbits	;wreg free
  5679  003326  0100               	movlb	0	; () banked
  5680  003328  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  5681                           
  5682                           ;ECUAL/LCD/lcd.c: 92:         lcd_ret=lcd_send_enable(lcd);
  5683  00332A  C089  F080         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  5684  00332E  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  5685  003332  EC0E  F020         	call	_lcd_send_enable	;wreg free
  5686  003336  0100               	movlb	0	; () banked
  5687  003338  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  5688  00333A                     
  5689                           ; BSR set to: 0
  5690                           ;ECUAL/LCD/lcd.c: 100:         ret=(Std_ReturnType)0x01;
  5691  00333A  0E01               	movlw	1
  5692  00333C  6F8E               	movwf	lcd_send_command@ret& (0+255),b
  5693  00333E                     l8546:
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;ECUAL/LCD/lcd.c: 103:     return ret;
  5697  00333E  518E               	movf	lcd_send_command@ret& (0+255),w,b
  5698  003340                     
  5699                           ; BSR set to: 0
  5700  003340  0012               	return		;funcret
  5701  003342                     __end_of_lcd_send_command:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _lcd_send_nbits *****************
  5705 ;; Defined at:
  5706 ;;		line 376 in file "ECUAL/LCD/lcd.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  lcd             2    0[BANK0 ] PTR struct .
  5709 ;;		 -> lcd(6), 
  5710 ;;  data_or_comm    1    2[BANK0 ] unsigned char 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  pin_counter     1    8[BANK0 ] unsigned char 
  5713 ;;  ret             1    7[BANK0 ] unsigned char 
  5714 ;;  gpio_ret        1    0        unsigned char 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      unsigned char 
  5717 ;; Registers used:
  5718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5724 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;Total ram usage:        9 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; Hardware stack levels required when called: 14
  5731 ;; This function calls:
  5732 ;;		_gpio_pin_logic_write
  5733 ;; This function is called by:
  5734 ;;		_lcd_send_command
  5735 ;;		_lcd_send_char_data
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text25
  5740  003CC6                     __ptext25:
  5741                           	callstack 0
  5742  003CC6                     _lcd_send_nbits:
  5743                           	callstack 13
  5744  003CC6                     
  5745                           ;ECUAL/LCD/lcd.c: 378:     uint8 pin_counter;;ECUAL/LCD/lcd.c: 379:     Std_ReturnType r
      +                          et=(Std_ReturnType)0x00;
  5746  003CC6  0E00               	movlw	0
  5747  003CC8  0100               	movlb	0	; () banked
  5748  003CCA  6F87               	movwf	lcd_send_nbits@ret& (0+255),b
  5749                           
  5750                           ;ECUAL/LCD/lcd.c: 381:     for(pin_counter=0;pin_counter<n;pin_counter++){
  5751  003CCC  0E00               	movlw	0
  5752  003CCE  6F88               	movwf	lcd_send_nbits@pin_counter& (0+255),b
  5753  003CD0  EF8A  F01E         	goto	l8382
  5754  003CD4                     l8378:
  5755                           
  5756                           ; BSR set to: 0
  5757  003CD4  5188               	movf	lcd_send_nbits@pin_counter& (0+255),w,b
  5758  003CD6  2580               	addwf	lcd_send_nbits@lcd& (0+255),w,b
  5759  003CD8  6F83               	movwf	??_lcd_send_nbits& (0+255),b
  5760  003CDA  0E00               	movlw	0
  5761  003CDC  2181               	addwfc	(lcd_send_nbits@lcd+1)& (0+255),w,b
  5762  003CDE  6F84               	movwf	(??_lcd_send_nbits+1)& (0+255),b
  5763  003CE0  0E02               	movlw	2
  5764  003CE2  2583               	addwf	??_lcd_send_nbits& (0+255),w,b
  5765  003CE4  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  5766  003CE6  0E00               	movlw	0
  5767  003CE8  2184               	addwfc	(??_lcd_send_nbits+1)& (0+255),w,b
  5768  003CEA  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  5769  003CEC  C088  F085         	movff	lcd_send_nbits@pin_counter,??_lcd_send_nbits+2
  5770  003CF0  C082  F086         	movff	lcd_send_nbits@data_or_command,??_lcd_send_nbits+3
  5771  003CF4  2B85               	incf	(??_lcd_send_nbits+2)& (0+255),f,b
  5772  003CF6  EF7F  F01E         	goto	u5524
  5773  003CFA                     u5525:
  5774  003CFA  90D8               	bcf	status,0,c
  5775  003CFC  3386               	rrcf	(??_lcd_send_nbits+3)& (0+255),f,b
  5776  003CFE                     u5524:
  5777  003CFE  2F85               	decfsz	(??_lcd_send_nbits+2)& (0+255),f,b
  5778  003D00  EF7D  F01E         	goto	u5525
  5779  003D04  0100               	movlb	0	; () banked
  5780  003D06  5186               	movf	(??_lcd_send_nbits+3)& (0+255),w,b
  5781  003D08  0B01               	andlw	1
  5782  003D0A  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5783  003D0C  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  5784  003D10                     
  5785                           ;ECUAL/LCD/lcd.c: 383:     }
  5786  003D10  0100               	movlb	0	; () banked
  5787  003D12  2B88               	incf	lcd_send_nbits@pin_counter& (0+255),f,b
  5788  003D14                     l8382:
  5789                           
  5790                           ; BSR set to: 0
  5791  003D14  0E03               	movlw	3
  5792  003D16  6588               	cpfsgt	lcd_send_nbits@pin_counter& (0+255),b
  5793  003D18  EF90  F01E         	goto	u5531
  5794  003D1C  EF92  F01E         	goto	u5530
  5795  003D20                     u5531:
  5796  003D20  EF6A  F01E         	goto	l8378
  5797  003D24                     u5530:
  5798  003D24                     
  5799                           ; BSR set to: 0
  5800                           ;ECUAL/LCD/lcd.c: 385:     return ret;
  5801  003D24  5187               	movf	lcd_send_nbits@ret& (0+255),w,b
  5802  003D26                     
  5803                           ; BSR set to: 0
  5804  003D26  0012               	return		;funcret
  5805  003D28                     __end_of_lcd_send_nbits:
  5806                           	callstack 0
  5807                           
  5808 ;; *************** function _lcd_send_enable *****************
  5809 ;; Defined at:
  5810 ;;		line 388 in file "ECUAL/LCD/lcd.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  lcd             2    0[BANK0 ] PTR struct .
  5813 ;;		 -> lcd(6), 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  ret             1    0        unsigned char 
  5816 ;;  gpio_ret        1    2[BANK0 ] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      unsigned char 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;Total ram usage:        3 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 14
  5833 ;; This function calls:
  5834 ;;		_gpio_pin_logic_write
  5835 ;; This function is called by:
  5836 ;;		_lcd_send_command
  5837 ;;		_lcd_send_char_data
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text26
  5842  00401C                     __ptext26:
  5843                           	callstack 0
  5844  00401C                     _lcd_send_enable:
  5845                           	callstack 13
  5846  00401C                     
  5847                           ;ECUAL/LCD/lcd.c: 391:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5848  00401C  0E00               	movlw	0
  5849  00401E  0100               	movlb	0	; () banked
  5850  004020  6F82               	movwf	lcd_send_enable@gpio_ret& (0+255),b
  5851  004022                     
  5852                           ; BSR set to: 0
  5853  004022  0E01               	movlw	1
  5854  004024  2580               	addwf	lcd_send_enable@lcd& (0+255),w,b
  5855  004026  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  5856  004028  0E00               	movlw	0
  5857  00402A  2181               	addwfc	(lcd_send_enable@lcd+1)& (0+255),w,b
  5858  00402C  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  5859  00402E  0E01               	movlw	1
  5860  004030  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5861  004032  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  5862  004036                     
  5863                           ;ECUAL/LCD/lcd.c: 393:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5864  004036  0E03               	movlw	3
  5865  004038                     u6747:
  5866  004038  2EE8               	decfsz	wreg,f,c
  5867  00403A  D7FE               	bra	u6747
  5868  00403C  F000               	nop	
  5869  00403E  0E01               	movlw	1
  5870  004040  0100               	movlb	0	; () banked
  5871  004042  2580               	addwf	lcd_send_enable@lcd& (0+255),w,b
  5872  004044  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  5873  004046  0E00               	movlw	0
  5874  004048  2181               	addwfc	(lcd_send_enable@lcd+1)& (0+255),w,b
  5875  00404A  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  5876  00404C  0E00               	movlw	0
  5877  00404E  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5878  004050  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  5879  004054                     
  5880                           ;ECUAL/LCD/lcd.c: 396:     return ret;
  5881  004054  0E00               	movlw	0
  5882  004056  0012               	return		;funcret
  5883  004058                     __end_of_lcd_send_enable:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function _gpio_pin_output_low_init *****************
  5887 ;; Defined at:
  5888 ;;		line 161 in file "MCAL/GPIO/gpio.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  pin             2    0[BANK0 ] PTR struct .
  5891 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  ret             1    4[BANK0 ] unsigned char 
  5894 ;;  gpio_ret        1    3[BANK0 ] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      unsigned char 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;Total ram usage:        5 bytes
  5909 ;; Hardware stack levels used: 1
  5910 ;; Hardware stack levels required when called: 14
  5911 ;; This function calls:
  5912 ;;		_gpio_pin_direction_init
  5913 ;;		_gpio_pin_logic_write
  5914 ;; This function is called by:
  5915 ;;		_lcd_init
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text27
  5920  003816                     __ptext27:
  5921                           	callstack 0
  5922  003816                     _gpio_pin_output_low_init:
  5923                           	callstack 14
  5924  003816                     
  5925                           ;MCAL/GPIO/gpio.c: 164:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5926  003816  0E00               	movlw	0
  5927  003818  0100               	movlb	0	; () banked
  5928  00381A  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  5929  00381C                     
  5930                           ; BSR set to: 0
  5931                           ;MCAL/GPIO/gpio.c: 165:     if(((void*)0)==pin || (pin->pin)>7){
  5932  00381C  5180               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
  5933  00381E  1181               	iorwf	(gpio_pin_output_low_init@pin+1)& (0+255),w,b
  5934  003820  B4D8               	btfsc	status,2,c
  5935  003822  EF15  F01C         	goto	u5791
  5936  003826  EF17  F01C         	goto	u5790
  5937  00382A                     u5791:
  5938  00382A  EF28  F01C         	goto	l8688
  5939  00382E                     u5790:
  5940  00382E                     
  5941                           ; BSR set to: 0
  5942  00382E  C080  FFD9         	movff	gpio_pin_output_low_init@pin,fsr2l
  5943  003832  C081  FFDA         	movff	gpio_pin_output_low_init@pin+1,fsr2h
  5944  003836  30DF               	rrcf	223,w,c
  5945  003838  32E8               	rrcf	wreg,f,c
  5946  00383A  32E8               	rrcf	wreg,f,c
  5947  00383C  0B07               	andlw	7
  5948  00383E  6F82               	movwf	??_gpio_pin_output_low_init& (0+255),b
  5949  003840  0E07               	movlw	7
  5950  003842  6582               	cpfsgt	??_gpio_pin_output_low_init& (0+255),b
  5951  003844  EF26  F01C         	goto	u5801
  5952  003848  EF28  F01C         	goto	u5800
  5953  00384C                     u5801:
  5954  00384C  EF2C  F01C         	goto	l8690
  5955  003850                     u5800:
  5956  003850                     l8688:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;MCAL/GPIO/gpio.c: 166:         ret=(Std_ReturnType)0x00;
  5960  003850  0E00               	movlw	0
  5961  003852  6F84               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  5962                           
  5963                           ;MCAL/GPIO/gpio.c: 167:     }
  5964  003854  EF42  F01C         	goto	l8694
  5965  003858                     l8690:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;MCAL/GPIO/gpio.c: 169:         gpio_ret=gpio_pin_direction_init(pin,OUTPUT);
  5969  003858  C080  F027         	movff	gpio_pin_output_low_init@pin,gpio_pin_direction_init@pin
  5970  00385C  C081  F028         	movff	gpio_pin_output_low_init@pin+1,gpio_pin_direction_init@pin+1
  5971  003860  0E00               	movlw	0
  5972  003862  6E29               	movwf	gpio_pin_direction_init@pin_direction^0,c
  5973  003864  EC64  F012         	call	_gpio_pin_direction_init	;wreg free
  5974  003868  0100               	movlb	0	; () banked
  5975  00386A  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  5976                           
  5977                           ;MCAL/GPIO/gpio.c: 170:         gpio_ret=gpio_pin_logic_write(pin,LOW);
  5978  00386C  C080  F027         	movff	gpio_pin_output_low_init@pin,gpio_pin_logic_write@pin
  5979  003870  C081  F028         	movff	gpio_pin_output_low_init@pin+1,gpio_pin_logic_write@pin+1
  5980  003874  0E00               	movlw	0
  5981  003876  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5982  003878  ECBB  F011         	call	_gpio_pin_logic_write	;wreg free
  5983  00387C  0100               	movlb	0	; () banked
  5984  00387E  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  5985  003880                     
  5986                           ; BSR set to: 0
  5987                           ;MCAL/GPIO/gpio.c: 171:         ret=(Std_ReturnType)0x01;
  5988  003880  0E01               	movlw	1
  5989  003882  6F84               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  5990  003884                     l8694:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;MCAL/GPIO/gpio.c: 174:     return ret;
  5994  003884  5184               	movf	gpio_pin_output_low_init@ret& (0+255),w,b
  5995  003886                     
  5996                           ; BSR set to: 0
  5997  003886  0012               	return		;funcret
  5998  003888                     __end_of_gpio_pin_output_low_init:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function _gpio_pin_logic_write *****************
  6002 ;; Defined at:
  6003 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  pin             2   38[COMRAM] PTR struct .
  6006 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  6007 ;;  pin_logic       1   40[COMRAM] enum E2965
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  ret             1   47[COMRAM] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;Total ram usage:       10 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 13
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_lcd_send_command
  6030 ;;		_lcd_send_char_data
  6031 ;;		_lcd_send_nbits
  6032 ;;		_lcd_send_enable
  6033 ;;		_gpio_pin_output_low_init
  6034 ;;		_gpio_pin_output_high_init
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text28
  6039  002376                     __ptext28:
  6040                           	callstack 0
  6041  002376                     _gpio_pin_logic_write:
  6042                           	callstack 13
  6043  002376                     
  6044                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  6045  002376  5027               	movf	gpio_pin_logic_write@pin^0,w,c
  6046  002378  1028               	iorwf	(gpio_pin_logic_write@pin+1)^0,w,c
  6047  00237A  B4D8               	btfsc	status,2,c
  6048  00237C  EFC2  F011         	goto	u5251
  6049  002380  EFC4  F011         	goto	u5250
  6050  002384                     u5251:
  6051  002384  EFDD  F011         	goto	l8258
  6052  002388                     u5250:
  6053  002388  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6054  00238C  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6055  002390  30DF               	rrcf	223,w,c
  6056  002392  32E8               	rrcf	wreg,f,c
  6057  002394  32E8               	rrcf	wreg,f,c
  6058  002396  0B07               	andlw	7
  6059  002398  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  6060  00239A  0E08               	movlw	8
  6061  00239C  602A               	cpfslt	??_gpio_pin_logic_write^0,c
  6062  00239E  EFD3  F011         	goto	u5261
  6063  0023A2  EFD5  F011         	goto	u5260
  6064  0023A6                     u5261:
  6065  0023A6  EFDD  F011         	goto	l8258
  6066  0023AA                     u5260:
  6067  0023AA  0E01               	movlw	1
  6068  0023AC  6429               	cpfsgt	gpio_pin_logic_write@pin_logic^0,c
  6069  0023AE  EFDB  F011         	goto	u5271
  6070  0023B2  EFDD  F011         	goto	u5270
  6071  0023B6                     u5271:
  6072  0023B6  EF42  F012         	goto	l8266
  6073  0023BA                     u5270:
  6074  0023BA                     l8258:
  6075                           
  6076                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  6077  0023BA  0E00               	movlw	0
  6078  0023BC  6E30               	movwf	gpio_pin_logic_write@ret^0,c
  6079                           
  6080                           ;MCAL/GPIO/gpio.c: 86:     }
  6081  0023BE  EF62  F012         	goto	l8272
  6082  0023C2                     l8260:
  6083                           
  6084                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  6085  0023C2  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6086  0023C6  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6087  0023CA  30DF               	rrcf	223,w,c
  6088  0023CC  32E8               	rrcf	wreg,f,c
  6089  0023CE  32E8               	rrcf	wreg,f,c
  6090  0023D0  0B07               	andlw	7
  6091  0023D2  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  6092  0023D4  0E01               	movlw	1
  6093  0023D6  6E2B               	movwf	(??_gpio_pin_logic_write+1)^0,c
  6094  0023D8  2A2A               	incf	??_gpio_pin_logic_write^0,f,c
  6095  0023DA  EFF1  F011         	goto	u5284
  6096  0023DE                     u5285:
  6097  0023DE  90D8               	bcf	status,0,c
  6098  0023E0  362B               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  6099  0023E2                     u5284:
  6100  0023E2  2E2A               	decfsz	??_gpio_pin_logic_write^0,f,c
  6101  0023E4  EFEF  F011         	goto	u5285
  6102  0023E8  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  6103  0023EA  0AFF               	xorlw	255
  6104  0023EC  6E2C               	movwf	(??_gpio_pin_logic_write+2)^0,c
  6105  0023EE  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6106  0023F2  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6107  0023F6  50DF               	movf	223,w,c
  6108  0023F8  0B07               	andlw	7
  6109  0023FA  6E2D               	movwf	(??_gpio_pin_logic_write+3)^0,c
  6110  0023FC  502D               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  6111  0023FE  0D02               	mullw	2
  6112  002400  0E30               	movlw	low _latx
  6113  002402  24F3               	addwf	243,w,c
  6114  002404  6ED9               	movwf	fsr2l,c
  6115  002406  0E01               	movlw	high _latx
  6116  002408  20F4               	addwfc	prodh,w,c
  6117  00240A  6EDA               	movwf	fsr2h,c
  6118  00240C  CFDE F02E          	movff	postinc2,??_gpio_pin_logic_write+4
  6119  002410  CFDD F02F          	movff	postdec2,??_gpio_pin_logic_write+5
  6120  002414  C02E  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  6121  002418  C02F  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  6122  00241C  502C               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  6123  00241E  16DF               	andwf	indf2,f,c
  6124                           
  6125                           ;MCAL/GPIO/gpio.c: 91:                 break;
  6126  002420  EF57  F012         	goto	l8268
  6127  002424                     l8262:
  6128                           
  6129                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  6130  002424  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6131  002428  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6132  00242C  30DF               	rrcf	223,w,c
  6133  00242E  32E8               	rrcf	wreg,f,c
  6134  002430  32E8               	rrcf	wreg,f,c
  6135  002432  0B07               	andlw	7
  6136  002434  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  6137  002436  0E01               	movlw	1
  6138  002438  6E2B               	movwf	(??_gpio_pin_logic_write+1)^0,c
  6139  00243A  2A2A               	incf	??_gpio_pin_logic_write^0,f,c
  6140  00243C  EF22  F012         	goto	u5294
  6141  002440                     u5295:
  6142  002440  90D8               	bcf	status,0,c
  6143  002442  362B               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  6144  002444                     u5294:
  6145  002444  2E2A               	decfsz	??_gpio_pin_logic_write^0,f,c
  6146  002446  EF20  F012         	goto	u5295
  6147  00244A  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6148  00244E  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6149  002452  50DF               	movf	223,w,c
  6150  002454  0B07               	andlw	7
  6151  002456  6E2C               	movwf	(??_gpio_pin_logic_write+2)^0,c
  6152  002458  502C               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  6153  00245A  0D02               	mullw	2
  6154  00245C  0E30               	movlw	low _latx
  6155  00245E  24F3               	addwf	243,w,c
  6156  002460  6ED9               	movwf	fsr2l,c
  6157  002462  0E01               	movlw	high _latx
  6158  002464  20F4               	addwfc	prodh,w,c
  6159  002466  6EDA               	movwf	fsr2h,c
  6160  002468  CFDE F02D          	movff	postinc2,??_gpio_pin_logic_write+3
  6161  00246C  CFDD F02E          	movff	postdec2,??_gpio_pin_logic_write+4
  6162  002470  C02D  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  6163  002474  C02E  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  6164  002478  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  6165  00247A  12DF               	iorwf	indf2,f,c
  6166                           
  6167                           ;MCAL/GPIO/gpio.c: 95:                 break;
  6168  00247C  EF57  F012         	goto	l8268
  6169  002480                     l8264:
  6170                           
  6171                           ;MCAL/GPIO/gpio.c: 99:         }
  6172  002480  EF57  F012         	goto	l8268
  6173  002484                     l8266:
  6174  002484  5029               	movf	gpio_pin_logic_write@pin_logic^0,w,c
  6175  002486  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  6176  002488  6A2B               	clrf	(??_gpio_pin_logic_write+1)^0,c
  6177                           
  6178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6179                           ; Switch size 1, requested type "simple"
  6180                           ; Number of cases is 1, Range of values is 0 to 0
  6181                           ; switch strategies available:
  6182                           ; Name         Instructions Cycles
  6183                           ; simple_byte            4     3 (average)
  6184                           ;	Chosen strategy is simple_byte
  6185  00248A  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  6186  00248C  0A00               	xorlw	0	; case 0
  6187  00248E  B4D8               	btfsc	status,2,c
  6188  002490  EF4C  F012         	goto	l9964
  6189  002494  EF40  F012         	goto	l8264
  6190  002498                     l9964:
  6191                           
  6192                           ; Switch size 1, requested type "simple"
  6193                           ; Number of cases is 2, Range of values is 0 to 1
  6194                           ; switch strategies available:
  6195                           ; Name         Instructions Cycles
  6196                           ; simple_byte            7     4 (average)
  6197                           ;	Chosen strategy is simple_byte
  6198  002498  502A               	movf	??_gpio_pin_logic_write^0,w,c
  6199  00249A  0A00               	xorlw	0	; case 0
  6200  00249C  B4D8               	btfsc	status,2,c
  6201  00249E  EFE1  F011         	goto	l8260
  6202  0024A2  0A01               	xorlw	1	; case 1
  6203  0024A4  B4D8               	btfsc	status,2,c
  6204  0024A6  EF12  F012         	goto	l8262
  6205  0024AA  EF40  F012         	goto	l8264
  6206  0024AE                     l8268:
  6207                           
  6208                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  6209  0024AE  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  6210  0024B2  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  6211  0024B6  B029               	btfsc	gpio_pin_logic_write@pin_logic^0,0,c
  6212  0024B8  D002               	bra	u5305
  6213  0024BA  9EDF               	bcf	indf2,7,c
  6214  0024BC  D001               	bra	u5306
  6215  0024BE                     u5305:
  6216  0024BE  8EDF               	bsf	indf2,7,c
  6217  0024C0                     u5306:
  6218  0024C0                     
  6219                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  6220  0024C0  0E01               	movlw	1
  6221  0024C2  6E30               	movwf	gpio_pin_logic_write@ret^0,c
  6222  0024C4                     l8272:
  6223                           
  6224                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  6225  0024C4  5030               	movf	gpio_pin_logic_write@ret^0,w,c
  6226  0024C6  0012               	return		;funcret
  6227  0024C8                     __end_of_gpio_pin_logic_write:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _interrupt_INTx_init *****************
  6231 ;; Defined at:
  6232 ;;		line 56 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  _interrupt      2    8[BANK0 ] PTR struct .
  6235 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  ret             1   10[BANK0 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      unsigned char 
  6240 ;; Registers used:
  6241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:        3 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 16
  6254 ;; This function calls:
  6255 ;;		_INTx_select_InterruptHandler
  6256 ;;		_interrupt_INTx_clear_flag
  6257 ;;		_interrupt_INTx_disable
  6258 ;;		_interrupt_INTx_edge_init
  6259 ;;		_interrupt_INTx_enable
  6260 ;;		_interrupt_INTx_pin_init
  6261 ;; This function is called by:
  6262 ;;		__Initialize
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text29
  6267  0035BC                     __ptext29:
  6268                           	callstack 0
  6269  0035BC                     _interrupt_INTx_init:
  6270                           	callstack 13
  6271  0035BC                     
  6272                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 59:     if(((void*)0)==_interrupt){
  6273  0035BC  0100               	movlb	0	; () banked
  6274  0035BE  5188               	movf	interrupt_INTx_init@_interrupt& (0+255),w,b
  6275  0035C0  1189               	iorwf	(interrupt_INTx_init@_interrupt+1)& (0+255),w,b
  6276  0035C2  A4D8               	btfss	status,2,c
  6277  0035C4  EFE6  F01A         	goto	u6171
  6278  0035C8  EFE8  F01A         	goto	u6170
  6279  0035CC                     u6171:
  6280  0035CC  EFEA  F01A         	goto	l9136
  6281  0035D0                     u6170:
  6282  0035D0                     
  6283                           ; BSR set to: 0
  6284                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 61:     }
  6285  0035D0  EF1A  F01B         	goto	l396
  6286  0035D4                     l9136:
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 65:         ret=interrupt_INTx_disable(_inter
      +                          rupt);
  6290  0035D4  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_disable@_interrupt
  6291  0035D8  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_disable@_interrupt+1
  6292  0035DC  EC44  F01C         	call	_interrupt_INTx_disable	;wreg free
  6293  0035E0  0100               	movlb	0	; () banked
  6294  0035E2  6F8A               	movwf	interrupt_INTx_init@ret& (0+255),b
  6295                           
  6296                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 67:         ret|=interrupt_INTx_clear_flag(_i
      +                          nterrupt);
  6297  0035E4  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_clear_flag@_interrupt
  6298  0035E8  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_clear_flag@_interrupt+1
  6299  0035EC  EC7D  F01C         	call	_interrupt_INTx_clear_flag	;wreg free
  6300  0035F0  0100               	movlb	0	; () banked
  6301  0035F2  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6302                           
  6303                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 73:         ret|=interrupt_INTx_edge_init(_in
      +                          terrupt);
  6304  0035F4  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_edge_init@_interrupt
  6305  0035F8  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_edge_init@_interrupt+1
  6306  0035FC  EC0D  F013         	call	_interrupt_INTx_edge_init	;wreg free
  6307  003600  0100               	movlb	0	; () banked
  6308  003602  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6309  003604                     
  6310                           ; BSR set to: 0
  6311                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 75:         ret|=interrupt_INTx_pin_init(_int
      +                          errupt);
  6312  003604  C088  F085         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_pin_init@_interrupt
  6313  003608  C089  F086         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_pin_init@_interrupt+1
  6314  00360C  ECB3  F020         	call	_interrupt_INTx_pin_init	;wreg free
  6315  003610  0100               	movlb	0	; () banked
  6316  003612  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6317  003614                     
  6318                           ; BSR set to: 0
  6319                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 77:         ret|=INTx_select_InterruptHandler
      +                          (_interrupt);
  6320  003614  C088  F02A         	movff	interrupt_INTx_init@_interrupt,INTx_select_InterruptHandler@_interrupt
  6321  003618  C089  F02B         	movff	interrupt_INTx_init@_interrupt+1,INTx_select_InterruptHandler@_interrupt+1
  6322  00361C  EC01  F017         	call	_INTx_select_InterruptHandler	;wreg free
  6323  003620  0100               	movlb	0	; () banked
  6324  003622  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6325  003624                     
  6326                           ; BSR set to: 0
  6327                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 79:         ret|=interrupt_INTx_enable(_inter
      +                          rupt);
  6328  003624  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_enable@_interrupt
  6329  003628  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_enable@_interrupt+1
  6330  00362C  ECE5  F019         	call	_interrupt_INTx_enable	;wreg free
  6331  003630  0100               	movlb	0	; () banked
  6332  003632  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6333  003634                     l396:
  6334                           
  6335                           ; BSR set to: 0
  6336  003634  0012               	return		;funcret
  6337  003636                     __end_of_interrupt_INTx_init:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _interrupt_INTx_pin_init *****************
  6341 ;; Defined at:
  6342 ;;		line 341 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  _interrupt      2    5[BANK0 ] PTR struct .
  6345 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;  ret             1    7[BANK0 ] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      unsigned char 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;Total ram usage:        3 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; Hardware stack levels required when called: 15
  6364 ;; This function calls:
  6365 ;;		_gpio_pin_input_init
  6366 ;; This function is called by:
  6367 ;;		_interrupt_INTx_init
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text30
  6372  004166                     __ptext30:
  6373                           	callstack 0
  6374  004166                     _interrupt_INTx_pin_init:
  6375                           	callstack 13
  6376  004166                     
  6377                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 344:     if(((void*)0)==_interrupt){
  6378  004166  0100               	movlb	0	; () banked
  6379  004168  5185               	movf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  6380  00416A  1186               	iorwf	(interrupt_INTx_pin_init@_interrupt+1)& (0+255),w,b
  6381  00416C  A4D8               	btfss	status,2,c
  6382  00416E  EFBB  F020         	goto	u6001
  6383  004172  EFBD  F020         	goto	u6000
  6384  004176                     u6001:
  6385  004176  EFC1  F020         	goto	l8892
  6386  00417A                     u6000:
  6387  00417A                     
  6388                           ; BSR set to: 0
  6389                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 345:         ret=(Std_ReturnType)0x00;
  6390  00417A  0E00               	movlw	0
  6391  00417C  6F87               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  6392                           
  6393                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 346:     }
  6394  00417E  EFCB  F020         	goto	l8894
  6395  004182                     l8892:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 348:         ret=gpio_pin_input_init(&(_inter
      +                          rupt->INTx_pin));
  6399  004182  0E02               	movlw	2
  6400  004184  2585               	addwf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  6401  004186  6F80               	movwf	gpio_pin_input_init@pin& (0+255),b
  6402  004188  0E00               	movlw	0
  6403  00418A  2186               	addwfc	(interrupt_INTx_pin_init@_interrupt+1)& (0+255),w,b
  6404  00418C  6F81               	movwf	(gpio_pin_input_init@pin+1)& (0+255),b
  6405  00418E  EC94  F01E         	call	_gpio_pin_input_init	;wreg free
  6406  004192  0100               	movlb	0	; () banked
  6407  004194  6F87               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  6408  004196                     l8894:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 351:     return ret;
  6412  004196  5187               	movf	interrupt_INTx_pin_init@ret& (0+255),w,b
  6413  004198                     
  6414                           ; BSR set to: 0
  6415  004198  0012               	return		;funcret
  6416  00419A                     __end_of_interrupt_INTx_pin_init:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _gpio_pin_input_init *****************
  6420 ;; Defined at:
  6421 ;;		line 211 in file "MCAL/GPIO/gpio.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  pin             2    0[BANK0 ] PTR struct .
  6424 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  ret             1    4[BANK0 ] unsigned char 
  6427 ;;  gpio_ret        1    3[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      unsigned char 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:        5 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 14
  6444 ;; This function calls:
  6445 ;;		_gpio_pin_direction_init
  6446 ;; This function is called by:
  6447 ;;		_interrupt_INTx_pin_init
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text31
  6452  003D28                     __ptext31:
  6453                           	callstack 0
  6454  003D28                     _gpio_pin_input_init:
  6455                           	callstack 13
  6456  003D28                     
  6457                           ;MCAL/GPIO/gpio.c: 214:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6458  003D28  0E00               	movlw	0
  6459  003D2A  0100               	movlb	0	; () banked
  6460  003D2C  6F83               	movwf	gpio_pin_input_init@gpio_ret& (0+255),b
  6461  003D2E                     
  6462                           ; BSR set to: 0
  6463                           ;MCAL/GPIO/gpio.c: 215:     if(((void*)0)==pin || (pin->pin)>7){
  6464  003D2E  5180               	movf	gpio_pin_input_init@pin& (0+255),w,b
  6465  003D30  1181               	iorwf	(gpio_pin_input_init@pin+1)& (0+255),w,b
  6466  003D32  B4D8               	btfsc	status,2,c
  6467  003D34  EF9E  F01E         	goto	u5681
  6468  003D38  EFA0  F01E         	goto	u5680
  6469  003D3C                     u5681:
  6470  003D3C  EFB1  F01E         	goto	l8570
  6471  003D40                     u5680:
  6472  003D40                     
  6473                           ; BSR set to: 0
  6474  003D40  C080  FFD9         	movff	gpio_pin_input_init@pin,fsr2l
  6475  003D44  C081  FFDA         	movff	gpio_pin_input_init@pin+1,fsr2h
  6476  003D48  30DF               	rrcf	223,w,c
  6477  003D4A  32E8               	rrcf	wreg,f,c
  6478  003D4C  32E8               	rrcf	wreg,f,c
  6479  003D4E  0B07               	andlw	7
  6480  003D50  6F82               	movwf	??_gpio_pin_input_init& (0+255),b
  6481  003D52  0E07               	movlw	7
  6482  003D54  6582               	cpfsgt	??_gpio_pin_input_init& (0+255),b
  6483  003D56  EFAF  F01E         	goto	u5691
  6484  003D5A  EFB1  F01E         	goto	u5690
  6485  003D5E                     u5691:
  6486  003D5E  EFB5  F01E         	goto	l8572
  6487  003D62                     u5690:
  6488  003D62                     l8570:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;MCAL/GPIO/gpio.c: 216:         ret=(Std_ReturnType)0x00;
  6492  003D62  0E00               	movlw	0
  6493  003D64  6F84               	movwf	gpio_pin_input_init@ret& (0+255),b
  6494                           
  6495                           ;MCAL/GPIO/gpio.c: 217:     }
  6496  003D66  EFC0  F01E         	goto	l8576
  6497  003D6A                     l8572:
  6498                           
  6499                           ; BSR set to: 0
  6500  003D6A  C080  F027         	movff	gpio_pin_input_init@pin,gpio_pin_direction_init@pin
  6501  003D6E  C081  F028         	movff	gpio_pin_input_init@pin+1,gpio_pin_direction_init@pin+1
  6502  003D72  0E01               	movlw	1
  6503  003D74  6E29               	movwf	gpio_pin_direction_init@pin_direction^0,c
  6504  003D76  EC64  F012         	call	_gpio_pin_direction_init	;wreg free
  6505  003D7A                     
  6506                           ;MCAL/GPIO/gpio.c: 220:         ret=(Std_ReturnType)0x01;
  6507  003D7A  0E01               	movlw	1
  6508  003D7C  0100               	movlb	0	; () banked
  6509  003D7E  6F84               	movwf	gpio_pin_input_init@ret& (0+255),b
  6510  003D80                     l8576:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;MCAL/GPIO/gpio.c: 223:     return ret;
  6514  003D80  5184               	movf	gpio_pin_input_init@ret& (0+255),w,b
  6515  003D82                     
  6516                           ; BSR set to: 0
  6517  003D82  0012               	return		;funcret
  6518  003D84                     __end_of_gpio_pin_input_init:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _gpio_pin_direction_init *****************
  6522 ;; Defined at:
  6523 ;;		line 23 in file "MCAL/GPIO/gpio.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  pin             2   38[COMRAM] PTR struct .
  6526 ;;		 -> MY_INT1(6), MY_INT0(6), lcd.lcd_pins(4), lcd(6), 
  6527 ;;  pin_directio    1   40[COMRAM] enum E2969
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  ret             1   47[COMRAM] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      unsigned char 
  6532 ;; Registers used:
  6533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6539 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;Total ram usage:       10 bytes
  6544 ;; Hardware stack levels used: 1
  6545 ;; Hardware stack levels required when called: 13
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_gpio_pin_output_low_init
  6550 ;;		_gpio_pin_input_init
  6551 ;;		_gpio_pin_output_high_init
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text32
  6556  0024C8                     __ptext32:
  6557                           	callstack 0
  6558  0024C8                     _gpio_pin_direction_init:
  6559                           	callstack 14
  6560  0024C8                     
  6561                           ;MCAL/GPIO/gpio.c: 26:     if(((void*)0)==pin || (pin->pin)>7 || pin_direction>1){
  6562  0024C8  5027               	movf	gpio_pin_direction_init@pin^0,w,c
  6563  0024CA  1028               	iorwf	(gpio_pin_direction_init@pin+1)^0,w,c
  6564  0024CC  B4D8               	btfsc	status,2,c
  6565  0024CE  EF6B  F012         	goto	u5541
  6566  0024D2  EF6D  F012         	goto	u5540
  6567  0024D6                     u5541:
  6568  0024D6  EF86  F012         	goto	l8408
  6569  0024DA                     u5540:
  6570  0024DA  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6571  0024DE  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6572  0024E2  30DF               	rrcf	223,w,c
  6573  0024E4  32E8               	rrcf	wreg,f,c
  6574  0024E6  32E8               	rrcf	wreg,f,c
  6575  0024E8  0B07               	andlw	7
  6576  0024EA  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  6577  0024EC  0E08               	movlw	8
  6578  0024EE  602A               	cpfslt	??_gpio_pin_direction_init^0,c
  6579  0024F0  EF7C  F012         	goto	u5551
  6580  0024F4  EF7E  F012         	goto	u5550
  6581  0024F8                     u5551:
  6582  0024F8  EF86  F012         	goto	l8408
  6583  0024FC                     u5550:
  6584  0024FC  0E01               	movlw	1
  6585  0024FE  6429               	cpfsgt	gpio_pin_direction_init@pin_direction^0,c
  6586  002500  EF84  F012         	goto	u5561
  6587  002504  EF86  F012         	goto	u5560
  6588  002508                     u5561:
  6589  002508  EFEB  F012         	goto	l8416
  6590  00250C                     u5560:
  6591  00250C                     l8408:
  6592                           
  6593                           ;MCAL/GPIO/gpio.c: 27:         ret=(Std_ReturnType)0x00;
  6594  00250C  0E00               	movlw	0
  6595  00250E  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  6596                           
  6597                           ;MCAL/GPIO/gpio.c: 28:     }
  6598  002510  EF0B  F013         	goto	l8422
  6599  002514                     l8410:
  6600                           
  6601                           ;MCAL/GPIO/gpio.c: 32:                 (*trisx[pin->port] &= ~((uint8)1<<pin->pin));
  6602  002514  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6603  002518  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6604  00251C  30DF               	rrcf	223,w,c
  6605  00251E  32E8               	rrcf	wreg,f,c
  6606  002520  32E8               	rrcf	wreg,f,c
  6607  002522  0B07               	andlw	7
  6608  002524  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  6609  002526  0E01               	movlw	1
  6610  002528  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  6611  00252A  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  6612  00252C  EF9A  F012         	goto	u5574
  6613  002530                     u5575:
  6614  002530  90D8               	bcf	status,0,c
  6615  002532  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  6616  002534                     u5574:
  6617  002534  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  6618  002536  EF98  F012         	goto	u5575
  6619  00253A  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  6620  00253C  0AFF               	xorlw	255
  6621  00253E  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  6622  002540  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6623  002544  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6624  002548  50DF               	movf	223,w,c
  6625  00254A  0B07               	andlw	7
  6626  00254C  6E2D               	movwf	(??_gpio_pin_direction_init+3)^0,c
  6627  00254E  502D               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  6628  002550  0D02               	mullw	2
  6629  002552  0E3A               	movlw	low _trisx
  6630  002554  24F3               	addwf	243,w,c
  6631  002556  6ED9               	movwf	fsr2l,c
  6632  002558  0E01               	movlw	high _trisx
  6633  00255A  20F4               	addwfc	prodh,w,c
  6634  00255C  6EDA               	movwf	fsr2h,c
  6635  00255E  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+4
  6636  002562  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+5
  6637  002566  C02E  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  6638  00256A  C02F  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  6639  00256E  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  6640  002570  16DF               	andwf	indf2,f,c
  6641                           
  6642                           ;MCAL/GPIO/gpio.c: 33:                 break;
  6643  002572  EF00  F013         	goto	l8418
  6644  002576                     l8412:
  6645                           
  6646                           ;MCAL/GPIO/gpio.c: 36:                 (*trisx[pin->port] |= ((uint8)1<<pin->pin));
  6647  002576  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6648  00257A  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6649  00257E  30DF               	rrcf	223,w,c
  6650  002580  32E8               	rrcf	wreg,f,c
  6651  002582  32E8               	rrcf	wreg,f,c
  6652  002584  0B07               	andlw	7
  6653  002586  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  6654  002588  0E01               	movlw	1
  6655  00258A  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  6656  00258C  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  6657  00258E  EFCB  F012         	goto	u5584
  6658  002592                     u5585:
  6659  002592  90D8               	bcf	status,0,c
  6660  002594  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  6661  002596                     u5584:
  6662  002596  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  6663  002598  EFC9  F012         	goto	u5585
  6664  00259C  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6665  0025A0  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6666  0025A4  50DF               	movf	223,w,c
  6667  0025A6  0B07               	andlw	7
  6668  0025A8  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  6669  0025AA  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  6670  0025AC  0D02               	mullw	2
  6671  0025AE  0E3A               	movlw	low _trisx
  6672  0025B0  24F3               	addwf	243,w,c
  6673  0025B2  6ED9               	movwf	fsr2l,c
  6674  0025B4  0E01               	movlw	high _trisx
  6675  0025B6  20F4               	addwfc	prodh,w,c
  6676  0025B8  6EDA               	movwf	fsr2h,c
  6677  0025BA  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+3
  6678  0025BE  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+4
  6679  0025C2  C02D  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  6680  0025C6  C02E  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  6681  0025CA  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  6682  0025CC  12DF               	iorwf	indf2,f,c
  6683                           
  6684                           ;MCAL/GPIO/gpio.c: 37:                 break;
  6685  0025CE  EF00  F013         	goto	l8418
  6686  0025D2                     l8414:
  6687                           
  6688                           ;MCAL/GPIO/gpio.c: 41:         }
  6689  0025D2  EF00  F013         	goto	l8418
  6690  0025D6                     l8416:
  6691  0025D6  5029               	movf	gpio_pin_direction_init@pin_direction^0,w,c
  6692  0025D8  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  6693  0025DA  6A2B               	clrf	(??_gpio_pin_direction_init+1)^0,c
  6694                           
  6695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6696                           ; Switch size 1, requested type "simple"
  6697                           ; Number of cases is 1, Range of values is 0 to 0
  6698                           ; switch strategies available:
  6699                           ; Name         Instructions Cycles
  6700                           ; simple_byte            4     3 (average)
  6701                           ;	Chosen strategy is simple_byte
  6702  0025DC  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  6703  0025DE  0A00               	xorlw	0	; case 0
  6704  0025E0  B4D8               	btfsc	status,2,c
  6705  0025E2  EFF5  F012         	goto	l9966
  6706  0025E6  EFE9  F012         	goto	l8414
  6707  0025EA                     l9966:
  6708                           
  6709                           ; Switch size 1, requested type "simple"
  6710                           ; Number of cases is 2, Range of values is 0 to 1
  6711                           ; switch strategies available:
  6712                           ; Name         Instructions Cycles
  6713                           ; simple_byte            7     4 (average)
  6714                           ;	Chosen strategy is simple_byte
  6715  0025EA  502A               	movf	??_gpio_pin_direction_init^0,w,c
  6716  0025EC  0A00               	xorlw	0	; case 0
  6717  0025EE  B4D8               	btfsc	status,2,c
  6718  0025F0  EF8A  F012         	goto	l8410
  6719  0025F4  0A01               	xorlw	1	; case 1
  6720  0025F6  B4D8               	btfsc	status,2,c
  6721  0025F8  EFBB  F012         	goto	l8412
  6722  0025FC  EFE9  F012         	goto	l8414
  6723  002600                     l8418:
  6724                           
  6725                           ;MCAL/GPIO/gpio.c: 42:         pin->direction=pin_direction;
  6726  002600  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  6727  002604  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  6728  002608  B029               	btfsc	gpio_pin_direction_init@pin_direction^0,0,c
  6729  00260A  D002               	bra	u5595
  6730  00260C  9CDF               	bcf	indf2,6,c
  6731  00260E  D001               	bra	u5596
  6732  002610                     u5595:
  6733  002610  8CDF               	bsf	indf2,6,c
  6734  002612                     u5596:
  6735  002612                     
  6736                           ;MCAL/GPIO/gpio.c: 43:         ret=(Std_ReturnType)0x01;
  6737  002612  0E01               	movlw	1
  6738  002614  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  6739  002616                     l8422:
  6740                           
  6741                           ;MCAL/GPIO/gpio.c: 46:     return ret;
  6742  002616  5030               	movf	gpio_pin_direction_init@ret^0,w,c
  6743  002618  0012               	return		;funcret
  6744  00261A                     __end_of_gpio_pin_direction_init:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _interrupt_INTx_enable *****************
  6748 ;; Defined at:
  6749 ;;		line 138 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  _interrupt      2   38[COMRAM] PTR struct .
  6752 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  ret             1   42[COMRAM] unsigned char 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;Total ram usage:        5 bytes
  6769 ;; Hardware stack levels used: 1
  6770 ;; Hardware stack levels required when called: 13
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_interrupt_INTx_init
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text33
  6779  0033CA                     __ptext33:
  6780                           	callstack 0
  6781  0033CA                     _interrupt_INTx_enable:
  6782                           	callstack 15
  6783  0033CA                     
  6784                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 141:     if(((void*)0)==_interrupt){
  6785  0033CA  5027               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  6786  0033CC  1028               	iorwf	(interrupt_INTx_enable@_interrupt+1)^0,w,c
  6787  0033CE  A4D8               	btfss	status,2,c
  6788  0033D0  EFEC  F019         	goto	u6021
  6789  0033D4  EFEE  F019         	goto	u6020
  6790  0033D8                     u6021:
  6791  0033D8  EF03  F01A         	goto	l8940
  6792  0033DC                     u6020:
  6793  0033DC                     l8928:
  6794                           
  6795                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 142:         ret=(Std_ReturnType)0x00;
  6796  0033DC  0E00               	movlw	0
  6797  0033DE  6E2B               	movwf	interrupt_INTx_enable@ret^0,c
  6798                           
  6799                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 143:     }
  6800  0033E0  EF22  F01A         	goto	l8942
  6801  0033E4                     l419:
  6802                           
  6803                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 151:                 (INTCONbits.GIE=1);
  6804  0033E4  8EF2               	bsf	242,7,c	;volatile
  6805                           
  6806                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 152:                 (INTCONbits.PEIE=1);
  6807  0033E6  8CF2               	bsf	242,6,c	;volatile
  6808                           
  6809                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 155:                 (INTCONbits.INT0E=1);
  6810  0033E8  88F2               	bsf	242,4,c	;volatile
  6811  0033EA                     l8930:
  6812                           
  6813                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 156:                 ret=(Std_ReturnType)0x01
      +                          ;
  6814  0033EA  0E01               	movlw	1
  6815  0033EC  6E2B               	movwf	interrupt_INTx_enable@ret^0,c
  6816                           
  6817                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 157:                 break;
  6818  0033EE  EF22  F01A         	goto	l8942
  6819  0033F2                     l421:
  6820                           
  6821                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 164:                 (INTCONbits.GIE=1);
  6822  0033F2  8EF2               	bsf	242,7,c	;volatile
  6823                           
  6824                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 165:                 (INTCONbits.PEIE=1);
  6825  0033F4  8CF2               	bsf	242,6,c	;volatile
  6826                           
  6827                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 167:                 (INTCON3bits.INT1E=1);
  6828  0033F6  86F0               	bsf	240,3,c	;volatile
  6829  0033F8  EFF5  F019         	goto	l8930
  6830  0033FC                     l422:
  6831                           
  6832                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 176:                 (INTCONbits.GIE=1);
  6833  0033FC  8EF2               	bsf	242,7,c	;volatile
  6834                           
  6835                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 177:                 (INTCONbits.PEIE=1);
  6836  0033FE  8CF2               	bsf	242,6,c	;volatile
  6837                           
  6838                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 179:                 (INTCON3bits.INT2E=1);
  6839  003400  88F0               	bsf	240,4,c	;volatile
  6840  003402  EFF5  F019         	goto	l8930
  6841  003406                     l8940:
  6842  003406  EE20 F004          	lfsr	2,4
  6843  00340A  5027               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  6844  00340C  26D9               	addwf	fsr2l,f,c
  6845  00340E  5028               	movf	(interrupt_INTx_enable@_interrupt+1)^0,w,c
  6846  003410  22DA               	addwfc	fsr2h,f,c
  6847  003412  50DF               	movf	indf2,w,c
  6848  003414  6E29               	movwf	??_interrupt_INTx_enable^0,c
  6849  003416  6A2A               	clrf	(??_interrupt_INTx_enable+1)^0,c
  6850                           
  6851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6852                           ; Switch size 1, requested type "simple"
  6853                           ; Number of cases is 1, Range of values is 0 to 0
  6854                           ; switch strategies available:
  6855                           ; Name         Instructions Cycles
  6856                           ; simple_byte            4     3 (average)
  6857                           ;	Chosen strategy is simple_byte
  6858  003418  502A               	movf	(??_interrupt_INTx_enable+1)^0,w,c
  6859  00341A  0A00               	xorlw	0	; case 0
  6860  00341C  B4D8               	btfsc	status,2,c
  6861  00341E  EF13  F01A         	goto	l9968
  6862  003422  EFEE  F019         	goto	l8928
  6863  003426                     l9968:
  6864                           
  6865                           ; Switch size 1, requested type "simple"
  6866                           ; Number of cases is 3, Range of values is 0 to 2
  6867                           ; switch strategies available:
  6868                           ; Name         Instructions Cycles
  6869                           ; simple_byte           10     6 (average)
  6870                           ;	Chosen strategy is simple_byte
  6871  003426  5029               	movf	??_interrupt_INTx_enable^0,w,c
  6872  003428  0A00               	xorlw	0	; case 0
  6873  00342A  B4D8               	btfsc	status,2,c
  6874  00342C  EFF2  F019         	goto	l419
  6875  003430  0A01               	xorlw	1	; case 1
  6876  003432  B4D8               	btfsc	status,2,c
  6877  003434  EFF9  F019         	goto	l421
  6878  003438  0A03               	xorlw	3	; case 2
  6879  00343A  B4D8               	btfsc	status,2,c
  6880  00343C  EFFE  F019         	goto	l422
  6881  003440  EFEE  F019         	goto	l8928
  6882  003444                     l8942:
  6883                           
  6884                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 188:     return ret;
  6885  003444  502B               	movf	interrupt_INTx_enable@ret^0,w,c
  6886  003446  0012               	return		;funcret
  6887  003448                     __end_of_interrupt_INTx_enable:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _interrupt_INTx_edge_init *****************
  6891 ;; Defined at:
  6892 ;;		line 303 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  _interrupt      2   38[COMRAM] PTR struct .
  6895 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  ret             1   42[COMRAM] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      unsigned char 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;Total ram usage:        5 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 13
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_interrupt_INTx_init
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text34
  6922  00261A                     __ptext34:
  6923                           	callstack 0
  6924  00261A                     _interrupt_INTx_edge_init:
  6925                           	callstack 15
  6926  00261A                     
  6927                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 306:     if(((void*)0)==_interrupt){
  6928  00261A  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  6929  00261C  1028               	iorwf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  6930  00261E  A4D8               	btfss	status,2,c
  6931  002620  EF14  F013         	goto	u5931
  6932  002624  EF16  F013         	goto	u5930
  6933  002628                     u5931:
  6934  002628  EF82  F013         	goto	l8876
  6935  00262C                     u5930:
  6936  00262C                     l8840:
  6937                           
  6938                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 307:         ret=(Std_ReturnType)0x00;
  6939  00262C  0E00               	movlw	0
  6940  00262E  6E2B               	movwf	interrupt_INTx_edge_init@ret^0,c
  6941                           
  6942                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 308:     }
  6943  002630  EFA1  F013         	goto	l8878
  6944  002634                     l8842:
  6945                           
  6946                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 312:                 if(RISING_EDGE==_interru
      +                          pt->edge){ (INTCON2bits.INTEDG0=1);}
  6947  002634  EE20 F003          	lfsr	2,3
  6948  002638  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  6949  00263A  26D9               	addwf	fsr2l,f,c
  6950  00263C  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  6951  00263E  22DA               	addwfc	fsr2h,f,c
  6952  002640  04DE               	decf	postinc2,w,c
  6953  002642  A4D8               	btfss	status,2,c
  6954  002644  EF26  F013         	goto	u5941
  6955  002648  EF28  F013         	goto	u5940
  6956  00264C                     u5941:
  6957  00264C  EF2B  F013         	goto	l8846
  6958  002650                     u5940:
  6959  002650  8CF1               	bsf	241,6,c	;volatile
  6960  002652  EF3A  F013         	goto	l8850
  6961  002656                     l8846:
  6962  002656  EE20 F003          	lfsr	2,3
  6963  00265A  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  6964  00265C  26D9               	addwf	fsr2l,f,c
  6965  00265E  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  6966  002660  22DA               	addwfc	fsr2h,f,c
  6967  002662  50DF               	movf	indf2,w,c
  6968  002664  A4D8               	btfss	status,2,c
  6969  002666  EF37  F013         	goto	u5951
  6970  00266A  EF39  F013         	goto	u5950
  6971  00266E                     u5951:
  6972  00266E  EF3A  F013         	goto	l8850
  6973  002672                     u5950:
  6974  002672  9CF1               	bcf	241,6,c	;volatile
  6975  002674                     l8850:
  6976                           
  6977                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 314:                 ret=(Std_ReturnType)0x01
      +                          ;
  6978  002674  0E01               	movlw	1
  6979  002676  6E2B               	movwf	interrupt_INTx_edge_init@ret^0,c
  6980                           
  6981                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 315:                 break;
  6982  002678  EFA1  F013         	goto	l8878
  6983  00267C                     l8852:
  6984                           
  6985                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 317:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG1=1);}
  6986  00267C  EE20 F003          	lfsr	2,3
  6987  002680  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  6988  002682  26D9               	addwf	fsr2l,f,c
  6989  002684  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  6990  002686  22DA               	addwfc	fsr2h,f,c
  6991  002688  04DE               	decf	postinc2,w,c
  6992  00268A  A4D8               	btfss	status,2,c
  6993  00268C  EF4A  F013         	goto	u5961
  6994  002690  EF4C  F013         	goto	u5960
  6995  002694                     u5961:
  6996  002694  EF4F  F013         	goto	l8856
  6997  002698                     u5960:
  6998  002698  8AF1               	bsf	241,5,c	;volatile
  6999  00269A  EF3A  F013         	goto	l8850
  7000  00269E                     l8856:
  7001  00269E  EE20 F003          	lfsr	2,3
  7002  0026A2  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7003  0026A4  26D9               	addwf	fsr2l,f,c
  7004  0026A6  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7005  0026A8  22DA               	addwfc	fsr2h,f,c
  7006  0026AA  50DF               	movf	indf2,w,c
  7007  0026AC  A4D8               	btfss	status,2,c
  7008  0026AE  EF5B  F013         	goto	u5971
  7009  0026B2  EF5D  F013         	goto	u5970
  7010  0026B6                     u5971:
  7011  0026B6  EF3A  F013         	goto	l8850
  7012  0026BA                     u5970:
  7013  0026BA  9AF1               	bcf	241,5,c	;volatile
  7014  0026BC  EF3A  F013         	goto	l8850
  7015  0026C0                     l8862:
  7016                           
  7017                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 322:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG2=1);}
  7018  0026C0  EE20 F003          	lfsr	2,3
  7019  0026C4  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7020  0026C6  26D9               	addwf	fsr2l,f,c
  7021  0026C8  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7022  0026CA  22DA               	addwfc	fsr2h,f,c
  7023  0026CC  04DE               	decf	postinc2,w,c
  7024  0026CE  A4D8               	btfss	status,2,c
  7025  0026D0  EF6C  F013         	goto	u5981
  7026  0026D4  EF6E  F013         	goto	u5980
  7027  0026D8                     u5981:
  7028  0026D8  EF71  F013         	goto	l8866
  7029  0026DC                     u5980:
  7030  0026DC  88F1               	bsf	241,4,c	;volatile
  7031  0026DE  EF3A  F013         	goto	l8850
  7032  0026E2                     l8866:
  7033  0026E2  EE20 F003          	lfsr	2,3
  7034  0026E6  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7035  0026E8  26D9               	addwf	fsr2l,f,c
  7036  0026EA  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7037  0026EC  22DA               	addwfc	fsr2h,f,c
  7038  0026EE  50DF               	movf	indf2,w,c
  7039  0026F0  A4D8               	btfss	status,2,c
  7040  0026F2  EF7D  F013         	goto	u5991
  7041  0026F6  EF7F  F013         	goto	u5990
  7042  0026FA                     u5991:
  7043  0026FA  EF3A  F013         	goto	l8850
  7044  0026FE                     u5990:
  7045  0026FE  98F1               	bcf	241,4,c	;volatile
  7046  002700  EF3A  F013         	goto	l8850
  7047  002704                     l8876:
  7048  002704  EE20 F004          	lfsr	2,4
  7049  002708  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7050  00270A  26D9               	addwf	fsr2l,f,c
  7051  00270C  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7052  00270E  22DA               	addwfc	fsr2h,f,c
  7053  002710  50DF               	movf	indf2,w,c
  7054  002712  6E29               	movwf	??_interrupt_INTx_edge_init^0,c
  7055  002714  6A2A               	clrf	(??_interrupt_INTx_edge_init+1)^0,c
  7056                           
  7057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7058                           ; Switch size 1, requested type "simple"
  7059                           ; Number of cases is 1, Range of values is 0 to 0
  7060                           ; switch strategies available:
  7061                           ; Name         Instructions Cycles
  7062                           ; simple_byte            4     3 (average)
  7063                           ;	Chosen strategy is simple_byte
  7064  002716  502A               	movf	(??_interrupt_INTx_edge_init+1)^0,w,c
  7065  002718  0A00               	xorlw	0	; case 0
  7066  00271A  B4D8               	btfsc	status,2,c
  7067  00271C  EF92  F013         	goto	l9970
  7068  002720  EF16  F013         	goto	l8840
  7069  002724                     l9970:
  7070                           
  7071                           ; Switch size 1, requested type "simple"
  7072                           ; Number of cases is 3, Range of values is 0 to 2
  7073                           ; switch strategies available:
  7074                           ; Name         Instructions Cycles
  7075                           ; simple_byte           10     6 (average)
  7076                           ;	Chosen strategy is simple_byte
  7077  002724  5029               	movf	??_interrupt_INTx_edge_init^0,w,c
  7078  002726  0A00               	xorlw	0	; case 0
  7079  002728  B4D8               	btfsc	status,2,c
  7080  00272A  EF1A  F013         	goto	l8842
  7081  00272E  0A01               	xorlw	1	; case 1
  7082  002730  B4D8               	btfsc	status,2,c
  7083  002732  EF3E  F013         	goto	l8852
  7084  002736  0A03               	xorlw	3	; case 2
  7085  002738  B4D8               	btfsc	status,2,c
  7086  00273A  EF60  F013         	goto	l8862
  7087  00273E  EF16  F013         	goto	l8840
  7088  002742                     l8878:
  7089                           
  7090                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 332:     return ret;
  7091  002742  502B               	movf	interrupt_INTx_edge_init@ret^0,w,c
  7092  002744  0012               	return		;funcret
  7093  002746                     __end_of_interrupt_INTx_edge_init:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function _interrupt_INTx_disable *****************
  7097 ;; Defined at:
  7098 ;;		line 197 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7101 ;;		 -> MY_INT1(6), MY_INT0(6), 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  ret             1   42[COMRAM] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      unsigned char 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;Total ram usage:        5 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; Hardware stack levels required when called: 13
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_interrupt_INTx_init
  7124 ;;		_interrupt_INTx_deInit
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text35
  7129  003888                     __ptext35:
  7130                           	callstack 0
  7131  003888                     _interrupt_INTx_disable:
  7132                           	callstack 15
  7133  003888                     
  7134                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 200:     if(((void*)0)==_interrupt){
  7135  003888  5027               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  7136  00388A  1028               	iorwf	(interrupt_INTx_disable@_interrupt+1)^0,w,c
  7137  00388C  A4D8               	btfss	status,2,c
  7138  00388E  EF4B  F01C         	goto	u5911
  7139  003892  EF4D  F01C         	goto	u5910
  7140  003896                     u5911:
  7141  003896  EF5C  F01C         	goto	l8800
  7142  00389A                     u5910:
  7143  00389A                     l8788:
  7144                           
  7145                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 201:         ret=(Std_ReturnType)0x00;
  7146  00389A  0E00               	movlw	0
  7147  00389C  6E2B               	movwf	interrupt_INTx_disable@ret^0,c
  7148                           
  7149                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 202:     }
  7150  00389E  EF7B  F01C         	goto	l8802
  7151  0038A2                     l430:
  7152                           
  7153                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 206:                 (INTCONbits.INT0E=0);
  7154  0038A2  98F2               	bcf	242,4,c	;volatile
  7155  0038A4                     l8790:
  7156                           
  7157                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 207:                 ret=(Std_ReturnType)0x01
      +                          ;
  7158  0038A4  0E01               	movlw	1
  7159  0038A6  6E2B               	movwf	interrupt_INTx_disable@ret^0,c
  7160                           
  7161                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 208:                 break;
  7162  0038A8  EF7B  F01C         	goto	l8802
  7163  0038AC                     l432:
  7164                           
  7165                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 210:                 (INTCON3bits.INT1E=0);
  7166  0038AC  96F0               	bcf	240,3,c	;volatile
  7167  0038AE  EF52  F01C         	goto	l8790
  7168  0038B2                     l433:
  7169                           
  7170                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 214:                 (INTCON3bits.INT2E=0);
  7171  0038B2  98F0               	bcf	240,4,c	;volatile
  7172  0038B4  EF52  F01C         	goto	l8790
  7173  0038B8                     l8800:
  7174  0038B8  EE20 F004          	lfsr	2,4
  7175  0038BC  5027               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  7176  0038BE  26D9               	addwf	fsr2l,f,c
  7177  0038C0  5028               	movf	(interrupt_INTx_disable@_interrupt+1)^0,w,c
  7178  0038C2  22DA               	addwfc	fsr2h,f,c
  7179  0038C4  50DF               	movf	indf2,w,c
  7180  0038C6  6E29               	movwf	??_interrupt_INTx_disable^0,c
  7181  0038C8  6A2A               	clrf	(??_interrupt_INTx_disable+1)^0,c
  7182                           
  7183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7184                           ; Switch size 1, requested type "simple"
  7185                           ; Number of cases is 1, Range of values is 0 to 0
  7186                           ; switch strategies available:
  7187                           ; Name         Instructions Cycles
  7188                           ; simple_byte            4     3 (average)
  7189                           ;	Chosen strategy is simple_byte
  7190  0038CA  502A               	movf	(??_interrupt_INTx_disable+1)^0,w,c
  7191  0038CC  0A00               	xorlw	0	; case 0
  7192  0038CE  B4D8               	btfsc	status,2,c
  7193  0038D0  EF6C  F01C         	goto	l9972
  7194  0038D4  EF4D  F01C         	goto	l8788
  7195  0038D8                     l9972:
  7196                           
  7197                           ; Switch size 1, requested type "simple"
  7198                           ; Number of cases is 3, Range of values is 0 to 2
  7199                           ; switch strategies available:
  7200                           ; Name         Instructions Cycles
  7201                           ; simple_byte           10     6 (average)
  7202                           ;	Chosen strategy is simple_byte
  7203  0038D8  5029               	movf	??_interrupt_INTx_disable^0,w,c
  7204  0038DA  0A00               	xorlw	0	; case 0
  7205  0038DC  B4D8               	btfsc	status,2,c
  7206  0038DE  EF51  F01C         	goto	l430
  7207  0038E2  0A01               	xorlw	1	; case 1
  7208  0038E4  B4D8               	btfsc	status,2,c
  7209  0038E6  EF56  F01C         	goto	l432
  7210  0038EA  0A03               	xorlw	3	; case 2
  7211  0038EC  B4D8               	btfsc	status,2,c
  7212  0038EE  EF59  F01C         	goto	l433
  7213  0038F2  EF4D  F01C         	goto	l8788
  7214  0038F6                     l8802:
  7215                           
  7216                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 223:     return ret;
  7217  0038F6  502B               	movf	interrupt_INTx_disable@ret^0,w,c
  7218  0038F8  0012               	return		;funcret
  7219  0038FA                     __end_of_interrupt_INTx_disable:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _interrupt_INTx_clear_flag *****************
  7223 ;; Defined at:
  7224 ;;		line 232 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7227 ;;		 -> MY_INT1(6), MY_INT0(6), 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  ret             1   42[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      unsigned char 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;Total ram usage:        5 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; Hardware stack levels required when called: 13
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_interrupt_INTx_init
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text36
  7254  0038FA                     __ptext36:
  7255                           	callstack 0
  7256  0038FA                     _interrupt_INTx_clear_flag:
  7257                           	callstack 15
  7258  0038FA                     
  7259                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 235:     if(((void*)0)==_interrupt){
  7260  0038FA  5027               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  7261  0038FC  1028               	iorwf	(interrupt_INTx_clear_flag@_interrupt+1)^0,w,c
  7262  0038FE  A4D8               	btfss	status,2,c
  7263  003900  EF84  F01C         	goto	u5921
  7264  003904  EF86  F01C         	goto	u5920
  7265  003908                     u5921:
  7266  003908  EF95  F01C         	goto	l8826
  7267  00390C                     u5920:
  7268  00390C                     l8814:
  7269                           
  7270                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 236:         ret=(Std_ReturnType)0x00;
  7271  00390C  0E00               	movlw	0
  7272  00390E  6E2B               	movwf	interrupt_INTx_clear_flag@ret^0,c
  7273                           
  7274                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 237:     }
  7275  003910  EFB4  F01C         	goto	l8828
  7276  003914                     l441:
  7277                           
  7278                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 241:                 (INTCONbits.INT0F=0);
  7279  003914  92F2               	bcf	242,1,c	;volatile
  7280  003916                     l8816:
  7281                           
  7282                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 242:                 ret=(Std_ReturnType)0x01
      +                          ;
  7283  003916  0E01               	movlw	1
  7284  003918  6E2B               	movwf	interrupt_INTx_clear_flag@ret^0,c
  7285                           
  7286                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 243:                 break;
  7287  00391A  EFB4  F01C         	goto	l8828
  7288  00391E                     l443:
  7289                           
  7290                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 245:                 (INTCONbits.INT0F=0);
  7291  00391E  92F2               	bcf	242,1,c	;volatile
  7292  003920  EF8B  F01C         	goto	l8816
  7293  003924                     l444:
  7294                           
  7295                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 249:                 (INTCONbits.INT0F=0);
  7296  003924  92F2               	bcf	242,1,c	;volatile
  7297  003926  EF8B  F01C         	goto	l8816
  7298  00392A                     l8826:
  7299  00392A  EE20 F004          	lfsr	2,4
  7300  00392E  5027               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  7301  003930  26D9               	addwf	fsr2l,f,c
  7302  003932  5028               	movf	(interrupt_INTx_clear_flag@_interrupt+1)^0,w,c
  7303  003934  22DA               	addwfc	fsr2h,f,c
  7304  003936  50DF               	movf	indf2,w,c
  7305  003938  6E29               	movwf	??_interrupt_INTx_clear_flag^0,c
  7306  00393A  6A2A               	clrf	(??_interrupt_INTx_clear_flag+1)^0,c
  7307                           
  7308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7309                           ; Switch size 1, requested type "simple"
  7310                           ; Number of cases is 1, Range of values is 0 to 0
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte            4     3 (average)
  7314                           ;	Chosen strategy is simple_byte
  7315  00393C  502A               	movf	(??_interrupt_INTx_clear_flag+1)^0,w,c
  7316  00393E  0A00               	xorlw	0	; case 0
  7317  003940  B4D8               	btfsc	status,2,c
  7318  003942  EFA5  F01C         	goto	l9974
  7319  003946  EF86  F01C         	goto	l8814
  7320  00394A                     l9974:
  7321                           
  7322                           ; Switch size 1, requested type "simple"
  7323                           ; Number of cases is 3, Range of values is 0 to 2
  7324                           ; switch strategies available:
  7325                           ; Name         Instructions Cycles
  7326                           ; simple_byte           10     6 (average)
  7327                           ;	Chosen strategy is simple_byte
  7328  00394A  5029               	movf	??_interrupt_INTx_clear_flag^0,w,c
  7329  00394C  0A00               	xorlw	0	; case 0
  7330  00394E  B4D8               	btfsc	status,2,c
  7331  003950  EF8A  F01C         	goto	l441
  7332  003954  0A01               	xorlw	1	; case 1
  7333  003956  B4D8               	btfsc	status,2,c
  7334  003958  EF8F  F01C         	goto	l443
  7335  00395C  0A03               	xorlw	3	; case 2
  7336  00395E  B4D8               	btfsc	status,2,c
  7337  003960  EF92  F01C         	goto	l444
  7338  003964  EF86  F01C         	goto	l8814
  7339  003968                     l8828:
  7340                           
  7341                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 258:     return ret;
  7342  003968  502B               	movf	interrupt_INTx_clear_flag@ret^0,w,c
  7343  00396A  0012               	return		;funcret
  7344  00396C                     __end_of_interrupt_INTx_clear_flag:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _INTx_select_InterruptHandler *****************
  7348 ;; Defined at:
  7349 ;;		line 360 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  _interrupt      2   41[COMRAM] PTR struct .
  7352 ;;		 -> MY_INT1(6), MY_INT0(6), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  ret             1   45[COMRAM] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      unsigned char 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;Total ram usage:        5 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; Hardware stack levels required when called: 14
  7371 ;; This function calls:
  7372 ;;		_INT0_set_InterruptHandler
  7373 ;;		_INT1_set_InterruptHandler
  7374 ;;		_INT2_set_InterruptHandler
  7375 ;; This function is called by:
  7376 ;;		_interrupt_INTx_init
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text37
  7381  002E02                     __ptext37:
  7382                           	callstack 0
  7383  002E02                     _INTx_select_InterruptHandler:
  7384                           	callstack 14
  7385  002E02                     
  7386                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 363:     if(((void*)0)==_interrupt){
  7387  002E02  502A               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  7388  002E04  102B               	iorwf	(INTx_select_InterruptHandler@_interrupt+1)^0,w,c
  7389  002E06  A4D8               	btfss	status,2,c
  7390  002E08  EF08  F017         	goto	u6011
  7391  002E0C  EF0A  F017         	goto	u6010
  7392  002E10                     u6011:
  7393  002E10  EF35  F017         	goto	l8914
  7394  002E14                     u6010:
  7395  002E14                     l8902:
  7396                           
  7397                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 364:         ret=(Std_ReturnType)0x00;
  7398  002E14  0E00               	movlw	0
  7399  002E16  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7400                           
  7401                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 365:     }
  7402  002E18  EF54  F017         	goto	l8916
  7403  002E1C                     l8904:
  7404                           
  7405                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 369:                 ret=INT0_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7406  002E1C  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7407  002E20  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7408  002E24  CFDE F027          	movff	postinc2,INT0_set_InterruptHandler@InterruptHandler
  7409  002E28  CFDD F028          	movff	postdec2,INT0_set_InterruptHandler@InterruptHandler+1
  7410  002E2C  ECD8  F021         	call	_INT0_set_InterruptHandler	;wreg free
  7411  002E30  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7412                           
  7413                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 370:                 break;
  7414  002E32  EF54  F017         	goto	l8916
  7415  002E36                     l8906:
  7416                           
  7417                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 372:                 ret=INT1_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7418  002E36  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7419  002E3A  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7420  002E3E  CFDE F027          	movff	postinc2,INT1_set_InterruptHandler@InterruptHandler
  7421  002E42  CFDD F028          	movff	postdec2,INT1_set_InterruptHandler@InterruptHandler+1
  7422  002E46  ECC3  F021         	call	_INT1_set_InterruptHandler	;wreg free
  7423  002E4A  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7424                           
  7425                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 373:                 break;
  7426  002E4C  EF54  F017         	goto	l8916
  7427  002E50                     l8908:
  7428                           
  7429                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 375:                 ret=INT2_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7430  002E50  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7431  002E54  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7432  002E58  CFDE F027          	movff	postinc2,INT2_set_InterruptHandler@InterruptHandler
  7433  002E5C  CFDD F028          	movff	postdec2,INT2_set_InterruptHandler@InterruptHandler+1
  7434  002E60  ECAE  F021         	call	_INT2_set_InterruptHandler	;wreg free
  7435  002E64  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7436                           
  7437                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 376:                 break;
  7438  002E66  EF54  F017         	goto	l8916
  7439  002E6A                     l8914:
  7440  002E6A  EE20 F004          	lfsr	2,4
  7441  002E6E  502A               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  7442  002E70  26D9               	addwf	fsr2l,f,c
  7443  002E72  502B               	movf	(INTx_select_InterruptHandler@_interrupt+1)^0,w,c
  7444  002E74  22DA               	addwfc	fsr2h,f,c
  7445  002E76  50DF               	movf	indf2,w,c
  7446  002E78  6E2C               	movwf	??_INTx_select_InterruptHandler^0,c
  7447  002E7A  6A2D               	clrf	(??_INTx_select_InterruptHandler+1)^0,c
  7448                           
  7449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7450                           ; Switch size 1, requested type "simple"
  7451                           ; Number of cases is 1, Range of values is 0 to 0
  7452                           ; switch strategies available:
  7453                           ; Name         Instructions Cycles
  7454                           ; simple_byte            4     3 (average)
  7455                           ;	Chosen strategy is simple_byte
  7456  002E7C  502D               	movf	(??_INTx_select_InterruptHandler+1)^0,w,c
  7457  002E7E  0A00               	xorlw	0	; case 0
  7458  002E80  B4D8               	btfsc	status,2,c
  7459  002E82  EF45  F017         	goto	l9976
  7460  002E86  EF0A  F017         	goto	l8902
  7461  002E8A                     l9976:
  7462                           
  7463                           ; Switch size 1, requested type "simple"
  7464                           ; Number of cases is 3, Range of values is 0 to 2
  7465                           ; switch strategies available:
  7466                           ; Name         Instructions Cycles
  7467                           ; simple_byte           10     6 (average)
  7468                           ;	Chosen strategy is simple_byte
  7469  002E8A  502C               	movf	??_INTx_select_InterruptHandler^0,w,c
  7470  002E8C  0A00               	xorlw	0	; case 0
  7471  002E8E  B4D8               	btfsc	status,2,c
  7472  002E90  EF0E  F017         	goto	l8904
  7473  002E94  0A01               	xorlw	1	; case 1
  7474  002E96  B4D8               	btfsc	status,2,c
  7475  002E98  EF1B  F017         	goto	l8906
  7476  002E9C  0A03               	xorlw	3	; case 2
  7477  002E9E  B4D8               	btfsc	status,2,c
  7478  002EA0  EF28  F017         	goto	l8908
  7479  002EA4  EF0A  F017         	goto	l8902
  7480  002EA8                     l8916:
  7481                           
  7482                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 383:     return ret;
  7483  002EA8  502E               	movf	INTx_select_InterruptHandler@ret^0,w,c
  7484  002EAA  0012               	return		;funcret
  7485  002EAC                     __end_of_INTx_select_InterruptHandler:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _INT2_set_InterruptHandler *****************
  7489 ;; Defined at:
  7490 ;;		line 432 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7493 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  ret             1   40[COMRAM] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      unsigned char 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;Total ram usage:        3 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 13
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_INTx_select_InterruptHandler
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text38
  7520  00435C                     __ptext38:
  7521                           	callstack 0
  7522  00435C                     _INT2_set_InterruptHandler:
  7523                           	callstack 14
  7524  00435C                     
  7525                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 435:     if(((void*)0)==InterruptHandler){
  7526  00435C  5027               	movf	INT2_set_InterruptHandler@InterruptHandler^0,w,c
  7527  00435E  1028               	iorwf	(INT2_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7528  004360  A4D8               	btfss	status,2,c
  7529  004362  EFB5  F021         	goto	u5721
  7530  004366  EFB7  F021         	goto	u5720
  7531  00436A                     u5721:
  7532  00436A  EFBB  F021         	goto	l8614
  7533  00436E                     u5720:
  7534  00436E                     
  7535                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 436:         ret=(Std_ReturnType)0x00;
  7536  00436E  0E00               	movlw	0
  7537  004370  6E29               	movwf	INT2_set_InterruptHandler@ret^0,c
  7538                           
  7539                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 437:     }
  7540  004372  EFC1  F021         	goto	l8618
  7541  004376                     l8614:
  7542                           
  7543                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 439:         INT2_InterruptHandler=InterruptH
      +                          andler;
  7544  004376  C027  F035         	movff	INT2_set_InterruptHandler@InterruptHandler,_INT2_InterruptHandler
  7545  00437A  C028  F036         	movff	INT2_set_InterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  7546  00437E                     
  7547                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 440:         ret=(Std_ReturnType)0x01;
  7548  00437E  0E01               	movlw	1
  7549  004380  6E29               	movwf	INT2_set_InterruptHandler@ret^0,c
  7550  004382                     l8618:
  7551                           
  7552                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 443:     return ret;
  7553  004382  5029               	movf	INT2_set_InterruptHandler@ret^0,w,c
  7554  004384  0012               	return		;funcret
  7555  004386                     __end_of_INT2_set_InterruptHandler:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _INT1_set_InterruptHandler *****************
  7559 ;; Defined at:
  7560 ;;		line 412 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7563 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  ret             1   40[COMRAM] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      unsigned char 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;Total ram usage:        3 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 13
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_INTx_select_InterruptHandler
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text39
  7590  004386                     __ptext39:
  7591                           	callstack 0
  7592  004386                     _INT1_set_InterruptHandler:
  7593                           	callstack 14
  7594  004386                     
  7595                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 415:     if(((void*)0)==InterruptHandler){
  7596  004386  5027               	movf	INT1_set_InterruptHandler@InterruptHandler^0,w,c
  7597  004388  1028               	iorwf	(INT1_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7598  00438A  A4D8               	btfss	status,2,c
  7599  00438C  EFCA  F021         	goto	u5711
  7600  004390  EFCC  F021         	goto	u5710
  7601  004394                     u5711:
  7602  004394  EFD0  F021         	goto	l8600
  7603  004398                     u5710:
  7604  004398                     
  7605                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 416:         ret=(Std_ReturnType)0x00;
  7606  004398  0E00               	movlw	0
  7607  00439A  6E29               	movwf	INT1_set_InterruptHandler@ret^0,c
  7608                           
  7609                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 417:     }
  7610  00439C  EFD6  F021         	goto	l8604
  7611  0043A0                     l8600:
  7612                           
  7613                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 419:         INT1_InterruptHandler=InterruptH
      +                          andler;
  7614  0043A0  C027  F037         	movff	INT1_set_InterruptHandler@InterruptHandler,_INT1_InterruptHandler
  7615  0043A4  C028  F038         	movff	INT1_set_InterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  7616  0043A8                     
  7617                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 420:         ret=(Std_ReturnType)0x01;
  7618  0043A8  0E01               	movlw	1
  7619  0043AA  6E29               	movwf	INT1_set_InterruptHandler@ret^0,c
  7620  0043AC                     l8604:
  7621                           
  7622                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 423:     return ret;
  7623  0043AC  5029               	movf	INT1_set_InterruptHandler@ret^0,w,c
  7624  0043AE  0012               	return		;funcret
  7625  0043B0                     __end_of_INT1_set_InterruptHandler:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _INT0_set_InterruptHandler *****************
  7629 ;; Defined at:
  7630 ;;		line 392 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7633 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  ret             1   40[COMRAM] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      unsigned char 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;Total ram usage:        3 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 13
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_INTx_select_InterruptHandler
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text40
  7660  0043B0                     __ptext40:
  7661                           	callstack 0
  7662  0043B0                     _INT0_set_InterruptHandler:
  7663                           	callstack 14
  7664  0043B0                     
  7665                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 395:     if(((void*)0)==InterruptHandler){
  7666  0043B0  5027               	movf	INT0_set_InterruptHandler@InterruptHandler^0,w,c
  7667  0043B2  1028               	iorwf	(INT0_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7668  0043B4  A4D8               	btfss	status,2,c
  7669  0043B6  EFDF  F021         	goto	u5701
  7670  0043BA  EFE1  F021         	goto	u5700
  7671  0043BE                     u5701:
  7672  0043BE  EFE5  F021         	goto	l8586
  7673  0043C2                     u5700:
  7674  0043C2                     
  7675                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 396:         ret=(Std_ReturnType)0x00;
  7676  0043C2  0E00               	movlw	0
  7677  0043C4  6E29               	movwf	INT0_set_InterruptHandler@ret^0,c
  7678                           
  7679                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 397:     }
  7680  0043C6  EFEB  F021         	goto	l8590
  7681  0043CA                     l8586:
  7682                           
  7683                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 399:         INT0_InterruptHandler=InterruptH
      +                          andler;
  7684  0043CA  C027  F039         	movff	INT0_set_InterruptHandler@InterruptHandler,_INT0_InterruptHandler
  7685  0043CE  C028  F03A         	movff	INT0_set_InterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  7686  0043D2                     
  7687                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 400:         ret=(Std_ReturnType)0x01;
  7688  0043D2  0E01               	movlw	1
  7689  0043D4  6E29               	movwf	INT0_set_InterruptHandler@ret^0,c
  7690  0043D6                     l8590:
  7691                           
  7692                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 403:     return ret;
  7693  0043D6  5029               	movf	INT0_set_InterruptHandler@ret^0,w,c
  7694  0043D8  0012               	return		;funcret
  7695  0043DA                     __end_of_INT0_set_InterruptHandler:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _I2C_Initialize *****************
  7699 ;; Defined at:
  7700 ;;		line 125 in file "mcc_generated_files/i2c_master.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 13
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		__Initialize
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text41
  7729  00459A                     __ptext41:
  7730                           	callstack 0
  7731  00459A                     _I2C_Initialize:
  7732                           	callstack 16
  7733  00459A                     
  7734                           ;mcc_generated_files/i2c_master.c: 127:     SSPSTAT = 0x00;
  7735  00459A  0E00               	movlw	0
  7736  00459C  6EC7               	movwf	199,c	;volatile
  7737                           
  7738                           ;mcc_generated_files/i2c_master.c: 128:     SSPCON1 = 0x08;
  7739  00459E  0E08               	movlw	8
  7740  0045A0  6EC6               	movwf	198,c	;volatile
  7741                           
  7742                           ;mcc_generated_files/i2c_master.c: 129:     SSPCON2 = 0x00;
  7743  0045A2  0E00               	movlw	0
  7744  0045A4  6EC5               	movwf	197,c	;volatile
  7745                           
  7746                           ;mcc_generated_files/i2c_master.c: 130:     SSPADD = 0x13;
  7747  0045A6  0E13               	movlw	19
  7748  0045A8  6EC8               	movwf	200,c	;volatile
  7749  0045AA                     
  7750                           ;mcc_generated_files/i2c_master.c: 131:     SSPCON1bits.SSPEN = 0;
  7751  0045AA  9AC6               	bcf	198,5,c	;volatile
  7752  0045AC  0012               	return		;funcret
  7753  0045AE                     __end_of_I2C_Initialize:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function _RealTimeClockDS1307_Get_Date_Time *****************
  7757 ;; Defined at:
  7758 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;		None
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  6   10[BANK0 ] struct .
  7765 ;; Registers used:
  7766 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7772 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;Total ram usage:        6 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 22
  7779 ;; This function calls:
  7780 ;;		_I2C_Read1ByteRegister
  7781 ;; This function is called by:
  7782 ;;		_main
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text42
  7787  003B2C                     __ptext42:
  7788                           	callstack 0
  7789  003B2C                     _RealTimeClockDS1307_Get_Date_Time:
  7790                           	callstack 8
  7791  003B2C                     
  7792                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
  7793  003B2C  0E00               	movlw	0
  7794  003B2E  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7795  003B30  0ED0               	movlw	208
  7796  003B32  EC62  F01A         	call	_I2C_Read1ByteRegister
  7797  003B36  0100               	movlb	0	; () banked
  7798  003B38  6FF1               	movwf	(_RTC1307@RealTimeClockDS1307$F281+2)& (0+255),b
  7799                           
  7800                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
  7801  003B3A  0E01               	movlw	1
  7802  003B3C  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7803  003B3E  0ED0               	movlw	208
  7804  003B40  EC62  F01A         	call	_I2C_Read1ByteRegister
  7805  003B44  0100               	movlb	0	; () banked
  7806  003B46  6FF0               	movwf	(_RTC1307@RealTimeClockDS1307$F281+1)& (0+255),b
  7807                           
  7808                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
  7809  003B48  0E02               	movlw	2
  7810  003B4A  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7811  003B4C  0ED0               	movlw	208
  7812  003B4E  EC62  F01A         	call	_I2C_Read1ByteRegister
  7813  003B52  0100               	movlb	0	; () banked
  7814  003B54  6FEF               	movwf	_RTC1307@RealTimeClockDS1307$F281& (0+255),b
  7815                           
  7816                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
  7817  003B56  0E04               	movlw	4
  7818  003B58  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7819  003B5A  0ED0               	movlw	208
  7820  003B5C  EC62  F01A         	call	_I2C_Read1ByteRegister
  7821  003B60  0100               	movlb	0	; () banked
  7822  003B62  6FF4               	movwf	(_RTC1307@RealTimeClockDS1307$F281+5)& (0+255),b
  7823                           
  7824                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
  7825  003B64  0E05               	movlw	5
  7826  003B66  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7827  003B68  0ED0               	movlw	208
  7828  003B6A  EC62  F01A         	call	_I2C_Read1ByteRegister
  7829  003B6E  0100               	movlb	0	; () banked
  7830  003B70  6FF3               	movwf	(_RTC1307@RealTimeClockDS1307$F281+4)& (0+255),b
  7831                           
  7832                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
  7833  003B72  0E06               	movlw	6
  7834  003B74  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  7835  003B76  0ED0               	movlw	208
  7836  003B78  EC62  F01A         	call	_I2C_Read1ByteRegister
  7837  003B7C  0100               	movlb	0	; () banked
  7838  003B7E  6FF2               	movwf	(_RTC1307@RealTimeClockDS1307$F281+3)& (0+255),b
  7839  003B80                     
  7840                           ; BSR set to: 0
  7841                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
  7842  003B80  EE20  F0EF         	lfsr	2,_RTC1307@RealTimeClockDS1307$F281
  7843  003B84  EE00  F08A         	lfsr	0,?_RealTimeClockDS1307_Get_Date_Time
  7844  003B88  0E05               	movlw	5
  7845  003B8A                     u6251:
  7846  003B8A  CFDB FFEB          	movff	plusw2,plusw0
  7847  003B8E  06E8               	decf	wreg,f,c
  7848  003B90  E2FC               	bc	u6251
  7849  003B92                     
  7850                           ; BSR set to: 0
  7851  003B92  0012               	return		;funcret
  7852  003B94                     __end_of_RealTimeClockDS1307_Get_Date_Time:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _I2C_Read1ByteRegister *****************
  7856 ;; Defined at:
  7857 ;;		line 21 in file "mcc_generated_files/examples/i2c_master_example.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  address         1    wreg     unsigned char 
  7860 ;;  reg             1   47[COMRAM] unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  address         1    8[BANK0 ] unsigned char 
  7863 ;;  returnValue     1    9[BANK0 ] unsigned char 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      unsigned char 
  7866 ;; Registers used:
  7867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;Total ram usage:        3 bytes
  7878 ;; Hardware stack levels used: 1
  7879 ;; Hardware stack levels required when called: 21
  7880 ;; This function calls:
  7881 ;;		_I2C_Close
  7882 ;;		_I2C_MasterWrite
  7883 ;;		_I2C_Open
  7884 ;;		_I2C_SetAddressNackCallback
  7885 ;;		_I2C_SetBuffer
  7886 ;;		_I2C_SetDataCompleteCallback
  7887 ;; This function is called by:
  7888 ;;		_RealTimeClockDS1307_Get_Date_Time
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text43
  7893  0034C4                     __ptext43:
  7894                           	callstack 0
  7895  0034C4                     _I2C_Read1ByteRegister:
  7896                           	callstack 8
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;incstack = 0
  7900                           ;I2C_Read1ByteRegister@address stored from wreg
  7901  0034C4  0100               	movlb	0	; () banked
  7902  0034C6  6F88               	movwf	I2C_Read1ByteRegister@address& (0+255),b
  7903  0034C8                     
  7904                           ;mcc_generated_files/examples/i2c_master_example.c: 21: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 22:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 23:     uint8_t returnValue = 0x00
      +                          ;
  7905  0034C8  0E00               	movlw	0
  7906  0034CA  0100               	movlb	0	; () banked
  7907  0034CC  6F89               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
  7908  0034CE                     l9114:
  7909  0034CE  0100               	movlb	0	; () banked
  7910  0034D0  5188               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
  7911  0034D2  EC8B  F018         	call	_I2C_Open
  7912  0034D6  0900               	iorlw	0
  7913  0034D8  B4D8               	btfsc	status,2,c
  7914  0034DA  EF71  F01A         	goto	u6151
  7915  0034DE  EF73  F01A         	goto	u6150
  7916  0034E2                     u6151:
  7917  0034E2  EF67  F01A         	goto	l9114
  7918  0034E6                     u6150:
  7919  0034E6                     
  7920                           ;mcc_generated_files/examples/i2c_master_example.c: 26:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  7921  0034E6  0EFA               	movlw	low _rd1RegCompleteHandler
  7922  0034E8  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  7923  0034EA  0E40               	movlw	high _rd1RegCompleteHandler
  7924  0034EC  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  7925  0034EE  0E89               	movlw	low I2C_Read1ByteRegister@returnValue
  7926  0034F0  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  7927  0034F2  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  7928  0034F4  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  7929  0034F6  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
  7930  0034FA                     
  7931                           ;mcc_generated_files/examples/i2c_master_example.c: 27:     I2C_SetBuffer(&reg,1);
  7932  0034FA  0E30               	movlw	low I2C_Read1ByteRegister@reg
  7933  0034FC  6E27               	movwf	I2C_SetBuffer@buffer^0,c
  7934  0034FE  0E00               	movlw	high I2C_Read1ByteRegister@reg
  7935  003500  6E28               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  7936  003502  0E00               	movlw	0
  7937  003504  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  7938  003506  0E01               	movlw	1
  7939  003508  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
  7940  00350A  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
  7941  00350E                     
  7942                           ;mcc_generated_files/examples/i2c_master_example.c: 28:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  7943  00350E  0E00               	movlw	0
  7944  003510  6E2C               	movwf	I2C_SetAddressNackCallback@cb^0,c
  7945  003512  0E00               	movlw	0
  7946  003514  6E2D               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  7947  003516  0E00               	movlw	0
  7948  003518  6E2E               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  7949  00351A  0E00               	movlw	0
  7950  00351C  6E2F               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  7951  00351E  EC70  F022         	call	_I2C_SetAddressNackCallback	;wreg free
  7952  003522                     
  7953                           ;mcc_generated_files/examples/i2c_master_example.c: 29:     I2C_MasterWrite();
  7954  003522  EC70  F023         	call	_I2C_MasterWrite	;wreg free
  7955  003526                     l9124:
  7956  003526  EC2A  F021         	call	_I2C_Close	;wreg free
  7957  00352A  06E8               	decf	wreg,f,c
  7958  00352C  B4D8               	btfsc	status,2,c
  7959  00352E  EF9B  F01A         	goto	u6161
  7960  003532  EF9D  F01A         	goto	u6160
  7961  003536                     u6161:
  7962  003536  EF93  F01A         	goto	l9124
  7963  00353A                     u6160:
  7964  00353A                     
  7965                           ;mcc_generated_files/examples/i2c_master_example.c: 32:     return returnValue;
  7966  00353A  0100               	movlb	0	; () banked
  7967  00353C  5189               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
  7968  00353E                     
  7969                           ; BSR set to: 0
  7970  00353E  0012               	return		;funcret
  7971  003540                     __end_of_I2C_Read1ByteRegister:
  7972                           	callstack 0
  7973                           
  7974 ;; *************** function _I2C_SetAddressNackCallback *****************
  7975 ;; Defined at:
  7976 ;;		line 241 in file "mcc_generated_files/i2c_master.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  cb              2   43[COMRAM] PTR FTN(PTR void ,)enum 
  7979 ;;		 -> Absolute function(1), 
  7980 ;;  ptr             2   45[COMRAM] PTR void 
  7981 ;;		 -> NULL(0), 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;Total ram usage:        4 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; Hardware stack levels required when called: 14
  8000 ;; This function calls:
  8001 ;;		_I2C_SetCallback
  8002 ;; This function is called by:
  8003 ;;		_I2C_Read1ByteRegister
  8004 ;;		_I2C_Read2ByteRegister
  8005 ;;		_I2C_Write2ByteRegister
  8006 ;;		_I2C_WriteNBytes
  8007 ;;		_I2C_ReadDataBlock
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text44
  8012  0044E0                     __ptext44:
  8013                           	callstack 0
  8014  0044E0                     _I2C_SetAddressNackCallback:
  8015                           	callstack 14
  8016  0044E0                     
  8017                           ;mcc_generated_files/i2c_master.c: 241: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 242: {;mcc_generated_files/i2c_master.c:
      +                           243:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8018  0044E0  C02C  F027         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  8019  0044E4  C02D  F028         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  8020  0044E8  C02E  F029         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  8021  0044EC  C02F  F02A         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  8022  0044F0  0E02               	movlw	2
  8023  0044F2  EC1B  F01B         	call	_I2C_SetCallback
  8024  0044F6  0012               	return		;funcret
  8025  0044F8                     __end_of_I2C_SetAddressNackCallback:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function _I2C_Open *****************
  8029 ;; Defined at:
  8030 ;;		line 134 in file "mcc_generated_files/i2c_master.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  address         1    wreg     unsigned char 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  address         1   38[COMRAM] unsigned char 
  8035 ;;  returnValue     1   39[COMRAM] enum E355
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      enum E355
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;Total ram usage:        2 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 14
  8052 ;; This function calls:
  8053 ;;		_I2C_MasterClearIrq
  8054 ;;		_I2C_MasterOpen
  8055 ;; This function is called by:
  8056 ;;		_I2C_Read1ByteRegister
  8057 ;;		_I2C_Read2ByteRegister
  8058 ;;		_I2C_Write2ByteRegister
  8059 ;;		_I2C_WriteNBytes
  8060 ;;		_I2C_ReadNBytes
  8061 ;;		_I2C_ReadDataBlock
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text45
  8066  003116                     __ptext45:
  8067                           	callstack 0
  8068  003116                     _I2C_Open:
  8069                           	callstack 14
  8070                           
  8071                           ;incstack = 0
  8072                           ;I2C_Open@address stored from wreg
  8073  003116  6E27               	movwf	I2C_Open@address^0,c
  8074  003118                     
  8075                           ;mcc_generated_files/i2c_master.c: 134: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 135: {;mcc_generated_files/i2c_master.c: 136:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8076  003118  0E01               	movlw	1
  8077  00311A  6E28               	movwf	I2C_Open@returnValue^0,c
  8078  00311C                     
  8079                           ;mcc_generated_files/i2c_master.c: 138:     if(!I2C_Status.inUse)
  8080  00311C  0100               	movlb	0	; () banked
  8081  00311E  B5EE               	btfsc	(_I2C_Status+35)& (0+255),2,b
  8082  003120  EF94  F018         	goto	u6031
  8083  003124  EF96  F018         	goto	u6030
  8084  003128                     u6031:
  8085  003128  EFD0  F018         	goto	l8994
  8086  00312C                     u6030:
  8087  00312C                     
  8088                           ; BSR set to: 0
  8089                           ;mcc_generated_files/i2c_master.c: 139:     {;mcc_generated_files/i2c_master.c: 140:    
      +                               I2C_Status.address = address;
  8090  00312C  C027  F0E7         	movff	I2C_Open@address,_I2C_Status+28
  8091  003130                     
  8092                           ; BSR set to: 0
  8093                           ;mcc_generated_files/i2c_master.c: 141:         I2C_Status.busy = 0;
  8094  003130  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
  8095  003132                     
  8096                           ; BSR set to: 0
  8097                           ;mcc_generated_files/i2c_master.c: 142:         I2C_Status.inUse = 1;
  8098  003132  85EE               	bsf	(_I2C_Status+35)& (0+255),2,b
  8099  003134                     
  8100                           ; BSR set to: 0
  8101                           ;mcc_generated_files/i2c_master.c: 143:         I2C_Status.addressNackCheck = 0;
  8102  003134  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
  8103  003136                     
  8104                           ; BSR set to: 0
  8105                           ;mcc_generated_files/i2c_master.c: 144:         I2C_Status.state = I2C_RESET;
  8106  003136  0E0E               	movlw	14
  8107  003138  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
  8108  00313A                     
  8109                           ; BSR set to: 0
  8110                           ;mcc_generated_files/i2c_master.c: 145:         I2C_Status.time_out_value = 500;
  8111  00313A  0E01               	movlw	1
  8112  00313C  6FE6               	movwf	(_I2C_Status+27)& (0+255),b
  8113  00313E  0EF4               	movlw	244
  8114  003140  6FE5               	movwf	(_I2C_Status+26)& (0+255),b
  8115  003142                     
  8116                           ; BSR set to: 0
  8117                           ;mcc_generated_files/i2c_master.c: 146:         I2C_Status.bufferFree = 1;
  8118  003142  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
  8119  003144                     
  8120                           ; BSR set to: 0
  8121                           ;mcc_generated_files/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8122  003144  0EA0               	movlw	low _I2C_CallbackReturnStop
  8123  003146  6FCB               	movwf	_I2C_Status& (0+255),b
  8124  003148  0E46               	movlw	high _I2C_CallbackReturnStop
  8125  00314A  6FCC               	movwf	(_I2C_Status+1)& (0+255),b
  8126  00314C                     
  8127                           ; BSR set to: 0
  8128                           ;mcc_generated_files/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8129  00314C  0E00               	movlw	0
  8130  00314E  6FD7               	movwf	(_I2C_Status+12)& (0+255),b
  8131  003150  0E00               	movlw	0
  8132  003152  6FD8               	movwf	(_I2C_Status+13)& (0+255),b
  8133  003154                     
  8134                           ; BSR set to: 0
  8135                           ;mcc_generated_files/i2c_master.c: 151:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8136  003154  0EA0               	movlw	low _I2C_CallbackReturnStop
  8137  003156  6FCD               	movwf	(_I2C_Status+2)& (0+255),b
  8138  003158  0E46               	movlw	high _I2C_CallbackReturnStop
  8139  00315A  6FCE               	movwf	(_I2C_Status+3)& (0+255),b
  8140  00315C                     
  8141                           ; BSR set to: 0
  8142                           ;mcc_generated_files/i2c_master.c: 152:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8143  00315C  0E00               	movlw	0
  8144  00315E  6FD9               	movwf	(_I2C_Status+14)& (0+255),b
  8145  003160  0E00               	movlw	0
  8146  003162  6FDA               	movwf	(_I2C_Status+15)& (0+255),b
  8147  003164                     
  8148                           ; BSR set to: 0
  8149                           ;mcc_generated_files/i2c_master.c: 153:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8150  003164  0EA0               	movlw	low _I2C_CallbackReturnStop
  8151  003166  6FCF               	movwf	(_I2C_Status+4)& (0+255),b
  8152  003168  0E46               	movlw	high _I2C_CallbackReturnStop
  8153  00316A  6FD0               	movwf	(_I2C_Status+5)& (0+255),b
  8154  00316C                     
  8155                           ; BSR set to: 0
  8156                           ;mcc_generated_files/i2c_master.c: 154:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8157  00316C  0E00               	movlw	0
  8158  00316E  6FDB               	movwf	(_I2C_Status+16)& (0+255),b
  8159  003170  0E00               	movlw	0
  8160  003172  6FDC               	movwf	(_I2C_Status+17)& (0+255),b
  8161  003174                     
  8162                           ; BSR set to: 0
  8163                           ;mcc_generated_files/i2c_master.c: 155:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8164  003174  0EA0               	movlw	low _I2C_CallbackReturnStop
  8165  003176  6FD1               	movwf	(_I2C_Status+6)& (0+255),b
  8166  003178  0E46               	movlw	high _I2C_CallbackReturnStop
  8167  00317A  6FD2               	movwf	(_I2C_Status+7)& (0+255),b
  8168  00317C                     
  8169                           ; BSR set to: 0
  8170                           ;mcc_generated_files/i2c_master.c: 156:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8171  00317C  0E00               	movlw	0
  8172  00317E  6FDD               	movwf	(_I2C_Status+18)& (0+255),b
  8173  003180  0E00               	movlw	0
  8174  003182  6FDE               	movwf	(_I2C_Status+19)& (0+255),b
  8175  003184                     
  8176                           ; BSR set to: 0
  8177                           ;mcc_generated_files/i2c_master.c: 157:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8178  003184  0E92               	movlw	low _I2C_CallbackReturnReset
  8179  003186  6FD3               	movwf	(_I2C_Status+8)& (0+255),b
  8180  003188  0E46               	movlw	high _I2C_CallbackReturnReset
  8181  00318A  6FD4               	movwf	(_I2C_Status+9)& (0+255),b
  8182  00318C                     
  8183                           ; BSR set to: 0
  8184                           ;mcc_generated_files/i2c_master.c: 158:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8185  00318C  0E00               	movlw	0
  8186  00318E  6FDF               	movwf	(_I2C_Status+20)& (0+255),b
  8187  003190  0E00               	movlw	0
  8188  003192  6FE0               	movwf	(_I2C_Status+21)& (0+255),b
  8189  003194                     
  8190                           ; BSR set to: 0
  8191                           ;mcc_generated_files/i2c_master.c: 160:         I2C_MasterClearIrq();
  8192  003194  ECBB  F023         	call	_I2C_MasterClearIrq	;wreg free
  8193  003198                     
  8194                           ;mcc_generated_files/i2c_master.c: 161:         I2C_MasterOpen();
  8195  003198  EC23  F022         	call	_I2C_MasterOpen	;wreg free
  8196  00319C                     
  8197                           ;mcc_generated_files/i2c_master.c: 162:         returnValue = I2C_NOERR;
  8198  00319C  0E00               	movlw	0
  8199  00319E  6E28               	movwf	I2C_Open@returnValue^0,c
  8200  0031A0                     l8994:
  8201                           
  8202                           ;mcc_generated_files/i2c_master.c: 164:     return returnValue;
  8203  0031A0  5028               	movf	I2C_Open@returnValue^0,w,c
  8204  0031A2  0012               	return		;funcret
  8205  0031A4                     __end_of_I2C_Open:
  8206                           	callstack 0
  8207                           
  8208 ;; *************** function _I2C_MasterOpen *****************
  8209 ;; Defined at:
  8210 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      _Bool 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;Total ram usage:        0 bytes
  8229 ;; Hardware stack levels used: 1
  8230 ;; Hardware stack levels required when called: 13
  8231 ;; This function calls:
  8232 ;;		Nothing
  8233 ;; This function is called by:
  8234 ;;		_I2C_Open
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text46
  8239  004446                     __ptext46:
  8240                           	callstack 0
  8241  004446                     _I2C_MasterOpen:
  8242                           	callstack 14
  8243  004446                     
  8244                           ;mcc_generated_files/i2c_master.c: 503:     if(!SSPCON1bits.SSPEN)
  8245  004446  BAC6               	btfsc	198,5,c	;volatile
  8246  004448  EF28  F022         	goto	u5731
  8247  00444C  EF2A  F022         	goto	u5730
  8248  004450                     u5731:
  8249  004450  EF33  F022         	goto	l903
  8250  004454                     u5730:
  8251  004454                     
  8252                           ;mcc_generated_files/i2c_master.c: 504:     {;mcc_generated_files/i2c_master.c: 505:    
      +                               SSPSTAT = 0x00;
  8253  004454  0E00               	movlw	0
  8254  004456  6EC7               	movwf	199,c	;volatile
  8255                           
  8256                           ;mcc_generated_files/i2c_master.c: 506:         SSPCON1 = 0x08;
  8257  004458  0E08               	movlw	8
  8258  00445A  6EC6               	movwf	198,c	;volatile
  8259                           
  8260                           ;mcc_generated_files/i2c_master.c: 507:         SSPCON2 = 0x00;
  8261  00445C  0E00               	movlw	0
  8262  00445E  6EC5               	movwf	197,c	;volatile
  8263                           
  8264                           ;mcc_generated_files/i2c_master.c: 508:         SSPADD = 0x13;
  8265  004460  0E13               	movlw	19
  8266  004462  6EC8               	movwf	200,c	;volatile
  8267  004464                     
  8268                           ;mcc_generated_files/i2c_master.c: 509:         SSPCON1bits.SSPEN = 1;
  8269  004464  8AC6               	bsf	198,5,c	;volatile
  8270  004466                     l903:
  8271  004466  0012               	return		;funcret
  8272  004468                     __end_of_I2C_MasterOpen:
  8273                           	callstack 0
  8274                           
  8275 ;; *************** function _I2C_MasterWrite *****************
  8276 ;; Defined at:
  8277 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      enum E355
  8284 ;; Registers used:
  8285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;Total ram usage:        0 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; Hardware stack levels required when called: 20
  8298 ;; This function calls:
  8299 ;;		_I2C_MasterOperation
  8300 ;; This function is called by:
  8301 ;;		_I2C_Read1ByteRegister
  8302 ;;		_I2C_Read2ByteRegister
  8303 ;;		_I2C_Write2ByteRegister
  8304 ;;		_I2C_WriteNBytes
  8305 ;;		_I2C_ReadDataBlock
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text47
  8310  0046E0                     __ptext47:
  8311                           	callstack 0
  8312  0046E0                     _I2C_MasterWrite:
  8313                           	callstack 8
  8314  0046E0                     
  8315                           ;mcc_generated_files/i2c_master.c: 211:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8316  0046E0  0E00               	movlw	0
  8317  0046E2  EC88  F01F         	call	_I2C_MasterOperation
  8318  0046E6  0012               	return		;funcret
  8319  0046E8                     __end_of_I2C_MasterWrite:
  8320                           	callstack 0
  8321                           
  8322 ;; *************** function _I2C_MasterOperation *****************
  8323 ;; Defined at:
  8324 ;;		line 182 in file "mcc_generated_files/i2c_master.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  read            1    wreg     _Bool 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  read            1    6[BANK0 ] _Bool 
  8329 ;;  returnValue     1    7[BANK0 ] enum E355
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      enum E355
  8332 ;; Registers used:
  8333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;Total ram usage:        2 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 19
  8346 ;; This function calls:
  8347 ;;		_I2C_MasterStart
  8348 ;;		_I2C_Poller
  8349 ;; This function is called by:
  8350 ;;		_I2C_MasterWrite
  8351 ;;		_I2C_MasterRead
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text48
  8356  003F10                     __ptext48:
  8357                           	callstack 0
  8358  003F10                     _I2C_MasterOperation:
  8359                           	callstack 8
  8360                           
  8361                           ;incstack = 0
  8362                           ;I2C_MasterOperation@read stored from wreg
  8363  003F10  0100               	movlb	0	; () banked
  8364  003F12  6F86               	movwf	I2C_MasterOperation@read& (0+255),b
  8365  003F14                     
  8366                           ;mcc_generated_files/i2c_master.c: 182: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 183: {;mcc_generated_files/i2c_master.c: 184:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8367  003F14  0E01               	movlw	1
  8368  003F16  0100               	movlb	0	; () banked
  8369  003F18  6F87               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8370  003F1A                     
  8371                           ; BSR set to: 0
  8372                           ;mcc_generated_files/i2c_master.c: 185:     if(!I2C_Status.busy)
  8373  003F1A  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8374  003F1C  EF92  F01F         	goto	u5741
  8375  003F20  EF94  F01F         	goto	u5740
  8376  003F24                     u5741:
  8377  003F24  EFA9  F01F         	goto	l8652
  8378  003F28                     u5740:
  8379  003F28                     
  8380                           ; BSR set to: 0
  8381                           ;mcc_generated_files/i2c_master.c: 186:     {;mcc_generated_files/i2c_master.c: 187:    
      +                               I2C_Status.busy = 1;
  8382  003F28  83EE               	bsf	(_I2C_Status+35)& (0+255),1,b
  8383  003F2A                     
  8384                           ; BSR set to: 0
  8385                           ;mcc_generated_files/i2c_master.c: 188:         returnValue = I2C_NOERR;
  8386  003F2A  0E00               	movlw	0
  8387  003F2C  6F87               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8388  003F2E                     
  8389                           ; BSR set to: 0
  8390                           ;mcc_generated_files/i2c_master.c: 190:         if(read)
  8391  003F2E  5186               	movf	I2C_MasterOperation@read& (0+255),w,b
  8392  003F30  B4D8               	btfsc	status,2,c
  8393  003F32  EF9D  F01F         	goto	u5751
  8394  003F36  EF9F  F01F         	goto	u5750
  8395  003F3A                     u5751:
  8396  003F3A  EFA3  F01F         	goto	l8646
  8397  003F3E                     u5750:
  8398  003F3E                     
  8399                           ; BSR set to: 0
  8400                           ;mcc_generated_files/i2c_master.c: 191:         {;mcc_generated_files/i2c_master.c: 192:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  8401  003F3E  0E01               	movlw	1
  8402  003F40  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
  8403                           
  8404                           ;mcc_generated_files/i2c_master.c: 193:         }
  8405  003F42  EFA5  F01F         	goto	l8648
  8406  003F46                     l8646:
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;mcc_generated_files/i2c_master.c: 195:         {;mcc_generated_files/i2c_master.c: 196:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  8410  003F46  0E02               	movlw	2
  8411  003F48  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
  8412  003F4A                     l8648:
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;mcc_generated_files/i2c_master.c: 198:         I2C_MasterStart();
  8416  003F4A  ECB5  F023         	call	_I2C_MasterStart	;wreg free
  8417  003F4E                     
  8418                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Poller();
  8419  003F4E  EC45  F022         	call	_I2C_Poller	;wreg free
  8420  003F52                     l8652:
  8421                           
  8422                           ;mcc_generated_files/i2c_master.c: 201:     return returnValue;
  8423  003F52  0100               	movlb	0	; () banked
  8424  003F54  5187               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  8425  003F56                     
  8426                           ; BSR set to: 0
  8427  003F56  0012               	return		;funcret
  8428  003F58                     __end_of_I2C_MasterOperation:
  8429                           	callstack 0
  8430                           
  8431 ;; *************** function _I2C_Poller *****************
  8432 ;; Defined at:
  8433 ;;		line 270 in file "mcc_generated_files/i2c_master.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;		None
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;Total ram usage:        0 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 18
  8454 ;; This function calls:
  8455 ;;		_I2C_MasterFsm
  8456 ;;		_I2C_MasterWaitForEvent
  8457 ;; This function is called by:
  8458 ;;		_I2C_MasterOperation
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text49
  8463  00448A                     __ptext49:
  8464                           	callstack 0
  8465  00448A                     _I2C_Poller:
  8466                           	callstack 8
  8467  00448A                     
  8468                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
  8469  00448A  EF4B  F022         	goto	l8438
  8470  00448E                     l8434:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;mcc_generated_files/i2c_master.c: 273:     {;mcc_generated_files/i2c_master.c: 274:    
      +                               I2C_MasterWaitForEvent();
  8474  00448E  EC2A  F023         	call	_I2C_MasterWaitForEvent	;wreg free
  8475  004492                     
  8476                           ;mcc_generated_files/i2c_master.c: 275:         I2C_MasterFsm();
  8477  004492  ECEF  F01C         	call	_I2C_MasterFsm	;wreg free
  8478  004496                     l8438:
  8479                           
  8480                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
  8481  004496  0100               	movlb	0	; () banked
  8482  004498  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8483  00449A  EF51  F022         	goto	u5601
  8484  00449E  EF53  F022         	goto	u5600
  8485  0044A2                     u5601:
  8486  0044A2  EF47  F022         	goto	l8434
  8487  0044A6                     u5600:
  8488  0044A6                     
  8489                           ; BSR set to: 0
  8490  0044A6  0012               	return		;funcret
  8491  0044A8                     __end_of_I2C_Poller:
  8492                           	callstack 0
  8493                           
  8494 ;; *************** function _I2C_MasterWaitForEvent *****************
  8495 ;; Defined at:
  8496 ;;		line 608 in file "mcc_generated_files/i2c_master.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;		None
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      void 
  8503 ;; Registers used:
  8504 ;;		None
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;Total ram usage:        0 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; Hardware stack levels required when called: 13
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_I2C_Poller
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text50
  8525  004654                     __ptext50:
  8526                           	callstack 0
  8527  004654                     _I2C_MasterWaitForEvent:
  8528                           	callstack 12
  8529  004654                     l960:
  8530                           
  8531                           ;mcc_generated_files/i2c_master.c: 611:     {;mcc_generated_files/i2c_master.c: 612:    
      +                               if(PIR1bits.SSPIF)
  8532  004654  A69E               	btfss	158,3,c	;volatile
  8533  004656  EF2F  F023         	goto	u5311
  8534  00465A  EF31  F023         	goto	u5310
  8535  00465E                     u5311:
  8536  00465E  EF2A  F023         	goto	l960
  8537  004662                     u5310:
  8538  004662  0012               	return		;funcret
  8539  004664                     __end_of_I2C_MasterWaitForEvent:
  8540                           	callstack 0
  8541                           
  8542 ;; *************** function _I2C_MasterFsm *****************
  8543 ;; Defined at:
  8544 ;;		line 279 in file "mcc_generated_files/i2c_master.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;		None
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;Total ram usage:        2 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 17
  8565 ;; This function calls:
  8566 ;;		_I2C_DO_ADDRESS_NACK
  8567 ;;		_I2C_DO_IDLE
  8568 ;;		_I2C_DO_RCEN
  8569 ;;		_I2C_DO_RESET
  8570 ;;		_I2C_DO_RX
  8571 ;;		_I2C_DO_RX_ACK
  8572 ;;		_I2C_DO_RX_NACK_RESTART
  8573 ;;		_I2C_DO_RX_NACK_STOP
  8574 ;;		_I2C_DO_SEND_ADR_READ
  8575 ;;		_I2C_DO_SEND_ADR_WRITE
  8576 ;;		_I2C_DO_SEND_RESTART
  8577 ;;		_I2C_DO_SEND_RESTART_READ
  8578 ;;		_I2C_DO_SEND_RESTART_WRITE
  8579 ;;		_I2C_DO_SEND_STOP
  8580 ;;		_I2C_DO_TX
  8581 ;;		_I2C_DO_TX_EMPTY
  8582 ;;		_I2C_MasterClearIrq
  8583 ;;		_I2C_MasterIsNack
  8584 ;; This function is called by:
  8585 ;;		_I2C_Poller
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text51
  8590  0039DE                     __ptext51:
  8591                           	callstack 0
  8592  0039DE                     _I2C_MasterFsm:
  8593                           	callstack 8
  8594  0039DE                     
  8595                           ;mcc_generated_files/i2c_master.c: 281:     I2C_MasterClearIrq();
  8596  0039DE  ECBB  F023         	call	_I2C_MasterClearIrq	;wreg free
  8597  0039E2                     
  8598                           ;mcc_generated_files/i2c_master.c: 283:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  8599  0039E2  0100               	movlb	0	; () banked
  8600  0039E4  A1EE               	btfss	(_I2C_Status+35)& (0+255),0,b
  8601  0039E6  EFF7  F01C         	goto	u5321
  8602  0039EA  EFF9  F01C         	goto	u5320
  8603  0039EE                     u5321:
  8604  0039EE  EF06  F01D         	goto	l8290
  8605  0039F2                     u5320:
  8606  0039F2                     
  8607                           ; BSR set to: 0
  8608  0039F2  ECD7  F022         	call	_I2C_MasterIsNack	;wreg free
  8609  0039F6  0900               	iorlw	0
  8610  0039F8  B4D8               	btfsc	status,2,c
  8611  0039FA  EF01  F01D         	goto	u5331
  8612  0039FE  EF03  F01D         	goto	u5330
  8613  003A02                     u5331:
  8614  003A02  EF06  F01D         	goto	l8290
  8615  003A06                     u5330:
  8616  003A06                     
  8617                           ;mcc_generated_files/i2c_master.c: 284:     {;mcc_generated_files/i2c_master.c: 285:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  8618  003A06  0E0F               	movlw	15
  8619  003A08  0100               	movlb	0	; () banked
  8620  003A0A  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
  8621  003A0C                     l8290:
  8622                           
  8623                           ;mcc_generated_files/i2c_master.c: 287:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  8624  003A0C  0100               	movlb	0	; () banked
  8625  003A0E  51EC               	movf	(_I2C_Status+33)& (0+255),w,b
  8626  003A10  0D02               	mullw	2
  8627  003A12  0E01               	movlw	low _i2c_fsmStateTable
  8628  003A14  24F3               	addwf	243,w,c
  8629  003A16  6EF6               	movwf	tblptrl,c
  8630  003A18  0E10               	movlw	high _i2c_fsmStateTable
  8631  003A1A  20F4               	addwfc	244,w,c
  8632  003A1C  6EF7               	movwf	tblptrh,c
  8633  003A1E                     	if	1	;There are 3 active tblptr bytes
  8634  003A1E  6AF8               	clrf	tblptru,c
  8635  003A20  0E00               	movlw	low (__mediumconst shr (0+16))
  8636  003A22  22F8               	addwfc	tblptru,f,c
  8637  003A24                     	endif
  8638  003A24  0009               	tblrd		*+
  8639  003A26  CFF5 F084          	movff	tablat,??_I2C_MasterFsm
  8640  003A2A  0009               	tblrd		*+
  8641  003A2C  CFF5 F085          	movff	tablat,??_I2C_MasterFsm+1
  8642  003A30  D802               	call	u5348
  8643  003A32  EF24  F01D         	goto	u5349
  8644  003A36                     u5348:
  8645  003A36  0005               	push	
  8646  003A38  6EFA               	movwf	pclath,c
  8647  003A3A  5184               	movf	??_I2C_MasterFsm& (0+255),w,b
  8648  003A3C  6EFD               	movwf	tosl,c
  8649  003A3E  5185               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
  8650  003A40  6EFE               	movwf	tosh,c
  8651  003A42  6AFF               	clrf	tosu,c
  8652  003A44  50FA               	movf	pclath,w,c
  8653  003A46  0012               	return		;indir
  8654  003A48                     u5349:
  8655  003A48  0100               	movlb	0	; () banked
  8656  003A4A  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
  8657  003A4C                     
  8658                           ; BSR set to: 0
  8659  003A4C  0012               	return		;funcret
  8660  003A4E                     __end_of_I2C_MasterFsm:
  8661                           	callstack 0
  8662                           
  8663 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  8664 ;; Defined at:
  8665 ;;		line 458 in file "mcc_generated_files/i2c_master.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;		None
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;		None
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  1    wreg      enum E2863
  8672 ;; Registers used:
  8673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;Total ram usage:        2 bytes
  8684 ;; Hardware stack levels used: 1
  8685 ;; Hardware stack levels required when called: 16
  8686 ;; This function calls:
  8687 ;;		Absolute function
  8688 ;;		_I2C_CallbackReturnReset
  8689 ;;		_I2C_CallbackReturnStop
  8690 ;;		_I2C_DO_SEND_RESTART
  8691 ;;		_I2C_DO_SEND_STOP
  8692 ;;		_rd1RegCompleteHandler
  8693 ;;		_rd2RegCompleteHandler
  8694 ;;		_rdBlkRegCompleteHandler
  8695 ;;		_wr1RegCompleteHandler
  8696 ;;		_wr2RegCompleteHandler
  8697 ;; This function is called by:
  8698 ;;		i2_I2C_MasterFsm
  8699 ;;		_I2C_MasterFsm
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text52
  8704  00396C                     __ptext52:
  8705                           	callstack 0
  8706  00396C                     _I2C_DO_ADDRESS_NACK:
  8707                           	callstack 0
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;Skip over the trampoline to the duplicate function for level 2
  8711  00396C  A259               	btfss	int$flags,1,c
  8712  00396E  EFBB  F01C         	goto	_I2C_DO_ADDRESS_NACK$intlevel0
  8713  003972  EFFE  F01D         	goto	i2_I2C_DO_ADDRESS_NACK
  8714  003976                     _I2C_DO_ADDRESS_NACK$intlevel0:
  8715                           	callstack 8
  8716  003976                     
  8717                           ;mcc_generated_files/i2c_master.c: 460:     I2C_Status.addressNackCheck = 0;
  8718  003976  0100               	movlb	0	; () banked
  8719  003978  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
  8720  00397A                     
  8721                           ; BSR set to: 0
  8722                           ;mcc_generated_files/i2c_master.c: 461:     I2C_Status.error = I2C_FAIL;
  8723  00397A  0E02               	movlw	2
  8724  00397C  6FED               	movwf	(_I2C_Status+34)& (0+255),b
  8725                           
  8726                           ;mcc_generated_files/i2c_master.c: 462:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  8727  00397E  EFC9  F01C         	goto	l8130
  8728  003982                     l8120:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;mcc_generated_files/i2c_master.c: 466:             return I2C_DO_SEND_RESTART();
  8732  003982  EC0F  F023         	call	_I2C_DO_SEND_RESTART	;wreg free
  8733  003986  EFEE  F01C         	goto	l882
  8734  00398A                     l8124:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;mcc_generated_files/i2c_master.c: 468:             return I2C_DO_SEND_STOP();
  8738  00398A  EC06  F023         	call	_I2C_DO_SEND_STOP	;wreg free
  8739  00398E  EFEE  F01C         	goto	l882
  8740  003992                     l8130:
  8741                           
  8742                           ; BSR set to: 0
  8743  003992  C0DB  F080         	movff	_I2C_Status+16,rd1RegCompleteHandler@ptr
  8744  003996  C0DC  F081         	movff	_I2C_Status+17,rd1RegCompleteHandler@ptr+1
  8745  00399A  D802               	call	u5058
  8746  00399C  EFD9  F01C         	goto	u5059
  8747  0039A0                     u5058:
  8748  0039A0  0005               	push	
  8749  0039A2  6EFA               	movwf	pclath,c
  8750  0039A4  51CF               	movf	(_I2C_Status+4)& (0+255),w,b
  8751  0039A6  6EFD               	movwf	tosl,c
  8752  0039A8  51D0               	movf	(_I2C_Status+5)& (0+255),w,b
  8753  0039AA  6EFE               	movwf	tosh,c
  8754  0039AC  6AFF               	clrf	tosu,c
  8755  0039AE  50FA               	movf	pclath,w,c
  8756  0039B0  0012               	return		;indir
  8757  0039B2                     u5059:
  8758  0039B2  0100               	movlb	0	; () banked
  8759  0039B4  6F82               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
  8760  0039B6  6B83               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
  8761                           
  8762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8763                           ; Switch size 1, requested type "simple"
  8764                           ; Number of cases is 1, Range of values is 0 to 0
  8765                           ; switch strategies available:
  8766                           ; Name         Instructions Cycles
  8767                           ; simple_byte            4     3 (average)
  8768                           ;	Chosen strategy is simple_byte
  8769  0039B8  5183               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
  8770  0039BA  0A00               	xorlw	0	; case 0
  8771  0039BC  B4D8               	btfsc	status,2,c
  8772  0039BE  EFE3  F01C         	goto	l9978
  8773  0039C2  EFC5  F01C         	goto	l8124
  8774  0039C6                     l9978:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ; Switch size 1, requested type "simple"
  8778                           ; Number of cases is 2, Range of values is 2 to 3
  8779                           ; switch strategies available:
  8780                           ; Name         Instructions Cycles
  8781                           ; simple_byte            7     4 (average)
  8782                           ;	Chosen strategy is simple_byte
  8783  0039C6  5182               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
  8784  0039C8  0A02               	xorlw	2	; case 2
  8785  0039CA  B4D8               	btfsc	status,2,c
  8786  0039CC  EFC1  F01C         	goto	l8120
  8787  0039D0  0A01               	xorlw	1	; case 3
  8788  0039D2  B4D8               	btfsc	status,2,c
  8789  0039D4  EFC1  F01C         	goto	l8120
  8790  0039D8  EFC5  F01C         	goto	l8124
  8791  0039DC                     l882:
  8792  0039DC  0012               	return		;funcret
  8793  0039DE                     __end_of_I2C_DO_ADDRESS_NACK:
  8794                           	callstack 0
  8795                           
  8796 ;; *************** function _I2C_DO_RESET *****************
  8797 ;; Defined at:
  8798 ;;		line 452 in file "mcc_generated_files/i2c_master.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;		None
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      enum E2863
  8805 ;; Registers used:
  8806 ;;		wreg, status,2
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used: 1
  8818 ;; Hardware stack levels required when called: 13
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		i2_I2C_MasterFsm
  8823 ;;		_I2C_MasterFsm
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text53
  8828  004558                     __ptext53:
  8829                           	callstack 0
  8830  004558                     _I2C_DO_RESET:
  8831                           	callstack 0
  8832                           
  8833                           ;Skip over the trampoline to the duplicate function for level 2
  8834  004558  A259               	btfss	int$flags,1,c
  8835  00455A  EFB1  F022         	goto	_I2C_DO_RESET$intlevel0
  8836  00455E  EF5E  F023         	goto	i2_I2C_DO_RESET
  8837  004562                     _I2C_DO_RESET$intlevel0:
  8838                           	callstack 11
  8839  004562                     
  8840                           ;mcc_generated_files/i2c_master.c: 454:     I2C_Status.busy = 0;
  8841  004562  0100               	movlb	0	; () banked
  8842  004564  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
  8843  004566                     
  8844                           ; BSR set to: 0
  8845                           ;mcc_generated_files/i2c_master.c: 455:     I2C_Status.error = I2C_NOERR;
  8846  004566  0E00               	movlw	0
  8847  004568  6FED               	movwf	(_I2C_Status+34)& (0+255),b
  8848  00456A                     
  8849                           ; BSR set to: 0
  8850                           ;mcc_generated_files/i2c_master.c: 456:     return I2C_RESET;
  8851  00456A  0E0E               	movlw	14
  8852  00456C                     
  8853                           ; BSR set to: 0
  8854  00456C  0012               	return		;funcret
  8855  00456E                     __end_of_I2C_DO_RESET:
  8856                           	callstack 0
  8857                           
  8858 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  8859 ;; Defined at:
  8860 ;;		line 446 in file "mcc_generated_files/i2c_master.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      enum E2863
  8867 ;; Registers used:
  8868 ;;		wreg, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 14
  8881 ;; This function calls:
  8882 ;;		_I2C_MasterSendNack
  8883 ;; This function is called by:
  8884 ;;		_I2C_DO_RX
  8885 ;;		i2_I2C_MasterFsm
  8886 ;;		_I2C_MasterFsm
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text54
  8891  0045D6                     __ptext54:
  8892                           	callstack 0
  8893  0045D6                     _I2C_DO_RX_NACK_RESTART:
  8894                           	callstack 0
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;Skip over the trampoline to the duplicate function for level 2
  8898  0045D6  A259               	btfss	int$flags,1,c
  8899  0045D8  EFF0  F022         	goto	_I2C_DO_RX_NACK_RESTART$intlevel0
  8900  0045DC  EF7C  F023         	goto	i2_I2C_DO_RX_NACK_RESTART
  8901  0045E0                     _I2C_DO_RX_NACK_RESTART$intlevel0:
  8902                           	callstack 10
  8903  0045E0                     
  8904                           ;mcc_generated_files/i2c_master.c: 448:     I2C_MasterSendNack();
  8905  0045E0  ECA2  F023         	call	_I2C_MasterSendNack	;wreg free
  8906  0045E4                     
  8907                           ;mcc_generated_files/i2c_master.c: 449:     return I2C_SEND_RESTART;
  8908  0045E4  0E09               	movlw	9
  8909  0045E6  0012               	return		;funcret
  8910  0045E8                     __end_of_I2C_DO_RX_NACK_RESTART:
  8911                           	callstack 0
  8912                           
  8913 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  8914 ;; Defined at:
  8915 ;;		line 440 in file "mcc_generated_files/i2c_master.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      enum E2863
  8922 ;; Registers used:
  8923 ;;		wreg, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        0 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 14
  8936 ;; This function calls:
  8937 ;;		_I2C_MasterSendNack
  8938 ;; This function is called by:
  8939 ;;		_I2C_DO_RX
  8940 ;;		i2_I2C_MasterFsm
  8941 ;;		_I2C_MasterFsm
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text55
  8946  0045E8                     __ptext55:
  8947                           	callstack 0
  8948  0045E8                     _I2C_DO_RX_NACK_STOP:
  8949                           	callstack 0
  8950                           
  8951                           ;Skip over the trampoline to the duplicate function for level 2
  8952  0045E8  A259               	btfss	int$flags,1,c
  8953  0045EA  EFF9  F022         	goto	_I2C_DO_RX_NACK_STOP$intlevel0
  8954  0045EE  EF80  F023         	goto	i2_I2C_DO_RX_NACK_STOP
  8955  0045F2                     _I2C_DO_RX_NACK_STOP$intlevel0:
  8956                           	callstack 10
  8957  0045F2                     
  8958                           ;mcc_generated_files/i2c_master.c: 442:     I2C_MasterSendNack();
  8959  0045F2  ECA2  F023         	call	_I2C_MasterSendNack	;wreg free
  8960  0045F6                     
  8961                           ;mcc_generated_files/i2c_master.c: 443:     return I2C_SEND_STOP;
  8962  0045F6  0E0A               	movlw	10
  8963  0045F8  0012               	return		;funcret
  8964  0045FA                     __end_of_I2C_DO_RX_NACK_STOP:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function _I2C_DO_RX_ACK *****************
  8968 ;; Defined at:
  8969 ;;		line 433 in file "mcc_generated_files/i2c_master.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      enum E2863
  8976 ;; Registers used:
  8977 ;;		wreg, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 14
  8990 ;; This function calls:
  8991 ;;		_I2C_MasterSendAck
  8992 ;; This function is called by:
  8993 ;;		i2_I2C_MasterFsm
  8994 ;;		_I2C_MasterFsm
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text56
  8999  0045FA                     __ptext56:
  9000                           	callstack 0
  9001  0045FA                     _I2C_DO_RX_ACK:
  9002                           	callstack 0
  9003                           
  9004                           ;Skip over the trampoline to the duplicate function for level 2
  9005  0045FA  A259               	btfss	int$flags,1,c
  9006  0045FC  EF02  F023         	goto	_I2C_DO_RX_ACK$intlevel0
  9007  004600  EF84  F023         	goto	i2_I2C_DO_RX_ACK
  9008  004604                     _I2C_DO_RX_ACK$intlevel0:
  9009                           	callstack 10
  9010  004604                     
  9011                           ;mcc_generated_files/i2c_master.c: 435:     I2C_MasterSendAck();
  9012  004604  EC9F  F023         	call	_I2C_MasterSendAck	;wreg free
  9013  004608                     
  9014                           ;mcc_generated_files/i2c_master.c: 436:     return I2C_RCEN;
  9015  004608  0E05               	movlw	5
  9016  00460A  0012               	return		;funcret
  9017  00460C                     __end_of_I2C_DO_RX_ACK:
  9018                           	callstack 0
  9019                           
  9020 ;; *************** function _I2C_DO_SEND_STOP *****************
  9021 ;; Defined at:
  9022 ;;		line 427 in file "mcc_generated_files/i2c_master.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;		None
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      enum E2863
  9029 ;; Registers used:
  9030 ;;		wreg, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;Total ram usage:        0 bytes
  9041 ;; Hardware stack levels used: 1
  9042 ;; Hardware stack levels required when called: 14
  9043 ;; This function calls:
  9044 ;;		_I2C_MasterStop
  9045 ;; This function is called by:
  9046 ;;		_I2C_DO_TX
  9047 ;;		_I2C_DO_TX_EMPTY
  9048 ;;		_I2C_DO_ADDRESS_NACK
  9049 ;;		i2_I2C_MasterFsm
  9050 ;;		_I2C_MasterFsm
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text57
  9055  00460C                     __ptext57:
  9056                           	callstack 0
  9057  00460C                     _I2C_DO_SEND_STOP:
  9058                           	callstack 0
  9059                           
  9060                           ;Skip over the trampoline to the duplicate function for level 2
  9061  00460C  A259               	btfss	int$flags,1,c
  9062  00460E  EF0B  F023         	goto	_I2C_DO_SEND_STOP$intlevel0
  9063  004612  EF88  F023         	goto	i2_I2C_DO_SEND_STOP
  9064  004616                     _I2C_DO_SEND_STOP$intlevel0:
  9065                           	callstack 9
  9066  004616                     
  9067                           ;mcc_generated_files/i2c_master.c: 429:     I2C_MasterStop();
  9068  004616  ECB1  F023         	call	_I2C_MasterStop	;wreg free
  9069  00461A                     
  9070                           ;mcc_generated_files/i2c_master.c: 430:     return I2C_IDLE;
  9071  00461A  0E00               	movlw	0
  9072  00461C  0012               	return		;funcret
  9073  00461E                     __end_of_I2C_DO_SEND_STOP:
  9074                           	callstack 0
  9075                           
  9076 ;; *************** function _I2C_DO_SEND_RESTART *****************
  9077 ;; Defined at:
  9078 ;;		line 421 in file "mcc_generated_files/i2c_master.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;		None
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      enum E2863
  9085 ;; Registers used:
  9086 ;;		wreg, cstack
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;Total ram usage:        0 bytes
  9097 ;; Hardware stack levels used: 1
  9098 ;; Hardware stack levels required when called: 14
  9099 ;; This function calls:
  9100 ;;		_I2C_MasterEnableRestart
  9101 ;; This function is called by:
  9102 ;;		_I2C_DO_TX_EMPTY
  9103 ;;		_I2C_DO_ADDRESS_NACK
  9104 ;;		i2_I2C_MasterFsm
  9105 ;;		_I2C_MasterFsm
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text58
  9110  00461E                     __ptext58:
  9111                           	callstack 0
  9112  00461E                     _I2C_DO_SEND_RESTART:
  9113                           	callstack 0
  9114                           
  9115                           ;Skip over the trampoline to the duplicate function for level 2
  9116  00461E  A259               	btfss	int$flags,1,c
  9117  004620  EF14  F023         	goto	_I2C_DO_SEND_RESTART$intlevel0
  9118  004624  EF8C  F023         	goto	i2_I2C_DO_SEND_RESTART
  9119  004628                     _I2C_DO_SEND_RESTART$intlevel0:
  9120                           	callstack 9
  9121  004628                     
  9122                           ;mcc_generated_files/i2c_master.c: 423:     I2C_MasterEnableRestart();
  9123  004628  ECB3  F023         	call	_I2C_MasterEnableRestart	;wreg free
  9124  00462C                     
  9125                           ;mcc_generated_files/i2c_master.c: 424:     return I2C_SEND_ADR_READ;
  9126  00462C  0E01               	movlw	1
  9127  00462E  0012               	return		;funcret
  9128  004630                     __end_of_I2C_DO_SEND_RESTART:
  9129                           	callstack 0
  9130                           
  9131 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  9132 ;; Defined at:
  9133 ;;		line 414 in file "mcc_generated_files/i2c_master.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      enum E2863
  9140 ;; Registers used:
  9141 ;;		wreg, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 14
  9154 ;; This function calls:
  9155 ;;		_I2C_MasterEnableRestart
  9156 ;; This function is called by:
  9157 ;;		_I2C_DO_TX
  9158 ;;		i2_I2C_MasterFsm
  9159 ;;		_I2C_MasterFsm
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text59
  9164  004630                     __ptext59:
  9165                           	callstack 0
  9166  004630                     _I2C_DO_SEND_RESTART_WRITE:
  9167                           	callstack 0
  9168                           
  9169                           ;Skip over the trampoline to the duplicate function for level 2
  9170  004630  A259               	btfss	int$flags,1,c
  9171  004632  EF1D  F023         	goto	_I2C_DO_SEND_RESTART_WRITE$intlevel0
  9172  004636  EF90  F023         	goto	i2_I2C_DO_SEND_RESTART_WRITE
  9173  00463A                     _I2C_DO_SEND_RESTART_WRITE$intlevel0:
  9174                           	callstack 9
  9175  00463A                     
  9176                           ;mcc_generated_files/i2c_master.c: 416:     I2C_MasterEnableRestart();
  9177  00463A  ECB3  F023         	call	_I2C_MasterEnableRestart	;wreg free
  9178  00463E                     
  9179                           ;mcc_generated_files/i2c_master.c: 417:     return I2C_SEND_ADR_WRITE;
  9180  00463E  0E02               	movlw	2
  9181  004640  0012               	return		;funcret
  9182  004642                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  9183                           	callstack 0
  9184                           
  9185 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  9186 ;; Defined at:
  9187 ;;		line 408 in file "mcc_generated_files/i2c_master.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;		None
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;		None
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      enum E2863
  9194 ;; Registers used:
  9195 ;;		wreg, cstack
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;Total ram usage:        0 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; Hardware stack levels required when called: 14
  9208 ;; This function calls:
  9209 ;;		_I2C_MasterEnableRestart
  9210 ;; This function is called by:
  9211 ;;		_I2C_DO_TX
  9212 ;;		i2_I2C_MasterFsm
  9213 ;;		_I2C_MasterFsm
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text60
  9218  004642                     __ptext60:
  9219                           	callstack 0
  9220  004642                     _I2C_DO_SEND_RESTART_READ:
  9221                           	callstack 0
  9222                           
  9223                           ;Skip over the trampoline to the duplicate function for level 2
  9224  004642  A259               	btfss	int$flags,1,c
  9225  004644  EF26  F023         	goto	_I2C_DO_SEND_RESTART_READ$intlevel0
  9226  004648  EF94  F023         	goto	i2_I2C_DO_SEND_RESTART_READ
  9227  00464C                     _I2C_DO_SEND_RESTART_READ$intlevel0:
  9228                           	callstack 9
  9229  00464C                     
  9230                           ;mcc_generated_files/i2c_master.c: 410:     I2C_MasterEnableRestart();
  9231  00464C  ECB3  F023         	call	_I2C_MasterEnableRestart	;wreg free
  9232  004650                     
  9233                           ;mcc_generated_files/i2c_master.c: 411:     return I2C_SEND_ADR_READ;
  9234  004650  0E01               	movlw	1
  9235  004652  0012               	return		;funcret
  9236  004654                     __end_of_I2C_DO_SEND_RESTART_READ:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function _I2C_DO_RCEN *****************
  9240 ;; Defined at:
  9241 ;;		line 360 in file "mcc_generated_files/i2c_master.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      enum E2863
  9248 ;; Registers used:
  9249 ;;		wreg, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 14
  9262 ;; This function calls:
  9263 ;;		_I2C_MasterStartRx
  9264 ;; This function is called by:
  9265 ;;		i2_I2C_MasterFsm
  9266 ;;		_I2C_MasterFsm
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text61
  9271  00456E                     __ptext61:
  9272                           	callstack 0
  9273  00456E                     _I2C_DO_RCEN:
  9274                           	callstack 0
  9275                           
  9276                           ;Skip over the trampoline to the duplicate function for level 2
  9277  00456E  A259               	btfss	int$flags,1,c
  9278  004570  EFBC  F022         	goto	_I2C_DO_RCEN$intlevel0
  9279  004574  EF64  F023         	goto	i2_I2C_DO_RCEN
  9280  004578                     _I2C_DO_RCEN$intlevel0:
  9281                           	callstack 10
  9282  004578                     
  9283                           ;mcc_generated_files/i2c_master.c: 362:     I2C_Status.addressNackCheck = 0;
  9284  004578  0100               	movlb	0	; () banked
  9285  00457A  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
  9286  00457C                     
  9287                           ; BSR set to: 0
  9288                           ;mcc_generated_files/i2c_master.c: 363:     I2C_MasterStartRx();
  9289  00457C  ECAF  F023         	call	_I2C_MasterStartRx	;wreg free
  9290  004580                     
  9291                           ;mcc_generated_files/i2c_master.c: 364:     return I2C_RX;
  9292  004580  0E04               	movlw	4
  9293  004582  0012               	return		;funcret
  9294  004584                     __end_of_I2C_DO_RCEN:
  9295                           	callstack 0
  9296                           
  9297 ;; *************** function _I2C_DO_RX *****************
  9298 ;; Defined at:
  9299 ;;		line 336 in file "mcc_generated_files/i2c_master.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      enum E2863
  9306 ;; Registers used:
  9307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;Total ram usage:        2 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 16
  9320 ;; This function calls:
  9321 ;;		Absolute function
  9322 ;;		_I2C_CallbackReturnReset
  9323 ;;		_I2C_CallbackReturnStop
  9324 ;;		_I2C_DO_RX_NACK_RESTART
  9325 ;;		_I2C_DO_RX_NACK_STOP
  9326 ;;		_I2C_MasterGetRxData
  9327 ;;		_I2C_MasterSendAck
  9328 ;;		_rd1RegCompleteHandler
  9329 ;;		_rd2RegCompleteHandler
  9330 ;;		_rdBlkRegCompleteHandler
  9331 ;;		_wr1RegCompleteHandler
  9332 ;;		_wr2RegCompleteHandler
  9333 ;; This function is called by:
  9334 ;;		i2_I2C_MasterFsm
  9335 ;;		_I2C_MasterFsm
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text62
  9340  002BF6                     __ptext62:
  9341                           	callstack 0
  9342  002BF6                     _I2C_DO_RX:
  9343                           	callstack 0
  9344                           
  9345                           ;Skip over the trampoline to the duplicate function for level 2
  9346  002BF6  A259               	btfss	int$flags,1,c
  9347  002BF8  EF00  F016         	goto	_I2C_DO_RX$intlevel0
  9348  002BFC  EFA9  F017         	goto	i2_I2C_DO_RX
  9349  002C00                     _I2C_DO_RX$intlevel0:
  9350                           	callstack 8
  9351  002C00                     
  9352                           ;mcc_generated_files/i2c_master.c: 338:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  9353  002C00  ECAD  F023         	call	_I2C_MasterGetRxData	;wreg free
  9354  002C04  C0E8  FFD9         	movff	_I2C_Status+29,fsr2l
  9355  002C08  C0E9  FFDA         	movff	_I2C_Status+30,fsr2h
  9356  002C0C  6EDF               	movwf	indf2,c
  9357  002C0E  0100               	movlb	0	; () banked
  9358  002C10  4BE8               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9359  002C12  2BE9               	incf	(_I2C_Status+30)& (0+255),f,b
  9360  002C14                     
  9361                           ; BSR set to: 0
  9362                           ;mcc_generated_files/i2c_master.c: 339:     if(--I2C_Status.data_length)
  9363  002C14  07EA               	decf	(_I2C_Status+31)& (0+255),f,b
  9364  002C16  A0D8               	btfss	status,0,c
  9365  002C18  07EB               	decf	(_I2C_Status+32)& (0+255),f,b
  9366  002C1A  51EA               	movf	(_I2C_Status+31)& (0+255),w,b
  9367  002C1C  11EB               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9368  002C1E  B4D8               	btfsc	status,2,c
  9369  002C20  EF14  F016         	goto	u5021
  9370  002C24  EF16  F016         	goto	u5020
  9371  002C28                     u5021:
  9372  002C28  EF1B  F016         	goto	l819
  9373  002C2C                     u5020:
  9374  002C2C                     
  9375                           ; BSR set to: 0
  9376                           ;mcc_generated_files/i2c_master.c: 340:     {;mcc_generated_files/i2c_master.c: 341:    
      +                               I2C_MasterSendAck();
  9377  002C2C  EC9F  F023         	call	_I2C_MasterSendAck	;wreg free
  9378  002C30                     
  9379                           ;mcc_generated_files/i2c_master.c: 342:         return I2C_RCEN;
  9380  002C30  0E05               	movlw	5
  9381  002C32  EF53  F016         	goto	l820
  9382  002C36                     l819:
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;mcc_generated_files/i2c_master.c: 345:     {;mcc_generated_files/i2c_master.c: 346:    
      +                               I2C_Status.bufferFree = 1;
  9386  002C36  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
  9387                           
  9388                           ;mcc_generated_files/i2c_master.c: 347:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9389  002C38  EF26  F016         	goto	l8064
  9390  002C3C                     l8054:
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;mcc_generated_files/i2c_master.c: 351:                 return I2C_DO_RX_NACK_RESTART();
  9394  002C3C  ECEB  F022         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  9395  002C40  EF53  F016         	goto	l820
  9396  002C44                     l8058:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;mcc_generated_files/i2c_master.c: 355:                 return I2C_DO_RX_NACK_STOP();
  9400  002C44  ECF4  F022         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  9401  002C48  EF53  F016         	goto	l820
  9402  002C4C                     l8064:
  9403                           
  9404                           ; BSR set to: 0
  9405  002C4C  C0D7  F080         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
  9406  002C50  C0D8  F081         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
  9407  002C54  D802               	call	u5038
  9408  002C56  EF36  F016         	goto	u5039
  9409  002C5A                     u5038:
  9410  002C5A  0005               	push	
  9411  002C5C  6EFA               	movwf	pclath,c
  9412  002C5E  51CB               	movf	_I2C_Status& (0+255),w,b
  9413  002C60  6EFD               	movwf	tosl,c
  9414  002C62  51CC               	movf	(_I2C_Status+1)& (0+255),w,b
  9415  002C64  6EFE               	movwf	tosh,c
  9416  002C66  6AFF               	clrf	tosu,c
  9417  002C68  50FA               	movf	pclath,w,c
  9418  002C6A  0012               	return		;indir
  9419  002C6C                     u5039:
  9420  002C6C  0100               	movlb	0	; () banked
  9421  002C6E  6F82               	movwf	??_I2C_DO_RX& (0+255),b
  9422  002C70  6B83               	clrf	(??_I2C_DO_RX+1)& (0+255),b
  9423                           
  9424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9425                           ; Switch size 1, requested type "simple"
  9426                           ; Number of cases is 1, Range of values is 0 to 0
  9427                           ; switch strategies available:
  9428                           ; Name         Instructions Cycles
  9429                           ; simple_byte            4     3 (average)
  9430                           ;	Chosen strategy is simple_byte
  9431  002C72  5183               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
  9432  002C74  0A00               	xorlw	0	; case 0
  9433  002C76  B4D8               	btfsc	status,2,c
  9434  002C78  EF40  F016         	goto	l9980
  9435  002C7C  EF22  F016         	goto	l8058
  9436  002C80                     l9980:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ; Switch size 1, requested type "simple"
  9440                           ; Number of cases is 4, Range of values is 1 to 4
  9441                           ; switch strategies available:
  9442                           ; Name         Instructions Cycles
  9443                           ; simple_byte           13     7 (average)
  9444                           ;	Chosen strategy is simple_byte
  9445  002C80  5182               	movf	??_I2C_DO_RX& (0+255),w,b
  9446  002C82  0A01               	xorlw	1	; case 1
  9447  002C84  B4D8               	btfsc	status,2,c
  9448  002C86  EF22  F016         	goto	l8058
  9449  002C8A  0A03               	xorlw	3	; case 2
  9450  002C8C  B4D8               	btfsc	status,2,c
  9451  002C8E  EF1E  F016         	goto	l8054
  9452  002C92  0A01               	xorlw	1	; case 3
  9453  002C94  B4D8               	btfsc	status,2,c
  9454  002C96  EF1E  F016         	goto	l8054
  9455  002C9A  0A07               	xorlw	7	; case 4
  9456  002C9C  B4D8               	btfsc	status,2,c
  9457  002C9E  EF22  F016         	goto	l8058
  9458  002CA2  EF22  F016         	goto	l8058
  9459  002CA6                     l820:
  9460  002CA6  0012               	return		;funcret
  9461  002CA8                     __end_of_I2C_DO_RX:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _I2C_DO_TX *****************
  9465 ;; Defined at:
  9466 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;		None
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      enum E2863
  9473 ;; Registers used:
  9474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;Total ram usage:        2 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; Hardware stack levels required when called: 16
  9487 ;; This function calls:
  9488 ;;		Absolute function
  9489 ;;		_I2C_CallbackReturnReset
  9490 ;;		_I2C_CallbackReturnStop
  9491 ;;		_I2C_DO_SEND_RESTART_READ
  9492 ;;		_I2C_DO_SEND_RESTART_WRITE
  9493 ;;		_I2C_DO_SEND_STOP
  9494 ;;		_I2C_MasterIsNack
  9495 ;;		_I2C_MasterSendTxData
  9496 ;;		_rd1RegCompleteHandler
  9497 ;;		_rd2RegCompleteHandler
  9498 ;;		_rdBlkRegCompleteHandler
  9499 ;;		_wr1RegCompleteHandler
  9500 ;;		_wr2RegCompleteHandler
  9501 ;; This function is called by:
  9502 ;;		i2_I2C_MasterFsm
  9503 ;;		_I2C_MasterFsm
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text63
  9508  002746                     __ptext63:
  9509                           	callstack 0
  9510  002746                     _I2C_DO_TX:
  9511                           	callstack 0
  9512                           
  9513                           ;Skip over the trampoline to the duplicate function for level 2
  9514  002746  A259               	btfss	int$flags,1,c
  9515  002748  EFA8  F013         	goto	_I2C_DO_TX$intlevel0
  9516  00274C  EF99  F015         	goto	i2_I2C_DO_TX
  9517  002750                     _I2C_DO_TX$intlevel0:
  9518                           	callstack 8
  9519  002750                     
  9520                           ;mcc_generated_files/i2c_master.c: 314:     if(I2C_MasterIsNack())
  9521  002750  ECD7  F022         	call	_I2C_MasterIsNack	;wreg free
  9522  002754  0900               	iorlw	0
  9523  002756  B4D8               	btfsc	status,2,c
  9524  002758  EFB0  F013         	goto	u4991
  9525  00275C  EFB2  F013         	goto	u4990
  9526  002760                     u4991:
  9527  002760  EFEE  F013         	goto	l803
  9528  002764                     u4990:
  9529  002764  EFC0  F013         	goto	l8024
  9530  002768                     l8010:
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;mcc_generated_files/i2c_master.c: 319:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  9534  002768  EC21  F023         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  9535  00276C  EF0A  F014         	goto	l806
  9536  002770                     l8014:
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;mcc_generated_files/i2c_master.c: 321:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  9540  002770  EC18  F023         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  9541  002774  EF0A  F014         	goto	l806
  9542  002778                     l8018:
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;mcc_generated_files/i2c_master.c: 325:                 return I2C_DO_SEND_STOP();
  9546  002778  EC06  F023         	call	_I2C_DO_SEND_STOP	;wreg free
  9547  00277C  EF0A  F014         	goto	l806
  9548  002780                     l8024:
  9549  002780  C0DD  F080         	movff	_I2C_Status+18,rd1RegCompleteHandler@ptr
  9550  002784  C0DE  F081         	movff	_I2C_Status+19,rd1RegCompleteHandler@ptr+1
  9551  002788  D802               	call	u5008
  9552  00278A  EFD1  F013         	goto	u5009
  9553  00278E                     u5008:
  9554  00278E  0005               	push	
  9555  002790  6EFA               	movwf	pclath,c
  9556  002792  0100               	movlb	0	; () banked
  9557  002794  51D1               	movf	(_I2C_Status+6)& (0+255),w,b
  9558  002796  6EFD               	movwf	tosl,c
  9559  002798  51D2               	movf	(_I2C_Status+7)& (0+255),w,b
  9560  00279A  6EFE               	movwf	tosh,c
  9561  00279C  6AFF               	clrf	tosu,c
  9562  00279E  50FA               	movf	pclath,w,c
  9563  0027A0  0012               	return		;indir
  9564  0027A2                     u5009:
  9565  0027A2  0100               	movlb	0	; () banked
  9566  0027A4  6F82               	movwf	??_I2C_DO_TX& (0+255),b
  9567  0027A6  6B83               	clrf	(??_I2C_DO_TX+1)& (0+255),b
  9568                           
  9569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9570                           ; Switch size 1, requested type "simple"
  9571                           ; Number of cases is 1, Range of values is 0 to 0
  9572                           ; switch strategies available:
  9573                           ; Name         Instructions Cycles
  9574                           ; simple_byte            4     3 (average)
  9575                           ;	Chosen strategy is simple_byte
  9576  0027A8  5183               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
  9577  0027AA  0A00               	xorlw	0	; case 0
  9578  0027AC  B4D8               	btfsc	status,2,c
  9579  0027AE  EFDB  F013         	goto	l9982
  9580  0027B2  EFBC  F013         	goto	l8018
  9581  0027B6                     l9982:
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; Switch size 1, requested type "simple"
  9585                           ; Number of cases is 4, Range of values is 1 to 4
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte           13     7 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590  0027B6  5182               	movf	??_I2C_DO_TX& (0+255),w,b
  9591  0027B8  0A01               	xorlw	1	; case 1
  9592  0027BA  B4D8               	btfsc	status,2,c
  9593  0027BC  EFBC  F013         	goto	l8018
  9594  0027C0  0A03               	xorlw	3	; case 2
  9595  0027C2  B4D8               	btfsc	status,2,c
  9596  0027C4  EFB4  F013         	goto	l8010
  9597  0027C8  0A01               	xorlw	1	; case 3
  9598  0027CA  B4D8               	btfsc	status,2,c
  9599  0027CC  EFB8  F013         	goto	l8014
  9600  0027D0  0A07               	xorlw	7	; case 4
  9601  0027D2  B4D8               	btfsc	status,2,c
  9602  0027D4  EFBC  F013         	goto	l8018
  9603  0027D8  EFBC  F013         	goto	l8018
  9604  0027DC                     l803:
  9605                           
  9606                           ;mcc_generated_files/i2c_master.c: 329:     {;mcc_generated_files/i2c_master.c: 330:    
      +                               I2C_Status.addressNackCheck = 0;
  9607  0027DC  0100               	movlb	0	; () banked
  9608  0027DE  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
  9609  0027E0                     
  9610                           ; BSR set to: 0
  9611                           ;mcc_generated_files/i2c_master.c: 331:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  9612  0027E0  C0E8  FFD9         	movff	_I2C_Status+29,fsr2l
  9613  0027E4  C0E9  FFDA         	movff	_I2C_Status+30,fsr2h
  9614  0027E8  4BE8               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9615  0027EA  2BE9               	incf	(_I2C_Status+30)& (0+255),f,b
  9616  0027EC  50DF               	movf	indf2,w,c
  9617  0027EE  EC74  F023         	call	_I2C_MasterSendTxData
  9618  0027F2                     
  9619                           ;mcc_generated_files/i2c_master.c: 332:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  9620  0027F2  0100               	movlb	0	; () banked
  9621  0027F4  07EA               	decf	(_I2C_Status+31)& (0+255),f,b
  9622  0027F6  A0D8               	btfss	status,0,c
  9623  0027F8  07EB               	decf	(_I2C_Status+32)& (0+255),f,b
  9624  0027FA  51EA               	movf	(_I2C_Status+31)& (0+255),w,b
  9625  0027FC  11EB               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9626  0027FE  A4D8               	btfss	status,2,c
  9627  002800  EF04  F014         	goto	u5011
  9628  002804  EF06  F014         	goto	u5010
  9629  002808                     u5011:
  9630  002808  EF09  F014         	goto	l8032
  9631  00280C                     u5010:
  9632  00280C                     
  9633                           ; BSR set to: 0
  9634  00280C  0E06               	movlw	6
  9635  00280E  EF0A  F014         	goto	l806
  9636  002812                     l8032:
  9637                           
  9638                           ; BSR set to: 0
  9639  002812  0E03               	movlw	3
  9640  002814                     l806:
  9641  002814  0012               	return		;funcret
  9642  002816                     __end_of_I2C_DO_TX:
  9643                           	callstack 0
  9644                           
  9645 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  9646 ;; Defined at:
  9647 ;;		line 305 in file "mcc_generated_files/i2c_master.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      enum E2863
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; Hardware stack levels required when called: 14
  9668 ;; This function calls:
  9669 ;;		_I2C_MasterSendTxData
  9670 ;; This function is called by:
  9671 ;;		i2_I2C_MasterFsm
  9672 ;;		_I2C_MasterFsm
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text64
  9677  0044F8                     __ptext64:
  9678                           	callstack 0
  9679  0044F8                     _I2C_DO_SEND_ADR_WRITE:
  9680                           	callstack 0
  9681                           
  9682                           ;Skip over the trampoline to the duplicate function for level 2
  9683  0044F8  A259               	btfss	int$flags,1,c
  9684  0044FA  EF81  F022         	goto	_I2C_DO_SEND_ADR_WRITE$intlevel0
  9685  0044FE  EF57  F023         	goto	i2_I2C_DO_SEND_ADR_WRITE
  9686  004502                     _I2C_DO_SEND_ADR_WRITE$intlevel0:
  9687                           	callstack 10
  9688  004502                     
  9689                           ;mcc_generated_files/i2c_master.c: 307:     I2C_Status.addressNackCheck = 1;
  9690  004502  0100               	movlb	0	; () banked
  9691  004504  81EE               	bsf	(_I2C_Status+35)& (0+255),0,b
  9692  004506                     
  9693                           ; BSR set to: 0
  9694                           ;mcc_generated_files/i2c_master.c: 308:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
  9695  004506  51E7               	movf	(_I2C_Status+28)& (0+255),w,b
  9696  004508  EC74  F023         	call	_I2C_MasterSendTxData
  9697  00450C                     
  9698                           ;mcc_generated_files/i2c_master.c: 309:     return I2C_TX;
  9699  00450C  0E03               	movlw	3
  9700  00450E  0012               	return		;funcret
  9701  004510                     __end_of_I2C_DO_SEND_ADR_WRITE:
  9702                           	callstack 0
  9703                           
  9704 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  9705 ;; Defined at:
  9706 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      enum E2863
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 14
  9727 ;; This function calls:
  9728 ;;		_I2C_MasterSendTxData
  9729 ;; This function is called by:
  9730 ;;		i2_I2C_MasterFsm
  9731 ;;		_I2C_MasterFsm
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text65
  9736  0044C6                     __ptext65:
  9737                           	callstack 0
  9738  0044C6                     _I2C_DO_SEND_ADR_READ:
  9739                           	callstack 0
  9740                           
  9741                           ;Skip over the trampoline to the duplicate function for level 2
  9742  0044C6  A259               	btfss	int$flags,1,c
  9743  0044C8  EF68  F022         	goto	_I2C_DO_SEND_ADR_READ$intlevel0
  9744  0044CC  EF3A  F023         	goto	i2_I2C_DO_SEND_ADR_READ
  9745  0044D0                     _I2C_DO_SEND_ADR_READ$intlevel0:
  9746                           	callstack 10
  9747  0044D0                     
  9748                           ;mcc_generated_files/i2c_master.c: 300:     I2C_Status.addressNackCheck = 1;
  9749  0044D0  0100               	movlb	0	; () banked
  9750  0044D2  81EE               	bsf	(_I2C_Status+35)& (0+255),0,b
  9751  0044D4                     
  9752                           ; BSR set to: 0
  9753                           ;mcc_generated_files/i2c_master.c: 301:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
  9754  0044D4  51E7               	movf	(_I2C_Status+28)& (0+255),w,b
  9755  0044D6  0901               	iorlw	1
  9756  0044D8  EC74  F023         	call	_I2C_MasterSendTxData
  9757  0044DC                     
  9758                           ;mcc_generated_files/i2c_master.c: 302:     return I2C_RCEN;
  9759  0044DC  0E05               	movlw	5
  9760  0044DE  0012               	return		;funcret
  9761  0044E0                     __end_of_I2C_DO_SEND_ADR_READ:
  9762                           	callstack 0
  9763                           
  9764 ;; *************** function _I2C_DO_IDLE *****************
  9765 ;; Defined at:
  9766 ;;		line 291 in file "mcc_generated_files/i2c_master.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;		None
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      enum E2863
  9773 ;; Registers used:
  9774 ;;		wreg, status,2
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;Total ram usage:        0 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 13
  9787 ;; This function calls:
  9788 ;;		Nothing
  9789 ;; This function is called by:
  9790 ;;		i2_I2C_MasterFsm
  9791 ;;		_I2C_MasterFsm
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text66
  9796  004584                     __ptext66:
  9797                           	callstack 0
  9798  004584                     _I2C_DO_IDLE:
  9799                           	callstack 0
  9800                           
  9801                           ;Skip over the trampoline to the duplicate function for level 2
  9802  004584  A259               	btfss	int$flags,1,c
  9803  004586  EFC7  F022         	goto	_I2C_DO_IDLE$intlevel0
  9804  00458A  EF6A  F023         	goto	i2_I2C_DO_IDLE
  9805  00458E                     _I2C_DO_IDLE$intlevel0:
  9806                           	callstack 11
  9807  00458E                     
  9808                           ;mcc_generated_files/i2c_master.c: 293:     I2C_Status.busy = 0;
  9809  00458E  0100               	movlb	0	; () banked
  9810  004590  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
  9811  004592                     
  9812                           ; BSR set to: 0
  9813                           ;mcc_generated_files/i2c_master.c: 294:     I2C_Status.error = I2C_NOERR;
  9814  004592  0E00               	movlw	0
  9815  004594  6FED               	movwf	(_I2C_Status+34)& (0+255),b
  9816  004596                     
  9817                           ; BSR set to: 0
  9818                           ;mcc_generated_files/i2c_master.c: 295:     return I2C_RESET;
  9819  004596  0E0E               	movlw	14
  9820  004598                     
  9821                           ; BSR set to: 0
  9822  004598  0012               	return		;funcret
  9823  00459A                     __end_of_I2C_DO_IDLE:
  9824                           	callstack 0
  9825                           
  9826 ;; *************** function _I2C_DO_TX_EMPTY *****************
  9827 ;; Defined at:
  9828 ;;		line 367 in file "mcc_generated_files/i2c_master.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      enum E2863
  9835 ;; Registers used:
  9836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;Total ram usage:        2 bytes
  9847 ;; Hardware stack levels used: 1
  9848 ;; Hardware stack levels required when called: 16
  9849 ;; This function calls:
  9850 ;;		Absolute function
  9851 ;;		_I2C_CallbackReturnReset
  9852 ;;		_I2C_CallbackReturnStop
  9853 ;;		_I2C_DO_SEND_RESTART
  9854 ;;		_I2C_DO_SEND_STOP
  9855 ;;		_I2C_MasterSetIrq
  9856 ;;		_rd1RegCompleteHandler
  9857 ;;		_rd2RegCompleteHandler
  9858 ;;		_rdBlkRegCompleteHandler
  9859 ;;		_wr1RegCompleteHandler
  9860 ;;		_wr2RegCompleteHandler
  9861 ;; This function is called by:
  9862 ;;		i2_I2C_MasterFsm
  9863 ;;		_I2C_MasterFsm
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text67
  9868  003342                     __ptext67:
  9869                           	callstack 0
  9870  003342                     _I2C_DO_TX_EMPTY:
  9871                           	callstack 0
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;Skip over the trampoline to the duplicate function for level 2
  9875  003342  A259               	btfss	int$flags,1,c
  9876  003344  EFA6  F019         	goto	_I2C_DO_TX_EMPTY$intlevel0
  9877  003348  EFA0  F01A         	goto	i2_I2C_DO_TX_EMPTY
  9878  00334C                     _I2C_DO_TX_EMPTY$intlevel0:
  9879                           	callstack 8
  9880  00334C                     
  9881                           ;mcc_generated_files/i2c_master.c: 369:     I2C_Status.bufferFree = 1;
  9882  00334C  0100               	movlb	0	; () banked
  9883  00334E  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
  9884                           
  9885                           ;mcc_generated_files/i2c_master.c: 370:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9886  003350  EFB7  F019         	goto	l8096
  9887  003354                     l8080:
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;mcc_generated_files/i2c_master.c: 374:             return I2C_DO_SEND_RESTART();
  9891  003354  EC0F  F023         	call	_I2C_DO_SEND_RESTART	;wreg free
  9892  003358  EFE4  F019         	goto	l837
  9893  00335C                     l8084:
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;mcc_generated_files/i2c_master.c: 376:             I2C_MasterSetIrq();
  9897  00335C  ECAB  F023         	call	_I2C_MasterSetIrq	;wreg free
  9898  003360                     
  9899                           ;mcc_generated_files/i2c_master.c: 377:             return I2C_TX;
  9900  003360  0E03               	movlw	3
  9901  003362  EFE4  F019         	goto	l837
  9902  003366                     l8090:
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;mcc_generated_files/i2c_master.c: 380:             return I2C_DO_SEND_STOP();
  9906  003366  EC06  F023         	call	_I2C_DO_SEND_STOP	;wreg free
  9907  00336A  EFE4  F019         	goto	l837
  9908  00336E                     l8096:
  9909                           
  9910                           ; BSR set to: 0
  9911  00336E  C0D7  F080         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
  9912  003372  C0D8  F081         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
  9913  003376  D802               	call	u5048
  9914  003378  EFC7  F019         	goto	u5049
  9915  00337C                     u5048:
  9916  00337C  0005               	push	
  9917  00337E  6EFA               	movwf	pclath,c
  9918  003380  51CB               	movf	_I2C_Status& (0+255),w,b
  9919  003382  6EFD               	movwf	tosl,c
  9920  003384  51CC               	movf	(_I2C_Status+1)& (0+255),w,b
  9921  003386  6EFE               	movwf	tosh,c
  9922  003388  6AFF               	clrf	tosu,c
  9923  00338A  50FA               	movf	pclath,w,c
  9924  00338C  0012               	return		;indir
  9925  00338E                     u5049:
  9926  00338E  0100               	movlb	0	; () banked
  9927  003390  6F82               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
  9928  003392  6B83               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
  9929                           
  9930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9931                           ; Switch size 1, requested type "simple"
  9932                           ; Number of cases is 1, Range of values is 0 to 0
  9933                           ; switch strategies available:
  9934                           ; Name         Instructions Cycles
  9935                           ; simple_byte            4     3 (average)
  9936                           ;	Chosen strategy is simple_byte
  9937  003394  5183               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
  9938  003396  0A00               	xorlw	0	; case 0
  9939  003398  B4D8               	btfsc	status,2,c
  9940  00339A  EFD1  F019         	goto	l9984
  9941  00339E  EFB3  F019         	goto	l8090
  9942  0033A2                     l9984:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ; Switch size 1, requested type "simple"
  9946                           ; Number of cases is 4, Range of values is 1 to 4
  9947                           ; switch strategies available:
  9948                           ; Name         Instructions Cycles
  9949                           ; simple_byte           13     7 (average)
  9950                           ;	Chosen strategy is simple_byte
  9951  0033A2  5182               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
  9952  0033A4  0A01               	xorlw	1	; case 1
  9953  0033A6  B4D8               	btfsc	status,2,c
  9954  0033A8  EFB3  F019         	goto	l8090
  9955  0033AC  0A03               	xorlw	3	; case 2
  9956  0033AE  B4D8               	btfsc	status,2,c
  9957  0033B0  EFAA  F019         	goto	l8080
  9958  0033B4  0A01               	xorlw	1	; case 3
  9959  0033B6  B4D8               	btfsc	status,2,c
  9960  0033B8  EFAA  F019         	goto	l8080
  9961  0033BC  0A07               	xorlw	7	; case 4
  9962  0033BE  B4D8               	btfsc	status,2,c
  9963  0033C0  EFAE  F019         	goto	l8084
  9964  0033C4  EFB3  F019         	goto	l8090
  9965  0033C8                     l837:
  9966  0033C8  0012               	return		;funcret
  9967  0033CA                     __end_of_I2C_DO_TX_EMPTY:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function _I2C_MasterSetIrq *****************
  9971 ;; Defined at:
  9972 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		None
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;Total ram usage:        0 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; Hardware stack levels required when called: 13
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_I2C_DO_TX_EMPTY
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text68
 10001  004756                     __ptext68:
 10002                           	callstack 0
 10003  004756                     _I2C_MasterSetIrq:
 10004                           	callstack 10
 10005  004756                     
 10006                           ;mcc_generated_files/i2c_master.c: 605:     PIR1bits.SSPIF = 1;
 10007  004756  869E               	bsf	158,3,c	;volatile
 10008  004758  0012               	return		;funcret
 10009  00475A                     __end_of_I2C_MasterSetIrq:
 10010                           	callstack 0
 10011                           
 10012 ;; *************** function _I2C_MasterIsNack *****************
 10013 ;; Defined at:
 10014 ;;		line 556 in file "mcc_generated_files/i2c_master.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;		None
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  1    wreg      _Bool 
 10021 ;; Registers used:
 10022 ;;		wreg
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;Total ram usage:        0 bytes
 10033 ;; Hardware stack levels used: 1
 10034 ;; Hardware stack levels required when called: 13
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		_I2C_MasterFsm
 10039 ;;		_I2C_DO_TX
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text69
 10044  0045AE                     __ptext69:
 10045                           	callstack 0
 10046  0045AE                     _I2C_MasterIsNack:
 10047                           	callstack 11
 10048  0045AE                     
 10049                           ;mcc_generated_files/i2c_master.c: 558:     return SSPCON2bits.ACKSTAT;
 10050  0045AE  BCC5               	btfsc	197,6,c	;volatile
 10051  0045B0  EFDC  F022         	goto	u4931
 10052  0045B4  EFDF  F022         	goto	u4930
 10053  0045B8                     u4931:
 10054  0045B8  0E01               	movlw	1
 10055  0045BA  EFE0  F022         	goto	u4936
 10056  0045BE                     u4930:
 10057  0045BE  0E00               	movlw	0
 10058  0045C0                     u4936:
 10059  0045C0  0012               	return		;funcret
 10060  0045C2                     __end_of_I2C_MasterIsNack:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function _I2C_MasterSendTxData *****************
 10064 ;; Defined at:
 10065 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  data            1    wreg     unsigned char 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;  data            1   38[COMRAM] unsigned char 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      void 
 10072 ;; Registers used:
 10073 ;;		wreg
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;Total ram usage:        1 bytes
 10084 ;; Hardware stack levels used: 1
 10085 ;; Hardware stack levels required when called: 13
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_I2C_DO_SEND_ADR_READ
 10090 ;;		_I2C_DO_SEND_ADR_WRITE
 10091 ;;		_I2C_DO_TX
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text70
 10096  0046E8                     __ptext70:
 10097                           	callstack 0
 10098  0046E8                     _I2C_MasterSendTxData:
 10099                           	callstack 10
 10100                           
 10101                           ;incstack = 0
 10102                           ;I2C_MasterSendTxData@data stored from wreg
 10103  0046E8  6E27               	movwf	I2C_MasterSendTxData@data^0,c
 10104  0046EA                     
 10105                           ;mcc_generated_files/i2c_master.c: 526: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_
      +                          master.c: 528:     SSPBUF = data;
 10106  0046EA  C027  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 10107  0046EE  0012               	return		;funcret
 10108  0046F0                     __end_of_I2C_MasterSendTxData:
 10109                           	callstack 0
 10110                           
 10111 ;; *************** function _I2C_MasterSendAck *****************
 10112 ;; Defined at:
 10113 ;;		line 561 in file "mcc_generated_files/i2c_master.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;		None
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		None
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;Total ram usage:        0 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; Hardware stack levels required when called: 13
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_I2C_DO_RX
 10138 ;;		_I2C_DO_RX_ACK
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text71
 10143  00473E                     __ptext71:
 10144                           	callstack 0
 10145  00473E                     _I2C_MasterSendAck:
 10146                           	callstack 10
 10147  00473E                     
 10148                           ;mcc_generated_files/i2c_master.c: 563:     SSPCON2bits.ACKDT = 0;
 10149  00473E  9AC5               	bcf	197,5,c	;volatile
 10150                           
 10151                           ;mcc_generated_files/i2c_master.c: 564:     SSPCON2bits.ACKEN = 1;
 10152  004740  88C5               	bsf	197,4,c	;volatile
 10153  004742  0012               	return		;funcret
 10154  004744                     __end_of_I2C_MasterSendAck:
 10155                           	callstack 0
 10156                           
 10157 ;; *************** function _I2C_MasterGetRxData *****************
 10158 ;; Defined at:
 10159 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      unsigned char 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used: 1
 10179 ;; Hardware stack levels required when called: 13
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_I2C_DO_RX
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text72
 10188  00475A                     __ptext72:
 10189                           	callstack 0
 10190  00475A                     _I2C_MasterGetRxData:
 10191                           	callstack 10
 10192  00475A                     
 10193                           ;mcc_generated_files/i2c_master.c: 523:     return SSPBUF;
 10194  00475A  50C9               	movf	201,w,c	;volatile
 10195  00475C  0012               	return		;funcret
 10196  00475E                     __end_of_I2C_MasterGetRxData:
 10197                           	callstack 0
 10198                           
 10199 ;; *************** function _I2C_MasterSendNack *****************
 10200 ;; Defined at:
 10201 ;;		line 567 in file "mcc_generated_files/i2c_master.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		None
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;Total ram usage:        0 bytes
 10220 ;; Hardware stack levels used: 1
 10221 ;; Hardware stack levels required when called: 13
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_I2C_DO_RX_NACK_STOP
 10226 ;;		_I2C_DO_RX_NACK_RESTART
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text73
 10231  004744                     __ptext73:
 10232                           	callstack 0
 10233  004744                     _I2C_MasterSendNack:
 10234                           	callstack 10
 10235  004744                     
 10236                           ;mcc_generated_files/i2c_master.c: 569:     SSPCON2bits.ACKDT = 1;
 10237  004744  8AC5               	bsf	197,5,c	;volatile
 10238                           
 10239                           ;mcc_generated_files/i2c_master.c: 570:     SSPCON2bits.ACKEN = 1;
 10240  004746  88C5               	bsf	197,4,c	;volatile
 10241  004748  0012               	return		;funcret
 10242  00474A                     __end_of_I2C_MasterSendNack:
 10243                           	callstack 0
 10244                           
 10245 ;; *************** function _I2C_MasterStartRx *****************
 10246 ;; Defined at:
 10247 ;;		line 541 in file "mcc_generated_files/i2c_master.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		None
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used: 1
 10267 ;; Hardware stack levels required when called: 13
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_I2C_DO_RCEN
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text74
 10276  00475E                     __ptext74:
 10277                           	callstack 0
 10278  00475E                     _I2C_MasterStartRx:
 10279                           	callstack 10
 10280  00475E                     
 10281                           ;mcc_generated_files/i2c_master.c: 543:     SSPCON2bits.RCEN = 1;
 10282  00475E  86C5               	bsf	197,3,c	;volatile
 10283  004760  0012               	return		;funcret
 10284  004762                     __end_of_I2C_MasterStartRx:
 10285                           	callstack 0
 10286                           
 10287 ;; *************** function _I2C_CallbackReturnReset *****************
 10288 ;; Defined at:
 10289 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  funPtr          2    0[BANK0 ] PTR void 
 10292 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10293 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      enum E360
 10298 ;; Registers used:
 10299 ;;		wreg
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;Total ram usage:        2 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 13
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_I2C_Open
 10316 ;;		i2_I2C_DO_TX
 10317 ;;		i2_I2C_DO_RX
 10318 ;;		i2_I2C_DO_TX_EMPTY
 10319 ;;		i2_I2C_DO_ADDRESS_NACK
 10320 ;;		_I2C_DO_TX
 10321 ;;		_I2C_DO_RX
 10322 ;;		_I2C_DO_TX_EMPTY
 10323 ;;		_I2C_DO_ADDRESS_NACK
 10324 ;;		_I2C_DO_RX_EMPTY
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text75
 10329  004692                     __ptext75:
 10330                           	callstack 0
 10331  004692                     _I2C_CallbackReturnReset:
 10332                           	callstack 0
 10333                           
 10334                           ;Skip over the trampoline to the duplicate function for level 2
 10335  004692  A259               	btfss	int$flags,1,c
 10336  004694  EF4E  F023         	goto	_I2C_CallbackReturnReset$intlevel0
 10337  004698  EFC3  F023         	goto	i2_I2C_CallbackReturnReset
 10338  00469C                     _I2C_CallbackReturnReset$intlevel0:
 10339                           	callstack 10
 10340  00469C                     
 10341                           ;mcc_generated_files/i2c_master.c: 483: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 484: {;mcc_generated_files/i2c_master.c: 485:  
      +                             return I2C_RESET_LINK;
 10342  00469C  0E05               	movlw	5
 10343  00469E  0012               	return		;funcret
 10344  0046A0                     __end_of_I2C_CallbackReturnReset:
 10345                           	callstack 0
 10346                           
 10347 ;; *************** function _I2C_CallbackReturnStop *****************
 10348 ;; Defined at:
 10349 ;;		line 478 in file "mcc_generated_files/i2c_master.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;  funPtr          2    0[BANK0 ] PTR void 
 10352 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10353 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      enum E360
 10358 ;; Registers used:
 10359 ;;		wreg
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;Total ram usage:        2 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 13
 10372 ;; This function calls:
 10373 ;;		Nothing
 10374 ;; This function is called by:
 10375 ;;		_I2C_Open
 10376 ;;		_I2C_SetCallback
 10377 ;;		i2_I2C_DO_TX
 10378 ;;		i2_I2C_DO_RX
 10379 ;;		i2_I2C_DO_TX_EMPTY
 10380 ;;		i2_I2C_DO_ADDRESS_NACK
 10381 ;;		_I2C_DO_TX
 10382 ;;		_I2C_DO_RX
 10383 ;;		_I2C_DO_TX_EMPTY
 10384 ;;		_I2C_DO_ADDRESS_NACK
 10385 ;;		_I2C_DO_RX_EMPTY
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text76
 10390  0046A0                     __ptext76:
 10391                           	callstack 0
 10392  0046A0                     _I2C_CallbackReturnStop:
 10393                           	callstack 0
 10394                           
 10395                           ;Skip over the trampoline to the duplicate function for level 2
 10396  0046A0  A259               	btfss	int$flags,1,c
 10397  0046A2  EF55  F023         	goto	_I2C_CallbackReturnStop$intlevel0
 10398  0046A6  EFC5  F023         	goto	i2_I2C_CallbackReturnStop
 10399  0046AA                     _I2C_CallbackReturnStop$intlevel0:
 10400                           	callstack 10
 10401  0046AA                     
 10402                           ;mcc_generated_files/i2c_master.c: 478: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 479: {;mcc_generated_files/i2c_master.c: 480:   
      +                            return I2C_STOP;
 10403  0046AA  0E01               	movlw	1
 10404  0046AC  0012               	return		;funcret
 10405  0046AE                     __end_of_I2C_CallbackReturnStop:
 10406                           	callstack 0
 10407                           
 10408 ;; *************** function _rdBlkRegCompleteHandler *****************
 10409 ;; Defined at:
 10410 ;;		line 128 in file "mcc_generated_files/examples/i2c_master_example.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  ptr             2    0[BANK0 ] PTR void 
 10413 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10414 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      enum E360
 10419 ;; Registers used:
 10420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10430 ;;Total ram usage:        2 bytes
 10431 ;; Hardware stack levels used: 1
 10432 ;; Hardware stack levels required when called: 15
 10433 ;; This function calls:
 10434 ;;		_I2C_SetBuffer
 10435 ;;		_I2C_SetDataCompleteCallback
 10436 ;; This function is called by:
 10437 ;;		_I2C_ReadDataBlock
 10438 ;;		i2_I2C_DO_TX
 10439 ;;		i2_I2C_DO_RX
 10440 ;;		i2_I2C_DO_TX_EMPTY
 10441 ;;		i2_I2C_DO_ADDRESS_NACK
 10442 ;;		_I2C_DO_TX
 10443 ;;		_I2C_DO_RX
 10444 ;;		_I2C_DO_TX_EMPTY
 10445 ;;		_I2C_DO_ADDRESS_NACK
 10446 ;;		_I2C_DO_RX_EMPTY
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text77
 10451  003E7C                     __ptext77:
 10452                           	callstack 0
 10453  003E7C                     _rdBlkRegCompleteHandler:
 10454                           	callstack 0
 10455                           
 10456                           ;Skip over the trampoline to the duplicate function for level 2
 10457  003E7C  A259               	btfss	int$flags,1,c
 10458  003E7E  EF43  F01F         	goto	_rdBlkRegCompleteHandler$intlevel0
 10459  003E82  EFEE  F01F         	goto	i2_rdBlkRegCompleteHandler
 10460  003E86                     _rdBlkRegCompleteHandler$intlevel0:
 10461                           	callstack 8
 10462  003E86                     
 10463                           ;mcc_generated_files/examples/i2c_master_example.c: 128: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 129: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 130:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 10464  003E86  0100               	movlb	0	; () banked
 10465  003E88  EE20 F002          	lfsr	2,2
 10466  003E8C  5180               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 10467  003E8E  26D9               	addwf	fsr2l,f,c
 10468  003E90  5181               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 10469  003E92  22DA               	addwfc	fsr2h,f,c
 10470  003E94  CFDE F027          	movff	postinc2,I2C_SetBuffer@buffer
 10471  003E98  CFDD F028          	movff	postdec2,I2C_SetBuffer@buffer+1
 10472  003E9C  C080  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 10473  003EA0  C081  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 10474  003EA4  CFDE F029          	movff	postinc2,I2C_SetBuffer@bufferSize
 10475  003EA8  CFDD F02A          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 10476  003EAC  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
 10477  003EB0                     
 10478                           ;mcc_generated_files/examples/i2c_master_example.c: 131:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10479  003EB0  0E00               	movlw	0
 10480  003EB2  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10481  003EB4  0E00               	movlw	0
 10482  003EB6  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10483  003EB8  0E00               	movlw	0
 10484  003EBA  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10485  003EBC  0E00               	movlw	0
 10486  003EBE  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10487  003EC0  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
 10488  003EC4                     
 10489                           ;mcc_generated_files/examples/i2c_master_example.c: 132:     return I2C_RESTART_READ;
 10490  003EC4  0E02               	movlw	2
 10491  003EC6  0012               	return		;funcret
 10492  003EC8                     __end_of_rdBlkRegCompleteHandler:
 10493                           	callstack 0
 10494                           
 10495 ;; *************** function _wr1RegCompleteHandler *****************
 10496 ;; Defined at:
 10497 ;;		line 114 in file "mcc_generated_files/examples/i2c_master_example.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  ptr             2    0[BANK0 ] PTR void 
 10500 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10501 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      enum E360
 10506 ;; Registers used:
 10507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used: 1
 10519 ;; Hardware stack levels required when called: 15
 10520 ;; This function calls:
 10521 ;;		_I2C_SetBuffer
 10522 ;;		_I2C_SetDataCompleteCallback
 10523 ;; This function is called by:
 10524 ;;		i2_I2C_DO_TX
 10525 ;;		i2_I2C_DO_RX
 10526 ;;		i2_I2C_DO_TX_EMPTY
 10527 ;;		i2_I2C_DO_ADDRESS_NACK
 10528 ;;		_I2C_DO_TX
 10529 ;;		_I2C_DO_RX
 10530 ;;		_I2C_DO_TX_EMPTY
 10531 ;;		_I2C_DO_ADDRESS_NACK
 10532 ;;		_I2C_DO_RX_EMPTY
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           	psect	text78
 10537  00408E                     __ptext78:
 10538                           	callstack 0
 10539  00408E                     _wr1RegCompleteHandler:
 10540                           	callstack 0
 10541                           
 10542                           ;Skip over the trampoline to the duplicate function for level 2
 10543  00408E  A259               	btfss	int$flags,1,c
 10544  004090  EF4C  F020         	goto	_wr1RegCompleteHandler$intlevel0
 10545  004094  EF40  F021         	goto	i2_wr1RegCompleteHandler
 10546  004098                     _wr1RegCompleteHandler$intlevel0:
 10547                           	callstack 8
 10548  004098                     
 10549                           ;mcc_generated_files/examples/i2c_master_example.c: 114: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 115: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 116:     I2C_SetBuffer(ptr,1);
 10550  004098  C080  F027         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 10551  00409C  C081  F028         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 10552  0040A0  0E00               	movlw	0
 10553  0040A2  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10554  0040A4  0E01               	movlw	1
 10555  0040A6  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 10556  0040A8  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
 10557  0040AC                     
 10558                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10559  0040AC  0E00               	movlw	0
 10560  0040AE  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10561  0040B0  0E00               	movlw	0
 10562  0040B2  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10563  0040B4  0E00               	movlw	0
 10564  0040B6  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10565  0040B8  0E00               	movlw	0
 10566  0040BA  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10567  0040BC  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
 10568  0040C0                     
 10569                           ;mcc_generated_files/examples/i2c_master_example.c: 118:     return I2C_CONTINUE;
 10570  0040C0  0E04               	movlw	4
 10571  0040C2  0012               	return		;funcret
 10572  0040C4                     __end_of_wr1RegCompleteHandler:
 10573                           	callstack 0
 10574                           
 10575 ;; *************** function _rd2RegCompleteHandler *****************
 10576 ;; Defined at:
 10577 ;;		line 107 in file "mcc_generated_files/examples/i2c_master_example.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  ptr             2    0[BANK0 ] PTR void 
 10580 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10581 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      enum E360
 10586 ;; Registers used:
 10587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;Total ram usage:        2 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; Hardware stack levels required when called: 15
 10600 ;; This function calls:
 10601 ;;		_I2C_SetBuffer
 10602 ;;		_I2C_SetDataCompleteCallback
 10603 ;; This function is called by:
 10604 ;;		_I2C_Read2ByteRegister
 10605 ;;		i2_I2C_DO_TX
 10606 ;;		i2_I2C_DO_RX
 10607 ;;		i2_I2C_DO_TX_EMPTY
 10608 ;;		i2_I2C_DO_ADDRESS_NACK
 10609 ;;		_I2C_DO_TX
 10610 ;;		_I2C_DO_RX
 10611 ;;		_I2C_DO_TX_EMPTY
 10612 ;;		_I2C_DO_ADDRESS_NACK
 10613 ;;		_I2C_DO_RX_EMPTY
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text79
 10618  0040C4                     __ptext79:
 10619                           	callstack 0
 10620  0040C4                     _rd2RegCompleteHandler:
 10621                           	callstack 0
 10622                           
 10623                           ;Skip over the trampoline to the duplicate function for level 2
 10624  0040C4  A259               	btfss	int$flags,1,c
 10625  0040C6  EF67  F020         	goto	_rd2RegCompleteHandler$intlevel0
 10626  0040CA  EF56  F021         	goto	i2_rd2RegCompleteHandler
 10627  0040CE                     _rd2RegCompleteHandler$intlevel0:
 10628                           	callstack 8
 10629  0040CE                     
 10630                           ;mcc_generated_files/examples/i2c_master_example.c: 107: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 108: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 109:     I2C_SetBuffer(ptr,2);
 10631  0040CE  C080  F027         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 10632  0040D2  C081  F028         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 10633  0040D6  0E00               	movlw	0
 10634  0040D8  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10635  0040DA  0E02               	movlw	2
 10636  0040DC  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 10637  0040DE  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
 10638  0040E2                     
 10639                           ;mcc_generated_files/examples/i2c_master_example.c: 110:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10640  0040E2  0E00               	movlw	0
 10641  0040E4  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10642  0040E6  0E00               	movlw	0
 10643  0040E8  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10644  0040EA  0E00               	movlw	0
 10645  0040EC  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10646  0040EE  0E00               	movlw	0
 10647  0040F0  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10648  0040F2  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
 10649  0040F6                     
 10650                           ;mcc_generated_files/examples/i2c_master_example.c: 111:     return I2C_RESTART_READ;
 10651  0040F6  0E02               	movlw	2
 10652  0040F8  0012               	return		;funcret
 10653  0040FA                     __end_of_rd2RegCompleteHandler:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function _rd1RegCompleteHandler *****************
 10657 ;; Defined at:
 10658 ;;		line 100 in file "mcc_generated_files/examples/i2c_master_example.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  ptr             2    0[BANK0 ] PTR void 
 10661 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 10662 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;		None
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      enum E360
 10667 ;; Registers used:
 10668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;Total ram usage:        2 bytes
 10679 ;; Hardware stack levels used: 1
 10680 ;; Hardware stack levels required when called: 15
 10681 ;; This function calls:
 10682 ;;		_I2C_SetBuffer
 10683 ;;		_I2C_SetDataCompleteCallback
 10684 ;; This function is called by:
 10685 ;;		_I2C_Read1ByteRegister
 10686 ;;		i2_I2C_DO_TX
 10687 ;;		i2_I2C_DO_RX
 10688 ;;		i2_I2C_DO_TX_EMPTY
 10689 ;;		i2_I2C_DO_ADDRESS_NACK
 10690 ;;		_I2C_DO_TX
 10691 ;;		_I2C_DO_RX
 10692 ;;		_I2C_DO_TX_EMPTY
 10693 ;;		_I2C_DO_ADDRESS_NACK
 10694 ;;		_I2C_DO_RX_EMPTY
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text80
 10699  0040FA                     __ptext80:
 10700                           	callstack 0
 10701  0040FA                     _rd1RegCompleteHandler:
 10702                           	callstack 0
 10703                           
 10704                           ;Skip over the trampoline to the duplicate function for level 2
 10705  0040FA  A259               	btfss	int$flags,1,c
 10706  0040FC  EF82  F020         	goto	_rd1RegCompleteHandler$intlevel0
 10707  004100  EF6C  F021         	goto	i2_rd1RegCompleteHandler
 10708  004104                     _rd1RegCompleteHandler$intlevel0:
 10709                           	callstack 8
 10710  004104                     
 10711                           ;mcc_generated_files/examples/i2c_master_example.c: 100: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 101: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 102:     I2C_SetBuffer(ptr,1);
 10712  004104  C080  F027         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 10713  004108  C081  F028         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 10714  00410C  0E00               	movlw	0
 10715  00410E  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10716  004110  0E01               	movlw	1
 10717  004112  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 10718  004114  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
 10719  004118                     
 10720                           ;mcc_generated_files/examples/i2c_master_example.c: 103:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10721  004118  0E00               	movlw	0
 10722  00411A  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10723  00411C  0E00               	movlw	0
 10724  00411E  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10725  004120  0E00               	movlw	0
 10726  004122  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10727  004124  0E00               	movlw	0
 10728  004126  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10729  004128  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
 10730  00412C                     
 10731                           ;mcc_generated_files/examples/i2c_master_example.c: 104:     return I2C_RESTART_READ;
 10732  00412C  0E02               	movlw	2
 10733  00412E  0012               	return		;funcret
 10734  004130                     __end_of_rd1RegCompleteHandler:
 10735                           	callstack 0
 10736                           
 10737 ;; *************** function _wr2RegCompleteHandler *****************
 10738 ;; Defined at:
 10739 ;;		line 121 in file "mcc_generated_files/examples/i2c_master_example.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  ptr             2    0[BANK0 ] PTR void 
 10742 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10743 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  1    wreg      enum E360
 10748 ;; Registers used:
 10749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10755 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;Total ram usage:        2 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; Hardware stack levels required when called: 15
 10762 ;; This function calls:
 10763 ;;		_I2C_SetBuffer
 10764 ;;		_I2C_SetDataCompleteCallback
 10765 ;; This function is called by:
 10766 ;;		_I2C_Write2ByteRegister
 10767 ;;		i2_I2C_DO_TX
 10768 ;;		i2_I2C_DO_RX
 10769 ;;		i2_I2C_DO_TX_EMPTY
 10770 ;;		i2_I2C_DO_ADDRESS_NACK
 10771 ;;		_I2C_DO_TX
 10772 ;;		_I2C_DO_RX
 10773 ;;		_I2C_DO_TX_EMPTY
 10774 ;;		_I2C_DO_ADDRESS_NACK
 10775 ;;		_I2C_DO_RX_EMPTY
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text81
 10780  004130                     __ptext81:
 10781                           	callstack 0
 10782  004130                     _wr2RegCompleteHandler:
 10783                           	callstack 0
 10784                           
 10785                           ;Skip over the trampoline to the duplicate function for level 2
 10786  004130  A259               	btfss	int$flags,1,c
 10787  004132  EF9D  F020         	goto	_wr2RegCompleteHandler$intlevel0
 10788  004136  EF82  F021         	goto	i2_wr2RegCompleteHandler
 10789  00413A                     _wr2RegCompleteHandler$intlevel0:
 10790                           	callstack 8
 10791  00413A                     
 10792                           ;mcc_generated_files/examples/i2c_master_example.c: 121: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 122: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(ptr,2);
 10793  00413A  C080  F027         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 10794  00413E  C081  F028         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 10795  004142  0E00               	movlw	0
 10796  004144  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10797  004146  0E02               	movlw	2
 10798  004148  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 10799  00414A  ECFF  F021         	call	_I2C_SetBuffer	;wreg free
 10800  00414E                     
 10801                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10802  00414E  0E00               	movlw	0
 10803  004150  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10804  004152  0E00               	movlw	0
 10805  004154  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10806  004156  0E00               	movlw	0
 10807  004158  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10808  00415A  0E00               	movlw	0
 10809  00415C  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10810  00415E  EC88  F022         	call	_I2C_SetDataCompleteCallback	;wreg free
 10811  004162                     
 10812                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     return I2C_CONTINUE;
 10813  004162  0E04               	movlw	4
 10814  004164  0012               	return		;funcret
 10815  004166                     __end_of_wr2RegCompleteHandler:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _I2C_SetDataCompleteCallback *****************
 10819 ;; Defined at:
 10820 ;;		line 231 in file "mcc_generated_files/i2c_master.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  cb              2   43[COMRAM] PTR FTN(PTR void ,)enum 
 10823 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 10824 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
 10825 ;;  ptr             2   45[COMRAM] PTR void 
 10826 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10827 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;Total ram usage:        4 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; Hardware stack levels required when called: 14
 10846 ;; This function calls:
 10847 ;;		_I2C_SetCallback
 10848 ;; This function is called by:
 10849 ;;		_I2C_Read1ByteRegister
 10850 ;;		_rd1RegCompleteHandler
 10851 ;;		_rd2RegCompleteHandler
 10852 ;;		_wr1RegCompleteHandler
 10853 ;;		_wr2RegCompleteHandler
 10854 ;;		_rdBlkRegCompleteHandler
 10855 ;;		_I2C_Read2ByteRegister
 10856 ;;		_I2C_Write2ByteRegister
 10857 ;;		_I2C_ReadDataBlock
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text82
 10862  004510                     __ptext82:
 10863                           	callstack 0
 10864  004510                     _I2C_SetDataCompleteCallback:
 10865                           	callstack 14
 10866  004510                     
 10867                           ;mcc_generated_files/i2c_master.c: 231: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 232: {;mcc_generated_files/i2c_master.c
      +                          : 233:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 10868  004510  C02C  F027         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 10869  004514  C02D  F028         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 10870  004518  C02E  F029         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 10871  00451C  C02F  F02A         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 10872  004520  0E00               	movlw	0
 10873  004522  EC1B  F01B         	call	_I2C_SetCallback
 10874  004526  0012               	return		;funcret
 10875  004528                     __end_of_I2C_SetDataCompleteCallback:
 10876                           	callstack 0
 10877                           
 10878 ;; *************** function _I2C_SetCallback *****************
 10879 ;; Defined at:
 10880 ;;		line 256 in file "mcc_generated_files/i2c_master.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  idx             1    wreg     enum E2881
 10883 ;;  cb              2   38[COMRAM] PTR FTN(PTR void ,)enum 
 10884 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 10885 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
 10886 ;;  ptr             2   40[COMRAM] PTR void 
 10887 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10888 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  idx             1   42[COMRAM] enum E2881
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;Total ram usage:        5 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 13
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_I2C_SetDataCompleteCallback
 10911 ;;		_I2C_SetAddressNackCallback
 10912 ;;		_I2C_SetWriteCollisionCallback
 10913 ;;		_I2C_SetDataNackCallback
 10914 ;;		_I2C_SetTimeoutCallback
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           	psect	text83
 10919  003636                     __ptext83:
 10920                           	callstack 0
 10921  003636                     _I2C_SetCallback:
 10922                           	callstack 14
 10923                           
 10924                           ;incstack = 0
 10925                           ;I2C_SetCallback@idx stored from wreg
 10926  003636  6E2B               	movwf	I2C_SetCallback@idx^0,c
 10927  003638                     
 10928                           ;mcc_generated_files/i2c_master.c: 256: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 257: {;mcc_generate
      +                          d_files/i2c_master.c: 258:     if(cb)
 10929  003638  5027               	movf	I2C_SetCallback@cb^0,w,c
 10930  00363A  1028               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 10931  00363C  B4D8               	btfsc	status,2,c
 10932  00363E  EF23  F01B         	goto	u4791
 10933  003642  EF25  F01B         	goto	u4790
 10934  003646                     u4791:
 10935  003646  EF3F  F01B         	goto	l7594
 10936  00364A                     u4790:
 10937  00364A                     
 10938                           ;mcc_generated_files/i2c_master.c: 259:     {;mcc_generated_files/i2c_master.c: 260:    
      +                               I2C_Status.callbackTable[idx] = cb;
 10939  00364A  502B               	movf	I2C_SetCallback@idx^0,w,c
 10940  00364C  0D02               	mullw	2
 10941  00364E  0ECB               	movlw	low _I2C_Status
 10942  003650  24F3               	addwf	243,w,c
 10943  003652  6ED9               	movwf	fsr2l,c
 10944  003654  0E00               	movlw	high _I2C_Status
 10945  003656  20F4               	addwfc	prodh,w,c
 10946  003658  6EDA               	movwf	fsr2h,c
 10947  00365A  C027  FFDE         	movff	I2C_SetCallback@cb,postinc2
 10948  00365E  C028  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 10949                           
 10950                           ;mcc_generated_files/i2c_master.c: 261:         I2C_Status.callbackPayload[idx] = ptr;
 10951  003662  502B               	movf	I2C_SetCallback@idx^0,w,c
 10952  003664  0D02               	mullw	2
 10953  003666  0ED7               	movlw	low (_I2C_Status+12)
 10954  003668  24F3               	addwf	243,w,c
 10955  00366A  6ED9               	movwf	fsr2l,c
 10956  00366C  0E00               	movlw	high (_I2C_Status+12)
 10957  00366E  20F4               	addwfc	prodh,w,c
 10958  003670  6EDA               	movwf	fsr2h,c
 10959  003672  C029  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 10960  003676  C02A  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 10961                           
 10962                           ;mcc_generated_files/i2c_master.c: 262:     }
 10963  00367A  EF57  F01B         	goto	l781
 10964  00367E                     l7594:
 10965                           
 10966                           ;mcc_generated_files/i2c_master.c: 264:     {;mcc_generated_files/i2c_master.c: 265:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 10967  00367E  502B               	movf	I2C_SetCallback@idx^0,w,c
 10968  003680  0D02               	mullw	2
 10969  003682  0ECB               	movlw	low _I2C_Status
 10970  003684  24F3               	addwf	243,w,c
 10971  003686  6ED9               	movwf	fsr2l,c
 10972  003688  0E00               	movlw	high _I2C_Status
 10973  00368A  20F4               	addwfc	prodh,w,c
 10974  00368C  6EDA               	movwf	fsr2h,c
 10975  00368E  0EA0               	movlw	low _I2C_CallbackReturnStop
 10976  003690  6EDE               	movwf	postinc2,c
 10977  003692  0E46               	movlw	high _I2C_CallbackReturnStop
 10978  003694  6EDD               	movwf	postdec2,c
 10979                           
 10980                           ;mcc_generated_files/i2c_master.c: 266:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 10981  003696  502B               	movf	I2C_SetCallback@idx^0,w,c
 10982  003698  0D02               	mullw	2
 10983  00369A  0ED7               	movlw	low (_I2C_Status+12)
 10984  00369C  24F3               	addwf	243,w,c
 10985  00369E  6ED9               	movwf	fsr2l,c
 10986  0036A0  0E00               	movlw	high (_I2C_Status+12)
 10987  0036A2  20F4               	addwfc	prodh,w,c
 10988  0036A4  6EDA               	movwf	fsr2h,c
 10989  0036A6  0E00               	movlw	0
 10990  0036A8  6EDE               	movwf	postinc2,c
 10991  0036AA  0E00               	movlw	0
 10992  0036AC  6EDD               	movwf	postdec2,c
 10993  0036AE                     l781:
 10994  0036AE  0012               	return		;funcret
 10995  0036B0                     __end_of_I2C_SetCallback:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _I2C_SetBuffer *****************
 10999 ;; Defined at:
 11000 ;;		line 221 in file "mcc_generated_files/i2c_master.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  buffer          2   38[COMRAM] PTR void 
 11003 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 11004 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.
      +data(3), 
 11005 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 11006 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteR
      +egister@returnValue(1), 
 11007 ;;		 -> NULL(0), 
 11008 ;;  bufferSize      2   40[COMRAM] unsigned int 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;		None
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  1    wreg      void 
 11013 ;; Registers used:
 11014 ;;		wreg, status,2, status,0
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;Total ram usage:        4 bytes
 11025 ;; Hardware stack levels used: 1
 11026 ;; Hardware stack levels required when called: 13
 11027 ;; This function calls:
 11028 ;;		Nothing
 11029 ;; This function is called by:
 11030 ;;		_I2C_Read1ByteRegister
 11031 ;;		_rd1RegCompleteHandler
 11032 ;;		_rd2RegCompleteHandler
 11033 ;;		_wr1RegCompleteHandler
 11034 ;;		_wr2RegCompleteHandler
 11035 ;;		_rdBlkRegCompleteHandler
 11036 ;;		_I2C_Read2ByteRegister
 11037 ;;		_I2C_Write2ByteRegister
 11038 ;;		_I2C_WriteNBytes
 11039 ;;		_I2C_ReadNBytes
 11040 ;;		_I2C_ReadDataBlock
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           	psect	text84
 11045  0043FE                     __ptext84:
 11046                           	callstack 0
 11047  0043FE                     _I2C_SetBuffer:
 11048                           	callstack 15
 11049  0043FE                     
 11050                           ;mcc_generated_files/i2c_master.c: 221: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 222: {;mcc_generated_files/i2c_master.c: 223:     
      +                          if(I2C_Status.bufferFree)
 11051  0043FE  0100               	movlb	0	; () banked
 11052  004400  A7EE               	btfss	(_I2C_Status+35)& (0+255),3,b
 11053  004402  EF05  F022         	goto	u4811
 11054  004406  EF07  F022         	goto	u4810
 11055  00440A                     u4811:
 11056  00440A  EF10  F022         	goto	l761
 11057  00440E                     u4810:
 11058  00440E                     
 11059                           ; BSR set to: 0
 11060                           ;mcc_generated_files/i2c_master.c: 224:     {;mcc_generated_files/i2c_master.c: 225:    
      +                               I2C_Status.data_ptr = buffer;
 11061  00440E  C027  F0E8         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 11062  004412  C028  F0E9         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 11063  004416                     
 11064                           ; BSR set to: 0
 11065                           ;mcc_generated_files/i2c_master.c: 226:         I2C_Status.data_length = bufferSize;
 11066  004416  C029  F0EA         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 11067  00441A  C02A  F0EB         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 11068  00441E                     
 11069                           ; BSR set to: 0
 11070                           ;mcc_generated_files/i2c_master.c: 227:         I2C_Status.bufferFree = 0;
 11071  00441E  97EE               	bcf	(_I2C_Status+35)& (0+255),3,b
 11072  004420                     l761:
 11073                           
 11074                           ; BSR set to: 0
 11075  004420  0012               	return		;funcret
 11076  004422                     __end_of_I2C_SetBuffer:
 11077                           	callstack 0
 11078                           
 11079 ;; *************** function _I2C_MasterStop *****************
 11080 ;; Defined at:
 11081 ;;		line 551 in file "mcc_generated_files/i2c_master.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;		None
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		None
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;Total ram usage:        0 bytes
 11100 ;; Hardware stack levels used: 1
 11101 ;; Hardware stack levels required when called: 13
 11102 ;; This function calls:
 11103 ;;		Nothing
 11104 ;; This function is called by:
 11105 ;;		_I2C_DO_SEND_STOP
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text85
 11110  004762                     __ptext85:
 11111                           	callstack 0
 11112  004762                     _I2C_MasterStop:
 11113                           	callstack 9
 11114  004762                     
 11115                           ;mcc_generated_files/i2c_master.c: 553:     SSPCON2bits.PEN = 1;
 11116  004762  84C5               	bsf	197,2,c	;volatile
 11117  004764  0012               	return		;funcret
 11118  004766                     __end_of_I2C_MasterStop:
 11119                           	callstack 0
 11120                           
 11121 ;; *************** function _I2C_MasterEnableRestart *****************
 11122 ;; Defined at:
 11123 ;;		line 531 in file "mcc_generated_files/i2c_master.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;		None
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      void 
 11130 ;; Registers used:
 11131 ;;		None
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used: 1
 11143 ;; Hardware stack levels required when called: 13
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_I2C_DO_SEND_RESTART_READ
 11148 ;;		_I2C_DO_SEND_RESTART_WRITE
 11149 ;;		_I2C_DO_SEND_RESTART
 11150 ;;		_I2C_DO_RX_EMPTY
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text86
 11155  004766                     __ptext86:
 11156                           	callstack 0
 11157  004766                     _I2C_MasterEnableRestart:
 11158                           	callstack 9
 11159  004766                     
 11160                           ;mcc_generated_files/i2c_master.c: 533:     SSPCON2bits.RSEN = 1;
 11161  004766  82C5               	bsf	197,1,c	;volatile
 11162  004768  0012               	return		;funcret
 11163  00476A                     __end_of_I2C_MasterEnableRestart:
 11164                           	callstack 0
 11165                           
 11166 ;; *************** function _I2C_MasterStart *****************
 11167 ;; Defined at:
 11168 ;;		line 546 in file "mcc_generated_files/i2c_master.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;		None
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;		None
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		None
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;Total ram usage:        0 bytes
 11187 ;; Hardware stack levels used: 1
 11188 ;; Hardware stack levels required when called: 13
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_I2C_MasterOperation
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text87
 11197  00476A                     __ptext87:
 11198                           	callstack 0
 11199  00476A                     _I2C_MasterStart:
 11200                           	callstack 13
 11201  00476A                     
 11202                           ;mcc_generated_files/i2c_master.c: 548:     SSPCON2bits.SEN = 1;
 11203  00476A  80C5               	bsf	197,0,c	;volatile
 11204  00476C  0012               	return		;funcret
 11205  00476E                     __end_of_I2C_MasterStart:
 11206                           	callstack 0
 11207                           
 11208 ;; *************** function _I2C_Close *****************
 11209 ;; Defined at:
 11210 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;		None
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  returnValue     1   38[COMRAM] enum E355
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      enum E355
 11217 ;; Registers used:
 11218 ;;		wreg, status,2, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;Total ram usage:        1 bytes
 11229 ;; Hardware stack levels used: 1
 11230 ;; Hardware stack levels required when called: 14
 11231 ;; This function calls:
 11232 ;;		_I2C_MasterClearIrq
 11233 ;;		_I2C_MasterClose
 11234 ;;		_I2C_MasterDisableIrq
 11235 ;; This function is called by:
 11236 ;;		_I2C_Read1ByteRegister
 11237 ;;		_I2C_Read2ByteRegister
 11238 ;;		_I2C_Write2ByteRegister
 11239 ;;		_I2C_WriteNBytes
 11240 ;;		_I2C_ReadNBytes
 11241 ;;		_I2C_ReadDataBlock
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245                           	psect	text88
 11246  004254                     __ptext88:
 11247                           	callstack 0
 11248  004254                     _I2C_Close:
 11249                           	callstack 14
 11250  004254                     
 11251                           ;mcc_generated_files/i2c_master.c: 169:     i2c_error_t returnValue = I2C_BUSY;
 11252  004254  0E01               	movlw	1
 11253  004256  6E27               	movwf	I2C_Close@returnValue^0,c
 11254  004258                     
 11255                           ;mcc_generated_files/i2c_master.c: 170:     if(!I2C_Status.busy)
 11256  004258  0100               	movlb	0	; () banked
 11257  00425A  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
 11258  00425C  EF32  F021         	goto	u6041
 11259  004260  EF34  F021         	goto	u6040
 11260  004264                     u6041:
 11261  004264  EF3E  F021         	goto	l9014
 11262  004268                     u6040:
 11263  004268                     
 11264                           ; BSR set to: 0
 11265                           ;mcc_generated_files/i2c_master.c: 171:     {;mcc_generated_files/i2c_master.c: 172:    
      +                               I2C_Status.inUse = 0;
 11266  004268  95EE               	bcf	(_I2C_Status+35)& (0+255),2,b
 11267                           
 11268                           ;mcc_generated_files/i2c_master.c: 173:         I2C_Status.address = 0xff;
 11269  00426A  69E7               	setf	(_I2C_Status+28)& (0+255),b
 11270  00426C                     
 11271                           ; BSR set to: 0
 11272                           ;mcc_generated_files/i2c_master.c: 174:         I2C_MasterClearIrq();
 11273  00426C  ECBB  F023         	call	_I2C_MasterClearIrq	;wreg free
 11274                           
 11275                           ;mcc_generated_files/i2c_master.c: 175:         I2C_MasterDisableIrq();
 11276  004270  ECB7  F023         	call	_I2C_MasterDisableIrq	;wreg free
 11277                           
 11278                           ;mcc_generated_files/i2c_master.c: 176:         I2C_MasterClose();
 11279  004274  ECB9  F023         	call	_I2C_MasterClose	;wreg free
 11280  004278                     
 11281                           ;mcc_generated_files/i2c_master.c: 177:         returnValue = I2C_Status.error;
 11282  004278  C0ED  F027         	movff	_I2C_Status+34,I2C_Close@returnValue
 11283  00427C                     l9014:
 11284                           
 11285                           ;mcc_generated_files/i2c_master.c: 179:     return returnValue;
 11286  00427C  5027               	movf	I2C_Close@returnValue^0,w,c
 11287  00427E  0012               	return		;funcret
 11288  004280                     __end_of_I2C_Close:
 11289                           	callstack 0
 11290                           
 11291 ;; *************** function _I2C_MasterDisableIrq *****************
 11292 ;; Defined at:
 11293 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		None
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used: 1
 11313 ;; Hardware stack levels required when called: 13
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_I2C_Close
 11318 ;;		_I2C_SetTimeOut
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text89
 11323  00476E                     __ptext89:
 11324                           	callstack 0
 11325  00476E                     _I2C_MasterDisableIrq:
 11326                           	callstack 14
 11327  00476E                     
 11328                           ;mcc_generated_files/i2c_master.c: 595:     PIE1bits.SSPIE = 0;
 11329  00476E  969D               	bcf	157,3,c	;volatile
 11330  004770  0012               	return		;funcret
 11331  004772                     __end_of_I2C_MasterDisableIrq:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _I2C_MasterClose *****************
 11335 ;; Defined at:
 11336 ;;		line 515 in file "mcc_generated_files/i2c_master.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		None
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;Total ram usage:        0 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 13
 11357 ;; This function calls:
 11358 ;;		Nothing
 11359 ;; This function is called by:
 11360 ;;		_I2C_Close
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text90
 11365  004772                     __ptext90:
 11366                           	callstack 0
 11367  004772                     _I2C_MasterClose:
 11368                           	callstack 14
 11369  004772                     
 11370                           ;mcc_generated_files/i2c_master.c: 518:     SSPCON1bits.SSPEN = 0;
 11371  004772  9AC6               	bcf	198,5,c	;volatile
 11372  004774  0012               	return		;funcret
 11373  004776                     __end_of_I2C_MasterClose:
 11374                           	callstack 0
 11375                           
 11376 ;; *************** function _I2C_MasterClearIrq *****************
 11377 ;; Defined at:
 11378 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;		None
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      void 
 11385 ;; Registers used:
 11386 ;;		None
 11387 ;; Tracked objects:
 11388 ;;		On entry : 0/0
 11389 ;;		On exit  : 0/0
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;Total ram usage:        0 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 13
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_I2C_Open
 11403 ;;		_I2C_Close
 11404 ;;		_I2C_MasterFsm
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text91
 11409  004776                     __ptext91:
 11410                           	callstack 0
 11411  004776                     _I2C_MasterClearIrq:
 11412                           	callstack 14
 11413  004776                     
 11414                           ;mcc_generated_files/i2c_master.c: 600:     PIR1bits.SSPIF = 0;
 11415  004776  969E               	bcf	158,3,c	;volatile
 11416  004778  0012               	return		;funcret
 11417  00477A                     __end_of_I2C_MasterClearIrq:
 11418                           	callstack 0
 11419                           
 11420 ;; *************** function _InterruptManager *****************
 11421 ;; Defined at:
 11422 ;;		line 39 in file "MCAL/INTERRUPT/mcall_interrupt_manager.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;		None
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      void 
 11429 ;; Registers used:
 11430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11440 ;;Total ram usage:       12 bytes
 11441 ;; Hardware stack levels used: 1
 11442 ;; Hardware stack levels required when called: 12
 11443 ;; This function calls:
 11444 ;;		_INT0_ISR
 11445 ;;		_INT1_ISR
 11446 ;;		_INT2_ISR
 11447 ;; This function is called by:
 11448 ;;		Interrupt level 2
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	intcode
 11453  000008                     __pintcode:
 11454                           	callstack 0
 11455  000008                     _InterruptManager:
 11456                           	callstack 8
 11457                           
 11458                           ;incstack = 0
 11459  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11460  00000A  EDD4  F014         	call	int_func,f	;refresh shadow registers
 11461                           
 11462                           	psect	intcode_body
 11463  0029A8                     __pintcode_body:
 11464                           	callstack 8
 11465  0029A8                     int_func:
 11466                           	callstack 8
 11467  0029A8  0006               	pop		; remove dummy address from shadow register refresh
 11468  0029AA  CFFA F01B          	movff	pclath,??_InterruptManager
 11469  0029AE  CFFB F01C          	movff	pclatu,??_InterruptManager+1
 11470  0029B2  CFE9 F01D          	movff	fsr0l,??_InterruptManager+2
 11471  0029B6  CFEA F01E          	movff	fsr0h,??_InterruptManager+3
 11472  0029BA  CFD9 F01F          	movff	fsr2l,??_InterruptManager+4
 11473  0029BE  CFDA F020          	movff	fsr2h,??_InterruptManager+5
 11474  0029C2  CFF3 F021          	movff	prodl,??_InterruptManager+6
 11475  0029C6  CFF4 F022          	movff	prodh,??_InterruptManager+7
 11476  0029CA  CFF6 F023          	movff	tblptrl,??_InterruptManager+8
 11477  0029CE  CFF7 F024          	movff	tblptrh,??_InterruptManager+9
 11478  0029D2  CFF8 F025          	movff	tblptru,??_InterruptManager+10
 11479  0029D6  CFF5 F026          	movff	tablat,??_InterruptManager+11
 11480  0029DA                     
 11481                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 41:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF)){
 11482  0029DA  A8F2               	btfss	242,4,c	;volatile
 11483  0029DC  EFF2  F014         	goto	i2u643_41
 11484  0029E0  EFF4  F014         	goto	i2u643_40
 11485  0029E4                     i2u643_41:
 11486  0029E4  EFFD  F014         	goto	i2l9326
 11487  0029E8                     i2u643_40:
 11488  0029E8  A2F2               	btfss	242,1,c	;volatile
 11489  0029EA  EFF9  F014         	goto	i2u644_41
 11490  0029EE  EFFB  F014         	goto	i2u644_40
 11491  0029F2                     i2u644_41:
 11492  0029F2  EFFD  F014         	goto	i2l9326
 11493  0029F6                     i2u644_40:
 11494  0029F6                     
 11495                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 42:         INT0_ISR();
 11496  0029F6  EC13  F021         	call	_INT0_ISR	;wreg free
 11497  0029FA                     i2l9326:
 11498                           
 11499                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 44:     if((1 == INTCON3bits.INT1E) && (1 == 
      +                          INTCON3bits.INT1F)){
 11500  0029FA  A6F0               	btfss	240,3,c	;volatile
 11501  0029FC  EF02  F015         	goto	i2u645_41
 11502  002A00  EF04  F015         	goto	i2u645_40
 11503  002A04                     i2u645_41:
 11504  002A04  EF0D  F015         	goto	i2l9332
 11505  002A08                     i2u645_40:
 11506  002A08  A0F0               	btfss	240,0,c	;volatile
 11507  002A0A  EF09  F015         	goto	i2u646_41
 11508  002A0E  EF0B  F015         	goto	i2u646_40
 11509  002A12                     i2u646_41:
 11510  002A12  EF0D  F015         	goto	i2l9332
 11511  002A16                     i2u646_40:
 11512  002A16                     
 11513                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 45:         INT1_ISR();
 11514  002A16  ECFC  F020         	call	_INT1_ISR	;wreg free
 11515  002A1A                     i2l9332:
 11516                           
 11517                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 47:     if((1 == INTCON3bits.INT2IE) && (1 ==
      +                           INTCON3bits.INT2IF)){
 11518  002A1A  A8F0               	btfss	240,4,c	;volatile
 11519  002A1C  EF12  F015         	goto	i2u647_41
 11520  002A20  EF14  F015         	goto	i2u647_40
 11521  002A24                     i2u647_41:
 11522  002A24  EF1D  F015         	goto	i2l359
 11523  002A28                     i2u647_40:
 11524  002A28  A2F0               	btfss	240,1,c	;volatile
 11525  002A2A  EF19  F015         	goto	i2u648_41
 11526  002A2E  EF1B  F015         	goto	i2u648_40
 11527  002A32                     i2u648_41:
 11528  002A32  EF1D  F015         	goto	i2l359
 11529  002A36                     i2u648_40:
 11530  002A36                     
 11531                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 48:         INT2_ISR();
 11532  002A36  ECE5  F020         	call	_INT2_ISR	;wreg free
 11533  002A3A                     i2l359:
 11534  002A3A  C026  FFF5         	movff	??_InterruptManager+11,tablat
 11535  002A3E  C025  FFF8         	movff	??_InterruptManager+10,tblptru
 11536  002A42  C024  FFF7         	movff	??_InterruptManager+9,tblptrh
 11537  002A46  C023  FFF6         	movff	??_InterruptManager+8,tblptrl
 11538  002A4A  C022  FFF4         	movff	??_InterruptManager+7,prodh
 11539  002A4E  C021  FFF3         	movff	??_InterruptManager+6,prodl
 11540  002A52  C020  FFDA         	movff	??_InterruptManager+5,fsr2h
 11541  002A56  C01F  FFD9         	movff	??_InterruptManager+4,fsr2l
 11542  002A5A  C01E  FFEA         	movff	??_InterruptManager+3,fsr0h
 11543  002A5E  C01D  FFE9         	movff	??_InterruptManager+2,fsr0l
 11544  002A62  C01C  FFFB         	movff	??_InterruptManager+1,pclatu
 11545  002A66  C01B  FFFA         	movff	??_InterruptManager,pclath
 11546  002A6A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11547  002A6C  0011               	retfie		f
 11548  002A6E                     __end_of_InterruptManager:
 11549                           	callstack 0
 11550                           
 11551 ;; *************** function _INT2_ISR *****************
 11552 ;; Defined at:
 11553 ;;		line 106 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;		None
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      void 
 11560 ;; Registers used:
 11561 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11571 ;;Total ram usage:        0 bytes
 11572 ;; Hardware stack levels used: 1
 11573 ;; Hardware stack levels required when called: 11
 11574 ;; This function calls:
 11575 ;;		Absolute function
 11576 ;;		_APP_INT0_ISR
 11577 ;;		_APP_INT1_ISR
 11578 ;; This function is called by:
 11579 ;;		_InterruptManager
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text93
 11584  0041CA                     __ptext93:
 11585                           	callstack 0
 11586  0041CA                     _INT2_ISR:
 11587                           	callstack 8
 11588  0041CA                     
 11589                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 108:     (INTCON3bits.INT2F=0);
 11590  0041CA  92F0               	bcf	240,1,c	;volatile
 11591  0041CC                     
 11592                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 110:     if(INT2_InterruptHandler){INT2_Inter
      +                          ruptHandler();}
 11593  0041CC  5035               	movf	_INT2_InterruptHandler^0,w,c
 11594  0041CE  1036               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
 11595  0041D0  B4D8               	btfsc	status,2,c
 11596  0041D2  EFED  F020         	goto	i2u630_41
 11597  0041D6  EFEF  F020         	goto	i2u630_40
 11598  0041DA                     i2u630_41:
 11599  0041DA  EFFB  F020         	goto	i2l408
 11600  0041DE                     i2u630_40:
 11601  0041DE  D802               	call	i2u631_48
 11602  0041E0  EFFB  F020         	goto	i2u631_49
 11603  0041E4                     i2u631_48:
 11604  0041E4  0005               	push	
 11605  0041E6  6EFA               	movwf	pclath,c
 11606  0041E8  5035               	movf	_INT2_InterruptHandler^0,w,c
 11607  0041EA  6EFD               	movwf	tosl,c
 11608  0041EC  5036               	movf	(_INT2_InterruptHandler+1)^0,w,c
 11609  0041EE  6EFE               	movwf	tosh,c
 11610  0041F0  6AFF               	clrf	tosu,c
 11611  0041F2  50FA               	movf	pclath,w,c
 11612  0041F4  0012               	return		;indir
 11613  0041F6                     i2u631_49:
 11614  0041F6                     i2l408:
 11615  0041F6  0012               	return		;funcret
 11616  0041F8                     __end_of_INT2_ISR:
 11617                           	callstack 0
 11618                           
 11619 ;; *************** function _INT1_ISR *****************
 11620 ;; Defined at:
 11621 ;;		line 97 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;		None
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;		None
 11626 ;; Return value:  Size  Location     Type
 11627 ;;                  1    wreg      void 
 11628 ;; Registers used:
 11629 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11630 ;; Tracked objects:
 11631 ;;		On entry : 0/0
 11632 ;;		On exit  : 0/0
 11633 ;;		Unchanged: 0/0
 11634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;Total ram usage:        0 bytes
 11640 ;; Hardware stack levels used: 1
 11641 ;; Hardware stack levels required when called: 11
 11642 ;; This function calls:
 11643 ;;		Absolute function
 11644 ;;		_APP_INT0_ISR
 11645 ;;		_APP_INT1_ISR
 11646 ;; This function is called by:
 11647 ;;		_InterruptManager
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text94
 11652  0041F8                     __ptext94:
 11653                           	callstack 0
 11654  0041F8                     _INT1_ISR:
 11655                           	callstack 8
 11656  0041F8                     
 11657                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 99:     (INTCON3bits.INT1F=0);
 11658  0041F8  90F0               	bcf	240,0,c	;volatile
 11659  0041FA                     
 11660                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 101:     if(INT1_InterruptHandler){INT1_Inter
      +                          ruptHandler();}
 11661  0041FA  5037               	movf	_INT1_InterruptHandler^0,w,c
 11662  0041FC  1038               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 11663  0041FE  B4D8               	btfsc	status,2,c
 11664  004200  EF04  F021         	goto	i2u628_41
 11665  004204  EF06  F021         	goto	i2u628_40
 11666  004208                     i2u628_41:
 11667  004208  EF12  F021         	goto	i2l404
 11668  00420C                     i2u628_40:
 11669  00420C  D802               	call	i2u629_48
 11670  00420E  EF12  F021         	goto	i2u629_49
 11671  004212                     i2u629_48:
 11672  004212  0005               	push	
 11673  004214  6EFA               	movwf	pclath,c
 11674  004216  5037               	movf	_INT1_InterruptHandler^0,w,c
 11675  004218  6EFD               	movwf	tosl,c
 11676  00421A  5038               	movf	(_INT1_InterruptHandler+1)^0,w,c
 11677  00421C  6EFE               	movwf	tosh,c
 11678  00421E  6AFF               	clrf	tosu,c
 11679  004220  50FA               	movf	pclath,w,c
 11680  004222  0012               	return		;indir
 11681  004224                     i2u629_49:
 11682  004224                     i2l404:
 11683  004224  0012               	return		;funcret
 11684  004226                     __end_of_INT1_ISR:
 11685                           	callstack 0
 11686                           
 11687 ;; *************** function _INT0_ISR *****************
 11688 ;; Defined at:
 11689 ;;		line 88 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;Total ram usage:        0 bytes
 11708 ;; Hardware stack levels used: 1
 11709 ;; Hardware stack levels required when called: 11
 11710 ;; This function calls:
 11711 ;;		Absolute function
 11712 ;;		_APP_INT0_ISR
 11713 ;;		_APP_INT1_ISR
 11714 ;; This function is called by:
 11715 ;;		_InterruptManager
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text95
 11720  004226                     __ptext95:
 11721                           	callstack 0
 11722  004226                     _INT0_ISR:
 11723                           	callstack 8
 11724  004226                     
 11725                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 90:     (INTCONbits.INT0F=0);
 11726  004226  92F2               	bcf	242,1,c	;volatile
 11727  004228                     
 11728                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 92:     if(INT0_InterruptHandler){INT0_Interr
      +                          uptHandler();}
 11729  004228  5039               	movf	_INT0_InterruptHandler^0,w,c
 11730  00422A  103A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 11731  00422C  B4D8               	btfsc	status,2,c
 11732  00422E  EF1B  F021         	goto	i2u626_41
 11733  004232  EF1D  F021         	goto	i2u626_40
 11734  004236                     i2u626_41:
 11735  004236  EF29  F021         	goto	i2l400
 11736  00423A                     i2u626_40:
 11737  00423A  D802               	call	i2u627_48
 11738  00423C  EF29  F021         	goto	i2u627_49
 11739  004240                     i2u627_48:
 11740  004240  0005               	push	
 11741  004242  6EFA               	movwf	pclath,c
 11742  004244  5039               	movf	_INT0_InterruptHandler^0,w,c
 11743  004246  6EFD               	movwf	tosl,c
 11744  004248  503A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 11745  00424A  6EFE               	movwf	tosh,c
 11746  00424C  6AFF               	clrf	tosu,c
 11747  00424E  50FA               	movf	pclath,w,c
 11748  004250  0012               	return		;indir
 11749  004252                     i2u627_49:
 11750  004252                     i2l400:
 11751  004252  0012               	return		;funcret
 11752  004254                     __end_of_INT0_ISR:
 11753                           	callstack 0
 11754                           
 11755 ;; *************** function _APP_INT0_ISR *****************
 11756 ;; Defined at:
 11757 ;;		line 18 in file "app.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;Total ram usage:        0 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 10
 11778 ;; This function calls:
 11779 ;;		_I2C_Write1ByteRegister
 11780 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 11781 ;; This function is called by:
 11782 ;;		_INT0_ISR
 11783 ;;		_INT1_ISR
 11784 ;;		_INT2_ISR
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text96
 11789  002FF8                     __ptext96:
 11790                           	callstack 0
 11791  002FF8                     _APP_INT0_ISR:
 11792                           	callstack 8
 11793  002FF8                     
 11794                           ;app.c: 19:     if(option_counter==0){
 11795  002FF8  503B               	movf	_option_counter^0,w,c	;volatile
 11796  002FFA  A4D8               	btfss	status,2,c
 11797  002FFC  EF02  F018         	goto	i2u618_41
 11798  003000  EF04  F018         	goto	i2u618_40
 11799  003004                     i2u618_41:
 11800  003004  EF0D  F018         	goto	i2l9150
 11801  003008                     i2u618_40:
 11802  003008                     
 11803                           ;app.c: 20:        RTC1307 = RealTimeClockDS1307_Get_Date_Time();
 11804  003008  ECCA  F01D         	call	i2_RealTimeClockDS1307_Get_Date_Time	;wreg free
 11805  00300C  EE20  F041         	lfsr	2,_RTC1307	;volatile
 11806  003010  0E05               	movlw	5
 11807  003012                     i2u619_41:
 11808  003012  CFEB FFDB          	movff	plusw0,plusw2
 11809  003016  06E8               	decf	wreg,f,c
 11810  003018  E2FC               	bc	i2u619_41
 11811  00301A                     i2l9150:
 11812                           
 11813                           ;app.c: 22:     option_counter++;
 11814  00301A  2A3B               	incf	_option_counter^0,f,c	;volatile
 11815  00301C                     
 11816                           ;app.c: 23:     if(option_counter==7){
 11817  00301C  0E07               	movlw	7
 11818  00301E  183B               	xorwf	_option_counter^0,w,c	;volatile
 11819  003020  A4D8               	btfss	status,2,c
 11820  003022  EF15  F018         	goto	i2u620_41
 11821  003026  EF17  F018         	goto	i2u620_40
 11822  00302A                     i2u620_41:
 11823  00302A  EF43  F018         	goto	i2l1026
 11824  00302E                     i2u620_40:
 11825  00302E                     
 11826                           ;app.c: 24:        option_counter=0;
 11827  00302E  0E00               	movlw	0
 11828  003030  6E3B               	movwf	_option_counter^0,c	;volatile
 11829  003032                     
 11830                           ;app.c: 26:        I2C_Write1ByteRegister(0xD0, 0x00,RTC1307._Seconds);
 11831  003032  0E00               	movlw	0
 11832  003034  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11833  003036  C043  F013         	movff	_RTC1307+2,I2C_Write1ByteRegister@data	;volatile
 11834  00303A  0ED0               	movlw	208
 11835  00303C  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11836  003040                     
 11837                           ;app.c: 27:        I2C_Write1ByteRegister(0xD0, 0x01,RTC1307._Minutes);
 11838  003040  0E01               	movlw	1
 11839  003042  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11840  003044  C042  F013         	movff	_RTC1307+1,I2C_Write1ByteRegister@data	;volatile
 11841  003048  0ED0               	movlw	208
 11842  00304A  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11843  00304E                     
 11844                           ;app.c: 28:        I2C_Write1ByteRegister(0xD0, 0x02,RTC1307._Hours);
 11845  00304E  0E02               	movlw	2
 11846  003050  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11847  003052  C041  F013         	movff	_RTC1307,I2C_Write1ByteRegister@data	;volatile
 11848  003056  0ED0               	movlw	208
 11849  003058  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11850  00305C                     
 11851                           ;app.c: 29:        I2C_Write1ByteRegister(0xD0, 0x04,RTC1307._Day);
 11852  00305C  0E04               	movlw	4
 11853  00305E  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11854  003060  C046  F013         	movff	_RTC1307+5,I2C_Write1ByteRegister@data	;volatile
 11855  003064  0ED0               	movlw	208
 11856  003066  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11857  00306A                     
 11858                           ;app.c: 30:        I2C_Write1ByteRegister(0xD0, 0x05,RTC1307._Month);
 11859  00306A  0E05               	movlw	5
 11860  00306C  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11861  00306E  C045  F013         	movff	_RTC1307+4,I2C_Write1ByteRegister@data	;volatile
 11862  003072  0ED0               	movlw	208
 11863  003074  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11864  003078                     
 11865                           ;app.c: 31:        I2C_Write1ByteRegister(0xD0, 0x06,RTC1307._Year);
 11866  003078  0E06               	movlw	6
 11867  00307A  6E12               	movwf	I2C_Write1ByteRegister@reg^0,c
 11868  00307C  C044  F013         	movff	_RTC1307+3,I2C_Write1ByteRegister@data	;volatile
 11869  003080  0ED0               	movlw	208
 11870  003082  EC5F  F01D         	call	_I2C_Write1ByteRegister
 11871  003086                     i2l1026:
 11872  003086  0012               	return		;funcret
 11873  003088                     __end_of_APP_INT0_ISR:
 11874                           	callstack 0
 11875                           
 11876 ;; *************** function _APP_INT1_ISR *****************
 11877 ;; Defined at:
 11878 ;;		line 35 in file "app.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;		None
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;		None
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  1    wreg      void 
 11885 ;; Registers used:
 11886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;Total ram usage:        0 bytes
 11897 ;; Hardware stack levels used: 1
 11898 ;; Hardware stack levels required when called: 2
 11899 ;; This function calls:
 11900 ;;		_convert_int_to_BCD
 11901 ;; This function is called by:
 11902 ;;		_INT0_ISR
 11903 ;;		_INT1_ISR
 11904 ;;		_INT2_ISR
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text97
 11909  00221A                     __ptext97:
 11910                           	callstack 0
 11911  00221A                     _APP_INT1_ISR:
 11912                           	callstack 16
 11913  00221A                     
 11914                           ;app.c: 36:    if(option_counter==1){
 11915  00221A  043B               	decf	_option_counter^0,w,c	;volatile
 11916  00221C  A4D8               	btfss	status,2,c
 11917  00221E  EF13  F011         	goto	i2u398_41
 11918  002222  EF15  F011         	goto	i2u398_40
 11919  002226                     i2u398_41:
 11920  002226  EF29  F011         	goto	i2l6544
 11921  00222A                     i2u398_40:
 11922  00222A                     
 11923                           ;app.c: 37:        seconds_counter++;
 11924  00222A  2A49               	incf	_seconds_counter^0,f,c	;volatile
 11925  00222C                     
 11926                           ;app.c: 38:        if(seconds_counter>59){
 11927  00222C  0E3B               	movlw	59
 11928  00222E  6449               	cpfsgt	_seconds_counter^0,c	;volatile
 11929  002230  EF1C  F011         	goto	i2u399_41
 11930  002234  EF1E  F011         	goto	i2u399_40
 11931  002238                     i2u399_41:
 11932  002238  EF20  F011         	goto	i2l6542
 11933  00223C                     i2u399_40:
 11934  00223C                     
 11935                           ;app.c: 39:            seconds_counter=0;
 11936  00223C  0E00               	movlw	0
 11937  00223E  6E49               	movwf	_seconds_counter^0,c	;volatile
 11938  002240                     i2l6542:
 11939                           
 11940                           ;app.c: 41:        convert_int_to_BCD(seconds_counter,&RTC1307._Seconds);
 11941  002240  0E43               	movlw	low (_RTC1307+2)
 11942  002242  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 11943  002244  0E00               	movlw	high (_RTC1307+2)
 11944  002246  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 11945  002248  5049               	movf	_seconds_counter^0,w,c	;volatile
 11946  00224A  EC98  F00C         	call	_convert_int_to_BCD
 11947                           
 11948                           ;app.c: 42:    }
 11949  00224E  EFBA  F011         	goto	i2l1046
 11950  002252                     i2l6544:
 11951  002252  0E02               	movlw	2
 11952  002254  183B               	xorwf	_option_counter^0,w,c	;volatile
 11953  002256  A4D8               	btfss	status,2,c
 11954  002258  EF30  F011         	goto	i2u400_41
 11955  00225C  EF32  F011         	goto	i2u400_40
 11956  002260                     i2u400_41:
 11957  002260  EF46  F011         	goto	i2l6554
 11958  002264                     i2u400_40:
 11959  002264                     
 11960                           ;app.c: 44:        minutes_counter++;
 11961  002264  2A48               	incf	_minutes_counter^0,f,c	;volatile
 11962  002266                     
 11963                           ;app.c: 45:        if(minutes_counter>59){
 11964  002266  0E3B               	movlw	59
 11965  002268  6448               	cpfsgt	_minutes_counter^0,c	;volatile
 11966  00226A  EF39  F011         	goto	i2u401_41
 11967  00226E  EF3B  F011         	goto	i2u401_40
 11968  002272                     i2u401_41:
 11969  002272  EF3D  F011         	goto	i2l6552
 11970  002276                     i2u401_40:
 11971  002276                     
 11972                           ;app.c: 46:            minutes_counter=0;
 11973  002276  0E00               	movlw	0
 11974  002278  6E48               	movwf	_minutes_counter^0,c	;volatile
 11975  00227A                     i2l6552:
 11976                           
 11977                           ;app.c: 48:        convert_int_to_BCD(minutes_counter,&RTC1307._Minutes);
 11978  00227A  0E42               	movlw	low (_RTC1307+1)
 11979  00227C  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 11980  00227E  0E00               	movlw	high (_RTC1307+1)
 11981  002280  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 11982  002282  5048               	movf	_minutes_counter^0,w,c	;volatile
 11983  002284  EC98  F00C         	call	_convert_int_to_BCD
 11984                           
 11985                           ;app.c: 49:    }
 11986  002288  EFBA  F011         	goto	i2l1046
 11987  00228C                     i2l6554:
 11988  00228C  0E03               	movlw	3
 11989  00228E  183B               	xorwf	_option_counter^0,w,c	;volatile
 11990  002290  A4D8               	btfss	status,2,c
 11991  002292  EF4D  F011         	goto	i2u402_41
 11992  002296  EF4F  F011         	goto	i2u402_40
 11993  00229A                     i2u402_41:
 11994  00229A  EF63  F011         	goto	i2l6564
 11995  00229E                     i2u402_40:
 11996  00229E                     
 11997                           ;app.c: 51:        hours_counter++;
 11998  00229E  2A47               	incf	_hours_counter^0,f,c	;volatile
 11999  0022A0                     
 12000                           ;app.c: 52:        if(hours_counter>23){
 12001  0022A0  0E17               	movlw	23
 12002  0022A2  6447               	cpfsgt	_hours_counter^0,c	;volatile
 12003  0022A4  EF56  F011         	goto	i2u403_41
 12004  0022A8  EF58  F011         	goto	i2u403_40
 12005  0022AC                     i2u403_41:
 12006  0022AC  EF5A  F011         	goto	i2l6562
 12007  0022B0                     i2u403_40:
 12008  0022B0                     
 12009                           ;app.c: 53:            hours_counter=0;
 12010  0022B0  0E00               	movlw	0
 12011  0022B2  6E47               	movwf	_hours_counter^0,c	;volatile
 12012  0022B4                     i2l6562:
 12013                           
 12014                           ;app.c: 55:        convert_int_to_BCD(hours_counter,&RTC1307._Hours);
 12015  0022B4  0E41               	movlw	low _RTC1307
 12016  0022B6  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 12017  0022B8  0E00               	movlw	high _RTC1307
 12018  0022BA  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 12019  0022BC  5047               	movf	_hours_counter^0,w,c	;volatile
 12020  0022BE  EC98  F00C         	call	_convert_int_to_BCD
 12021                           
 12022                           ;app.c: 56:    }
 12023  0022C2  EFBA  F011         	goto	i2l1046
 12024  0022C6                     i2l6564:
 12025  0022C6  0E04               	movlw	4
 12026  0022C8  183B               	xorwf	_option_counter^0,w,c	;volatile
 12027  0022CA  A4D8               	btfss	status,2,c
 12028  0022CC  EF6A  F011         	goto	i2u404_41
 12029  0022D0  EF6C  F011         	goto	i2u404_40
 12030  0022D4                     i2u404_41:
 12031  0022D4  EF80  F011         	goto	i2l6574
 12032  0022D8                     i2u404_40:
 12033  0022D8                     
 12034                           ;app.c: 58:        day_counter++;
 12035  0022D8  2A58               	incf	_day_counter^0,f,c	;volatile
 12036  0022DA                     
 12037                           ;app.c: 59:        if(day_counter>30){
 12038  0022DA  0E1E               	movlw	30
 12039  0022DC  6458               	cpfsgt	_day_counter^0,c	;volatile
 12040  0022DE  EF73  F011         	goto	i2u405_41
 12041  0022E2  EF75  F011         	goto	i2u405_40
 12042  0022E6                     i2u405_41:
 12043  0022E6  EF77  F011         	goto	i2l6572
 12044  0022EA                     i2u405_40:
 12045  0022EA                     
 12046                           ;app.c: 60:            day_counter=1;
 12047  0022EA  0E01               	movlw	1
 12048  0022EC  6E58               	movwf	_day_counter^0,c	;volatile
 12049  0022EE                     i2l6572:
 12050                           
 12051                           ;app.c: 62:        convert_int_to_BCD(day_counter,&RTC1307._Day);
 12052  0022EE  0E46               	movlw	low (_RTC1307+5)
 12053  0022F0  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 12054  0022F2  0E00               	movlw	high (_RTC1307+5)
 12055  0022F4  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 12056  0022F6  5058               	movf	_day_counter^0,w,c	;volatile
 12057  0022F8  EC98  F00C         	call	_convert_int_to_BCD
 12058                           
 12059                           ;app.c: 63:    }
 12060  0022FC  EFBA  F011         	goto	i2l1046
 12061  002300                     i2l6574:
 12062  002300  0E05               	movlw	5
 12063  002302  183B               	xorwf	_option_counter^0,w,c	;volatile
 12064  002304  A4D8               	btfss	status,2,c
 12065  002306  EF87  F011         	goto	i2u406_41
 12066  00230A  EF89  F011         	goto	i2u406_40
 12067  00230E                     i2u406_41:
 12068  00230E  EF9D  F011         	goto	i2l6584
 12069  002312                     i2u406_40:
 12070  002312                     
 12071                           ;app.c: 65:        month_counter++;
 12072  002312  2A57               	incf	_month_counter^0,f,c	;volatile
 12073  002314                     
 12074                           ;app.c: 66:        if(month_counter>12){
 12075  002314  0E0C               	movlw	12
 12076  002316  6457               	cpfsgt	_month_counter^0,c	;volatile
 12077  002318  EF90  F011         	goto	i2u407_41
 12078  00231C  EF92  F011         	goto	i2u407_40
 12079  002320                     i2u407_41:
 12080  002320  EF94  F011         	goto	i2l6582
 12081  002324                     i2u407_40:
 12082  002324                     
 12083                           ;app.c: 67:            month_counter=1;
 12084  002324  0E01               	movlw	1
 12085  002326  6E57               	movwf	_month_counter^0,c	;volatile
 12086  002328                     i2l6582:
 12087                           
 12088                           ;app.c: 69:        convert_int_to_BCD(month_counter,&RTC1307._Month);
 12089  002328  0E45               	movlw	low (_RTC1307+4)
 12090  00232A  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 12091  00232C  0E00               	movlw	high (_RTC1307+4)
 12092  00232E  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 12093  002330  5057               	movf	_month_counter^0,w,c	;volatile
 12094  002332  EC98  F00C         	call	_convert_int_to_BCD
 12095                           
 12096                           ;app.c: 70:    }
 12097  002336  EFBA  F011         	goto	i2l1046
 12098  00233A                     i2l6584:
 12099  00233A  0E06               	movlw	6
 12100  00233C  183B               	xorwf	_option_counter^0,w,c	;volatile
 12101  00233E  A4D8               	btfss	status,2,c
 12102  002340  EFA4  F011         	goto	i2u408_41
 12103  002344  EFA6  F011         	goto	i2u408_40
 12104  002348                     i2u408_41:
 12105  002348  EFBA  F011         	goto	i2l1037
 12106  00234C                     i2u408_40:
 12107  00234C                     
 12108                           ;app.c: 72:        year_counter++;
 12109  00234C  2A56               	incf	_year_counter^0,f,c	;volatile
 12110  00234E                     
 12111                           ;app.c: 73:         if(year_counter>99){
 12112  00234E  0E63               	movlw	99
 12113  002350  6456               	cpfsgt	_year_counter^0,c	;volatile
 12114  002352  EFAD  F011         	goto	i2u409_41
 12115  002356  EFAF  F011         	goto	i2u409_40
 12116  00235A                     i2u409_41:
 12117  00235A  EFB1  F011         	goto	i2l6592
 12118  00235E                     i2u409_40:
 12119  00235E                     
 12120                           ;app.c: 74:            year_counter=1;
 12121  00235E  0E01               	movlw	1
 12122  002360  6E56               	movwf	_year_counter^0,c	;volatile
 12123  002362                     i2l6592:
 12124                           
 12125                           ;app.c: 76:        convert_int_to_BCD(year_counter,&RTC1307._Year);
 12126  002362  0E44               	movlw	low (_RTC1307+3)
 12127  002364  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 12128  002366  0E00               	movlw	high (_RTC1307+3)
 12129  002368  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 12130  00236A  5056               	movf	_year_counter^0,w,c	;volatile
 12131  00236C  EC98  F00C         	call	_convert_int_to_BCD
 12132  002370  EFBA  F011         	goto	i2l1046
 12133  002374                     i2l1037:
 12134  002374                     i2l1046:
 12135  002374  0012               	return		;funcret
 12136  002376                     __end_of_APP_INT1_ISR:
 12137                           	callstack 0
 12138                           
 12139 ;; *************** function _convert_int_to_BCD *****************
 12140 ;; Defined at:
 12141 ;;		line 50 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  int_num         1    wreg     unsigned char 
 12144 ;;  BCD_num         2    8[COMRAM] PTR unsigned char 
 12145 ;;		 -> RTC1307._Day(1), RTC1307._Month(1), RTC1307._Year(1), RTC1307._Seconds(1), 
 12146 ;;		 -> RTC1307._Minutes(1), RTC1307._Hours(1), RTC1307(6), 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  int_num         1   10[COMRAM] unsigned char 
 12149 ;;  h_nipple        1   12[COMRAM] unsigned char 
 12150 ;;  l_nipple        1   11[COMRAM] unsigned char 
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12164 ;;Total ram usage:        5 bytes
 12165 ;; Hardware stack levels used: 1
 12166 ;; Hardware stack levels required when called: 1
 12167 ;; This function calls:
 12168 ;;		___awdiv
 12169 ;;		___awmod
 12170 ;; This function is called by:
 12171 ;;		_APP_INT1_ISR
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text98
 12176  001930                     __ptext98:
 12177                           	callstack 0
 12178  001930                     _convert_int_to_BCD:
 12179                           	callstack 16
 12180                           
 12181                           ;incstack = 0
 12182                           ;convert_int_to_BCD@int_num stored from wreg
 12183  001930  6E0B               	movwf	convert_int_to_BCD@int_num^0,c
 12184  001932                     
 12185                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 51:     uint8 l_nipple,h_nipple;;ECUAL
      +                          /RealTimeClockDS1307/RealTimeClockDS1307.c: 52:     switch(int_num%10){
 12186  001932  EFBF  F00C         	goto	i2l6110
 12187  001936                     i2l6088:
 12188  001936  0E00               	movlw	0
 12189  001938  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12190  00193A  EF1E  F00D         	goto	i2l6134
 12191  00193E                     i2l6090:
 12192  00193E  0E01               	movlw	1
 12193  001940  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12194  001942  EF1E  F00D         	goto	i2l6134
 12195  001946                     i2l6092:
 12196  001946  0E02               	movlw	2
 12197  001948  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12198  00194A  EF1E  F00D         	goto	i2l6134
 12199  00194E                     i2l6094:
 12200  00194E  0E03               	movlw	3
 12201  001950  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12202  001952  EF1E  F00D         	goto	i2l6134
 12203  001956                     i2l6096:
 12204  001956  0E04               	movlw	4
 12205  001958  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12206  00195A  EF1E  F00D         	goto	i2l6134
 12207  00195E                     i2l6098:
 12208  00195E  0E05               	movlw	5
 12209  001960  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12210  001962  EF1E  F00D         	goto	i2l6134
 12211  001966                     i2l6100:
 12212  001966  0E06               	movlw	6
 12213  001968  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12214  00196A  EF1E  F00D         	goto	i2l6134
 12215  00196E                     i2l6102:
 12216  00196E  0E07               	movlw	7
 12217  001970  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12218  001972  EF1E  F00D         	goto	i2l6134
 12219  001976                     i2l6104:
 12220  001976  0E08               	movlw	8
 12221  001978  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 12222  00197A  EF1E  F00D         	goto	i2l6134
 12223  00197E                     i2l6110:
 12224  00197E  C00B  F001         	movff	convert_int_to_BCD@int_num,___awmod@dividend
 12225  001982  6A02               	clrf	(___awmod@dividend+1)^0,c
 12226  001984  0E00               	movlw	0
 12227  001986  6E04               	movwf	(___awmod@divisor+1)^0,c
 12228  001988  0E0A               	movlw	10
 12229  00198A  6E03               	movwf	___awmod@divisor^0,c
 12230  00198C  EC54  F016         	call	___awmod	;wreg free
 12231                           
 12232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12233                           ; Switch size 1, requested type "simple"
 12234                           ; Number of cases is 1, Range of values is 0 to 0
 12235                           ; switch strategies available:
 12236                           ; Name         Instructions Cycles
 12237                           ; simple_byte            4     3 (average)
 12238                           ;	Chosen strategy is simple_byte
 12239  001990  5002               	movf	(?___awmod+1)^0,w,c
 12240  001992  0A00               	xorlw	0	; case 0
 12241  001994  B4D8               	btfsc	status,2,c
 12242  001996  EFCF  F00C         	goto	i2l9986
 12243  00199A  EF1E  F00D         	goto	i2l6134
 12244  00199E                     i2l9986:
 12245                           
 12246                           ; Switch size 1, requested type "simple"
 12247                           ; Number of cases is 10, Range of values is 0 to 9
 12248                           ; switch strategies available:
 12249                           ; Name         Instructions Cycles
 12250                           ; simple_byte           31    16 (average)
 12251                           ;	Chosen strategy is simple_byte
 12252  00199E  5001               	movf	?___awmod^0,w,c
 12253  0019A0  0A00               	xorlw	0	; case 0
 12254  0019A2  B4D8               	btfsc	status,2,c
 12255  0019A4  EF9B  F00C         	goto	i2l6088
 12256  0019A8  0A01               	xorlw	1	; case 1
 12257  0019AA  B4D8               	btfsc	status,2,c
 12258  0019AC  EF9F  F00C         	goto	i2l6090
 12259  0019B0  0A03               	xorlw	3	; case 2
 12260  0019B2  B4D8               	btfsc	status,2,c
 12261  0019B4  EFA3  F00C         	goto	i2l6092
 12262  0019B8  0A01               	xorlw	1	; case 3
 12263  0019BA  B4D8               	btfsc	status,2,c
 12264  0019BC  EFA7  F00C         	goto	i2l6094
 12265  0019C0  0A07               	xorlw	7	; case 4
 12266  0019C2  B4D8               	btfsc	status,2,c
 12267  0019C4  EFAB  F00C         	goto	i2l6096
 12268  0019C8  0A01               	xorlw	1	; case 5
 12269  0019CA  B4D8               	btfsc	status,2,c
 12270  0019CC  EFAF  F00C         	goto	i2l6098
 12271  0019D0  0A03               	xorlw	3	; case 6
 12272  0019D2  B4D8               	btfsc	status,2,c
 12273  0019D4  EFB3  F00C         	goto	i2l6100
 12274  0019D8  0A01               	xorlw	1	; case 7
 12275  0019DA  B4D8               	btfsc	status,2,c
 12276  0019DC  EFB7  F00C         	goto	i2l6102
 12277  0019E0  0A0F               	xorlw	15	; case 8
 12278  0019E2  B4D8               	btfsc	status,2,c
 12279  0019E4  EFBB  F00C         	goto	i2l6104
 12280  0019E8  0A01               	xorlw	1	; case 9
 12281  0019EA  B4D8               	btfsc	status,2,c
 12282  0019EC  EFBB  F00C         	goto	i2l6104
 12283  0019F0  EF1E  F00D         	goto	i2l6134
 12284  0019F4                     i2l6112:
 12285  0019F4  0E00               	movlw	0
 12286  0019F6  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12287  0019F8  EF59  F00D         	goto	i2l6136
 12288  0019FC                     i2l6114:
 12289  0019FC  0E01               	movlw	1
 12290  0019FE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12291  001A00  EF59  F00D         	goto	i2l6136
 12292  001A04                     i2l6116:
 12293  001A04  0E02               	movlw	2
 12294  001A06  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12295  001A08  EF59  F00D         	goto	i2l6136
 12296  001A0C                     i2l6118:
 12297  001A0C  0E03               	movlw	3
 12298  001A0E  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12299  001A10  EF59  F00D         	goto	i2l6136
 12300  001A14                     i2l6120:
 12301  001A14  0E04               	movlw	4
 12302  001A16  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12303  001A18  EF59  F00D         	goto	i2l6136
 12304  001A1C                     i2l6122:
 12305  001A1C  0E05               	movlw	5
 12306  001A1E  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12307  001A20  EF59  F00D         	goto	i2l6136
 12308  001A24                     i2l6124:
 12309  001A24  0E06               	movlw	6
 12310  001A26  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12311  001A28  EF59  F00D         	goto	i2l6136
 12312  001A2C                     i2l6126:
 12313  001A2C  0E07               	movlw	7
 12314  001A2E  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12315  001A30  EF59  F00D         	goto	i2l6136
 12316  001A34                     i2l6128:
 12317  001A34  0E08               	movlw	8
 12318  001A36  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 12319  001A38  EF59  F00D         	goto	i2l6136
 12320  001A3C                     i2l6134:
 12321  001A3C  C00B  F001         	movff	convert_int_to_BCD@int_num,___awdiv@dividend
 12322  001A40  6A02               	clrf	(___awdiv@dividend+1)^0,c
 12323  001A42  0E00               	movlw	0
 12324  001A44  6E04               	movwf	(___awdiv@divisor+1)^0,c
 12325  001A46  0E0A               	movlw	10
 12326  001A48  6E03               	movwf	___awdiv@divisor^0,c
 12327  001A4A  EC37  F015         	call	___awdiv	;wreg free
 12328                           
 12329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12330                           ; Switch size 1, requested type "simple"
 12331                           ; Number of cases is 1, Range of values is 0 to 0
 12332                           ; switch strategies available:
 12333                           ; Name         Instructions Cycles
 12334                           ; simple_byte            4     3 (average)
 12335                           ;	Chosen strategy is simple_byte
 12336  001A4E  5002               	movf	(?___awdiv+1)^0,w,c
 12337  001A50  0A00               	xorlw	0	; case 0
 12338  001A52  B4D8               	btfsc	status,2,c
 12339  001A54  EF2E  F00D         	goto	i2l9988
 12340  001A58  EF59  F00D         	goto	i2l6136
 12341  001A5C                     i2l9988:
 12342                           
 12343                           ; Switch size 1, requested type "simple"
 12344                           ; Number of cases is 10, Range of values is 0 to 9
 12345                           ; switch strategies available:
 12346                           ; Name         Instructions Cycles
 12347                           ; simple_byte           31    16 (average)
 12348                           ;	Chosen strategy is simple_byte
 12349  001A5C  5001               	movf	?___awdiv^0,w,c
 12350  001A5E  0A00               	xorlw	0	; case 0
 12351  001A60  B4D8               	btfsc	status,2,c
 12352  001A62  EFFA  F00C         	goto	i2l6112
 12353  001A66  0A01               	xorlw	1	; case 1
 12354  001A68  B4D8               	btfsc	status,2,c
 12355  001A6A  EFFE  F00C         	goto	i2l6114
 12356  001A6E  0A03               	xorlw	3	; case 2
 12357  001A70  B4D8               	btfsc	status,2,c
 12358  001A72  EF02  F00D         	goto	i2l6116
 12359  001A76  0A01               	xorlw	1	; case 3
 12360  001A78  B4D8               	btfsc	status,2,c
 12361  001A7A  EF06  F00D         	goto	i2l6118
 12362  001A7E  0A07               	xorlw	7	; case 4
 12363  001A80  B4D8               	btfsc	status,2,c
 12364  001A82  EF0A  F00D         	goto	i2l6120
 12365  001A86  0A01               	xorlw	1	; case 5
 12366  001A88  B4D8               	btfsc	status,2,c
 12367  001A8A  EF0E  F00D         	goto	i2l6122
 12368  001A8E  0A03               	xorlw	3	; case 6
 12369  001A90  B4D8               	btfsc	status,2,c
 12370  001A92  EF12  F00D         	goto	i2l6124
 12371  001A96  0A01               	xorlw	1	; case 7
 12372  001A98  B4D8               	btfsc	status,2,c
 12373  001A9A  EF16  F00D         	goto	i2l6126
 12374  001A9E  0A0F               	xorlw	15	; case 8
 12375  001AA0  B4D8               	btfsc	status,2,c
 12376  001AA2  EF1A  F00D         	goto	i2l6128
 12377  001AA6  0A01               	xorlw	1	; case 9
 12378  001AA8  B4D8               	btfsc	status,2,c
 12379  001AAA  EF1A  F00D         	goto	i2l6128
 12380  001AAE  EF59  F00D         	goto	i2l6136
 12381  001AB2                     i2l6136:
 12382                           
 12383                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 76:     *BCD_num=(h_nipple<<4)|(l_nipp
      +                          le);
 12384  001AB2  380D               	swapf	convert_int_to_BCD@h_nipple^0,w,c
 12385  001AB4  0BF0               	andlw	240
 12386  001AB6  100C               	iorwf	convert_int_to_BCD@l_nipple^0,w,c
 12387  001AB8  C009  FFD9         	movff	convert_int_to_BCD@BCD_num,fsr2l
 12388  001ABC  C00A  FFDA         	movff	convert_int_to_BCD@BCD_num+1,fsr2h
 12389  001AC0  6EDF               	movwf	indf2,c
 12390  001AC2  0012               	return		;funcret
 12391  001AC4                     __end_of_convert_int_to_BCD:
 12392                           	callstack 0
 12393                           
 12394 ;; *************** function ___awmod *****************
 12395 ;; Defined at:
 12396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  dividend        2    0[COMRAM] int 
 12399 ;;  divisor         2    2[COMRAM] int 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  sign            1    5[COMRAM] unsigned char 
 12402 ;;  counter         1    4[COMRAM] unsigned char 
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  2    0[COMRAM] int 
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;Total ram usage:        6 bytes
 12417 ;; Hardware stack levels used: 1
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		_convert_int_to_BCD
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           	psect	text99
 12426  002CA8                     __ptext99:
 12427                           	callstack 0
 12428  002CA8                     ___awmod:
 12429                           	callstack 16
 12430  002CA8  0E00               	movlw	0
 12431  002CAA  6E06               	movwf	___awmod@sign^0,c
 12432  002CAC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12433  002CAE  EF5D  F016         	goto	i2u347_40
 12434  002CB2  EF5B  F016         	goto	i2u347_41
 12435  002CB6                     i2u347_41:
 12436  002CB6  EF63  F016         	goto	i2l5930
 12437  002CBA                     i2u347_40:
 12438  002CBA  6C01               	negf	___awmod@dividend^0,c
 12439  002CBC  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12440  002CBE  B0D8               	btfsc	status,0,c
 12441  002CC0  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12442  002CC2  0E01               	movlw	1
 12443  002CC4  6E06               	movwf	___awmod@sign^0,c
 12444  002CC6                     i2l5930:
 12445  002CC6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12446  002CC8  EF6A  F016         	goto	i2u348_40
 12447  002CCC  EF68  F016         	goto	i2u348_41
 12448  002CD0                     i2u348_41:
 12449  002CD0  EF6E  F016         	goto	i2l5934
 12450  002CD4                     i2u348_40:
 12451  002CD4  6C03               	negf	___awmod@divisor^0,c
 12452  002CD6  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12453  002CD8  B0D8               	btfsc	status,0,c
 12454  002CDA  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12455  002CDC                     i2l5934:
 12456  002CDC  5003               	movf	___awmod@divisor^0,w,c
 12457  002CDE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12458  002CE0  B4D8               	btfsc	status,2,c
 12459  002CE2  EF75  F016         	goto	i2u349_41
 12460  002CE6  EF77  F016         	goto	i2u349_40
 12461  002CEA                     i2u349_41:
 12462  002CEA  EF9B  F016         	goto	i2l5950
 12463  002CEE                     i2u349_40:
 12464  002CEE  0E01               	movlw	1
 12465  002CF0  6E05               	movwf	___awmod@counter^0,c
 12466  002CF2  EF7F  F016         	goto	i2l5940
 12467  002CF6                     i2l5938:
 12468  002CF6  90D8               	bcf	status,0,c
 12469  002CF8  3603               	rlcf	___awmod@divisor^0,f,c
 12470  002CFA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12471  002CFC  2A05               	incf	___awmod@counter^0,f,c
 12472  002CFE                     i2l5940:
 12473  002CFE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12474  002D00  EF84  F016         	goto	i2u350_41
 12475  002D04  EF86  F016         	goto	i2u350_40
 12476  002D08                     i2u350_41:
 12477  002D08  EF7B  F016         	goto	i2l5938
 12478  002D0C                     i2u350_40:
 12479  002D0C                     i2l5942:
 12480  002D0C  5003               	movf	___awmod@divisor^0,w,c
 12481  002D0E  5C01               	subwf	___awmod@dividend^0,w,c
 12482  002D10  5004               	movf	(___awmod@divisor+1)^0,w,c
 12483  002D12  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12484  002D14  A0D8               	btfss	status,0,c
 12485  002D16  EF8F  F016         	goto	i2u351_41
 12486  002D1A  EF91  F016         	goto	i2u351_40
 12487  002D1E                     i2u351_41:
 12488  002D1E  EF95  F016         	goto	i2l5946
 12489  002D22                     i2u351_40:
 12490  002D22  5003               	movf	___awmod@divisor^0,w,c
 12491  002D24  5E01               	subwf	___awmod@dividend^0,f,c
 12492  002D26  5004               	movf	(___awmod@divisor+1)^0,w,c
 12493  002D28  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12494  002D2A                     i2l5946:
 12495  002D2A  90D8               	bcf	status,0,c
 12496  002D2C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12497  002D2E  3203               	rrcf	___awmod@divisor^0,f,c
 12498  002D30  2E05               	decfsz	___awmod@counter^0,f,c
 12499  002D32  EF86  F016         	goto	i2l5942
 12500  002D36                     i2l5950:
 12501  002D36  5006               	movf	___awmod@sign^0,w,c
 12502  002D38  B4D8               	btfsc	status,2,c
 12503  002D3A  EFA1  F016         	goto	i2u352_41
 12504  002D3E  EFA3  F016         	goto	i2u352_40
 12505  002D42                     i2u352_41:
 12506  002D42  EFA7  F016         	goto	i2l5954
 12507  002D46                     i2u352_40:
 12508  002D46  6C01               	negf	___awmod@dividend^0,c
 12509  002D48  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12510  002D4A  B0D8               	btfsc	status,0,c
 12511  002D4C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12512  002D4E                     i2l5954:
 12513  002D4E  C001  F001         	movff	___awmod@dividend,?___awmod
 12514  002D52  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12515  002D56  0012               	return		;funcret
 12516  002D58                     __end_of___awmod:
 12517                           	callstack 0
 12518                           
 12519 ;; *************** function ___awdiv *****************
 12520 ;; Defined at:
 12521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 12522 ;; Parameters:    Size  Location     Type
 12523 ;;  dividend        2    0[COMRAM] int 
 12524 ;;  divisor         2    2[COMRAM] int 
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;  quotient        2    6[COMRAM] int 
 12527 ;;  sign            1    5[COMRAM] unsigned char 
 12528 ;;  counter         1    4[COMRAM] unsigned char 
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  2    0[COMRAM] int 
 12531 ;; Registers used:
 12532 ;;		wreg, status,2, status,0
 12533 ;; Tracked objects:
 12534 ;;		On entry : 0/0
 12535 ;;		On exit  : 0/0
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12539 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12541 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12542 ;;Total ram usage:        8 bytes
 12543 ;; Hardware stack levels used: 1
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_convert_int_to_BCD
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           	psect	text100
 12552  002A6E                     __ptext100:
 12553                           	callstack 0
 12554  002A6E                     ___awdiv:
 12555                           	callstack 16
 12556  002A6E  0E00               	movlw	0
 12557  002A70  6E06               	movwf	___awdiv@sign^0,c
 12558  002A72  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12559  002A74  EF40  F015         	goto	i2u341_40
 12560  002A78  EF3E  F015         	goto	i2u341_41
 12561  002A7C                     i2u341_41:
 12562  002A7C  EF46  F015         	goto	i2l5886
 12563  002A80                     i2u341_40:
 12564  002A80  6C03               	negf	___awdiv@divisor^0,c
 12565  002A82  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12566  002A84  B0D8               	btfsc	status,0,c
 12567  002A86  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12568  002A88  0E01               	movlw	1
 12569  002A8A  6E06               	movwf	___awdiv@sign^0,c
 12570  002A8C                     i2l5886:
 12571  002A8C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12572  002A8E  EF4D  F015         	goto	i2u342_40
 12573  002A92  EF4B  F015         	goto	i2u342_41
 12574  002A96                     i2u342_41:
 12575  002A96  EF53  F015         	goto	i2l5892
 12576  002A9A                     i2u342_40:
 12577  002A9A  6C01               	negf	___awdiv@dividend^0,c
 12578  002A9C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12579  002A9E  B0D8               	btfsc	status,0,c
 12580  002AA0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12581  002AA2  0E01               	movlw	1
 12582  002AA4  1A06               	xorwf	___awdiv@sign^0,f,c
 12583  002AA6                     i2l5892:
 12584  002AA6  0E00               	movlw	0
 12585  002AA8  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12586  002AAA  0E00               	movlw	0
 12587  002AAC  6E07               	movwf	___awdiv@quotient^0,c
 12588  002AAE  5003               	movf	___awdiv@divisor^0,w,c
 12589  002AB0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12590  002AB2  B4D8               	btfsc	status,2,c
 12591  002AB4  EF5E  F015         	goto	i2u343_41
 12592  002AB8  EF60  F015         	goto	i2u343_40
 12593  002ABC                     i2u343_41:
 12594  002ABC  EF88  F015         	goto	i2l5914
 12595  002AC0                     i2u343_40:
 12596  002AC0  0E01               	movlw	1
 12597  002AC2  6E05               	movwf	___awdiv@counter^0,c
 12598  002AC4  EF68  F015         	goto	i2l5900
 12599  002AC8                     i2l5898:
 12600  002AC8  90D8               	bcf	status,0,c
 12601  002ACA  3603               	rlcf	___awdiv@divisor^0,f,c
 12602  002ACC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12603  002ACE  2A05               	incf	___awdiv@counter^0,f,c
 12604  002AD0                     i2l5900:
 12605  002AD0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12606  002AD2  EF6D  F015         	goto	i2u344_41
 12607  002AD6  EF6F  F015         	goto	i2u344_40
 12608  002ADA                     i2u344_41:
 12609  002ADA  EF64  F015         	goto	i2l5898
 12610  002ADE                     i2u344_40:
 12611  002ADE                     i2l5902:
 12612  002ADE  90D8               	bcf	status,0,c
 12613  002AE0  3607               	rlcf	___awdiv@quotient^0,f,c
 12614  002AE2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12615  002AE4  5003               	movf	___awdiv@divisor^0,w,c
 12616  002AE6  5C01               	subwf	___awdiv@dividend^0,w,c
 12617  002AE8  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12618  002AEA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12619  002AEC  A0D8               	btfss	status,0,c
 12620  002AEE  EF7B  F015         	goto	i2u345_41
 12621  002AF2  EF7D  F015         	goto	i2u345_40
 12622  002AF6                     i2u345_41:
 12623  002AF6  EF82  F015         	goto	i2l5910
 12624  002AFA                     i2u345_40:
 12625  002AFA  5003               	movf	___awdiv@divisor^0,w,c
 12626  002AFC  5E01               	subwf	___awdiv@dividend^0,f,c
 12627  002AFE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12628  002B00  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12629  002B02  8007               	bsf	___awdiv@quotient^0,0,c
 12630  002B04                     i2l5910:
 12631  002B04  90D8               	bcf	status,0,c
 12632  002B06  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12633  002B08  3203               	rrcf	___awdiv@divisor^0,f,c
 12634  002B0A  2E05               	decfsz	___awdiv@counter^0,f,c
 12635  002B0C  EF6F  F015         	goto	i2l5902
 12636  002B10                     i2l5914:
 12637  002B10  5006               	movf	___awdiv@sign^0,w,c
 12638  002B12  B4D8               	btfsc	status,2,c
 12639  002B14  EF8E  F015         	goto	i2u346_41
 12640  002B18  EF90  F015         	goto	i2u346_40
 12641  002B1C                     i2u346_41:
 12642  002B1C  EF94  F015         	goto	i2l5918
 12643  002B20                     i2u346_40:
 12644  002B20  6C07               	negf	___awdiv@quotient^0,c
 12645  002B22  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12646  002B24  B0D8               	btfsc	status,0,c
 12647  002B26  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12648  002B28                     i2l5918:
 12649  002B28  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12650  002B2C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12651  002B30  0012               	return		;funcret
 12652  002B32                     __end_of___awdiv:
 12653                           	callstack 0
 12654                           
 12655 ;; *************** function i2_RealTimeClockDS1307_Get_Date_Time *****************
 12656 ;; Defined at:
 12657 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;		None
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  6   20[COMRAM] struct .
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;Total ram usage:        6 bytes
 12676 ;; Hardware stack levels used: 1
 12677 ;; Hardware stack levels required when called: 9
 12678 ;; This function calls:
 12679 ;;		i2_I2C_Read1ByteRegister
 12680 ;; This function is called by:
 12681 ;;		_APP_INT0_ISR
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           	psect	text101
 12686  003B94                     __ptext101:
 12687                           	callstack 0
 12688  003B94                     i2_RealTimeClockDS1307_Get_Date_Time:
 12689                           	callstack 8
 12690  003B94                     
 12691                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
 12692  003B94  0E00               	movlw	0
 12693  003B96  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12694  003B98  0ED0               	movlw	208
 12695  003B9A  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12696  003B9E  0100               	movlb	0	; () banked
 12697  003BA0  6FF1               	movwf	(_RTC1307@RealTimeClockDS1307$F281+2)& (0+255),b
 12698                           
 12699                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
 12700  003BA2  0E01               	movlw	1
 12701  003BA4  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12702  003BA6  0ED0               	movlw	208
 12703  003BA8  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12704  003BAC  0100               	movlb	0	; () banked
 12705  003BAE  6FF0               	movwf	(_RTC1307@RealTimeClockDS1307$F281+1)& (0+255),b
 12706                           
 12707                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
 12708  003BB0  0E02               	movlw	2
 12709  003BB2  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12710  003BB4  0ED0               	movlw	208
 12711  003BB6  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12712  003BBA  0100               	movlb	0	; () banked
 12713  003BBC  6FEF               	movwf	_RTC1307@RealTimeClockDS1307$F281& (0+255),b
 12714                           
 12715                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
 12716  003BBE  0E04               	movlw	4
 12717  003BC0  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12718  003BC2  0ED0               	movlw	208
 12719  003BC4  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12720  003BC8  0100               	movlb	0	; () banked
 12721  003BCA  6FF4               	movwf	(_RTC1307@RealTimeClockDS1307$F281+5)& (0+255),b
 12722                           
 12723                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
 12724  003BCC  0E05               	movlw	5
 12725  003BCE  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12726  003BD0  0ED0               	movlw	208
 12727  003BD2  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12728  003BD6  0100               	movlb	0	; () banked
 12729  003BD8  6FF3               	movwf	(_RTC1307@RealTimeClockDS1307$F281+4)& (0+255),b
 12730                           
 12731                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
 12732  003BDA  0E06               	movlw	6
 12733  003BDC  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 12734  003BDE  0ED0               	movlw	208
 12735  003BE0  ECD1  F01B         	call	i2_I2C_Read1ByteRegister
 12736  003BE4  0100               	movlb	0	; () banked
 12737  003BE6  6FF2               	movwf	(_RTC1307@RealTimeClockDS1307$F281+3)& (0+255),b
 12738  003BE8                     
 12739                           ; BSR set to: 0
 12740                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
 12741  003BE8  EE20  F0EF         	lfsr	2,_RTC1307@RealTimeClockDS1307$F281
 12742  003BEC  EE00  F015         	lfsr	0,?i2_RealTimeClockDS1307_Get_Date_Time
 12743  003BF0  0E05               	movlw	5
 12744  003BF2                     i2u607_41:
 12745  003BF2  CFDB FFEB          	movff	plusw2,plusw0
 12746  003BF6  06E8               	decf	wreg,f,c
 12747  003BF8  E2FC               	bc	i2u607_41
 12748  003BFA                     
 12749                           ; BSR set to: 0
 12750  003BFA  0012               	return		;funcret
 12751  003BFC                     __end_ofi2_RealTimeClockDS1307_Get_Date_Time:
 12752                           	callstack 0
 12753                           
 12754 ;; *************** function i2_I2C_Read1ByteRegister *****************
 12755 ;; Defined at:
 12756 ;;		line 21 in file "mcc_generated_files/examples/i2c_master_example.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;  address         1    wreg     unsigned char 
 12759 ;;  reg             1   17[COMRAM] unsigned char 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;  address         1   18[COMRAM] unsigned char 
 12762 ;;  returnValue     1   19[COMRAM] unsigned char 
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      unsigned char 
 12765 ;; Registers used:
 12766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12772 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12775 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12776 ;;Total ram usage:        3 bytes
 12777 ;; Hardware stack levels used: 1
 12778 ;; Hardware stack levels required when called: 8
 12779 ;; This function calls:
 12780 ;;		i2_I2C_Close
 12781 ;;		i2_I2C_MasterWrite
 12782 ;;		i2_I2C_Open
 12783 ;;		i2_I2C_SetAddressNackCallback
 12784 ;;		i2_I2C_SetBuffer
 12785 ;;		i2_I2C_SetDataCompleteCallback
 12786 ;; This function is called by:
 12787 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791                           	psect	text102
 12792  0037A2                     __ptext102:
 12793                           	callstack 0
 12794  0037A2                     i2_I2C_Read1ByteRegister:
 12795                           	callstack 8
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;incstack = 0
 12799                           ;i2I2C_Read1ByteRegister@address stored from wreg
 12800  0037A2  6E13               	movwf	i2I2C_Read1ByteRegister@address^0,c
 12801  0037A4                     
 12802                           ;mcc_generated_files/examples/i2c_master_example.c: 21: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 22:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 23:     uint8_t returnValue = 0x00
      +                          ;
 12803  0037A4  0E00               	movlw	0
 12804  0037A6  6E14               	movwf	i2I2C_Read1ByteRegister@returnValue^0,c
 12805  0037A8                     i2l8666:
 12806  0037A8  5013               	movf	i2I2C_Read1ByteRegister@address^0,w,c
 12807  0037AA  ECD2  F018         	call	i2_I2C_Open
 12808  0037AE  0900               	iorlw	0
 12809  0037B0  B4D8               	btfsc	status,2,c
 12810  0037B2  EFDD  F01B         	goto	i2u577_41
 12811  0037B6  EFDF  F01B         	goto	i2u577_40
 12812  0037BA                     i2u577_41:
 12813  0037BA  EFD4  F01B         	goto	i2l8666
 12814  0037BE                     i2u577_40:
 12815  0037BE                     
 12816                           ;mcc_generated_files/examples/i2c_master_example.c: 26:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 12817  0037BE  0ED8               	movlw	low i2_rd1RegCompleteHandler
 12818  0037C0  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 12819  0037C2  0E42               	movlw	high i2_rd1RegCompleteHandler
 12820  0037C4  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 12821  0037C6  0E14               	movlw	low i2I2C_Read1ByteRegister@returnValue
 12822  0037C8  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 12823  0037CA  0E00               	movlw	high i2I2C_Read1ByteRegister@returnValue
 12824  0037CC  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 12825  0037CE  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 12826  0037D2                     
 12827                           ;mcc_generated_files/examples/i2c_master_example.c: 27:     I2C_SetBuffer(&reg,1);
 12828  0037D2  0E12               	movlw	low i2I2C_Read1ByteRegister@reg
 12829  0037D4  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 12830  0037D6  0E00               	movlw	high i2I2C_Read1ByteRegister@reg
 12831  0037D8  6E02               	movwf	(i2I2C_SetBuffer@buffer+1)^0,c
 12832  0037DA  0E00               	movlw	0
 12833  0037DC  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 12834  0037DE  0E01               	movlw	1
 12835  0037E0  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 12836  0037E2  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 12837  0037E6                     
 12838                           ;mcc_generated_files/examples/i2c_master_example.c: 28:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 12839  0037E6  0E00               	movlw	0
 12840  0037E8  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 12841  0037EA  0E00               	movlw	0
 12842  0037EC  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 12843  0037EE  0E00               	movlw	0
 12844  0037F0  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 12845  0037F2  0E00               	movlw	0
 12846  0037F4  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 12847  0037F6  EC94  F022         	call	i2_I2C_SetAddressNackCallback	;wreg free
 12848  0037FA                     
 12849                           ;mcc_generated_files/examples/i2c_master_example.c: 29:     I2C_MasterWrite();
 12850  0037FA  EC78  F023         	call	i2_I2C_MasterWrite	;wreg free
 12851  0037FE                     i2l8676:
 12852  0037FE  EC98  F021         	call	i2_I2C_Close	;wreg free
 12853  003802  06E8               	decf	wreg,f,c
 12854  003804  B4D8               	btfsc	status,2,c
 12855  003806  EF07  F01C         	goto	i2u578_41
 12856  00380A  EF09  F01C         	goto	i2u578_40
 12857  00380E                     i2u578_41:
 12858  00380E  EFFF  F01B         	goto	i2l8676
 12859  003812                     i2u578_40:
 12860  003812                     
 12861                           ;mcc_generated_files/examples/i2c_master_example.c: 32:     return returnValue;
 12862  003812  5014               	movf	i2I2C_Read1ByteRegister@returnValue^0,w,c
 12863  003814  0012               	return		;funcret
 12864  003816                     __end_ofi2_I2C_Read1ByteRegister:
 12865                           	callstack 0
 12866                           
 12867 ;; *************** function _I2C_Write1ByteRegister *****************
 12868 ;; Defined at:
 12869 ;;		line 49 in file "mcc_generated_files/examples/i2c_master_example.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  address         1    wreg     unsigned char 
 12872 ;;  reg             1   17[COMRAM] unsigned char 
 12873 ;;  data            1   18[COMRAM] unsigned char 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;  address         1   19[COMRAM] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      void 
 12878 ;; Registers used:
 12879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;Total ram usage:        3 bytes
 12890 ;; Hardware stack levels used: 1
 12891 ;; Hardware stack levels required when called: 8
 12892 ;; This function calls:
 12893 ;;		i2_I2C_Close
 12894 ;;		i2_I2C_MasterWrite
 12895 ;;		i2_I2C_Open
 12896 ;;		i2_I2C_SetAddressNackCallback
 12897 ;;		i2_I2C_SetBuffer
 12898 ;;		i2_I2C_SetDataCompleteCallback
 12899 ;; This function is called by:
 12900 ;;		_APP_INT0_ISR
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           	psect	text103
 12905  003ABE                     __ptext103:
 12906                           	callstack 0
 12907  003ABE                     _I2C_Write1ByteRegister:
 12908                           	callstack 9
 12909                           
 12910                           ;incstack = 0
 12911                           ;I2C_Write1ByteRegister@address stored from wreg
 12912  003ABE  6E14               	movwf	I2C_Write1ByteRegister@address^0,c
 12913  003AC0                     i2l9020:
 12914  003AC0  5014               	movf	I2C_Write1ByteRegister@address^0,w,c
 12915  003AC2  ECD2  F018         	call	i2_I2C_Open
 12916  003AC6  0900               	iorlw	0
 12917  003AC8  B4D8               	btfsc	status,2,c
 12918  003ACA  EF69  F01D         	goto	i2u605_41
 12919  003ACE  EF6B  F01D         	goto	i2u605_40
 12920  003AD2                     i2u605_41:
 12921  003AD2  EF60  F01D         	goto	i2l9020
 12922  003AD6                     i2u605_40:
 12923  003AD6                     
 12924                           ;mcc_generated_files/examples/i2c_master_example.c: 52:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 12925  003AD6  0E80               	movlw	low i2_wr1RegCompleteHandler
 12926  003AD8  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 12927  003ADA  0E42               	movlw	high i2_wr1RegCompleteHandler
 12928  003ADC  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 12929  003ADE  0E13               	movlw	low I2C_Write1ByteRegister@data
 12930  003AE0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 12931  003AE2  0E00               	movlw	high I2C_Write1ByteRegister@data
 12932  003AE4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 12933  003AE6  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 12934  003AEA                     
 12935                           ;mcc_generated_files/examples/i2c_master_example.c: 53:     I2C_SetBuffer(&reg,1);
 12936  003AEA  0E12               	movlw	low I2C_Write1ByteRegister@reg
 12937  003AEC  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 12938  003AEE  0E00               	movlw	high I2C_Write1ByteRegister@reg
 12939  003AF0  6E02               	movwf	(i2I2C_SetBuffer@buffer+1)^0,c
 12940  003AF2  0E00               	movlw	0
 12941  003AF4  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 12942  003AF6  0E01               	movlw	1
 12943  003AF8  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 12944  003AFA  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 12945  003AFE                     
 12946                           ;mcc_generated_files/examples/i2c_master_example.c: 54:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 12947  003AFE  0E00               	movlw	0
 12948  003B00  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 12949  003B02  0E00               	movlw	0
 12950  003B04  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 12951  003B06  0E00               	movlw	0
 12952  003B08  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 12953  003B0A  0E00               	movlw	0
 12954  003B0C  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 12955  003B0E  EC94  F022         	call	i2_I2C_SetAddressNackCallback	;wreg free
 12956  003B12                     
 12957                           ;mcc_generated_files/examples/i2c_master_example.c: 55:     I2C_MasterWrite();
 12958  003B12  EC78  F023         	call	i2_I2C_MasterWrite	;wreg free
 12959  003B16                     i2l9030:
 12960  003B16  EC98  F021         	call	i2_I2C_Close	;wreg free
 12961  003B1A  06E8               	decf	wreg,f,c
 12962  003B1C  B4D8               	btfsc	status,2,c
 12963  003B1E  EF93  F01D         	goto	i2u606_41
 12964  003B22  EF95  F01D         	goto	i2u606_40
 12965  003B26                     i2u606_41:
 12966  003B26  EF8B  F01D         	goto	i2l9030
 12967  003B2A                     i2u606_40:
 12968  003B2A  0012               	return		;funcret
 12969  003B2C                     __end_of_I2C_Write1ByteRegister:
 12970                           	callstack 0
 12971                           
 12972 ;; *************** function i2_I2C_SetAddressNackCallback *****************
 12973 ;; Defined at:
 12974 ;;		line 241 in file "mcc_generated_files/i2c_master.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 12977 ;;		 -> Absolute function(1), 
 12978 ;;  ptr             2    7[COMRAM] PTR void 
 12979 ;;		 -> NULL(0), 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;		None
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;Total ram usage:        4 bytes
 12996 ;; Hardware stack levels used: 1
 12997 ;; Hardware stack levels required when called: 1
 12998 ;; This function calls:
 12999 ;;		i2_I2C_SetCallback
 13000 ;; This function is called by:
 13001 ;;		_I2C_Write1ByteRegister
 13002 ;;		i2_I2C_Read1ByteRegister
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text104
 13007  004528                     __ptext104:
 13008                           	callstack 0
 13009  004528                     i2_I2C_SetAddressNackCallback:
 13010                           	callstack 14
 13011  004528                     
 13012                           ;mcc_generated_files/i2c_master.c: 241: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 242: {;mcc_generated_files/i2c_master.c:
      +                           243:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 13013  004528  C006  F001         	movff	i2I2C_SetAddressNackCallback@cb,i2I2C_SetCallback@cb
 13014  00452C  C007  F002         	movff	i2I2C_SetAddressNackCallback@cb+1,i2I2C_SetCallback@cb+1
 13015  004530  C008  F003         	movff	i2I2C_SetAddressNackCallback@ptr,i2I2C_SetCallback@ptr
 13016  004534  C009  F004         	movff	i2I2C_SetAddressNackCallback@ptr+1,i2I2C_SetCallback@ptr+1
 13017  004538  0E02               	movlw	2
 13018  00453A  EC58  F01B         	call	i2_I2C_SetCallback
 13019  00453E  0012               	return		;funcret
 13020  004540                     __end_ofi2_I2C_SetAddressNackCallback:
 13021                           	callstack 0
 13022                           
 13023 ;; *************** function i2_I2C_Open *****************
 13024 ;; Defined at:
 13025 ;;		line 134 in file "mcc_generated_files/i2c_master.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  address         1    wreg     unsigned char 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  address         1    0[COMRAM] unsigned char 
 13030 ;;  returnValue     1    1[COMRAM] enum E355
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      enum E355
 13033 ;; Registers used:
 13034 ;;		wreg, status,2, status,0, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;Total ram usage:        2 bytes
 13045 ;; Hardware stack levels used: 1
 13046 ;; Hardware stack levels required when called: 1
 13047 ;; This function calls:
 13048 ;;		i2_I2C_MasterClearIrq
 13049 ;;		i2_I2C_MasterOpen
 13050 ;; This function is called by:
 13051 ;;		_I2C_Write1ByteRegister
 13052 ;;		i2_I2C_Read1ByteRegister
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text105
 13057  0031A4                     __ptext105:
 13058                           	callstack 0
 13059  0031A4                     i2_I2C_Open:
 13060                           	callstack 14
 13061                           
 13062                           ;incstack = 0
 13063                           ;i2I2C_Open@address stored from wreg
 13064  0031A4  6E01               	movwf	i2I2C_Open@address^0,c
 13065  0031A6                     
 13066                           ;mcc_generated_files/i2c_master.c: 134: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 135: {;mcc_generated_files/i2c_master.c: 136:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 13067  0031A6  0E01               	movlw	1
 13068  0031A8  6E02               	movwf	i2I2C_Open@returnValue^0,c
 13069  0031AA                     
 13070                           ;mcc_generated_files/i2c_master.c: 138:     if(!I2C_Status.inUse)
 13071  0031AA  0100               	movlb	0	; () banked
 13072  0031AC  B5EE               	btfsc	(_I2C_Status+35)& (0+255),2,b
 13073  0031AE  EFDB  F018         	goto	i2u565_41
 13074  0031B2  EFDD  F018         	goto	i2u565_40
 13075  0031B6                     i2u565_41:
 13076  0031B6  EF17  F019         	goto	i2l8526
 13077  0031BA                     i2u565_40:
 13078  0031BA                     
 13079                           ; BSR set to: 0
 13080                           ;mcc_generated_files/i2c_master.c: 139:     {;mcc_generated_files/i2c_master.c: 140:    
      +                               I2C_Status.address = address;
 13081  0031BA  C001  F0E7         	movff	i2I2C_Open@address,_I2C_Status+28
 13082  0031BE                     
 13083                           ; BSR set to: 0
 13084                           ;mcc_generated_files/i2c_master.c: 141:         I2C_Status.busy = 0;
 13085  0031BE  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
 13086  0031C0                     
 13087                           ; BSR set to: 0
 13088                           ;mcc_generated_files/i2c_master.c: 142:         I2C_Status.inUse = 1;
 13089  0031C0  85EE               	bsf	(_I2C_Status+35)& (0+255),2,b
 13090  0031C2                     
 13091                           ; BSR set to: 0
 13092                           ;mcc_generated_files/i2c_master.c: 143:         I2C_Status.addressNackCheck = 0;
 13093  0031C2  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
 13094  0031C4                     
 13095                           ; BSR set to: 0
 13096                           ;mcc_generated_files/i2c_master.c: 144:         I2C_Status.state = I2C_RESET;
 13097  0031C4  0E0E               	movlw	14
 13098  0031C6  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
 13099  0031C8                     
 13100                           ; BSR set to: 0
 13101                           ;mcc_generated_files/i2c_master.c: 145:         I2C_Status.time_out_value = 500;
 13102  0031C8  0E01               	movlw	1
 13103  0031CA  6FE6               	movwf	(_I2C_Status+27)& (0+255),b
 13104  0031CC  0EF4               	movlw	244
 13105  0031CE  6FE5               	movwf	(_I2C_Status+26)& (0+255),b
 13106  0031D0                     
 13107                           ; BSR set to: 0
 13108                           ;mcc_generated_files/i2c_master.c: 146:         I2C_Status.bufferFree = 1;
 13109  0031D0  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
 13110  0031D2                     
 13111                           ; BSR set to: 0
 13112                           ;mcc_generated_files/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 13113  0031D2  0E8A               	movlw	low i2_I2C_CallbackReturnStop
 13114  0031D4  6FCB               	movwf	_I2C_Status& (0+255),b
 13115  0031D6  0E47               	movlw	high i2_I2C_CallbackReturnStop
 13116  0031D8  6FCC               	movwf	(_I2C_Status+1)& (0+255),b
 13117  0031DA                     
 13118                           ; BSR set to: 0
 13119                           ;mcc_generated_files/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 13120  0031DA  0E00               	movlw	0
 13121  0031DC  6FD7               	movwf	(_I2C_Status+12)& (0+255),b
 13122  0031DE  0E00               	movlw	0
 13123  0031E0  6FD8               	movwf	(_I2C_Status+13)& (0+255),b
 13124  0031E2                     
 13125                           ; BSR set to: 0
 13126                           ;mcc_generated_files/i2c_master.c: 151:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 13127  0031E2  0E8A               	movlw	low i2_I2C_CallbackReturnStop
 13128  0031E4  6FCD               	movwf	(_I2C_Status+2)& (0+255),b
 13129  0031E6  0E47               	movlw	high i2_I2C_CallbackReturnStop
 13130  0031E8  6FCE               	movwf	(_I2C_Status+3)& (0+255),b
 13131  0031EA                     
 13132                           ; BSR set to: 0
 13133                           ;mcc_generated_files/i2c_master.c: 152:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 13134  0031EA  0E00               	movlw	0
 13135  0031EC  6FD9               	movwf	(_I2C_Status+14)& (0+255),b
 13136  0031EE  0E00               	movlw	0
 13137  0031F0  6FDA               	movwf	(_I2C_Status+15)& (0+255),b
 13138  0031F2                     
 13139                           ; BSR set to: 0
 13140                           ;mcc_generated_files/i2c_master.c: 153:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 13141  0031F2  0E8A               	movlw	low i2_I2C_CallbackReturnStop
 13142  0031F4  6FCF               	movwf	(_I2C_Status+4)& (0+255),b
 13143  0031F6  0E47               	movlw	high i2_I2C_CallbackReturnStop
 13144  0031F8  6FD0               	movwf	(_I2C_Status+5)& (0+255),b
 13145  0031FA                     
 13146                           ; BSR set to: 0
 13147                           ;mcc_generated_files/i2c_master.c: 154:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 13148  0031FA  0E00               	movlw	0
 13149  0031FC  6FDB               	movwf	(_I2C_Status+16)& (0+255),b
 13150  0031FE  0E00               	movlw	0
 13151  003200  6FDC               	movwf	(_I2C_Status+17)& (0+255),b
 13152  003202                     
 13153                           ; BSR set to: 0
 13154                           ;mcc_generated_files/i2c_master.c: 155:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 13155  003202  0E8A               	movlw	low i2_I2C_CallbackReturnStop
 13156  003204  6FD1               	movwf	(_I2C_Status+6)& (0+255),b
 13157  003206  0E47               	movlw	high i2_I2C_CallbackReturnStop
 13158  003208  6FD2               	movwf	(_I2C_Status+7)& (0+255),b
 13159  00320A                     
 13160                           ; BSR set to: 0
 13161                           ;mcc_generated_files/i2c_master.c: 156:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 13162  00320A  0E00               	movlw	0
 13163  00320C  6FDD               	movwf	(_I2C_Status+18)& (0+255),b
 13164  00320E  0E00               	movlw	0
 13165  003210  6FDE               	movwf	(_I2C_Status+19)& (0+255),b
 13166  003212                     
 13167                           ; BSR set to: 0
 13168                           ;mcc_generated_files/i2c_master.c: 157:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 13169  003212  0E86               	movlw	low i2_I2C_CallbackReturnReset
 13170  003214  6FD3               	movwf	(_I2C_Status+8)& (0+255),b
 13171  003216  0E47               	movlw	high i2_I2C_CallbackReturnReset
 13172  003218  6FD4               	movwf	(_I2C_Status+9)& (0+255),b
 13173  00321A                     
 13174                           ; BSR set to: 0
 13175                           ;mcc_generated_files/i2c_master.c: 158:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 13176  00321A  0E00               	movlw	0
 13177  00321C  6FDF               	movwf	(_I2C_Status+20)& (0+255),b
 13178  00321E  0E00               	movlw	0
 13179  003220  6FE0               	movwf	(_I2C_Status+21)& (0+255),b
 13180  003222                     
 13181                           ; BSR set to: 0
 13182                           ;mcc_generated_files/i2c_master.c: 160:         I2C_MasterClearIrq();
 13183  003222  ECD1  F023         	call	i2_I2C_MasterClearIrq	;wreg free
 13184  003226                     
 13185                           ;mcc_generated_files/i2c_master.c: 161:         I2C_MasterOpen();
 13186  003226  EC34  F022         	call	i2_I2C_MasterOpen	;wreg free
 13187  00322A                     
 13188                           ;mcc_generated_files/i2c_master.c: 162:         returnValue = I2C_NOERR;
 13189  00322A  0E00               	movlw	0
 13190  00322C  6E02               	movwf	i2I2C_Open@returnValue^0,c
 13191  00322E                     i2l8526:
 13192                           
 13193                           ;mcc_generated_files/i2c_master.c: 164:     return returnValue;
 13194  00322E  5002               	movf	i2I2C_Open@returnValue^0,w,c
 13195  003230  0012               	return		;funcret
 13196  003232                     __end_ofi2_I2C_Open:
 13197                           	callstack 0
 13198                           
 13199 ;; *************** function i2_I2C_MasterOpen *****************
 13200 ;; Defined at:
 13201 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      _Bool 
 13208 ;; Registers used:
 13209 ;;		wreg, status,2
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used: 1
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		i2_I2C_Open
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           	psect	text106
 13229  004468                     __ptext106:
 13230                           	callstack 0
 13231  004468                     i2_I2C_MasterOpen:
 13232                           	callstack 14
 13233  004468                     
 13234                           ;mcc_generated_files/i2c_master.c: 503:     if(!SSPCON1bits.SSPEN)
 13235  004468  BAC6               	btfsc	198,5,c	;volatile
 13236  00446A  EF39  F022         	goto	i2u315_41
 13237  00446E  EF3B  F022         	goto	i2u315_40
 13238  004472                     i2u315_41:
 13239  004472  EF44  F022         	goto	i2l903
 13240  004476                     i2u315_40:
 13241  004476                     
 13242                           ;mcc_generated_files/i2c_master.c: 504:     {;mcc_generated_files/i2c_master.c: 505:    
      +                               SSPSTAT = 0x00;
 13243  004476  0E00               	movlw	0
 13244  004478  6EC7               	movwf	199,c	;volatile
 13245                           
 13246                           ;mcc_generated_files/i2c_master.c: 506:         SSPCON1 = 0x08;
 13247  00447A  0E08               	movlw	8
 13248  00447C  6EC6               	movwf	198,c	;volatile
 13249                           
 13250                           ;mcc_generated_files/i2c_master.c: 507:         SSPCON2 = 0x00;
 13251  00447E  0E00               	movlw	0
 13252  004480  6EC5               	movwf	197,c	;volatile
 13253                           
 13254                           ;mcc_generated_files/i2c_master.c: 508:         SSPADD = 0x13;
 13255  004482  0E13               	movlw	19
 13256  004484  6EC8               	movwf	200,c	;volatile
 13257  004486                     
 13258                           ;mcc_generated_files/i2c_master.c: 509:         SSPCON1bits.SSPEN = 1;
 13259  004486  8AC6               	bsf	198,5,c	;volatile
 13260  004488                     i2l903:
 13261  004488  0012               	return		;funcret
 13262  00448A                     __end_ofi2_I2C_MasterOpen:
 13263                           	callstack 0
 13264                           
 13265 ;; *************** function i2_I2C_MasterWrite *****************
 13266 ;; Defined at:
 13267 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;		None
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;		None
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  1    wreg      enum E355
 13274 ;; Registers used:
 13275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;Total ram usage:        0 bytes
 13286 ;; Hardware stack levels used: 1
 13287 ;; Hardware stack levels required when called: 7
 13288 ;; This function calls:
 13289 ;;		i2_I2C_MasterOperation
 13290 ;; This function is called by:
 13291 ;;		_I2C_Write1ByteRegister
 13292 ;;		i2_I2C_Read1ByteRegister
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           
 13296                           	psect	text107
 13297  0046F0                     __ptext107:
 13298                           	callstack 0
 13299  0046F0                     i2_I2C_MasterWrite:
 13300                           	callstack 8
 13301  0046F0                     
 13302                           ;mcc_generated_files/i2c_master.c: 211:     return I2C_MasterOperation(0);;	Return value
      +                           of i2_I2C_MasterWrite is never used
 13303  0046F0  0E00               	movlw	0
 13304  0046F2  ECAC  F01F         	call	i2_I2C_MasterOperation
 13305  0046F6  0012               	return		;funcret
 13306  0046F8                     __end_ofi2_I2C_MasterWrite:
 13307                           	callstack 0
 13308                           
 13309 ;; *************** function i2_I2C_MasterOperation *****************
 13310 ;; Defined at:
 13311 ;;		line 182 in file "mcc_generated_files/i2c_master.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  read            1    wreg     _Bool 
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;  read            1   15[COMRAM] _Bool 
 13316 ;;  returnValue     1   16[COMRAM] enum E355
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      enum E355
 13319 ;; Registers used:
 13320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;Total ram usage:        2 bytes
 13331 ;; Hardware stack levels used: 1
 13332 ;; Hardware stack levels required when called: 6
 13333 ;; This function calls:
 13334 ;;		i2_I2C_MasterStart
 13335 ;;		i2_I2C_Poller
 13336 ;; This function is called by:
 13337 ;;		i2_I2C_MasterWrite
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text108
 13342  003F58                     __ptext108:
 13343                           	callstack 0
 13344  003F58                     i2_I2C_MasterOperation:
 13345                           	callstack 8
 13346                           
 13347                           ;incstack = 0
 13348                           ;i2I2C_MasterOperation@read stored from wreg
 13349  003F58  6E10               	movwf	i2I2C_MasterOperation@read^0,c
 13350  003F5A                     
 13351                           ;mcc_generated_files/i2c_master.c: 182: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 183: {;mcc_generated_files/i2c_master.c: 184:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 13352  003F5A  0E01               	movlw	1
 13353  003F5C  6E11               	movwf	i2I2C_MasterOperation@returnValue^0,c
 13354  003F5E                     
 13355                           ;mcc_generated_files/i2c_master.c: 185:     if(!I2C_Status.busy)
 13356  003F5E  0100               	movlb	0	; () banked
 13357  003F60  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13358  003F62  EFB5  F01F         	goto	i2u550_41
 13359  003F66  EFB7  F01F         	goto	i2u550_40
 13360  003F6A                     i2u550_41:
 13361  003F6A  EFCC  F01F         	goto	i2l8372
 13362  003F6E                     i2u550_40:
 13363  003F6E                     
 13364                           ; BSR set to: 0
 13365                           ;mcc_generated_files/i2c_master.c: 186:     {;mcc_generated_files/i2c_master.c: 187:    
      +                               I2C_Status.busy = 1;
 13366  003F6E  83EE               	bsf	(_I2C_Status+35)& (0+255),1,b
 13367  003F70                     
 13368                           ; BSR set to: 0
 13369                           ;mcc_generated_files/i2c_master.c: 188:         returnValue = I2C_NOERR;
 13370  003F70  0E00               	movlw	0
 13371  003F72  6E11               	movwf	i2I2C_MasterOperation@returnValue^0,c
 13372  003F74                     
 13373                           ; BSR set to: 0
 13374                           ;mcc_generated_files/i2c_master.c: 190:         if(read)
 13375  003F74  5010               	movf	i2I2C_MasterOperation@read^0,w,c
 13376  003F76  B4D8               	btfsc	status,2,c
 13377  003F78  EFC0  F01F         	goto	i2u551_41
 13378  003F7C  EFC2  F01F         	goto	i2u551_40
 13379  003F80                     i2u551_41:
 13380  003F80  EFC6  F01F         	goto	i2l8366
 13381  003F84                     i2u551_40:
 13382  003F84                     
 13383                           ; BSR set to: 0
 13384                           ;mcc_generated_files/i2c_master.c: 191:         {;mcc_generated_files/i2c_master.c: 192:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 13385  003F84  0E01               	movlw	1
 13386  003F86  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
 13387                           
 13388                           ;mcc_generated_files/i2c_master.c: 193:         }
 13389  003F88  EFC8  F01F         	goto	i2l8368
 13390  003F8C                     i2l8366:
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;mcc_generated_files/i2c_master.c: 195:         {;mcc_generated_files/i2c_master.c: 196:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 13394  003F8C  0E02               	movlw	2
 13395  003F8E  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
 13396  003F90                     i2l8368:
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;mcc_generated_files/i2c_master.c: 198:         I2C_MasterStart();
 13400  003F90  ECCB  F023         	call	i2_I2C_MasterStart	;wreg free
 13401  003F94                     
 13402                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Poller();
 13403  003F94  EC54  F022         	call	i2_I2C_Poller	;wreg free
 13404  003F98                     i2l8372:
 13405                           
 13406                           ;mcc_generated_files/i2c_master.c: 201:     return returnValue;
 13407  003F98  5011               	movf	i2I2C_MasterOperation@returnValue^0,w,c
 13408  003F9A  0012               	return		;funcret
 13409  003F9C                     __end_ofi2_I2C_MasterOperation:
 13410                           	callstack 0
 13411                           
 13412 ;; *************** function i2_I2C_Poller *****************
 13413 ;; Defined at:
 13414 ;;		line 270 in file "mcc_generated_files/i2c_master.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13432 ;;Total ram usage:        0 bytes
 13433 ;; Hardware stack levels used: 1
 13434 ;; Hardware stack levels required when called: 5
 13435 ;; This function calls:
 13436 ;;		i2_I2C_MasterFsm
 13437 ;;		i2_I2C_MasterWaitForEvent
 13438 ;; This function is called by:
 13439 ;;		i2_I2C_MasterOperation
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text109
 13444  0044A8                     __ptext109:
 13445                           	callstack 0
 13446  0044A8                     i2_I2C_Poller:
 13447                           	callstack 8
 13448  0044A8                     
 13449                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
 13450  0044A8  EF5A  F022         	goto	i2l8248
 13451  0044AC                     i2l8244:
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;mcc_generated_files/i2c_master.c: 273:     {;mcc_generated_files/i2c_master.c: 274:    
      +                               I2C_MasterWaitForEvent();
 13455  0044AC  EC32  F023         	call	i2_I2C_MasterWaitForEvent	;wreg free
 13456  0044B0                     
 13457                           ;mcc_generated_files/i2c_master.c: 275:         I2C_MasterFsm();
 13458  0044B0  EC27  F01D         	call	i2_I2C_MasterFsm	;wreg free
 13459  0044B4                     i2l8248:
 13460                           
 13461                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
 13462  0044B4  0100               	movlb	0	; () banked
 13463  0044B6  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
 13464  0044B8  EF60  F022         	goto	i2u524_41
 13465  0044BC  EF62  F022         	goto	i2u524_40
 13466  0044C0                     i2u524_41:
 13467  0044C0  EF56  F022         	goto	i2l8244
 13468  0044C4                     i2u524_40:
 13469  0044C4                     
 13470                           ; BSR set to: 0
 13471  0044C4  0012               	return		;funcret
 13472  0044C6                     __end_ofi2_I2C_Poller:
 13473                           	callstack 0
 13474                           
 13475 ;; *************** function i2_I2C_MasterWaitForEvent *****************
 13476 ;; Defined at:
 13477 ;;		line 608 in file "mcc_generated_files/i2c_master.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		None
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13495 ;;Total ram usage:        0 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		i2_I2C_Poller
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504                           	psect	text110
 13505  004664                     __ptext110:
 13506                           	callstack 0
 13507  004664                     i2_I2C_MasterWaitForEvent:
 13508                           	callstack 12
 13509  004664                     i2l960:
 13510                           
 13511                           ;mcc_generated_files/i2c_master.c: 611:     {;mcc_generated_files/i2c_master.c: 612:    
      +                               if(PIR1bits.SSPIF)
 13512  004664  A69E               	btfss	158,3,c	;volatile
 13513  004666  EF37  F023         	goto	i2u261_41
 13514  00466A  EF39  F023         	goto	i2u261_40
 13515  00466E                     i2u261_41:
 13516  00466E  EF32  F023         	goto	i2l960
 13517  004672                     i2u261_40:
 13518  004672  0012               	return		;funcret
 13519  004674                     __end_ofi2_I2C_MasterWaitForEvent:
 13520                           	callstack 0
 13521                           
 13522 ;; *************** function i2_I2C_MasterFsm *****************
 13523 ;; Defined at:
 13524 ;;		line 279 in file "mcc_generated_files/i2c_master.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13542 ;;Total ram usage:        2 bytes
 13543 ;; Hardware stack levels used: 1
 13544 ;; Hardware stack levels required when called: 4
 13545 ;; This function calls:
 13546 ;;		i2_I2C_DO_ADDRESS_NACK
 13547 ;;		i2_I2C_DO_IDLE
 13548 ;;		i2_I2C_DO_RCEN
 13549 ;;		i2_I2C_DO_RESET
 13550 ;;		i2_I2C_DO_RX
 13551 ;;		i2_I2C_DO_RX_ACK
 13552 ;;		i2_I2C_DO_RX_NACK_RESTART
 13553 ;;		i2_I2C_DO_RX_NACK_STOP
 13554 ;;		i2_I2C_DO_SEND_ADR_READ
 13555 ;;		i2_I2C_DO_SEND_ADR_WRITE
 13556 ;;		i2_I2C_DO_SEND_RESTART
 13557 ;;		i2_I2C_DO_SEND_RESTART_READ
 13558 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 13559 ;;		i2_I2C_DO_SEND_STOP
 13560 ;;		i2_I2C_DO_TX
 13561 ;;		i2_I2C_DO_TX_EMPTY
 13562 ;;		i2_I2C_MasterClearIrq
 13563 ;;		i2_I2C_MasterIsNack
 13564 ;; This function is called by:
 13565 ;;		i2_I2C_Poller
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text111
 13570  003A4E                     __ptext111:
 13571                           	callstack 0
 13572  003A4E                     i2_I2C_MasterFsm:
 13573                           	callstack 8
 13574  003A4E                     
 13575                           ;mcc_generated_files/i2c_master.c: 281:     I2C_MasterClearIrq();
 13576  003A4E  ECD1  F023         	call	i2_I2C_MasterClearIrq	;wreg free
 13577  003A52                     
 13578                           ;mcc_generated_files/i2c_master.c: 283:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 13579  003A52  0100               	movlb	0	; () banked
 13580  003A54  A1EE               	btfss	(_I2C_Status+35)& (0+255),0,b
 13581  003A56  EF2F  F01D         	goto	i2u496_41
 13582  003A5A  EF31  F01D         	goto	i2u496_40
 13583  003A5E                     i2u496_41:
 13584  003A5E  EF3E  F01D         	goto	i2l7978
 13585  003A62                     i2u496_40:
 13586  003A62                     
 13587                           ; BSR set to: 0
 13588  003A62  ECE1  F022         	call	i2_I2C_MasterIsNack	;wreg free
 13589  003A66  0900               	iorlw	0
 13590  003A68  B4D8               	btfsc	status,2,c
 13591  003A6A  EF39  F01D         	goto	i2u497_41
 13592  003A6E  EF3B  F01D         	goto	i2u497_40
 13593  003A72                     i2u497_41:
 13594  003A72  EF3E  F01D         	goto	i2l7978
 13595  003A76                     i2u497_40:
 13596  003A76                     
 13597                           ;mcc_generated_files/i2c_master.c: 284:     {;mcc_generated_files/i2c_master.c: 285:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 13598  003A76  0E0F               	movlw	15
 13599  003A78  0100               	movlb	0	; () banked
 13600  003A7A  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
 13601  003A7C                     i2l7978:
 13602                           
 13603                           ;mcc_generated_files/i2c_master.c: 287:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 13604  003A7C  0100               	movlb	0	; () banked
 13605  003A7E  51EC               	movf	(_I2C_Status+33)& (0+255),w,b
 13606  003A80  0D02               	mullw	2
 13607  003A82  0E01               	movlw	low _i2c_fsmStateTable
 13608  003A84  24F3               	addwf	243,w,c
 13609  003A86  6EF6               	movwf	tblptrl,c
 13610  003A88  0E10               	movlw	high _i2c_fsmStateTable
 13611  003A8A  20F4               	addwfc	244,w,c
 13612  003A8C  6EF7               	movwf	tblptrh,c
 13613  003A8E                     	if	1	;There are 3 active tblptr bytes
 13614  003A8E  6AF8               	clrf	tblptru,c
 13615  003A90  0E00               	movlw	low (__mediumconst shr (0+16))
 13616  003A92  22F8               	addwfc	tblptru,f,c
 13617  003A94                     	endif
 13618  003A94  0009               	tblrd		*+
 13619  003A96  CFF5 F00E          	movff	tablat,??i2_I2C_MasterFsm
 13620  003A9A  0009               	tblrd		*+
 13621  003A9C  CFF5 F00F          	movff	tablat,??i2_I2C_MasterFsm+1
 13622  003AA0  D802               	call	i2u498_48
 13623  003AA2  EF5C  F01D         	goto	i2u498_49
 13624  003AA6                     i2u498_48:
 13625  003AA6  0005               	push	
 13626  003AA8  6EFA               	movwf	pclath,c
 13627  003AAA  500E               	movf	??i2_I2C_MasterFsm^0,w,c
 13628  003AAC  6EFD               	movwf	tosl,c
 13629  003AAE  500F               	movf	(??i2_I2C_MasterFsm+1)^0,w,c
 13630  003AB0  6EFE               	movwf	tosh,c
 13631  003AB2  6AFF               	clrf	tosu,c
 13632  003AB4  50FA               	movf	pclath,w,c
 13633  003AB6  0012               	return		;indir
 13634  003AB8                     i2u498_49:
 13635  003AB8  0100               	movlb	0	; () banked
 13636  003ABA  6FEC               	movwf	(_I2C_Status+33)& (0+255),b
 13637  003ABC                     
 13638                           ; BSR set to: 0
 13639  003ABC  0012               	return		;funcret
 13640  003ABE                     __end_ofi2_I2C_MasterFsm:
 13641                           	callstack 0
 13642                           
 13643 ;; *************** function i2_I2C_DO_ADDRESS_NACK *****************
 13644 ;; Defined at:
 13645 ;;		line 458 in file "mcc_generated_files/i2c_master.c"
 13646 ;; Parameters:    Size  Location     Type
 13647 ;;		None
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      enum E2863
 13652 ;; Registers used:
 13653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13663 ;;Total ram usage:        2 bytes
 13664 ;; Hardware stack levels used: 1
 13665 ;; Hardware stack levels required when called: 3
 13666 ;; This function calls:
 13667 ;;		Absolute function
 13668 ;;		i2_I2C_CallbackReturnReset
 13669 ;;		i2_I2C_CallbackReturnStop
 13670 ;;		i2_I2C_DO_SEND_RESTART
 13671 ;;		i2_I2C_DO_SEND_STOP
 13672 ;;		i2_rd1RegCompleteHandler
 13673 ;;		i2_rd2RegCompleteHandler
 13674 ;;		i2_rdBlkRegCompleteHandler
 13675 ;;		i2_wr1RegCompleteHandler
 13676 ;;		i2_wr2RegCompleteHandler
 13677 ;; This function is called by:
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text112
 13682  003BFC                     __ptext112:
 13683                           	callstack 0
 13684  003BFC                     i2_I2C_DO_ADDRESS_NACK:
 13685                           	callstack 8
 13686  003BFC                     
 13687                           ;mcc_generated_files/i2c_master.c: 460:     I2C_Status.addressNackCheck = 0;
 13688  003BFC  0100               	movlb	0	; () banked
 13689  003BFE  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
 13690  003C00                     
 13691                           ; BSR set to: 0
 13692                           ;mcc_generated_files/i2c_master.c: 461:     I2C_Status.error = I2C_FAIL;
 13693  003C00  0E02               	movlw	2
 13694  003C02  6FED               	movwf	(_I2C_Status+34)& (0+255),b
 13695                           
 13696                           ;mcc_generated_files/i2c_master.c: 462:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 13697  003C04  EF0C  F01E         	goto	i2l7846
 13698  003C08                     i2l7836:
 13699                           
 13700                           ;mcc_generated_files/i2c_master.c: 466:             return I2C_DO_SEND_RESTART();
 13701  003C08  EC8C  F023         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 13702  003C0C  EF30  F01E         	goto	i2l882
 13703  003C10                     i2l7840:
 13704                           
 13705                           ;mcc_generated_files/i2c_master.c: 468:             return I2C_DO_SEND_STOP();
 13706  003C10  EC88  F023         	call	i2_I2C_DO_SEND_STOP	;wreg free
 13707  003C14  EF30  F01E         	goto	i2l882
 13708  003C18                     i2l7846:
 13709                           
 13710                           ; BSR set to: 0
 13711  003C18  C0DB  F00A         	movff	_I2C_Status+16,i2rd1RegCompleteHandler@ptr
 13712  003C1C  C0DC  F00B         	movff	_I2C_Status+17,i2rd1RegCompleteHandler@ptr+1
 13713  003C20  D802               	call	i2u492_48
 13714  003C22  EF1C  F01E         	goto	i2u492_49
 13715  003C26                     i2u492_48:
 13716  003C26  0005               	push	
 13717  003C28  6EFA               	movwf	pclath,c
 13718  003C2A  51CF               	movf	(_I2C_Status+4)& (0+255),w,b
 13719  003C2C  6EFD               	movwf	tosl,c
 13720  003C2E  51D0               	movf	(_I2C_Status+5)& (0+255),w,b
 13721  003C30  6EFE               	movwf	tosh,c
 13722  003C32  6AFF               	clrf	tosu,c
 13723  003C34  50FA               	movf	pclath,w,c
 13724  003C36  0012               	return		;indir
 13725  003C38                     i2u492_49:
 13726  003C38  6E0C               	movwf	??i2_I2C_DO_ADDRESS_NACK^0,c
 13727  003C3A  6A0D               	clrf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,c
 13728                           
 13729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13730                           ; Switch size 1, requested type "simple"
 13731                           ; Number of cases is 1, Range of values is 0 to 0
 13732                           ; switch strategies available:
 13733                           ; Name         Instructions Cycles
 13734                           ; simple_byte            4     3 (average)
 13735                           ;	Chosen strategy is simple_byte
 13736  003C3C  500D               	movf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,w,c
 13737  003C3E  0A00               	xorlw	0	; case 0
 13738  003C40  B4D8               	btfsc	status,2,c
 13739  003C42  EF25  F01E         	goto	i2l9990
 13740  003C46  EF08  F01E         	goto	i2l7840
 13741  003C4A                     i2l9990:
 13742                           
 13743                           ; Switch size 1, requested type "simple"
 13744                           ; Number of cases is 2, Range of values is 2 to 3
 13745                           ; switch strategies available:
 13746                           ; Name         Instructions Cycles
 13747                           ; simple_byte            7     4 (average)
 13748                           ;	Chosen strategy is simple_byte
 13749  003C4A  500C               	movf	??i2_I2C_DO_ADDRESS_NACK^0,w,c
 13750  003C4C  0A02               	xorlw	2	; case 2
 13751  003C4E  B4D8               	btfsc	status,2,c
 13752  003C50  EF04  F01E         	goto	i2l7836
 13753  003C54  0A01               	xorlw	1	; case 3
 13754  003C56  B4D8               	btfsc	status,2,c
 13755  003C58  EF04  F01E         	goto	i2l7836
 13756  003C5C  EF08  F01E         	goto	i2l7840
 13757  003C60                     i2l882:
 13758  003C60  0012               	return		;funcret
 13759  003C62                     __end_ofi2_I2C_DO_ADDRESS_NACK:
 13760                           	callstack 0
 13761                           
 13762 ;; *************** function i2_I2C_DO_RESET *****************
 13763 ;; Defined at:
 13764 ;;		line 452 in file "mcc_generated_files/i2c_master.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      enum E2863
 13771 ;; Registers used:
 13772 ;;		wreg, status,2
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used: 1
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text113
 13791  0046BC                     __ptext113:
 13792                           	callstack 0
 13793  0046BC                     i2_I2C_DO_RESET:
 13794                           	callstack 11
 13795  0046BC                     
 13796                           ;mcc_generated_files/i2c_master.c: 454:     I2C_Status.busy = 0;
 13797  0046BC  0100               	movlb	0	; () banked
 13798  0046BE  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
 13799  0046C0                     
 13800                           ; BSR set to: 0
 13801                           ;mcc_generated_files/i2c_master.c: 455:     I2C_Status.error = I2C_NOERR;
 13802  0046C0  0E00               	movlw	0
 13803  0046C2  6FED               	movwf	(_I2C_Status+34)& (0+255),b
 13804  0046C4                     
 13805                           ; BSR set to: 0
 13806                           ;mcc_generated_files/i2c_master.c: 456:     return I2C_RESET;
 13807  0046C4  0E0E               	movlw	14
 13808  0046C6                     
 13809                           ; BSR set to: 0
 13810  0046C6  0012               	return		;funcret
 13811  0046C8                     __end_ofi2_I2C_DO_RESET:
 13812                           	callstack 0
 13813                           
 13814 ;; *************** function i2_I2C_DO_RX_NACK_RESTART *****************
 13815 ;; Defined at:
 13816 ;;		line 446 in file "mcc_generated_files/i2c_master.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  1    wreg      enum E2863
 13823 ;; Registers used:
 13824 ;;		wreg, cstack
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;Total ram usage:        0 bytes
 13835 ;; Hardware stack levels used: 1
 13836 ;; Hardware stack levels required when called: 1
 13837 ;; This function calls:
 13838 ;;		i2_I2C_MasterSendNack
 13839 ;; This function is called by:
 13840 ;;		i2_I2C_DO_RX
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           
 13844                           	psect	text114
 13845  0046F8                     __ptext114:
 13846                           	callstack 0
 13847  0046F8                     i2_I2C_DO_RX_NACK_RESTART:
 13848                           	callstack 10
 13849  0046F8                     
 13850                           ;mcc_generated_files/i2c_master.c: 448:     I2C_MasterSendNack();
 13851  0046F8  ECA8  F023         	call	i2_I2C_MasterSendNack	;wreg free
 13852  0046FC                     
 13853                           ;mcc_generated_files/i2c_master.c: 449:     return I2C_SEND_RESTART;
 13854  0046FC  0E09               	movlw	9
 13855  0046FE  0012               	return		;funcret
 13856  004700                     __end_ofi2_I2C_DO_RX_NACK_RESTART:
 13857                           	callstack 0
 13858                           
 13859 ;; *************** function i2_I2C_DO_RX_NACK_STOP *****************
 13860 ;; Defined at:
 13861 ;;		line 440 in file "mcc_generated_files/i2c_master.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;		None
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;		None
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  1    wreg      enum E2863
 13868 ;; Registers used:
 13869 ;;		wreg, cstack
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13879 ;;Total ram usage:        0 bytes
 13880 ;; Hardware stack levels used: 1
 13881 ;; Hardware stack levels required when called: 1
 13882 ;; This function calls:
 13883 ;;		i2_I2C_MasterSendNack
 13884 ;; This function is called by:
 13885 ;;		i2_I2C_DO_RX
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text115
 13890  004700                     __ptext115:
 13891                           	callstack 0
 13892  004700                     i2_I2C_DO_RX_NACK_STOP:
 13893                           	callstack 10
 13894  004700                     
 13895                           ;mcc_generated_files/i2c_master.c: 442:     I2C_MasterSendNack();
 13896  004700  ECA8  F023         	call	i2_I2C_MasterSendNack	;wreg free
 13897  004704                     
 13898                           ;mcc_generated_files/i2c_master.c: 443:     return I2C_SEND_STOP;
 13899  004704  0E0A               	movlw	10
 13900  004706  0012               	return		;funcret
 13901  004708                     __end_ofi2_I2C_DO_RX_NACK_STOP:
 13902                           	callstack 0
 13903                           
 13904 ;; *************** function i2_I2C_DO_RX_ACK *****************
 13905 ;; Defined at:
 13906 ;;		line 433 in file "mcc_generated_files/i2c_master.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;		None
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      enum E2863
 13913 ;; Registers used:
 13914 ;;		wreg, cstack
 13915 ;; Tracked objects:
 13916 ;;		On entry : 0/0
 13917 ;;		On exit  : 0/0
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;Total ram usage:        0 bytes
 13925 ;; Hardware stack levels used: 1
 13926 ;; Hardware stack levels required when called: 1
 13927 ;; This function calls:
 13928 ;;		i2_I2C_MasterSendAck
 13929 ;; This function is called by:
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text116
 13934  004708                     __ptext116:
 13935                           	callstack 0
 13936  004708                     i2_I2C_DO_RX_ACK:
 13937                           	callstack 10
 13938  004708                     
 13939                           ;mcc_generated_files/i2c_master.c: 435:     I2C_MasterSendAck();
 13940  004708  ECA5  F023         	call	i2_I2C_MasterSendAck	;wreg free
 13941  00470C                     
 13942                           ;mcc_generated_files/i2c_master.c: 436:     return I2C_RCEN;
 13943  00470C  0E05               	movlw	5
 13944  00470E  0012               	return		;funcret
 13945  004710                     __end_ofi2_I2C_DO_RX_ACK:
 13946                           	callstack 0
 13947                           
 13948 ;; *************** function i2_I2C_DO_SEND_STOP *****************
 13949 ;; Defined at:
 13950 ;;		line 427 in file "mcc_generated_files/i2c_master.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;		None
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      enum E2863
 13957 ;; Registers used:
 13958 ;;		wreg, cstack
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13968 ;;Total ram usage:        0 bytes
 13969 ;; Hardware stack levels used: 1
 13970 ;; Hardware stack levels required when called: 1
 13971 ;; This function calls:
 13972 ;;		i2_I2C_MasterStop
 13973 ;; This function is called by:
 13974 ;;		i2_I2C_DO_TX
 13975 ;;		i2_I2C_DO_TX_EMPTY
 13976 ;;		i2_I2C_DO_ADDRESS_NACK
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           	psect	text117
 13981  004710                     __ptext117:
 13982                           	callstack 0
 13983  004710                     i2_I2C_DO_SEND_STOP:
 13984                           	callstack 9
 13985  004710                     
 13986                           ;mcc_generated_files/i2c_master.c: 429:     I2C_MasterStop();
 13987  004710  ECC7  F023         	call	i2_I2C_MasterStop	;wreg free
 13988  004714                     
 13989                           ;mcc_generated_files/i2c_master.c: 430:     return I2C_IDLE;
 13990  004714  0E00               	movlw	0
 13991  004716  0012               	return		;funcret
 13992  004718                     __end_ofi2_I2C_DO_SEND_STOP:
 13993                           	callstack 0
 13994                           
 13995 ;; *************** function i2_I2C_DO_SEND_RESTART *****************
 13996 ;; Defined at:
 13997 ;;		line 421 in file "mcc_generated_files/i2c_master.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;		None
 14000 ;; Auto vars:     Size  Location     Type
 14001 ;;		None
 14002 ;; Return value:  Size  Location     Type
 14003 ;;                  1    wreg      enum E2863
 14004 ;; Registers used:
 14005 ;;		wreg, cstack
 14006 ;; Tracked objects:
 14007 ;;		On entry : 0/0
 14008 ;;		On exit  : 0/0
 14009 ;;		Unchanged: 0/0
 14010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14015 ;;Total ram usage:        0 bytes
 14016 ;; Hardware stack levels used: 1
 14017 ;; Hardware stack levels required when called: 1
 14018 ;; This function calls:
 14019 ;;		i2_I2C_MasterEnableRestart
 14020 ;; This function is called by:
 14021 ;;		i2_I2C_DO_TX_EMPTY
 14022 ;;		i2_I2C_DO_ADDRESS_NACK
 14023 ;; This function uses a non-reentrant model
 14024 ;;
 14025                           
 14026                           	psect	text118
 14027  004718                     __ptext118:
 14028                           	callstack 0
 14029  004718                     i2_I2C_DO_SEND_RESTART:
 14030                           	callstack 9
 14031  004718                     
 14032                           ;mcc_generated_files/i2c_master.c: 423:     I2C_MasterEnableRestart();
 14033  004718  ECC9  F023         	call	i2_I2C_MasterEnableRestart	;wreg free
 14034  00471C                     
 14035                           ;mcc_generated_files/i2c_master.c: 424:     return I2C_SEND_ADR_READ;
 14036  00471C  0E01               	movlw	1
 14037  00471E  0012               	return		;funcret
 14038  004720                     __end_ofi2_I2C_DO_SEND_RESTART:
 14039                           	callstack 0
 14040                           
 14041 ;; *************** function i2_I2C_DO_SEND_RESTART_WRITE *****************
 14042 ;; Defined at:
 14043 ;;		line 414 in file "mcc_generated_files/i2c_master.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;		None
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;		None
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      enum E2863
 14050 ;; Registers used:
 14051 ;;		wreg, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;Total ram usage:        0 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; Hardware stack levels required when called: 1
 14064 ;; This function calls:
 14065 ;;		i2_I2C_MasterEnableRestart
 14066 ;; This function is called by:
 14067 ;;		i2_I2C_DO_TX
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071                           	psect	text119
 14072  004720                     __ptext119:
 14073                           	callstack 0
 14074  004720                     i2_I2C_DO_SEND_RESTART_WRITE:
 14075                           	callstack 9
 14076  004720                     
 14077                           ;mcc_generated_files/i2c_master.c: 416:     I2C_MasterEnableRestart();
 14078  004720  ECC9  F023         	call	i2_I2C_MasterEnableRestart	;wreg free
 14079  004724                     
 14080                           ;mcc_generated_files/i2c_master.c: 417:     return I2C_SEND_ADR_WRITE;
 14081  004724  0E02               	movlw	2
 14082  004726  0012               	return		;funcret
 14083  004728                     __end_ofi2_I2C_DO_SEND_RESTART_WRITE:
 14084                           	callstack 0
 14085                           
 14086 ;; *************** function i2_I2C_DO_SEND_RESTART_READ *****************
 14087 ;; Defined at:
 14088 ;;		line 408 in file "mcc_generated_files/i2c_master.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;		None
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      enum E2863
 14095 ;; Registers used:
 14096 ;;		wreg, cstack
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used: 1
 14108 ;; Hardware stack levels required when called: 1
 14109 ;; This function calls:
 14110 ;;		i2_I2C_MasterEnableRestart
 14111 ;; This function is called by:
 14112 ;;		i2_I2C_DO_TX
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text120
 14117  004728                     __ptext120:
 14118                           	callstack 0
 14119  004728                     i2_I2C_DO_SEND_RESTART_READ:
 14120                           	callstack 9
 14121  004728                     
 14122                           ;mcc_generated_files/i2c_master.c: 410:     I2C_MasterEnableRestart();
 14123  004728  ECC9  F023         	call	i2_I2C_MasterEnableRestart	;wreg free
 14124  00472C                     
 14125                           ;mcc_generated_files/i2c_master.c: 411:     return I2C_SEND_ADR_READ;
 14126  00472C  0E01               	movlw	1
 14127  00472E  0012               	return		;funcret
 14128  004730                     __end_ofi2_I2C_DO_SEND_RESTART_READ:
 14129                           	callstack 0
 14130                           
 14131 ;; *************** function i2_I2C_DO_RCEN *****************
 14132 ;; Defined at:
 14133 ;;		line 360 in file "mcc_generated_files/i2c_master.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;		None
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;		None
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      enum E2863
 14140 ;; Registers used:
 14141 ;;		wreg, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used: 1
 14153 ;; Hardware stack levels required when called: 1
 14154 ;; This function calls:
 14155 ;;		i2_I2C_MasterStartRx
 14156 ;; This function is called by:
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text121
 14161  0046C8                     __ptext121:
 14162                           	callstack 0
 14163  0046C8                     i2_I2C_DO_RCEN:
 14164                           	callstack 10
 14165  0046C8                     
 14166                           ;mcc_generated_files/i2c_master.c: 362:     I2C_Status.addressNackCheck = 0;
 14167  0046C8  0100               	movlb	0	; () banked
 14168  0046CA  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
 14169  0046CC                     
 14170                           ; BSR set to: 0
 14171                           ;mcc_generated_files/i2c_master.c: 363:     I2C_MasterStartRx();
 14172  0046CC  ECC1  F023         	call	i2_I2C_MasterStartRx	;wreg free
 14173  0046D0                     
 14174                           ;mcc_generated_files/i2c_master.c: 364:     return I2C_RX;
 14175  0046D0  0E04               	movlw	4
 14176  0046D2  0012               	return		;funcret
 14177  0046D4                     __end_ofi2_I2C_DO_RCEN:
 14178                           	callstack 0
 14179                           
 14180 ;; *************** function i2_I2C_DO_RX *****************
 14181 ;; Defined at:
 14182 ;;		line 336 in file "mcc_generated_files/i2c_master.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;		None
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;		None
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      enum E2863
 14189 ;; Registers used:
 14190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14200 ;;Total ram usage:        2 bytes
 14201 ;; Hardware stack levels used: 1
 14202 ;; Hardware stack levels required when called: 3
 14203 ;; This function calls:
 14204 ;;		Absolute function
 14205 ;;		i2_I2C_CallbackReturnReset
 14206 ;;		i2_I2C_CallbackReturnStop
 14207 ;;		i2_I2C_DO_RX_NACK_RESTART
 14208 ;;		i2_I2C_DO_RX_NACK_STOP
 14209 ;;		i2_I2C_MasterGetRxData
 14210 ;;		i2_I2C_MasterSendAck
 14211 ;;		i2_rd1RegCompleteHandler
 14212 ;;		i2_rd2RegCompleteHandler
 14213 ;;		i2_rdBlkRegCompleteHandler
 14214 ;;		i2_wr1RegCompleteHandler
 14215 ;;		i2_wr2RegCompleteHandler
 14216 ;; This function is called by:
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text122
 14221  002F52                     __ptext122:
 14222                           	callstack 0
 14223  002F52                     i2_I2C_DO_RX:
 14224                           	callstack 8
 14225  002F52                     
 14226                           ;mcc_generated_files/i2c_master.c: 338:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 14227  002F52  ECBF  F023         	call	i2_I2C_MasterGetRxData	;wreg free
 14228  002F56  C0E8  FFD9         	movff	_I2C_Status+29,fsr2l
 14229  002F5A  C0E9  FFDA         	movff	_I2C_Status+30,fsr2h
 14230  002F5E  6EDF               	movwf	indf2,c
 14231  002F60  0100               	movlb	0	; () banked
 14232  002F62  4BE8               	infsnz	(_I2C_Status+29)& (0+255),f,b
 14233  002F64  2BE9               	incf	(_I2C_Status+30)& (0+255),f,b
 14234  002F66                     
 14235                           ; BSR set to: 0
 14236                           ;mcc_generated_files/i2c_master.c: 339:     if(--I2C_Status.data_length)
 14237  002F66  07EA               	decf	(_I2C_Status+31)& (0+255),f,b
 14238  002F68  A0D8               	btfss	status,0,c
 14239  002F6A  07EB               	decf	(_I2C_Status+32)& (0+255),f,b
 14240  002F6C  51EA               	movf	(_I2C_Status+31)& (0+255),w,b
 14241  002F6E  11EB               	iorwf	(_I2C_Status+32)& (0+255),w,b
 14242  002F70  B4D8               	btfsc	status,2,c
 14243  002F72  EFBD  F017         	goto	i2u489_41
 14244  002F76  EFBF  F017         	goto	i2u489_40
 14245  002F7A                     i2u489_41:
 14246  002F7A  EFC4  F017         	goto	i2l819
 14247  002F7E                     i2u489_40:
 14248  002F7E                     
 14249                           ; BSR set to: 0
 14250                           ;mcc_generated_files/i2c_master.c: 340:     {;mcc_generated_files/i2c_master.c: 341:    
      +                               I2C_MasterSendAck();
 14251  002F7E  ECA5  F023         	call	i2_I2C_MasterSendAck	;wreg free
 14252  002F82                     
 14253                           ;mcc_generated_files/i2c_master.c: 342:         return I2C_RCEN;
 14254  002F82  0E05               	movlw	5
 14255  002F84  EFFB  F017         	goto	i2l820
 14256  002F88                     i2l819:
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;mcc_generated_files/i2c_master.c: 345:     {;mcc_generated_files/i2c_master.c: 346:    
      +                               I2C_Status.bufferFree = 1;
 14260  002F88  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
 14261                           
 14262                           ;mcc_generated_files/i2c_master.c: 347:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14263  002F8A  EFCF  F017         	goto	i2l7796
 14264  002F8E                     i2l7786:
 14265                           
 14266                           ;mcc_generated_files/i2c_master.c: 351:                 return I2C_DO_RX_NACK_RESTART();
 14267  002F8E  EC7C  F023         	call	i2_I2C_DO_RX_NACK_RESTART	;wreg free
 14268  002F92  EFFB  F017         	goto	i2l820
 14269  002F96                     i2l7790:
 14270                           
 14271                           ;mcc_generated_files/i2c_master.c: 355:                 return I2C_DO_RX_NACK_STOP();
 14272  002F96  EC80  F023         	call	i2_I2C_DO_RX_NACK_STOP	;wreg free
 14273  002F9A  EFFB  F017         	goto	i2l820
 14274  002F9E                     i2l7796:
 14275                           
 14276                           ; BSR set to: 0
 14277  002F9E  C0D7  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 14278  002FA2  C0D8  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 14279  002FA6  D802               	call	i2u490_48
 14280  002FA8  EFDF  F017         	goto	i2u490_49
 14281  002FAC                     i2u490_48:
 14282  002FAC  0005               	push	
 14283  002FAE  6EFA               	movwf	pclath,c
 14284  002FB0  51CB               	movf	_I2C_Status& (0+255),w,b
 14285  002FB2  6EFD               	movwf	tosl,c
 14286  002FB4  51CC               	movf	(_I2C_Status+1)& (0+255),w,b
 14287  002FB6  6EFE               	movwf	tosh,c
 14288  002FB8  6AFF               	clrf	tosu,c
 14289  002FBA  50FA               	movf	pclath,w,c
 14290  002FBC  0012               	return		;indir
 14291  002FBE                     i2u490_49:
 14292  002FBE  6E0C               	movwf	??i2_I2C_DO_RX^0,c
 14293  002FC0  6A0D               	clrf	(??i2_I2C_DO_RX+1)^0,c
 14294                           
 14295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14296                           ; Switch size 1, requested type "simple"
 14297                           ; Number of cases is 1, Range of values is 0 to 0
 14298                           ; switch strategies available:
 14299                           ; Name         Instructions Cycles
 14300                           ; simple_byte            4     3 (average)
 14301                           ;	Chosen strategy is simple_byte
 14302  002FC2  500D               	movf	(??i2_I2C_DO_RX+1)^0,w,c
 14303  002FC4  0A00               	xorlw	0	; case 0
 14304  002FC6  B4D8               	btfsc	status,2,c
 14305  002FC8  EFE8  F017         	goto	i2l9992
 14306  002FCC  EFCB  F017         	goto	i2l7790
 14307  002FD0                     i2l9992:
 14308                           
 14309                           ; Switch size 1, requested type "simple"
 14310                           ; Number of cases is 4, Range of values is 1 to 4
 14311                           ; switch strategies available:
 14312                           ; Name         Instructions Cycles
 14313                           ; simple_byte           13     7 (average)
 14314                           ;	Chosen strategy is simple_byte
 14315  002FD0  500C               	movf	??i2_I2C_DO_RX^0,w,c
 14316  002FD2  0A01               	xorlw	1	; case 1
 14317  002FD4  B4D8               	btfsc	status,2,c
 14318  002FD6  EFCB  F017         	goto	i2l7790
 14319  002FDA  0A03               	xorlw	3	; case 2
 14320  002FDC  B4D8               	btfsc	status,2,c
 14321  002FDE  EFC7  F017         	goto	i2l7786
 14322  002FE2  0A01               	xorlw	1	; case 3
 14323  002FE4  B4D8               	btfsc	status,2,c
 14324  002FE6  EFC7  F017         	goto	i2l7786
 14325  002FEA  0A07               	xorlw	7	; case 4
 14326  002FEC  B4D8               	btfsc	status,2,c
 14327  002FEE  EFCB  F017         	goto	i2l7790
 14328  002FF2  EFCB  F017         	goto	i2l7790
 14329  002FF6                     i2l820:
 14330  002FF6  0012               	return		;funcret
 14331  002FF8                     __end_ofi2_I2C_DO_RX:
 14332                           	callstack 0
 14333                           
 14334 ;; *************** function i2_I2C_DO_TX *****************
 14335 ;; Defined at:
 14336 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 14337 ;; Parameters:    Size  Location     Type
 14338 ;;		None
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  1    wreg      enum E2863
 14343 ;; Registers used:
 14344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14354 ;;Total ram usage:        2 bytes
 14355 ;; Hardware stack levels used: 1
 14356 ;; Hardware stack levels required when called: 3
 14357 ;; This function calls:
 14358 ;;		Absolute function
 14359 ;;		i2_I2C_CallbackReturnReset
 14360 ;;		i2_I2C_CallbackReturnStop
 14361 ;;		i2_I2C_DO_SEND_RESTART_READ
 14362 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 14363 ;;		i2_I2C_DO_SEND_STOP
 14364 ;;		i2_I2C_MasterIsNack
 14365 ;;		i2_I2C_MasterSendTxData
 14366 ;;		i2_rd1RegCompleteHandler
 14367 ;;		i2_rd2RegCompleteHandler
 14368 ;;		i2_rdBlkRegCompleteHandler
 14369 ;;		i2_wr1RegCompleteHandler
 14370 ;;		i2_wr2RegCompleteHandler
 14371 ;; This function is called by:
 14372 ;; This function uses a non-reentrant model
 14373 ;;
 14374                           
 14375                           	psect	text123
 14376  002B32                     __ptext123:
 14377                           	callstack 0
 14378  002B32                     i2_I2C_DO_TX:
 14379                           	callstack 8
 14380  002B32                     
 14381                           ;mcc_generated_files/i2c_master.c: 314:     if(I2C_MasterIsNack())
 14382  002B32  ECE1  F022         	call	i2_I2C_MasterIsNack	;wreg free
 14383  002B36  0900               	iorlw	0
 14384  002B38  B4D8               	btfsc	status,2,c
 14385  002B3A  EFA1  F015         	goto	i2u486_41
 14386  002B3E  EFA3  F015         	goto	i2u486_40
 14387  002B42                     i2u486_41:
 14388  002B42  EFDE  F015         	goto	i2l803
 14389  002B46                     i2u486_40:
 14390  002B46  EFB1  F015         	goto	i2l7756
 14391  002B4A                     i2l7742:
 14392                           
 14393                           ;mcc_generated_files/i2c_master.c: 319:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 14394  002B4A  EC94  F023         	call	i2_I2C_DO_SEND_RESTART_READ	;wreg free
 14395  002B4E  EFFA  F015         	goto	i2l806
 14396  002B52                     i2l7746:
 14397                           
 14398                           ;mcc_generated_files/i2c_master.c: 321:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 14399  002B52  EC90  F023         	call	i2_I2C_DO_SEND_RESTART_WRITE	;wreg free
 14400  002B56  EFFA  F015         	goto	i2l806
 14401  002B5A                     i2l7750:
 14402                           
 14403                           ;mcc_generated_files/i2c_master.c: 325:                 return I2C_DO_SEND_STOP();
 14404  002B5A  EC88  F023         	call	i2_I2C_DO_SEND_STOP	;wreg free
 14405  002B5E  EFFA  F015         	goto	i2l806
 14406  002B62                     i2l7756:
 14407  002B62  C0DD  F00A         	movff	_I2C_Status+18,i2rd1RegCompleteHandler@ptr
 14408  002B66  C0DE  F00B         	movff	_I2C_Status+19,i2rd1RegCompleteHandler@ptr+1
 14409  002B6A  D802               	call	i2u487_48
 14410  002B6C  EFC2  F015         	goto	i2u487_49
 14411  002B70                     i2u487_48:
 14412  002B70  0005               	push	
 14413  002B72  6EFA               	movwf	pclath,c
 14414  002B74  0100               	movlb	0	; () banked
 14415  002B76  51D1               	movf	(_I2C_Status+6)& (0+255),w,b
 14416  002B78  6EFD               	movwf	tosl,c
 14417  002B7A  51D2               	movf	(_I2C_Status+7)& (0+255),w,b
 14418  002B7C  6EFE               	movwf	tosh,c
 14419  002B7E  6AFF               	clrf	tosu,c
 14420  002B80  50FA               	movf	pclath,w,c
 14421  002B82  0012               	return		;indir
 14422  002B84                     i2u487_49:
 14423  002B84  6E0C               	movwf	??i2_I2C_DO_TX^0,c
 14424  002B86  6A0D               	clrf	(??i2_I2C_DO_TX+1)^0,c
 14425                           
 14426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14427                           ; Switch size 1, requested type "simple"
 14428                           ; Number of cases is 1, Range of values is 0 to 0
 14429                           ; switch strategies available:
 14430                           ; Name         Instructions Cycles
 14431                           ; simple_byte            4     3 (average)
 14432                           ;	Chosen strategy is simple_byte
 14433  002B88  500D               	movf	(??i2_I2C_DO_TX+1)^0,w,c
 14434  002B8A  0A00               	xorlw	0	; case 0
 14435  002B8C  B4D8               	btfsc	status,2,c
 14436  002B8E  EFCB  F015         	goto	i2l9994
 14437  002B92  EFAD  F015         	goto	i2l7750
 14438  002B96                     i2l9994:
 14439                           
 14440                           ; Switch size 1, requested type "simple"
 14441                           ; Number of cases is 4, Range of values is 1 to 4
 14442                           ; switch strategies available:
 14443                           ; Name         Instructions Cycles
 14444                           ; simple_byte           13     7 (average)
 14445                           ;	Chosen strategy is simple_byte
 14446  002B96  500C               	movf	??i2_I2C_DO_TX^0,w,c
 14447  002B98  0A01               	xorlw	1	; case 1
 14448  002B9A  B4D8               	btfsc	status,2,c
 14449  002B9C  EFAD  F015         	goto	i2l7750
 14450  002BA0  0A03               	xorlw	3	; case 2
 14451  002BA2  B4D8               	btfsc	status,2,c
 14452  002BA4  EFA5  F015         	goto	i2l7742
 14453  002BA8  0A01               	xorlw	1	; case 3
 14454  002BAA  B4D8               	btfsc	status,2,c
 14455  002BAC  EFA9  F015         	goto	i2l7746
 14456  002BB0  0A07               	xorlw	7	; case 4
 14457  002BB2  B4D8               	btfsc	status,2,c
 14458  002BB4  EFAD  F015         	goto	i2l7750
 14459  002BB8  EFAD  F015         	goto	i2l7750
 14460  002BBC                     i2l803:
 14461                           
 14462                           ;mcc_generated_files/i2c_master.c: 329:     {;mcc_generated_files/i2c_master.c: 330:    
      +                               I2C_Status.addressNackCheck = 0;
 14463  002BBC  0100               	movlb	0	; () banked
 14464  002BBE  91EE               	bcf	(_I2C_Status+35)& (0+255),0,b
 14465  002BC0                     
 14466                           ; BSR set to: 0
 14467                           ;mcc_generated_files/i2c_master.c: 331:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 14468  002BC0  C0E8  FFD9         	movff	_I2C_Status+29,fsr2l
 14469  002BC4  C0E9  FFDA         	movff	_I2C_Status+30,fsr2h
 14470  002BC8  4BE8               	infsnz	(_I2C_Status+29)& (0+255),f,b
 14471  002BCA  2BE9               	incf	(_I2C_Status+30)& (0+255),f,b
 14472  002BCC  50DF               	movf	indf2,w,c
 14473  002BCE  EC98  F023         	call	i2_I2C_MasterSendTxData
 14474  002BD2                     
 14475                           ;mcc_generated_files/i2c_master.c: 332:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 14476  002BD2  0100               	movlb	0	; () banked
 14477  002BD4  07EA               	decf	(_I2C_Status+31)& (0+255),f,b
 14478  002BD6  A0D8               	btfss	status,0,c
 14479  002BD8  07EB               	decf	(_I2C_Status+32)& (0+255),f,b
 14480  002BDA  51EA               	movf	(_I2C_Status+31)& (0+255),w,b
 14481  002BDC  11EB               	iorwf	(_I2C_Status+32)& (0+255),w,b
 14482  002BDE  A4D8               	btfss	status,2,c
 14483  002BE0  EFF4  F015         	goto	i2u488_41
 14484  002BE4  EFF6  F015         	goto	i2u488_40
 14485  002BE8                     i2u488_41:
 14486  002BE8  EFF9  F015         	goto	i2l7764
 14487  002BEC                     i2u488_40:
 14488  002BEC                     
 14489                           ; BSR set to: 0
 14490  002BEC  0E06               	movlw	6
 14491  002BEE  EFFA  F015         	goto	i2l806
 14492  002BF2                     i2l7764:
 14493                           
 14494                           ; BSR set to: 0
 14495  002BF2  0E03               	movlw	3
 14496  002BF4                     i2l806:
 14497  002BF4  0012               	return		;funcret
 14498  002BF6                     __end_ofi2_I2C_DO_TX:
 14499                           	callstack 0
 14500                           
 14501 ;; *************** function i2_I2C_DO_SEND_ADR_WRITE *****************
 14502 ;; Defined at:
 14503 ;;		line 305 in file "mcc_generated_files/i2c_master.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;		None
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      enum E2863
 14510 ;; Registers used:
 14511 ;;		wreg, status,2, cstack
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14521 ;;Total ram usage:        0 bytes
 14522 ;; Hardware stack levels used: 1
 14523 ;; Hardware stack levels required when called: 1
 14524 ;; This function calls:
 14525 ;;		i2_I2C_MasterSendTxData
 14526 ;; This function is called by:
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530                           	psect	text124
 14531  0046AE                     __ptext124:
 14532                           	callstack 0
 14533  0046AE                     i2_I2C_DO_SEND_ADR_WRITE:
 14534                           	callstack 10
 14535  0046AE                     
 14536                           ;mcc_generated_files/i2c_master.c: 307:     I2C_Status.addressNackCheck = 1;
 14537  0046AE  0100               	movlb	0	; () banked
 14538  0046B0  81EE               	bsf	(_I2C_Status+35)& (0+255),0,b
 14539  0046B2                     
 14540                           ; BSR set to: 0
 14541                           ;mcc_generated_files/i2c_master.c: 308:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 14542  0046B2  51E7               	movf	(_I2C_Status+28)& (0+255),w,b
 14543  0046B4  EC98  F023         	call	i2_I2C_MasterSendTxData
 14544  0046B8                     
 14545                           ;mcc_generated_files/i2c_master.c: 309:     return I2C_TX;
 14546  0046B8  0E03               	movlw	3
 14547  0046BA  0012               	return		;funcret
 14548  0046BC                     __end_ofi2_I2C_DO_SEND_ADR_WRITE:
 14549                           	callstack 0
 14550                           
 14551 ;; *************** function i2_I2C_DO_SEND_ADR_READ *****************
 14552 ;; Defined at:
 14553 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;		None
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;		None
 14558 ;; Return value:  Size  Location     Type
 14559 ;;                  1    wreg      enum E2863
 14560 ;; Registers used:
 14561 ;;		wreg, status,2, status,0, cstack
 14562 ;; Tracked objects:
 14563 ;;		On entry : 0/0
 14564 ;;		On exit  : 0/0
 14565 ;;		Unchanged: 0/0
 14566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14571 ;;Total ram usage:        0 bytes
 14572 ;; Hardware stack levels used: 1
 14573 ;; Hardware stack levels required when called: 1
 14574 ;; This function calls:
 14575 ;;		i2_I2C_MasterSendTxData
 14576 ;; This function is called by:
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text125
 14581  004674                     __ptext125:
 14582                           	callstack 0
 14583  004674                     i2_I2C_DO_SEND_ADR_READ:
 14584                           	callstack 10
 14585  004674                     
 14586                           ;mcc_generated_files/i2c_master.c: 300:     I2C_Status.addressNackCheck = 1;
 14587  004674  0100               	movlb	0	; () banked
 14588  004676  81EE               	bsf	(_I2C_Status+35)& (0+255),0,b
 14589  004678                     
 14590                           ; BSR set to: 0
 14591                           ;mcc_generated_files/i2c_master.c: 301:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
 14592  004678  51E7               	movf	(_I2C_Status+28)& (0+255),w,b
 14593  00467A  0901               	iorlw	1
 14594  00467C  EC98  F023         	call	i2_I2C_MasterSendTxData
 14595  004680                     
 14596                           ;mcc_generated_files/i2c_master.c: 302:     return I2C_RCEN;
 14597  004680  0E05               	movlw	5
 14598  004682  0012               	return		;funcret
 14599  004684                     __end_ofi2_I2C_DO_SEND_ADR_READ:
 14600                           	callstack 0
 14601                           
 14602 ;; *************** function i2_I2C_DO_IDLE *****************
 14603 ;; Defined at:
 14604 ;;		line 291 in file "mcc_generated_files/i2c_master.c"
 14605 ;; Parameters:    Size  Location     Type
 14606 ;;		None
 14607 ;; Auto vars:     Size  Location     Type
 14608 ;;		None
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  1    wreg      enum E2863
 14611 ;; Registers used:
 14612 ;;		wreg, status,2
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14622 ;;Total ram usage:        0 bytes
 14623 ;; Hardware stack levels used: 1
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           	psect	text126
 14631  0046D4                     __ptext126:
 14632                           	callstack 0
 14633  0046D4                     i2_I2C_DO_IDLE:
 14634                           	callstack 11
 14635  0046D4                     
 14636                           ;mcc_generated_files/i2c_master.c: 293:     I2C_Status.busy = 0;
 14637  0046D4  0100               	movlb	0	; () banked
 14638  0046D6  93EE               	bcf	(_I2C_Status+35)& (0+255),1,b
 14639  0046D8                     
 14640                           ; BSR set to: 0
 14641                           ;mcc_generated_files/i2c_master.c: 294:     I2C_Status.error = I2C_NOERR;
 14642  0046D8  0E00               	movlw	0
 14643  0046DA  6FED               	movwf	(_I2C_Status+34)& (0+255),b
 14644  0046DC                     
 14645                           ; BSR set to: 0
 14646                           ;mcc_generated_files/i2c_master.c: 295:     return I2C_RESET;
 14647  0046DC  0E0E               	movlw	14
 14648  0046DE                     
 14649                           ; BSR set to: 0
 14650  0046DE  0012               	return		;funcret
 14651  0046E0                     __end_ofi2_I2C_DO_IDLE:
 14652                           	callstack 0
 14653                           
 14654 ;; *************** function i2_I2C_DO_TX_EMPTY *****************
 14655 ;; Defined at:
 14656 ;;		line 367 in file "mcc_generated_files/i2c_master.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;		None
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;		None
 14661 ;; Return value:  Size  Location     Type
 14662 ;;                  1    wreg      enum E2863
 14663 ;; Registers used:
 14664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14665 ;; Tracked objects:
 14666 ;;		On entry : 0/0
 14667 ;;		On exit  : 0/0
 14668 ;;		Unchanged: 0/0
 14669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14674 ;;Total ram usage:        2 bytes
 14675 ;; Hardware stack levels used: 1
 14676 ;; Hardware stack levels required when called: 3
 14677 ;; This function calls:
 14678 ;;		Absolute function
 14679 ;;		i2_I2C_CallbackReturnReset
 14680 ;;		i2_I2C_CallbackReturnStop
 14681 ;;		i2_I2C_DO_SEND_RESTART
 14682 ;;		i2_I2C_DO_SEND_STOP
 14683 ;;		i2_I2C_MasterSetIrq
 14684 ;;		i2_rd1RegCompleteHandler
 14685 ;;		i2_rd2RegCompleteHandler
 14686 ;;		i2_rdBlkRegCompleteHandler
 14687 ;;		i2_wr1RegCompleteHandler
 14688 ;;		i2_wr2RegCompleteHandler
 14689 ;; This function is called by:
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           	psect	text127
 14694  003540                     __ptext127:
 14695                           	callstack 0
 14696  003540                     i2_I2C_DO_TX_EMPTY:
 14697                           	callstack 8
 14698  003540                     
 14699                           ;mcc_generated_files/i2c_master.c: 369:     I2C_Status.bufferFree = 1;
 14700  003540  0100               	movlb	0	; () banked
 14701  003542  87EE               	bsf	(_I2C_Status+35)& (0+255),3,b
 14702                           
 14703                           ;mcc_generated_files/i2c_master.c: 370:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14704  003544  EFB1  F01A         	goto	i2l7820
 14705  003548                     i2l7804:
 14706                           
 14707                           ;mcc_generated_files/i2c_master.c: 374:             return I2C_DO_SEND_RESTART();
 14708  003548  EC8C  F023         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 14709  00354C  EFDD  F01A         	goto	i2l837
 14710  003550                     i2l7808:
 14711                           
 14712                           ;mcc_generated_files/i2c_master.c: 376:             I2C_MasterSetIrq();
 14713  003550  ECBD  F023         	call	i2_I2C_MasterSetIrq	;wreg free
 14714  003554                     
 14715                           ;mcc_generated_files/i2c_master.c: 377:             return I2C_TX;
 14716  003554  0E03               	movlw	3
 14717  003556  EFDD  F01A         	goto	i2l837
 14718  00355A                     i2l7814:
 14719                           
 14720                           ;mcc_generated_files/i2c_master.c: 380:             return I2C_DO_SEND_STOP();
 14721  00355A  EC88  F023         	call	i2_I2C_DO_SEND_STOP	;wreg free
 14722  00355E  EFDD  F01A         	goto	i2l837
 14723  003562                     i2l7820:
 14724                           
 14725                           ; BSR set to: 0
 14726  003562  C0D7  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 14727  003566  C0D8  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 14728  00356A  D802               	call	i2u491_48
 14729  00356C  EFC1  F01A         	goto	i2u491_49
 14730  003570                     i2u491_48:
 14731  003570  0005               	push	
 14732  003572  6EFA               	movwf	pclath,c
 14733  003574  51CB               	movf	_I2C_Status& (0+255),w,b
 14734  003576  6EFD               	movwf	tosl,c
 14735  003578  51CC               	movf	(_I2C_Status+1)& (0+255),w,b
 14736  00357A  6EFE               	movwf	tosh,c
 14737  00357C  6AFF               	clrf	tosu,c
 14738  00357E  50FA               	movf	pclath,w,c
 14739  003580  0012               	return		;indir
 14740  003582                     i2u491_49:
 14741  003582  6E0C               	movwf	??i2_I2C_DO_TX_EMPTY^0,c
 14742  003584  6A0D               	clrf	(??i2_I2C_DO_TX_EMPTY+1)^0,c
 14743                           
 14744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14745                           ; Switch size 1, requested type "simple"
 14746                           ; Number of cases is 1, Range of values is 0 to 0
 14747                           ; switch strategies available:
 14748                           ; Name         Instructions Cycles
 14749                           ; simple_byte            4     3 (average)
 14750                           ;	Chosen strategy is simple_byte
 14751  003586  500D               	movf	(??i2_I2C_DO_TX_EMPTY+1)^0,w,c
 14752  003588  0A00               	xorlw	0	; case 0
 14753  00358A  B4D8               	btfsc	status,2,c
 14754  00358C  EFCA  F01A         	goto	i2l9996
 14755  003590  EFAD  F01A         	goto	i2l7814
 14756  003594                     i2l9996:
 14757                           
 14758                           ; Switch size 1, requested type "simple"
 14759                           ; Number of cases is 4, Range of values is 1 to 4
 14760                           ; switch strategies available:
 14761                           ; Name         Instructions Cycles
 14762                           ; simple_byte           13     7 (average)
 14763                           ;	Chosen strategy is simple_byte
 14764  003594  500C               	movf	??i2_I2C_DO_TX_EMPTY^0,w,c
 14765  003596  0A01               	xorlw	1	; case 1
 14766  003598  B4D8               	btfsc	status,2,c
 14767  00359A  EFAD  F01A         	goto	i2l7814
 14768  00359E  0A03               	xorlw	3	; case 2
 14769  0035A0  B4D8               	btfsc	status,2,c
 14770  0035A2  EFA4  F01A         	goto	i2l7804
 14771  0035A6  0A01               	xorlw	1	; case 3
 14772  0035A8  B4D8               	btfsc	status,2,c
 14773  0035AA  EFA4  F01A         	goto	i2l7804
 14774  0035AE  0A07               	xorlw	7	; case 4
 14775  0035B0  B4D8               	btfsc	status,2,c
 14776  0035B2  EFA8  F01A         	goto	i2l7808
 14777  0035B6  EFAD  F01A         	goto	i2l7814
 14778  0035BA                     i2l837:
 14779  0035BA  0012               	return		;funcret
 14780  0035BC                     __end_ofi2_I2C_DO_TX_EMPTY:
 14781                           	callstack 0
 14782                           
 14783 ;; *************** function i2_I2C_MasterSetIrq *****************
 14784 ;; Defined at:
 14785 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;		None
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;		None
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  1    wreg      void 
 14792 ;; Registers used:
 14793 ;;		None
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;Total ram usage:        0 bytes
 14804 ;; Hardware stack levels used: 1
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		i2_I2C_DO_TX_EMPTY
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text128
 14813  00477A                     __ptext128:
 14814                           	callstack 0
 14815  00477A                     i2_I2C_MasterSetIrq:
 14816                           	callstack 10
 14817  00477A                     
 14818                           ;mcc_generated_files/i2c_master.c: 605:     PIR1bits.SSPIF = 1;
 14819  00477A  869E               	bsf	158,3,c	;volatile
 14820  00477C  0012               	return		;funcret
 14821  00477E                     __end_ofi2_I2C_MasterSetIrq:
 14822                           	callstack 0
 14823                           
 14824 ;; *************** function i2_I2C_MasterIsNack *****************
 14825 ;; Defined at:
 14826 ;;		line 556 in file "mcc_generated_files/i2c_master.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      _Bool 
 14833 ;; Registers used:
 14834 ;;		wreg
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14844 ;;Total ram usage:        0 bytes
 14845 ;; Hardware stack levels used: 1
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		i2_I2C_MasterFsm
 14850 ;;		i2_I2C_DO_TX
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text129
 14855  0045C2                     __ptext129:
 14856                           	callstack 0
 14857  0045C2                     i2_I2C_MasterIsNack:
 14858                           	callstack 11
 14859  0045C2                     
 14860                           ;mcc_generated_files/i2c_master.c: 558:     return SSPCON2bits.ACKSTAT;
 14861  0045C2  BCC5               	btfsc	197,6,c	;volatile
 14862  0045C4  EFE6  F022         	goto	i2u480_41
 14863  0045C8  EFE9  F022         	goto	i2u480_40
 14864  0045CC                     i2u480_41:
 14865  0045CC  0E01               	movlw	1
 14866  0045CE  EFEA  F022         	goto	i2u480_46
 14867  0045D2                     i2u480_40:
 14868  0045D2  0E00               	movlw	0
 14869  0045D4                     i2u480_46:
 14870  0045D4  0012               	return		;funcret
 14871  0045D6                     __end_ofi2_I2C_MasterIsNack:
 14872                           	callstack 0
 14873                           
 14874 ;; *************** function i2_I2C_MasterSendTxData *****************
 14875 ;; Defined at:
 14876 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  data            1    wreg     unsigned char 
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;  data            1    0[COMRAM] unsigned char 
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      void 
 14883 ;; Registers used:
 14884 ;;		wreg
 14885 ;; Tracked objects:
 14886 ;;		On entry : 0/0
 14887 ;;		On exit  : 0/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14894 ;;Total ram usage:        1 bytes
 14895 ;; Hardware stack levels used: 1
 14896 ;; This function calls:
 14897 ;;		Nothing
 14898 ;; This function is called by:
 14899 ;;		i2_I2C_DO_SEND_ADR_READ
 14900 ;;		i2_I2C_DO_SEND_ADR_WRITE
 14901 ;;		i2_I2C_DO_TX
 14902 ;; This function uses a non-reentrant model
 14903 ;;
 14904                           
 14905                           	psect	text130
 14906  004730                     __ptext130:
 14907                           	callstack 0
 14908  004730                     i2_I2C_MasterSendTxData:
 14909                           	callstack 10
 14910                           
 14911                           ;incstack = 0
 14912                           ;i2I2C_MasterSendTxData@data stored from wreg
 14913  004730  6E01               	movwf	i2I2C_MasterSendTxData@data^0,c
 14914  004732                     
 14915                           ;mcc_generated_files/i2c_master.c: 526: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_
      +                          master.c: 528:     SSPBUF = data;
 14916  004732  C001  FFC9         	movff	i2I2C_MasterSendTxData@data,4041	;volatile
 14917  004736  0012               	return		;funcret
 14918  004738                     __end_ofi2_I2C_MasterSendTxData:
 14919                           	callstack 0
 14920                           
 14921 ;; *************** function i2_I2C_MasterSendAck *****************
 14922 ;; Defined at:
 14923 ;;		line 561 in file "mcc_generated_files/i2c_master.c"
 14924 ;; Parameters:    Size  Location     Type
 14925 ;;		None
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;		None
 14928 ;; Return value:  Size  Location     Type
 14929 ;;                  1    wreg      void 
 14930 ;; Registers used:
 14931 ;;		None
 14932 ;; Tracked objects:
 14933 ;;		On entry : 0/0
 14934 ;;		On exit  : 0/0
 14935 ;;		Unchanged: 0/0
 14936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14941 ;;Total ram usage:        0 bytes
 14942 ;; Hardware stack levels used: 1
 14943 ;; This function calls:
 14944 ;;		Nothing
 14945 ;; This function is called by:
 14946 ;;		i2_I2C_DO_RX
 14947 ;;		i2_I2C_DO_RX_ACK
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text131
 14952  00474A                     __ptext131:
 14953                           	callstack 0
 14954  00474A                     i2_I2C_MasterSendAck:
 14955                           	callstack 10
 14956  00474A                     
 14957                           ;mcc_generated_files/i2c_master.c: 563:     SSPCON2bits.ACKDT = 0;
 14958  00474A  9AC5               	bcf	197,5,c	;volatile
 14959                           
 14960                           ;mcc_generated_files/i2c_master.c: 564:     SSPCON2bits.ACKEN = 1;
 14961  00474C  88C5               	bsf	197,4,c	;volatile
 14962  00474E  0012               	return		;funcret
 14963  004750                     __end_ofi2_I2C_MasterSendAck:
 14964                           	callstack 0
 14965                           
 14966 ;; *************** function i2_I2C_MasterGetRxData *****************
 14967 ;; Defined at:
 14968 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      unsigned char 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;Total ram usage:        0 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; This function calls:
 14989 ;;		Nothing
 14990 ;; This function is called by:
 14991 ;;		i2_I2C_DO_RX
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text132
 14996  00477E                     __ptext132:
 14997                           	callstack 0
 14998  00477E                     i2_I2C_MasterGetRxData:
 14999                           	callstack 10
 15000  00477E                     
 15001                           ;mcc_generated_files/i2c_master.c: 523:     return SSPBUF;
 15002  00477E  50C9               	movf	201,w,c	;volatile
 15003  004780  0012               	return		;funcret
 15004  004782                     __end_ofi2_I2C_MasterGetRxData:
 15005                           	callstack 0
 15006                           
 15007 ;; *************** function i2_I2C_MasterSendNack *****************
 15008 ;; Defined at:
 15009 ;;		line 567 in file "mcc_generated_files/i2c_master.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;		None
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;		None
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		None
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15027 ;;Total ram usage:        0 bytes
 15028 ;; Hardware stack levels used: 1
 15029 ;; This function calls:
 15030 ;;		Nothing
 15031 ;; This function is called by:
 15032 ;;		i2_I2C_DO_RX_NACK_STOP
 15033 ;;		i2_I2C_DO_RX_NACK_RESTART
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           	psect	text133
 15038  004750                     __ptext133:
 15039                           	callstack 0
 15040  004750                     i2_I2C_MasterSendNack:
 15041                           	callstack 10
 15042  004750                     
 15043                           ;mcc_generated_files/i2c_master.c: 569:     SSPCON2bits.ACKDT = 1;
 15044  004750  8AC5               	bsf	197,5,c	;volatile
 15045                           
 15046                           ;mcc_generated_files/i2c_master.c: 570:     SSPCON2bits.ACKEN = 1;
 15047  004752  88C5               	bsf	197,4,c	;volatile
 15048  004754  0012               	return		;funcret
 15049  004756                     __end_ofi2_I2C_MasterSendNack:
 15050                           	callstack 0
 15051                           
 15052 ;; *************** function i2_I2C_MasterStartRx *****************
 15053 ;; Defined at:
 15054 ;;		line 541 in file "mcc_generated_files/i2c_master.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;		None
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		None
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used: 1
 15074 ;; This function calls:
 15075 ;;		Nothing
 15076 ;; This function is called by:
 15077 ;;		i2_I2C_DO_RCEN
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           	psect	text134
 15082  004782                     __ptext134:
 15083                           	callstack 0
 15084  004782                     i2_I2C_MasterStartRx:
 15085                           	callstack 10
 15086  004782                     
 15087                           ;mcc_generated_files/i2c_master.c: 543:     SSPCON2bits.RCEN = 1;
 15088  004782  86C5               	bsf	197,3,c	;volatile
 15089  004784  0012               	return		;funcret
 15090  004786                     __end_ofi2_I2C_MasterStartRx:
 15091                           	callstack 0
 15092                           
 15093 ;; *************** function i2_I2C_CallbackReturnReset *****************
 15094 ;; Defined at:
 15095 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  funPtr          2    9[COMRAM] PTR void 
 15098 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15099 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;		None
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  1    wreg      enum E360
 15104 ;; Registers used:
 15105 ;;		wreg
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15115 ;;Total ram usage:        2 bytes
 15116 ;; Hardware stack levels used: 1
 15117 ;; This function calls:
 15118 ;;		Nothing
 15119 ;; This function is called by:
 15120 ;;		i2_I2C_Open
 15121 ;;		i2_I2C_DO_TX
 15122 ;;		i2_I2C_DO_RX
 15123 ;;		i2_I2C_DO_TX_EMPTY
 15124 ;;		i2_I2C_DO_ADDRESS_NACK
 15125 ;;		_I2C_DO_TX
 15126 ;;		_I2C_DO_RX
 15127 ;;		_I2C_DO_TX_EMPTY
 15128 ;;		_I2C_DO_ADDRESS_NACK
 15129 ;;		_I2C_DO_RX_EMPTY
 15130 ;; This function uses a non-reentrant model
 15131 ;;
 15132                           
 15133                           	psect	text135
 15134  004786                     __ptext135:
 15135                           	callstack 0
 15136  004786                     i2_I2C_CallbackReturnReset:
 15137                           	callstack 10
 15138  004786                     
 15139                           ;mcc_generated_files/i2c_master.c: 483: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 484: {;mcc_generated_files/i2c_master.c: 485:  
      +                             return I2C_RESET_LINK;
 15140  004786  0E05               	movlw	5
 15141  004788  0012               	return		;funcret
 15142  00478A                     __end_ofi2_I2C_CallbackReturnReset:
 15143                           	callstack 0
 15144                           
 15145 ;; *************** function i2_I2C_CallbackReturnStop *****************
 15146 ;; Defined at:
 15147 ;;		line 478 in file "mcc_generated_files/i2c_master.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;  funPtr          2    9[COMRAM] PTR void 
 15150 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15151 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;		None
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      enum E360
 15156 ;; Registers used:
 15157 ;;		wreg
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;Total ram usage:        2 bytes
 15168 ;; Hardware stack levels used: 1
 15169 ;; This function calls:
 15170 ;;		Nothing
 15171 ;; This function is called by:
 15172 ;;		i2_I2C_Open
 15173 ;;		i2_I2C_SetCallback
 15174 ;;		i2_I2C_DO_TX
 15175 ;;		i2_I2C_DO_RX
 15176 ;;		i2_I2C_DO_TX_EMPTY
 15177 ;;		i2_I2C_DO_ADDRESS_NACK
 15178 ;;		_I2C_DO_TX
 15179 ;;		_I2C_DO_RX
 15180 ;;		_I2C_DO_TX_EMPTY
 15181 ;;		_I2C_DO_ADDRESS_NACK
 15182 ;;		_I2C_DO_RX_EMPTY
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           	psect	text136
 15187  00478A                     __ptext136:
 15188                           	callstack 0
 15189  00478A                     i2_I2C_CallbackReturnStop:
 15190                           	callstack 10
 15191  00478A                     
 15192                           ;mcc_generated_files/i2c_master.c: 478: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 479: {;mcc_generated_files/i2c_master.c: 480:   
      +                            return I2C_STOP;
 15193  00478A  0E01               	movlw	1
 15194  00478C  0012               	return		;funcret
 15195  00478E                     __end_ofi2_I2C_CallbackReturnStop:
 15196                           	callstack 0
 15197                           
 15198 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 15199 ;; Defined at:
 15200 ;;		line 128 in file "mcc_generated_files/examples/i2c_master_example.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;  ptr             2    9[COMRAM] PTR void 
 15203 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15204 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;		None
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      enum E360
 15209 ;; Registers used:
 15210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used: 1
 15222 ;; Hardware stack levels required when called: 2
 15223 ;; This function calls:
 15224 ;;		i2_I2C_SetBuffer
 15225 ;;		i2_I2C_SetDataCompleteCallback
 15226 ;; This function is called by:
 15227 ;;		i2_I2C_DO_TX
 15228 ;;		i2_I2C_DO_RX
 15229 ;;		i2_I2C_DO_TX_EMPTY
 15230 ;;		i2_I2C_DO_ADDRESS_NACK
 15231 ;;		_I2C_DO_TX
 15232 ;;		_I2C_DO_RX
 15233 ;;		_I2C_DO_TX_EMPTY
 15234 ;;		_I2C_DO_ADDRESS_NACK
 15235 ;;		_I2C_DO_RX_EMPTY
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text137
 15240  003FDC                     __ptext137:
 15241                           	callstack 0
 15242  003FDC                     i2_rdBlkRegCompleteHandler:
 15243                           	callstack 8
 15244  003FDC                     
 15245                           ;mcc_generated_files/examples/i2c_master_example.c: 128: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 129: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 130:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 15246  003FDC  EE20 F002          	lfsr	2,2
 15247  003FE0  500A               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 15248  003FE2  26D9               	addwf	fsr2l,f,c
 15249  003FE4  500B               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 15250  003FE6  22DA               	addwfc	fsr2h,f,c
 15251  003FE8  CFDE F001          	movff	postinc2,i2I2C_SetBuffer@buffer
 15252  003FEC  CFDD F002          	movff	postdec2,i2I2C_SetBuffer@buffer+1
 15253  003FF0  C00A  FFD9         	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 15254  003FF4  C00B  FFDA         	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 15255  003FF8  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 15256  003FFC  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 15257  004000  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 15258  004004                     
 15259                           ;mcc_generated_files/examples/i2c_master_example.c: 131:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15260  004004  0E00               	movlw	0
 15261  004006  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 15262  004008  0E00               	movlw	0
 15263  00400A  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 15264  00400C  0E00               	movlw	0
 15265  00400E  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 15266  004010  0E00               	movlw	0
 15267  004012  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 15268  004014  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 15269  004018                     
 15270                           ;mcc_generated_files/examples/i2c_master_example.c: 132:     return I2C_RESTART_READ;
 15271  004018  0E02               	movlw	2
 15272  00401A  0012               	return		;funcret
 15273  00401C                     __end_ofi2_rdBlkRegCompleteHandler:
 15274                           	callstack 0
 15275                           
 15276 ;; *************** function i2_wr1RegCompleteHandler *****************
 15277 ;; Defined at:
 15278 ;;		line 114 in file "mcc_generated_files/examples/i2c_master_example.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  ptr             2    9[COMRAM] PTR void 
 15281 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15282 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      enum E360
 15287 ;; Registers used:
 15288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15298 ;;Total ram usage:        2 bytes
 15299 ;; Hardware stack levels used: 1
 15300 ;; Hardware stack levels required when called: 2
 15301 ;; This function calls:
 15302 ;;		i2_I2C_SetBuffer
 15303 ;;		i2_I2C_SetDataCompleteCallback
 15304 ;; This function is called by:
 15305 ;;		_I2C_Write1ByteRegister
 15306 ;;		i2_I2C_DO_TX
 15307 ;;		i2_I2C_DO_RX
 15308 ;;		i2_I2C_DO_TX_EMPTY
 15309 ;;		i2_I2C_DO_ADDRESS_NACK
 15310 ;;		_I2C_DO_TX
 15311 ;;		_I2C_DO_RX
 15312 ;;		_I2C_DO_TX_EMPTY
 15313 ;;		_I2C_DO_ADDRESS_NACK
 15314 ;;		_I2C_DO_RX_EMPTY
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text138
 15319  004280                     __ptext138:
 15320                           	callstack 0
 15321  004280                     i2_wr1RegCompleteHandler:
 15322                           	callstack 8
 15323  004280                     
 15324                           ;mcc_generated_files/examples/i2c_master_example.c: 114: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 115: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 116:     I2C_SetBuffer(ptr,1);
 15325  004280  C00A  F001         	movff	i2wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 15326  004284  C00B  F002         	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 15327  004288  0E00               	movlw	0
 15328  00428A  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 15329  00428C  0E01               	movlw	1
 15330  00428E  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 15331  004290  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 15332  004294                     
 15333                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15334  004294  0E00               	movlw	0
 15335  004296  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 15336  004298  0E00               	movlw	0
 15337  00429A  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 15338  00429C  0E00               	movlw	0
 15339  00429E  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 15340  0042A0  0E00               	movlw	0
 15341  0042A2  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 15342  0042A4  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 15343  0042A8                     
 15344                           ;mcc_generated_files/examples/i2c_master_example.c: 118:     return I2C_CONTINUE;
 15345  0042A8  0E04               	movlw	4
 15346  0042AA  0012               	return		;funcret
 15347  0042AC                     __end_ofi2_wr1RegCompleteHandler:
 15348                           	callstack 0
 15349                           
 15350 ;; *************** function i2_rd2RegCompleteHandler *****************
 15351 ;; Defined at:
 15352 ;;		line 107 in file "mcc_generated_files/examples/i2c_master_example.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;  ptr             2    9[COMRAM] PTR void 
 15355 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15356 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      enum E360
 15361 ;; Registers used:
 15362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;Total ram usage:        2 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; Hardware stack levels required when called: 2
 15375 ;; This function calls:
 15376 ;;		i2_I2C_SetBuffer
 15377 ;;		i2_I2C_SetDataCompleteCallback
 15378 ;; This function is called by:
 15379 ;;		i2_I2C_DO_TX
 15380 ;;		i2_I2C_DO_RX
 15381 ;;		i2_I2C_DO_TX_EMPTY
 15382 ;;		i2_I2C_DO_ADDRESS_NACK
 15383 ;;		_I2C_DO_TX
 15384 ;;		_I2C_DO_RX
 15385 ;;		_I2C_DO_TX_EMPTY
 15386 ;;		_I2C_DO_ADDRESS_NACK
 15387 ;;		_I2C_DO_RX_EMPTY
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           
 15391                           	psect	text139
 15392  0042AC                     __ptext139:
 15393                           	callstack 0
 15394  0042AC                     i2_rd2RegCompleteHandler:
 15395                           	callstack 8
 15396  0042AC                     
 15397                           ;mcc_generated_files/examples/i2c_master_example.c: 107: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 108: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 109:     I2C_SetBuffer(ptr,2);
 15398  0042AC  C00A  F001         	movff	i2rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 15399  0042B0  C00B  F002         	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 15400  0042B4  0E00               	movlw	0
 15401  0042B6  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 15402  0042B8  0E02               	movlw	2
 15403  0042BA  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 15404  0042BC  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 15405  0042C0                     
 15406                           ;mcc_generated_files/examples/i2c_master_example.c: 110:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15407  0042C0  0E00               	movlw	0
 15408  0042C2  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 15409  0042C4  0E00               	movlw	0
 15410  0042C6  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 15411  0042C8  0E00               	movlw	0
 15412  0042CA  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 15413  0042CC  0E00               	movlw	0
 15414  0042CE  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 15415  0042D0  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 15416  0042D4                     
 15417                           ;mcc_generated_files/examples/i2c_master_example.c: 111:     return I2C_RESTART_READ;
 15418  0042D4  0E02               	movlw	2
 15419  0042D6  0012               	return		;funcret
 15420  0042D8                     __end_ofi2_rd2RegCompleteHandler:
 15421                           	callstack 0
 15422                           
 15423 ;; *************** function i2_rd1RegCompleteHandler *****************
 15424 ;; Defined at:
 15425 ;;		line 100 in file "mcc_generated_files/examples/i2c_master_example.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  ptr             2    9[COMRAM] PTR void 
 15428 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 15429 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;		None
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  1    wreg      enum E360
 15434 ;; Registers used:
 15435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;Total ram usage:        2 bytes
 15446 ;; Hardware stack levels used: 1
 15447 ;; Hardware stack levels required when called: 2
 15448 ;; This function calls:
 15449 ;;		i2_I2C_SetBuffer
 15450 ;;		i2_I2C_SetDataCompleteCallback
 15451 ;; This function is called by:
 15452 ;;		i2_I2C_Read1ByteRegister
 15453 ;;		i2_I2C_DO_TX
 15454 ;;		i2_I2C_DO_RX
 15455 ;;		i2_I2C_DO_TX_EMPTY
 15456 ;;		i2_I2C_DO_ADDRESS_NACK
 15457 ;;		_I2C_DO_TX
 15458 ;;		_I2C_DO_RX
 15459 ;;		_I2C_DO_TX_EMPTY
 15460 ;;		_I2C_DO_ADDRESS_NACK
 15461 ;;		_I2C_DO_RX_EMPTY
 15462 ;; This function uses a non-reentrant model
 15463 ;;
 15464                           
 15465                           	psect	text140
 15466  0042D8                     __ptext140:
 15467                           	callstack 0
 15468  0042D8                     i2_rd1RegCompleteHandler:
 15469                           	callstack 8
 15470  0042D8                     
 15471                           ;mcc_generated_files/examples/i2c_master_example.c: 100: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 101: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 102:     I2C_SetBuffer(ptr,1);
 15472  0042D8  C00A  F001         	movff	i2rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 15473  0042DC  C00B  F002         	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 15474  0042E0  0E00               	movlw	0
 15475  0042E2  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 15476  0042E4  0E01               	movlw	1
 15477  0042E6  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 15478  0042E8  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 15479  0042EC                     
 15480                           ;mcc_generated_files/examples/i2c_master_example.c: 103:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15481  0042EC  0E00               	movlw	0
 15482  0042EE  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 15483  0042F0  0E00               	movlw	0
 15484  0042F2  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 15485  0042F4  0E00               	movlw	0
 15486  0042F6  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 15487  0042F8  0E00               	movlw	0
 15488  0042FA  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 15489  0042FC  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 15490  004300                     
 15491                           ;mcc_generated_files/examples/i2c_master_example.c: 104:     return I2C_RESTART_READ;
 15492  004300  0E02               	movlw	2
 15493  004302  0012               	return		;funcret
 15494  004304                     __end_ofi2_rd1RegCompleteHandler:
 15495                           	callstack 0
 15496                           
 15497 ;; *************** function i2_wr2RegCompleteHandler *****************
 15498 ;; Defined at:
 15499 ;;		line 121 in file "mcc_generated_files/examples/i2c_master_example.c"
 15500 ;; Parameters:    Size  Location     Type
 15501 ;;  ptr             2    9[COMRAM] PTR void 
 15502 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15503 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15504 ;; Auto vars:     Size  Location     Type
 15505 ;;		None
 15506 ;; Return value:  Size  Location     Type
 15507 ;;                  1    wreg      enum E360
 15508 ;; Registers used:
 15509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15510 ;; Tracked objects:
 15511 ;;		On entry : 0/0
 15512 ;;		On exit  : 0/0
 15513 ;;		Unchanged: 0/0
 15514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15519 ;;Total ram usage:        2 bytes
 15520 ;; Hardware stack levels used: 1
 15521 ;; Hardware stack levels required when called: 2
 15522 ;; This function calls:
 15523 ;;		i2_I2C_SetBuffer
 15524 ;;		i2_I2C_SetDataCompleteCallback
 15525 ;; This function is called by:
 15526 ;;		i2_I2C_DO_TX
 15527 ;;		i2_I2C_DO_RX
 15528 ;;		i2_I2C_DO_TX_EMPTY
 15529 ;;		i2_I2C_DO_ADDRESS_NACK
 15530 ;;		_I2C_DO_TX
 15531 ;;		_I2C_DO_RX
 15532 ;;		_I2C_DO_TX_EMPTY
 15533 ;;		_I2C_DO_ADDRESS_NACK
 15534 ;;		_I2C_DO_RX_EMPTY
 15535 ;; This function uses a non-reentrant model
 15536 ;;
 15537                           
 15538                           	psect	text141
 15539  004304                     __ptext141:
 15540                           	callstack 0
 15541  004304                     i2_wr2RegCompleteHandler:
 15542                           	callstack 8
 15543  004304                     
 15544                           ;mcc_generated_files/examples/i2c_master_example.c: 121: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 122: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(ptr,2);
 15545  004304  C00A  F001         	movff	i2wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 15546  004308  C00B  F002         	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 15547  00430C  0E00               	movlw	0
 15548  00430E  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 15549  004310  0E02               	movlw	2
 15550  004312  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 15551  004314  EC11  F022         	call	i2_I2C_SetBuffer	;wreg free
 15552  004318                     
 15553                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15554  004318  0E00               	movlw	0
 15555  00431A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 15556  00431C  0E00               	movlw	0
 15557  00431E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 15558  004320  0E00               	movlw	0
 15559  004322  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 15560  004324  0E00               	movlw	0
 15561  004326  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 15562  004328  ECA0  F022         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 15563  00432C                     
 15564                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     return I2C_CONTINUE;
 15565  00432C  0E04               	movlw	4
 15566  00432E  0012               	return		;funcret
 15567  004330                     __end_ofi2_wr2RegCompleteHandler:
 15568                           	callstack 0
 15569                           
 15570 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 15571 ;; Defined at:
 15572 ;;		line 231 in file "mcc_generated_files/i2c_master.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 15575 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 15576 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
 15577 ;;  ptr             2    7[COMRAM] PTR void 
 15578 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 15579 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;		None
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      void 
 15584 ;; Registers used:
 15585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;Total ram usage:        4 bytes
 15596 ;; Hardware stack levels used: 1
 15597 ;; Hardware stack levels required when called: 1
 15598 ;; This function calls:
 15599 ;;		i2_I2C_SetCallback
 15600 ;; This function is called by:
 15601 ;;		_I2C_Write1ByteRegister
 15602 ;;		i2_I2C_Read1ByteRegister
 15603 ;;		i2_rd1RegCompleteHandler
 15604 ;;		i2_rd2RegCompleteHandler
 15605 ;;		i2_wr1RegCompleteHandler
 15606 ;;		i2_wr2RegCompleteHandler
 15607 ;;		i2_rdBlkRegCompleteHandler
 15608 ;; This function uses a non-reentrant model
 15609 ;;
 15610                           
 15611                           	psect	text142
 15612  004540                     __ptext142:
 15613                           	callstack 0
 15614  004540                     i2_I2C_SetDataCompleteCallback:
 15615                           	callstack 14
 15616  004540                     
 15617                           ;mcc_generated_files/i2c_master.c: 231: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 232: {;mcc_generated_files/i2c_master.c
      +                          : 233:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15618  004540  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 15619  004544  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 15620  004548  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 15621  00454C  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 15622  004550  0E00               	movlw	0
 15623  004552  EC58  F01B         	call	i2_I2C_SetCallback
 15624  004556  0012               	return		;funcret
 15625  004558                     __end_ofi2_I2C_SetDataCompleteCallback:
 15626                           	callstack 0
 15627                           
 15628 ;; *************** function i2_I2C_SetCallback *****************
 15629 ;; Defined at:
 15630 ;;		line 256 in file "mcc_generated_files/i2c_master.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;  idx             1    wreg     enum E2881
 15633 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 15634 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 15635 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
 15636 ;;  ptr             2    2[COMRAM] PTR void 
 15637 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 15638 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;  idx             1    4[COMRAM] enum E2881
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1    wreg      void 
 15643 ;; Registers used:
 15644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15653 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15654 ;;Total ram usage:        5 bytes
 15655 ;; Hardware stack levels used: 1
 15656 ;; This function calls:
 15657 ;;		Nothing
 15658 ;; This function is called by:
 15659 ;;		i2_I2C_SetDataCompleteCallback
 15660 ;;		i2_I2C_SetAddressNackCallback
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	text143
 15665  0036B0                     __ptext143:
 15666                           	callstack 0
 15667  0036B0                     i2_I2C_SetCallback:
 15668                           	callstack 14
 15669                           
 15670                           ;incstack = 0
 15671                           ;i2I2C_SetCallback@idx stored from wreg
 15672  0036B0  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 15673  0036B2                     
 15674                           ;mcc_generated_files/i2c_master.c: 256: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 257: {;mcc_generate
      +                          d_files/i2c_master.c: 258:     if(cb)
 15675  0036B2  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 15676  0036B4  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 15677  0036B6  B4D8               	btfsc	status,2,c
 15678  0036B8  EF60  F01B         	goto	i2u477_41
 15679  0036BC  EF62  F01B         	goto	i2u477_40
 15680  0036C0                     i2u477_41:
 15681  0036C0  EF7C  F01B         	goto	i2l7572
 15682  0036C4                     i2u477_40:
 15683  0036C4                     
 15684                           ;mcc_generated_files/i2c_master.c: 259:     {;mcc_generated_files/i2c_master.c: 260:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15685  0036C4  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 15686  0036C6  0D02               	mullw	2
 15687  0036C8  0ECB               	movlw	low _I2C_Status
 15688  0036CA  24F3               	addwf	243,w,c
 15689  0036CC  6ED9               	movwf	fsr2l,c
 15690  0036CE  0E00               	movlw	high _I2C_Status
 15691  0036D0  20F4               	addwfc	prodh,w,c
 15692  0036D2  6EDA               	movwf	fsr2h,c
 15693  0036D4  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 15694  0036D8  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 15695                           
 15696                           ;mcc_generated_files/i2c_master.c: 261:         I2C_Status.callbackPayload[idx] = ptr;
 15697  0036DC  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 15698  0036DE  0D02               	mullw	2
 15699  0036E0  0ED7               	movlw	low (_I2C_Status+12)
 15700  0036E2  24F3               	addwf	243,w,c
 15701  0036E4  6ED9               	movwf	fsr2l,c
 15702  0036E6  0E00               	movlw	high (_I2C_Status+12)
 15703  0036E8  20F4               	addwfc	prodh,w,c
 15704  0036EA  6EDA               	movwf	fsr2h,c
 15705  0036EC  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 15706  0036F0  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 15707                           
 15708                           ;mcc_generated_files/i2c_master.c: 262:     }
 15709  0036F4  EF94  F01B         	goto	i2l781
 15710  0036F8                     i2l7572:
 15711                           
 15712                           ;mcc_generated_files/i2c_master.c: 264:     {;mcc_generated_files/i2c_master.c: 265:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15713  0036F8  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 15714  0036FA  0D02               	mullw	2
 15715  0036FC  0ECB               	movlw	low _I2C_Status
 15716  0036FE  24F3               	addwf	243,w,c
 15717  003700  6ED9               	movwf	fsr2l,c
 15718  003702  0E00               	movlw	high _I2C_Status
 15719  003704  20F4               	addwfc	prodh,w,c
 15720  003706  6EDA               	movwf	fsr2h,c
 15721  003708  0E8A               	movlw	low i2_I2C_CallbackReturnStop
 15722  00370A  6EDE               	movwf	postinc2,c
 15723  00370C  0E47               	movlw	high i2_I2C_CallbackReturnStop
 15724  00370E  6EDD               	movwf	postdec2,c
 15725                           
 15726                           ;mcc_generated_files/i2c_master.c: 266:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15727  003710  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 15728  003712  0D02               	mullw	2
 15729  003714  0ED7               	movlw	low (_I2C_Status+12)
 15730  003716  24F3               	addwf	243,w,c
 15731  003718  6ED9               	movwf	fsr2l,c
 15732  00371A  0E00               	movlw	high (_I2C_Status+12)
 15733  00371C  20F4               	addwfc	prodh,w,c
 15734  00371E  6EDA               	movwf	fsr2h,c
 15735  003720  0E00               	movlw	0
 15736  003722  6EDE               	movwf	postinc2,c
 15737  003724  0E00               	movlw	0
 15738  003726  6EDD               	movwf	postdec2,c
 15739  003728                     i2l781:
 15740  003728  0012               	return		;funcret
 15741  00372A                     __end_ofi2_I2C_SetCallback:
 15742                           	callstack 0
 15743                           
 15744 ;; *************** function i2_I2C_SetBuffer *****************
 15745 ;; Defined at:
 15746 ;;		line 221 in file "mcc_generated_files/i2c_master.c"
 15747 ;; Parameters:    Size  Location     Type
 15748 ;;  buffer          2    0[COMRAM] PTR void 
 15749 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 15750 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), i2I2C_Read1ByteRegister@reg(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBl
      +ock@bufferBlock(4), 
 15751 ;;		 -> bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15752 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1Byt
      +eRegister@reg(1), 
 15753 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15754 ;;  bufferSize      2    2[COMRAM] unsigned int 
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;		None
 15757 ;; Return value:  Size  Location     Type
 15758 ;;                  1    wreg      void 
 15759 ;; Registers used:
 15760 ;;		wreg, status,2, status,0
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15770 ;;Total ram usage:        4 bytes
 15771 ;; Hardware stack levels used: 1
 15772 ;; This function calls:
 15773 ;;		Nothing
 15774 ;; This function is called by:
 15775 ;;		_I2C_Write1ByteRegister
 15776 ;;		i2_I2C_Read1ByteRegister
 15777 ;;		i2_rd1RegCompleteHandler
 15778 ;;		i2_rd2RegCompleteHandler
 15779 ;;		i2_wr1RegCompleteHandler
 15780 ;;		i2_wr2RegCompleteHandler
 15781 ;;		i2_rdBlkRegCompleteHandler
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           	psect	text144
 15786  004422                     __ptext144:
 15787                           	callstack 0
 15788  004422                     i2_I2C_SetBuffer:
 15789                           	callstack 15
 15790  004422                     
 15791                           ;mcc_generated_files/i2c_master.c: 221: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 222: {;mcc_generated_files/i2c_master.c: 223:     
      +                          if(I2C_Status.bufferFree)
 15792  004422  0100               	movlb	0	; () banked
 15793  004424  A7EE               	btfss	(_I2C_Status+35)& (0+255),3,b
 15794  004426  EF17  F022         	goto	i2u478_41
 15795  00442A  EF19  F022         	goto	i2u478_40
 15796  00442E                     i2u478_41:
 15797  00442E  EF22  F022         	goto	i2l761
 15798  004432                     i2u478_40:
 15799  004432                     
 15800                           ; BSR set to: 0
 15801                           ;mcc_generated_files/i2c_master.c: 224:     {;mcc_generated_files/i2c_master.c: 225:    
      +                               I2C_Status.data_ptr = buffer;
 15802  004432  C001  F0E8         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 15803  004436  C002  F0E9         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 15804  00443A                     
 15805                           ; BSR set to: 0
 15806                           ;mcc_generated_files/i2c_master.c: 226:         I2C_Status.data_length = bufferSize;
 15807  00443A  C003  F0EA         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 15808  00443E  C004  F0EB         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 15809  004442                     
 15810                           ; BSR set to: 0
 15811                           ;mcc_generated_files/i2c_master.c: 227:         I2C_Status.bufferFree = 0;
 15812  004442  97EE               	bcf	(_I2C_Status+35)& (0+255),3,b
 15813  004444                     i2l761:
 15814                           
 15815                           ; BSR set to: 0
 15816  004444  0012               	return		;funcret
 15817  004446                     __end_ofi2_I2C_SetBuffer:
 15818                           	callstack 0
 15819                           
 15820 ;; *************** function i2_I2C_MasterStop *****************
 15821 ;; Defined at:
 15822 ;;		line 551 in file "mcc_generated_files/i2c_master.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;		None
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      void 
 15829 ;; Registers used:
 15830 ;;		None
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;Total ram usage:        0 bytes
 15841 ;; Hardware stack levels used: 1
 15842 ;; This function calls:
 15843 ;;		Nothing
 15844 ;; This function is called by:
 15845 ;;		i2_I2C_DO_SEND_STOP
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           	psect	text145
 15850  00478E                     __ptext145:
 15851                           	callstack 0
 15852  00478E                     i2_I2C_MasterStop:
 15853                           	callstack 9
 15854  00478E                     
 15855                           ;mcc_generated_files/i2c_master.c: 553:     SSPCON2bits.PEN = 1;
 15856  00478E  84C5               	bsf	197,2,c	;volatile
 15857  004790  0012               	return		;funcret
 15858  004792                     __end_ofi2_I2C_MasterStop:
 15859                           	callstack 0
 15860                           
 15861 ;; *************** function i2_I2C_MasterEnableRestart *****************
 15862 ;; Defined at:
 15863 ;;		line 531 in file "mcc_generated_files/i2c_master.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;		None
 15866 ;; Auto vars:     Size  Location     Type
 15867 ;;		None
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  1    wreg      void 
 15870 ;; Registers used:
 15871 ;;		None
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;Total ram usage:        0 bytes
 15882 ;; Hardware stack levels used: 1
 15883 ;; This function calls:
 15884 ;;		Nothing
 15885 ;; This function is called by:
 15886 ;;		i2_I2C_DO_SEND_RESTART_READ
 15887 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 15888 ;;		i2_I2C_DO_SEND_RESTART
 15889 ;; This function uses a non-reentrant model
 15890 ;;
 15891                           
 15892                           	psect	text146
 15893  004792                     __ptext146:
 15894                           	callstack 0
 15895  004792                     i2_I2C_MasterEnableRestart:
 15896                           	callstack 9
 15897  004792                     
 15898                           ;mcc_generated_files/i2c_master.c: 533:     SSPCON2bits.RSEN = 1;
 15899  004792  82C5               	bsf	197,1,c	;volatile
 15900  004794  0012               	return		;funcret
 15901  004796                     __end_ofi2_I2C_MasterEnableRestart:
 15902                           	callstack 0
 15903                           
 15904 ;; *************** function i2_I2C_MasterStart *****************
 15905 ;; Defined at:
 15906 ;;		line 546 in file "mcc_generated_files/i2c_master.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;		None
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  1    wreg      void 
 15913 ;; Registers used:
 15914 ;;		None
 15915 ;; Tracked objects:
 15916 ;;		On entry : 0/0
 15917 ;;		On exit  : 0/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15924 ;;Total ram usage:        0 bytes
 15925 ;; Hardware stack levels used: 1
 15926 ;; This function calls:
 15927 ;;		Nothing
 15928 ;; This function is called by:
 15929 ;;		i2_I2C_MasterOperation
 15930 ;; This function uses a non-reentrant model
 15931 ;;
 15932                           
 15933                           	psect	text147
 15934  004796                     __ptext147:
 15935                           	callstack 0
 15936  004796                     i2_I2C_MasterStart:
 15937                           	callstack 13
 15938  004796                     
 15939                           ;mcc_generated_files/i2c_master.c: 548:     SSPCON2bits.SEN = 1;
 15940  004796  80C5               	bsf	197,0,c	;volatile
 15941  004798  0012               	return		;funcret
 15942  00479A                     __end_ofi2_I2C_MasterStart:
 15943                           	callstack 0
 15944                           
 15945 ;; *************** function i2_I2C_Close *****************
 15946 ;; Defined at:
 15947 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;		None
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;  returnValue     1    0[COMRAM] enum E355
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      enum E355
 15954 ;; Registers used:
 15955 ;;		wreg, status,2, cstack
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;Total ram usage:        1 bytes
 15966 ;; Hardware stack levels used: 1
 15967 ;; Hardware stack levels required when called: 1
 15968 ;; This function calls:
 15969 ;;		i2_I2C_MasterClearIrq
 15970 ;;		i2_I2C_MasterClose
 15971 ;;		i2_I2C_MasterDisableIrq
 15972 ;; This function is called by:
 15973 ;;		_I2C_Write1ByteRegister
 15974 ;;		i2_I2C_Read1ByteRegister
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text148
 15979  004330                     __ptext148:
 15980                           	callstack 0
 15981  004330                     i2_I2C_Close:
 15982                           	callstack 14
 15983  004330                     
 15984                           ;mcc_generated_files/i2c_master.c: 169:     i2c_error_t returnValue = I2C_BUSY;
 15985  004330  0E01               	movlw	1
 15986  004332  6E01               	movwf	i2I2C_Close@returnValue^0,c
 15987  004334                     
 15988                           ;mcc_generated_files/i2c_master.c: 170:     if(!I2C_Status.busy)
 15989  004334  0100               	movlb	0	; () banked
 15990  004336  B3EE               	btfsc	(_I2C_Status+35)& (0+255),1,b
 15991  004338  EFA0  F021         	goto	i2u330_41
 15992  00433C  EFA2  F021         	goto	i2u330_40
 15993  004340                     i2u330_41:
 15994  004340  EFAC  F021         	goto	i2l5748
 15995  004344                     i2u330_40:
 15996  004344                     
 15997                           ; BSR set to: 0
 15998                           ;mcc_generated_files/i2c_master.c: 171:     {;mcc_generated_files/i2c_master.c: 172:    
      +                               I2C_Status.inUse = 0;
 15999  004344  95EE               	bcf	(_I2C_Status+35)& (0+255),2,b
 16000                           
 16001                           ;mcc_generated_files/i2c_master.c: 173:         I2C_Status.address = 0xff;
 16002  004346  69E7               	setf	(_I2C_Status+28)& (0+255),b
 16003  004348                     
 16004                           ; BSR set to: 0
 16005                           ;mcc_generated_files/i2c_master.c: 174:         I2C_MasterClearIrq();
 16006  004348  ECD1  F023         	call	i2_I2C_MasterClearIrq	;wreg free
 16007                           
 16008                           ;mcc_generated_files/i2c_master.c: 175:         I2C_MasterDisableIrq();
 16009  00434C  ECCD  F023         	call	i2_I2C_MasterDisableIrq	;wreg free
 16010                           
 16011                           ;mcc_generated_files/i2c_master.c: 176:         I2C_MasterClose();
 16012  004350  ECCF  F023         	call	i2_I2C_MasterClose	;wreg free
 16013  004354                     
 16014                           ;mcc_generated_files/i2c_master.c: 177:         returnValue = I2C_Status.error;
 16015  004354  C0ED  F001         	movff	_I2C_Status+34,i2I2C_Close@returnValue
 16016  004358                     i2l5748:
 16017                           
 16018                           ;mcc_generated_files/i2c_master.c: 179:     return returnValue;
 16019  004358  5001               	movf	i2I2C_Close@returnValue^0,w,c
 16020  00435A  0012               	return		;funcret
 16021  00435C                     __end_ofi2_I2C_Close:
 16022                           	callstack 0
 16023                           
 16024 ;; *************** function i2_I2C_MasterDisableIrq *****************
 16025 ;; Defined at:
 16026 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;		None
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;		None
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      void 
 16033 ;; Registers used:
 16034 ;;		None
 16035 ;; Tracked objects:
 16036 ;;		On entry : 0/0
 16037 ;;		On exit  : 0/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;Total ram usage:        0 bytes
 16045 ;; Hardware stack levels used: 1
 16046 ;; This function calls:
 16047 ;;		Nothing
 16048 ;; This function is called by:
 16049 ;;		i2_I2C_Close
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           	psect	text149
 16054  00479A                     __ptext149:
 16055                           	callstack 0
 16056  00479A                     i2_I2C_MasterDisableIrq:
 16057                           	callstack 14
 16058  00479A                     
 16059                           ;mcc_generated_files/i2c_master.c: 595:     PIE1bits.SSPIE = 0;
 16060  00479A  969D               	bcf	157,3,c	;volatile
 16061  00479C  0012               	return		;funcret
 16062  00479E                     __end_ofi2_I2C_MasterDisableIrq:
 16063                           	callstack 0
 16064                           
 16065 ;; *************** function i2_I2C_MasterClose *****************
 16066 ;; Defined at:
 16067 ;;		line 515 in file "mcc_generated_files/i2c_master.c"
 16068 ;; Parameters:    Size  Location     Type
 16069 ;;		None
 16070 ;; Auto vars:     Size  Location     Type
 16071 ;;		None
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  1    wreg      void 
 16074 ;; Registers used:
 16075 ;;		None
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16085 ;;Total ram usage:        0 bytes
 16086 ;; Hardware stack levels used: 1
 16087 ;; This function calls:
 16088 ;;		Nothing
 16089 ;; This function is called by:
 16090 ;;		i2_I2C_Close
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text150
 16095  00479E                     __ptext150:
 16096                           	callstack 0
 16097  00479E                     i2_I2C_MasterClose:
 16098                           	callstack 14
 16099  00479E                     
 16100                           ;mcc_generated_files/i2c_master.c: 518:     SSPCON1bits.SSPEN = 0;
 16101  00479E  9AC6               	bcf	198,5,c	;volatile
 16102  0047A0  0012               	return		;funcret
 16103  0047A2                     __end_ofi2_I2C_MasterClose:
 16104                           	callstack 0
 16105                           
 16106 ;; *************** function i2_I2C_MasterClearIrq *****************
 16107 ;; Defined at:
 16108 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;		None
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;                  1    wreg      void 
 16115 ;; Registers used:
 16116 ;;		None
 16117 ;; Tracked objects:
 16118 ;;		On entry : 0/0
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;Total ram usage:        0 bytes
 16127 ;; Hardware stack levels used: 1
 16128 ;; This function calls:
 16129 ;;		Nothing
 16130 ;; This function is called by:
 16131 ;;		i2_I2C_Open
 16132 ;;		i2_I2C_Close
 16133 ;;		i2_I2C_MasterFsm
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text151
 16138  0047A2                     __ptext151:
 16139                           	callstack 0
 16140  0047A2                     i2_I2C_MasterClearIrq:
 16141                           	callstack 14
 16142  0047A2                     
 16143                           ;mcc_generated_files/i2c_master.c: 600:     PIR1bits.SSPIF = 0;
 16144  0047A2  969E               	bcf	158,3,c	;volatile
 16145  0047A4  0012               	return		;funcret
 16146  0047A6                     __end_ofi2_I2C_MasterClearIrq:
 16147                           	callstack 0
 16148                           
 16149                           	psect	text152
 16150  000000                     __ptext152:
 16151                           	callstack 0
 16152  000000                     
 16153                           	psect	rparam
 16154  0000                     
 16155                           	psect	temp
 16156  000059                     btemp:
 16157                           	callstack 0
 16158  000059                     	ds	1
 16159  0000                     int$flags	set	btemp
 16160  0000                     wtemp8	set	btemp+1
 16161  0000                     ttemp5	set	btemp+1
 16162  0000                     ttemp6	set	btemp+4
 16163  0000                     ttemp7	set	btemp+8
 16164                           
 16165                           	psect	config
 16166                           
 16167                           ; Padding undefined space
 16168  300000                     	org	3145728
 16169  300000  FF                 	db	255
 16170                           
 16171                           ;Config register CONFIG1H @ 0x300001
 16172                           ;	Oscillator Selection bits
 16173                           ;	OSC = HS, HS oscillator
 16174                           ;	Fail-Safe Clock Monitor Enable bit
 16175                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16176                           ;	Internal/External Oscillator Switchover bit
 16177                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16178  300001                     	org	3145729
 16179  300001  02                 	db	2
 16180                           
 16181                           ;Config register CONFIG2L @ 0x300002
 16182                           ;	Power-up Timer Enable bit
 16183                           ;	PWRT = OFF, PWRT disabled
 16184                           ;	Brown-out Reset Enable bits
 16185                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16186                           ;	Brown Out Reset Voltage bits
 16187                           ;	BORV = 1, 
 16188  300002                     	org	3145730
 16189  300002  09                 	db	9
 16190                           
 16191                           ;Config register CONFIG2H @ 0x300003
 16192                           ;	Watchdog Timer Enable bit
 16193                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16194                           ;	Watchdog Timer Postscale Select bits
 16195                           ;	WDTPS = 32768, 1:32768
 16196  300003                     	org	3145731
 16197  300003  1E                 	db	30
 16198                           
 16199                           ; Padding undefined space
 16200  300004                     	org	3145732
 16201  300004  FF                 	db	255
 16202                           
 16203                           ;Config register CONFIG3H @ 0x300005
 16204                           ;	CCP2 MUX bit
 16205                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16206                           ;	PORTB A/D Enable bit
 16207                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16208                           ;	Low-Power Timer1 Oscillator Enable bit
 16209                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16210                           ;	MCLR Pin Enable bit
 16211                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16212  300005                     	org	3145733
 16213  300005  81                 	db	129
 16214                           
 16215                           ;Config register CONFIG4L @ 0x300006
 16216                           ;	Stack Full/Underflow Reset Enable bit
 16217                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16218                           ;	Single-Supply ICSP Enable bit
 16219                           ;	LVP = OFF, Single-Supply ICSP disabled
 16220                           ;	Extended Instruction Set Enable bit
 16221                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16222                           ;	Background Debugger Enable bit
 16223                           ;	DEBUG = 0x1, unprogrammed default
 16224  300006                     	org	3145734
 16225  300006  81                 	db	129
 16226                           
 16227                           ; Padding undefined space
 16228  300007                     	org	3145735
 16229  300007  FF                 	db	255
 16230                           
 16231                           ;Config register CONFIG5L @ 0x300008
 16232                           ;	Code Protection bit
 16233                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 16234                           ;	Code Protection bit
 16235                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 16236                           ;	Code Protection bit
 16237                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 16238                           ;	Code Protection bit
 16239                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 16240  300008                     	org	3145736
 16241  300008  0F                 	db	15
 16242                           
 16243                           ;Config register CONFIG5H @ 0x300009
 16244                           ;	Boot Block Code Protection bit
 16245                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16246                           ;	Data EEPROM Code Protection bit
 16247                           ;	CPD = OFF, Data EEPROM not code-protected
 16248  300009                     	org	3145737
 16249  300009  C0                 	db	192
 16250                           
 16251                           ;Config register CONFIG6L @ 0x30000A
 16252                           ;	Write Protection bit
 16253                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 16254                           ;	Write Protection bit
 16255                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 16256                           ;	Write Protection bit
 16257                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 16258                           ;	Write Protection bit
 16259                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 16260  30000A                     	org	3145738
 16261  30000A  0F                 	db	15
 16262                           
 16263                           ;Config register CONFIG6H @ 0x30000B
 16264                           ;	Configuration Register Write Protection bit
 16265                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16266                           ;	Boot Block Write Protection bit
 16267                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16268                           ;	Data EEPROM Write Protection bit
 16269                           ;	WRTD = OFF, Data EEPROM not write-protected
 16270  30000B                     	org	3145739
 16271  30000B  E0                 	db	224
 16272                           
 16273                           ;Config register CONFIG7L @ 0x30000C
 16274                           ;	Table Read Protection bit
 16275                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 16276                           ;	Table Read Protection bit
 16277                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16278                           ;	Table Read Protection bit
 16279                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 16280                           ;	Table Read Protection bit
 16281                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 16282  30000C                     	org	3145740
 16283  30000C  0F                 	db	15
 16284                           
 16285                           ;Config register CONFIG7H @ 0x30000D
 16286                           ;	Boot Block Table Read Protection bit
 16287                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16288  30000D                     	org	3145741
 16289  30000D  40                 	db	64
 16290                           tosu	equ	0xFFF
 16291                           tosh	equ	0xFFE
 16292                           tosl	equ	0xFFD
 16293                           stkptr	equ	0xFFC
 16294                           pclatu	equ	0xFFB
 16295                           pclath	equ	0xFFA
 16296                           pcl	equ	0xFF9
 16297                           tblptru	equ	0xFF8
 16298                           tblptrh	equ	0xFF7
 16299                           tblptrl	equ	0xFF6
 16300                           tablat	equ	0xFF5
 16301                           prodh	equ	0xFF4
 16302                           prodl	equ	0xFF3
 16303                           indf0	equ	0xFEF
 16304                           postinc0	equ	0xFEE
 16305                           postdec0	equ	0xFED
 16306                           preinc0	equ	0xFEC
 16307                           plusw0	equ	0xFEB
 16308                           fsr0h	equ	0xFEA
 16309                           fsr0l	equ	0xFE9
 16310                           wreg	equ	0xFE8
 16311                           indf1	equ	0xFE7
 16312                           postinc1	equ	0xFE6
 16313                           postdec1	equ	0xFE5
 16314                           preinc1	equ	0xFE4
 16315                           plusw1	equ	0xFE3
 16316                           fsr1h	equ	0xFE2
 16317                           fsr1l	equ	0xFE1
 16318                           bsr	equ	0xFE0
 16319                           indf2	equ	0xFDF
 16320                           postinc2	equ	0xFDE
 16321                           postdec2	equ	0xFDD
 16322                           preinc2	equ	0xFDC
 16323                           plusw2	equ	0xFDB
 16324                           fsr2h	equ	0xFDA
 16325                           fsr2l	equ	0xFD9
 16326                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    32
    Data        56
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48      88
    BANK0           128     75     128
    BANK1           256     33     107
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2775$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX$2781$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2787$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$2793$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2792	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2787	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_DO_RX$2786	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX$2781	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_DO_TX$2780	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$2775	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_MasterFsm$2774	const PTR FTN()enum E2863 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S1103$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), lcd_send_number_pos@number(BANK0[1]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2318$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2318$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    memset@s	PTR unsigned char  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    MY_INT1.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    MY_INT0.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), 
		 -> NULL(NULL[0]), 

    S1103$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S1103$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S1103$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr2RegCompleteHandler(), i2_rdBlkRegCompleteHandler(), 
		 -> i2_I2C_CallbackReturnReset(), i2_I2C_CallbackReturnStop(), i2_wr1RegCompleteHandler(), I2C_CallbackReturnReset(), 
		 -> I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E2863[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S913$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    INT2_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    INT1_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    INT0_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    INTx_select_InterruptHandler@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    INTx_select_InterruptHandler@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    interrupt_INTx_pin_init@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_pin_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    interrupt_INTx_edge_init@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_edge_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    interrupt_INTx_clear_flag@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_clear_flag@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    interrupt_INTx_disable@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_disable@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    S573$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_enable@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_enable@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    interrupt_INTx_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    gpio_pin_input_init@pin	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), 

    gpio_pin_output_low_init@pin	PTR struct . size(2) Largest target is 6
		 -> lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    gpio_pin_logic_write@pin	PTR struct . size(2) Largest target is 6
		 -> lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    gpio_pin_direction_init@pin	PTR struct . size(2) Largest target is 6
		 -> MY_INT1(BANK1[6]), MY_INT0(BANK0[6]), lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    portx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    latx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    trisx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhlllll[1]), TRISD(BITBIGSFRhlllll[1]), TRISC(BITBIGSFRhlllll[1]), TRISB(BITBIGSFRhlllll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    convert_int_to_BCD@BCD_num	PTR unsigned char  size(2) Largest target is 6
		 -> RTC1307._Day(COMRAM[1]), RTC1307._Month(COMRAM[1]), RTC1307._Year(COMRAM[1]), RTC1307._Seconds(COMRAM[1]), 
		 -> RTC1307._Minutes(COMRAM[1]), RTC1307._Hours(COMRAM[1]), RTC1307(COMRAM[6]), 

    convert_BCD_to_int@int_num	PTR unsigned char  size(2) Largest target is 1
		 -> year_counter(COMRAM[1]), month_counter(COMRAM[1]), day_counter(COMRAM[1]), hours_counter(COMRAM[1]), 
		 -> minutes_counter(COMRAM[1]), seconds_counter(COMRAM[1]), 

    lcd_set_curser@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_enable@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_nbits@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), 

    lcd_send_number_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[5]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> lcd_send_number_pos@number(BANK0[1]), 

    lcd_send_string_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[5]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    lcd_send_string@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_char_data_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_char_data@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_command@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_init@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _abs->___aomod
    _lcd_send_char_data->_gpio_pin_logic_write
    _lcd_send_command->_gpio_pin_logic_write
    _lcd_send_nbits->_gpio_pin_logic_write
    _lcd_send_enable->_gpio_pin_logic_write
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _gpio_pin_input_init->_gpio_pin_direction_init
    _INTx_select_InterruptHandler->_INT0_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT1_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT2_set_InterruptHandler
    _RealTimeClockDS1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _InterruptManager in COMRAM

    _APP_INT1_ISR->_convert_int_to_BCD
    _convert_int_to_BCD->___awdiv
    _APP_INT0_ISR->i2_RealTimeClockDS1307_Get_Date_Time
    i2_RealTimeClockDS1307_Get_Date_Time->i2_I2C_Read1ByteRegister
    i2_I2C_SetAddressNackCallback->i2_I2C_SetCallback
    i2_I2C_MasterWrite->i2_I2C_MasterOperation
    i2_I2C_Poller->i2_I2C_MasterFsm
    i2_I2C_MasterFsm->i2_I2C_DO_ADDRESS_NACK
    i2_I2C_MasterFsm->i2_I2C_DO_RX
    i2_I2C_MasterFsm->i2_I2C_DO_TX
    i2_I2C_MasterFsm->i2_I2C_DO_TX_EMPTY
    i2_I2C_DO_TX_EMPTY->i2_I2C_CallbackReturnReset
    i2_I2C_DO_TX_EMPTY->i2_I2C_CallbackReturnStop
    i2_I2C_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    i2_I2C_DO_TX->i2_I2C_CallbackReturnReset
    i2_I2C_DO_TX->i2_I2C_CallbackReturnStop
    i2_I2C_DO_TX->i2_rd1RegCompleteHandler
    i2_I2C_DO_TX->i2_rd2RegCompleteHandler
    i2_I2C_DO_TX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_TX->i2_wr1RegCompleteHandler
    i2_I2C_DO_TX->i2_wr2RegCompleteHandler
    i2_I2C_DO_RX->i2_I2C_CallbackReturnReset
    i2_I2C_DO_RX->i2_I2C_CallbackReturnStop
    i2_I2C_DO_RX->i2_rd1RegCompleteHandler
    i2_I2C_DO_RX->i2_rd2RegCompleteHandler
    i2_I2C_DO_RX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_RX->i2_wr1RegCompleteHandler
    i2_I2C_DO_RX->i2_wr2RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_I2C_CallbackReturnReset
    i2_I2C_DO_ADDRESS_NACK->i2_I2C_CallbackReturnStop
    i2_I2C_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _lcd_send_string_pos->_lcd_set_curser
    _lcd_send_string->_lcd_send_char_data
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod
    _lcd_send_char_data_pos->_lcd_set_curser
    _lcd_set_curser->_lcd_send_command
    _lcd_send_char_data->_lcd_send_nbits
    __Initialize->_lcd_init
    _lcd_init->_lcd_send_command
    _lcd_send_command->_lcd_send_nbits
    _interrupt_INTx_init->_interrupt_INTx_pin_init
    _interrupt_INTx_pin_init->_gpio_pin_input_init
    _RealTimeClockDS1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_lcd_send_number_pos
    _lcd_send_number_pos->_convert_uint8_to_string
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  220408
                                             31 BANK1      2     2      0
  _RealTimeClockDS1307_Get_Date_Time
                        __Initialize
                 _convert_BCD_to_int
             _lcd_send_char_data_pos
                   _lcd_send_command
                _lcd_send_number_pos
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_number_pos                                  8     3      5   37701
                                             24 BANK1      7     2      5
            _convert_uint8_to_string
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_pos                                  9     3      6   22376
                                             23 BANK0      8     2      6
                    _lcd_send_string
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string                                      7     3      4    7641
                                             15 BANK0      7     3      4
                 _lcd_send_char_data
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              4     2      2   10831
                                             21 BANK1      3     1      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6    8777
                                              2 BANK1     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             69 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             53 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             17 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             47 COMRAM     1     1      0
                                              7 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             38 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                              0 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             38 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             40 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             38 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             38 COMRAM    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1827
                                             38 COMRAM     8     2      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send_char_data_pos                               8     3      5   20362
                                             23 BANK0      8     3      5
                 _lcd_send_char_data
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_set_curser                                       9     5      4   11188
                                             15 BANK0      8     4      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_char_data                                   6     3      3    7074
                                              9 BANK0      6     3      3
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (1) _convert_BCD_to_int                                   7     5      2     586
                                             38 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) __Initialize                                          0     0      0   17574
                     _I2C_Initialize
                _interrupt_INTx_init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             8     6      2   13882
                                             15 BANK0      7     5      2
           _gpio_pin_output_low_init
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     6     3      3   10314
                                              9 BANK0      6     3      3
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nbits                                      10     7      3    2534
                                              0 BANK0      9     6      3
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      4     2      2    2078
                                              0 BANK0      3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_output_low_init                             5     3      2    2949
                                              0 BANK0      5     3      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_logic_write                                10     7      3    1613
                                             38 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_init                                  3     1      2    3692
                                              8 BANK0      3     1      2
       _INTx_select_InterruptHandler
          _interrupt_INTx_clear_flag
             _interrupt_INTx_disable
           _interrupt_INTx_edge_init
              _interrupt_INTx_enable
            _interrupt_INTx_pin_init
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_pin_init                              3     1      2    1314
                                              5 BANK0      3     1      2
                _gpio_pin_input_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_input_init                                  5     3      2    1122
                                              0 BANK0      5     3      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                             10     7      3     893
                                             38 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_enable                                5     3      2     201
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_edge_init                             5     3      2     387
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_disable                               5     3      2     291
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_clear_flag                            5     3      2     201
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _INTx_select_InterruptHandler                         5     3      2     870
                                             41 COMRAM     5     3      2
          _INT0_set_InterruptHandler
          _INT1_set_InterruptHandler
          _INT2_set_InterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClockDS1307_Get_Date_Time                    6     0      6  111495
                                             10 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1  111495
                                             47 COMRAM     1     0      1
                                              8 BANK0      2     2      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2189
                                             43 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      68
                                             38 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0  103425
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0  103425
                                              6 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0  103357
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0  103357
                                              4 BANK0      2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   25816
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   25847
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      31
                                             38 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   25816
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   25816
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    5092
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    5092
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    5123
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    5092
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    5267
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2909
                                             43 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                             38 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    2152
                                             38 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                             38 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManager                                   12    12      0  206022
                                             26 COMRAM    12    12      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0   68674
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0   68674
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0   68674
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (13) _APP_INT1_ISR                                        0     0      0    1486
                 _convert_int_to_BCD
 ---------------------------------------------------------------------------------
 (14) _convert_int_to_BCD                                  5     3      2    1486
                                              8 COMRAM     5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) _APP_INT0_ISR                                        0     0      0   67188
             _I2C_Write1ByteRegister
i2_RealTimeClockDS1307_Get_Date_Time
 ---------------------------------------------------------------------------------
 (14) i2_RealTimeClockDS1307_Get_Date_Time                 6     0      6   33170
                                             20 COMRAM     6     0      6
            i2_I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (15) i2_I2C_Read1ByteRegister                             3     2      1   33170
                                             17 COMRAM     3     2      1
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _I2C_Write1ByteRegister                              3     1      2   34018
                                             17 COMRAM     3     1      2
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetAddressNackCallback                        4     0      4     559
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Open                                          2     2      0      68
                                              0 COMRAM     2     2      0
               i2_I2C_MasterClearIrq
                   i2_I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOpen                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_MasterWrite                                   0     0      0   30685
              i2_I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOperation                               2     2      0   30685
                                             15 COMRAM     2     2      0
                  i2_I2C_MasterStart
                       i2_I2C_Poller
 ---------------------------------------------------------------------------------
 (18) i2_I2C_Poller                                        0     0      0   30617
                    i2_I2C_MasterFsm
           i2_I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterWaitForEvent                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterFsm                                     2     2      0   30617
                                             13 COMRAM     2     2      0
              i2_I2C_DO_ADDRESS_NACK *
                      i2_I2C_DO_IDLE *
                      i2_I2C_DO_RCEN *
                     i2_I2C_DO_RESET *
                        i2_I2C_DO_RX *
                    i2_I2C_DO_RX_ACK *
           i2_I2C_DO_RX_NACK_RESTART *
              i2_I2C_DO_RX_NACK_STOP *
             i2_I2C_DO_SEND_ADR_READ *
            i2_I2C_DO_SEND_ADR_WRITE *
              i2_I2C_DO_SEND_RESTART *
         i2_I2C_DO_SEND_RESTART_READ *
        i2_I2C_DO_SEND_RESTART_WRITE *
                 i2_I2C_DO_SEND_STOP *
                        i2_I2C_DO_TX *
                  i2_I2C_DO_TX_EMPTY *
               i2_I2C_MasterClearIrq
                 i2_I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX_EMPTY                                   2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterSetIrq
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSetIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX                                         2     2      0    7662
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
         i2_I2C_DO_SEND_RESTART_READ
        i2_I2C_DO_SEND_RESTART_WRITE
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterIsNack
             i2_I2C_MasterSendTxData
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (20) i2_I2C_MasterIsNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_WRITE                         0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_READ                          0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_WRITE                             0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_READ                              0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendTxData                              1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_ACK                                     0     0      0       0
                i2_I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX                                         2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
           i2_I2C_DO_RX_NACK_RESTART
              i2_I2C_DO_RX_NACK_STOP
              i2_I2C_MasterGetRxData
                i2_I2C_MasterSendAck
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendAck                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterGetRxData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_STOP                               0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_RESTART                            0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendNack                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RESET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RCEN                                       0     0      0       0
                i2_I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterStartRx                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_ADDRESS_NACK                               2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_wr2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_wr1RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rdBlkRegCompleteHandler                           2     0      2    1523
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd1RegCompleteHandler                             2     0      2    1632
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetDataCompleteCallback                       4     0      4     909
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (17) i2_I2C_SetCallback                                   5     1      4     357
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetBuffer                                     4     0      4     552
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_STOP                                  0     0      0       0
                   i2_I2C_MasterStop
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterStop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART                               0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterEnableRestart                           0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnStop                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnReset                           2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_I2C_MasterStart                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Close                                         1     1      0      24
                                              0 COMRAM     1     1      0
               i2_I2C_MasterClearIrq
                  i2_I2C_MasterClose
             i2_I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterDisableIrq                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClose                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RealTimeClockDS1307_Get_Date_Time
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   __Initialize
     _I2C_Initialize
     _interrupt_INTx_init
       _INTx_select_InterruptHandler
         _INT0_set_InterruptHandler
         _INT1_set_InterruptHandler
         _INT2_set_InterruptHandler
       _interrupt_INTx_clear_flag
       _interrupt_INTx_disable
       _interrupt_INTx_edge_init
       _interrupt_INTx_enable
       _interrupt_INTx_pin_init
         _gpio_pin_input_init
           _gpio_pin_direction_init
     _lcd_init
       _gpio_pin_output_low_init
         _gpio_pin_direction_init
         _gpio_pin_logic_write
       _lcd_send_command
         _gpio_pin_logic_write
         _lcd_send_enable
           _gpio_pin_logic_write
         _lcd_send_nbits
           _gpio_pin_logic_write
   _convert_BCD_to_int
   _lcd_send_char_data_pos
     _lcd_send_char_data
       _gpio_pin_logic_write
       _lcd_send_enable
       _lcd_send_nbits
     _lcd_set_curser
       _lcd_send_command
   _lcd_send_command
   _lcd_send_number_pos
     _convert_uint8_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _lcd_send_string_pos
       _lcd_send_string
         _lcd_send_char_data
       _lcd_set_curser
   _lcd_send_string_pos

 _InterruptManager (ROOT)
   _INT0_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
       _I2C_Write1ByteRegister
         i2_I2C_Close
           i2_I2C_MasterClearIrq
           i2_I2C_MasterClose
           i2_I2C_MasterDisableIrq
         i2_I2C_MasterWrite
           i2_I2C_MasterOperation
             i2_I2C_MasterStart
             i2_I2C_Poller
               i2_I2C_MasterFsm
                 i2_I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                     i2_I2C_MasterEnableRestart
                   i2_I2C_DO_SEND_STOP *
                     i2_I2C_MasterStop
                   i2_rd1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                       i2_I2C_SetCallback
                   i2_rd2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_rdBlkRegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                 i2_I2C_DO_IDLE *
                 i2_I2C_DO_RCEN *
                   i2_I2C_MasterStartRx
                 i2_I2C_DO_RESET *
                 i2_I2C_DO_RX *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_RX_NACK_RESTART *
                     i2_I2C_MasterSendNack
                   i2_I2C_DO_RX_NACK_STOP *
                     i2_I2C_MasterSendNack
                   i2_I2C_MasterGetRxData *
                   i2_I2C_MasterSendAck *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_RX_ACK *
                   i2_I2C_MasterSendAck
                 i2_I2C_DO_RX_NACK_RESTART *
                 i2_I2C_DO_RX_NACK_STOP *
                 i2_I2C_DO_SEND_ADR_READ *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_ADR_WRITE *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_RESTART *
                 i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_STOP *
                 i2_I2C_DO_TX *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterIsNack *
                   i2_I2C_MasterSendTxData *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterSetIrq *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_MasterClearIrq *
                 i2_I2C_MasterIsNack *
               i2_I2C_MasterWaitForEvent
         i2_I2C_Open
           i2_I2C_MasterClearIrq
           i2_I2C_MasterOpen
         i2_I2C_SetAddressNackCallback
           i2_I2C_SetCallback
         i2_I2C_SetBuffer
         i2_I2C_SetDataCompleteCallback
       i2_RealTimeClockDS1307_Get_Date_Time
         i2_I2C_Read1ByteRegister
           i2_I2C_Close
           i2_I2C_MasterWrite
           i2_I2C_Open
           i2_I2C_SetAddressNackCallback
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
     _APP_INT1_ISR *
       _convert_int_to_BCD
         ___awdiv
         ___awmod
   _INT1_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *
   _INT2_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      6B       7       41.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4B      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      58       1       69.8%
BITBIGSFRhllh       26      0       0      38        0.0%
BITBIGSFRhlllh      23      0       0      39        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRhlllll      6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BITBIGSFRhllllh      2      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143      12        0.0%
DATA                 0      0     143       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 13 11:06:23 2024

                         ??_InterruptManager 001B                       ??_I2C_DO_SEND_ADR_READ 0027  
               lcd_send_char_data_pos@column 009A                           i2_I2C_MasterSetIrq 477A  
                                          _n 004F                               fp_i2_I2C_DO_RX 0000  
                             fp_i2_I2C_DO_TX 0000                          i2_I2C_MasterSendAck 474A  
                gpio_pin_output_low_init@pin 0080                  gpio_pin_output_low_init@ret 0084  
                    ??_I2C_DO_SEND_ADR_WRITE 0028                                  _SSPSTATbits 000FC7  
                                         l32 2218                                           l42 32B8  
                                         l37 3340                                           l55 2DFE  
                                         l49 37A0                                           l66 34C2  
                                         l59 2E00                                           l99 3E7A  
                               ___awdiv@sign 0006                            i2_I2C_DO_TX_EMPTY 3540  
                       ??i2_I2C_DO_SEND_STOP 0001                          ?i2_I2C_MasterIsNack 0001  
                        i2_I2C_MasterStartRx 4782                        ??_I2C_DO_SEND_RESTART 0027  
                       i2_I2C_MasterSendNack 4750                           ?i2_I2C_DO_TX_EMPTY 0001  
                        ?i2_I2C_MasterSetIrq 0001                 INT1_set_InterruptHandler@ret 0029  
                                        l104 3DD8                                          l300 3D82  
                                        l125 3D26                                          l144 3B92  
                                        l128 4056                                          l137 2F50  
                                        l171 1C54                                          l421 33F2  
                                        l430 38A2                                          l422 33FC  
                                        l246 2618                                          l432 38AC  
                                        l424 3446                                          l441 3914  
                                        l433 38B2                                          l265 24C6  
                                        l530 353E                                          l443 391E  
                                        l435 38F8                                          l419 33E4  
                                        l444 3924                                          l446 396A  
                                        l286 3886                                          l471 4198  
                                        l800 450E                                          l482 2EAA  
                                        l466 2744                                          l803 27DC  
                                        l820 2CA6                                          l492 43AE  
                                        l396 3634                                          l742 427E  
                                        l590 40F8                                          l806 2814  
                                        l734 45AC                                          l831 4582  
                                        l903 4466                                          l487 43D8  
                                        l912 46EE                                          l761 4420  
                                        l593 40C2                                          l921 4760  
                                        l497 4384                                          l906 4774  
                                        l930 45C0                                          l754 46E6  
                                        l738 31A2                                          l770 44F6  
                                        l915 4768                                          l587 412E  
                                        l819 2C36                                          l924 476C  
                                        l764 4526                                          l596 4164  
                                        l748 3F56                                          l781 36AE  
                                        l909 475C                                          l933 4742  
                                        l837 33C8                                          l861 462E  
                                        l870 45F8                                          l951 4770  
                                        l927 4764                                          l599 3EC6  
                                        l855 4652                                          l791 3A4C  
                                        l936 4748                                          l864 461C  
                                        l960 4654                                          l873 45E6  
                                        l954 4778                                          l890 46AC  
                                        l794 4598                                          l858 4640  
                                        l882 39DC                                          l867 460A  
                                        l787 44A6                                          l876 456C  
                                        l964 4662                                          l893 469E  
                                        l957 4758                                          l797 44DE  
                                        l983 41C8                              ?_lcd_send_nbits 0080  
                           fp_i2_I2C_DO_IDLE 0000                    lcd_send_string_pos@column 009A  
                      i2_I2C_DO_ADDRESS_NACK 3BFC                             fp_i2_I2C_DO_RCEN 0000  
                                        _abs 3F9C                       ??_gpio_pin_logic_write 002A  
                                        _lcd 0050                                          _pad 28E0  
                     fp__I2C_DO_RX_NACK_STOP 0000                    ?i2_I2C_MasterWaitForEvent 0001  
                     _I2C_MasterWaitForEvent 4654                                  lcd_init@lcd 008F  
                                ?i2_I2C_Open 0001                                 ___awmod@sign 0006  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                     ?i2_rd1RegCompleteHandler 000A  
                 __end_of_lcd_send_char_data 32BA                        _I2C_DO_RCEN$intlevel0 4578  
               ??_I2C_SetAddressNackCallback 0030                          ??i2_I2C_DO_TX_EMPTY 000C  
                   ?i2_wr1RegCompleteHandler 000A                       _I2C_Write1ByteRegister 3ABE  
                            ?_lcd_set_curser 008F                     ??_I2C_CallbackReturnStop 0030  
                               _I2C_DO_RESET 4558                         ?i2_I2C_MasterSendAck 0001  
                     lcd_set_curser@gpio_ret 0095                                         ?_abs 0029  
                    ??_rd2RegCompleteHandler 0030                                         l1059 1484  
                                       l1184 1DDE                                         l1197 20BC  
                                       l1830 3CC4                                         l1823 192E  
                                       l1816 176E                                         l1745 1F56  
                                       l1834 3FD2                                         l1860 47A6  
                                       l1837 3FDA                                         l1829 3CBC  
                                       l1790 29A6                                         l1758 3E2C  
                                       l1849 28DE                                         l1857 3F0E  
                                       l1785 2926                                         l1866 408C  
                                       l1788 296A                                         l1796 152C  
                                       l1798 1534                                         ?_pad 0087  
                                       l8000 4506                                         l8002 450C  
                                       l8010 2768                                         l8030 280C  
                                       l8014 2770                                         l8006 2750  
                                       l8102 4604                                         l8110 4566  
                                       l6510 45AA                                         l8032 2812  
                                       l8024 2780                                         l8040 2C00  
                                       l8104 4608                                         l8112 456A  
                                       l8120 3982                                         l9000 46E0  
                                       l8200 2006                                         l9010 426C  
                                       l8026 27E0                                         l8018 2778  
                                       l8042 2C0E                                         l8130 3992  
                                       l8210 207C                                         l8202 2034  
                                       l9012 4278                                         l9004 4254  
                                       l8028 27F2                                         l8044 2C14  
                                       l8108 4562                                         l8124 398A  
                                       l8116 3976                                         l6508 459A  
                                       l8140 1C6A                                         l8212 209C  
                                       l8204 2054                                         l8220 2902  
                                       l8300 1504                                         l9100 3D88  
                                       l9014 427C                                         l9006 4258  
                                       l8054 2C3C                                         l8046 2C2C  
                                       l8070 4578                                         l8118 397A  
                                       l6630 1AC6                                         l8150 1CC0  
                                       l8142 1C8A                                         l8206 2066  
                                       l8230 294C                                         l8222 2912  
                                       l8310 155C                                         l8302 1506  
                                       l9102 3D88                                         l9008 4268  
                                       l8080 3354                                         l8064 2C4C  
                                       l8048 2C30                                         l8072 457C  
                                       l9120 350E                                         l9112 34C8  
                                       l9200 3B80                                         l8400 24C8  
                                       l9040 20C8                                         l6640 1AEA  
                                       l6632 1ACA                                         l8160 1D14  
                                       l8152 1CCC                                         l8144 1C8E  
                                       l8136 1C56                                         l8208 206C  
                                       l8240 3FB6                                         l8232 2978  
                                       l8224 291E                                         l8216 28E0  
                                       l8320 15FC                                         l8312 1562  
                                       l8304 1520                                         l9104 3D9C  
                                       l8090 3366                                         l8058 2C44  
                                       l8074 4580                                         l9122 3522  
                                       l9114 34CE                                         l8410 2514  
                                       l8402 24C8                                         l9130 35BC  
                                       l8250 2376                                         l9050 2126  
                                       l9042 20DA                                         l6650 1B12  
                                       l6642 1AF2                                         l6634 1AD2  
                                       l8170 1D88                                         l8162 1D26  
                                       l8154 1CEA                                         l8146 1C9C  
                                       l8138 1C5A                                         l8234 298C  
                                       l8226 2932                                         l8218 28EE  
                                       l8330 16A8                                         l8322 1604  
                                       l8314 156A                                         l8306 153C  
                                       l9106 3DA0                                         l7700 441E  
                                       l8084 335C                                         l9124 3526  
                                       l9116 34E6                                         l8420 2612  
                                       l8412 2576                                         l8404 24DA  
                                       l9140 3614                                         l9132 35BC  
                                       l8260 23C2                                         l8252 2376  
                                       l9060 2182                                         l9052 212A  
                                       l9044 20DE                                         l6660 1B96  
                                       l6644 1AFA                                         l6636 1ADA  
                                       l8164 1D54                                         l8156 1CF2  
                                       l8172 1D8E                                         l8148 1CBC  
                                       l8180 1F58                                         l8228 2946  
                                       l8340 170A                                         l8332 16C2  
                                       l8324 160A                                         l8316 1574  
                                       l8308 154E                                         l9108 3DBC  
                                       l8430 476A                                         l7702 4766  
                                       l8086 3360                                         l8078 334C  
                                       l9126 353A                                         l9118 34FA  
                                       l8414 25D2                                         l8422 2616  
                                       l8406 24FC                                         l9142 3624  
                                       l9134 35D0                                         l8270 24C0  
                                       l8262 2424                                         l8254 2388  
                                       l9070 21E2                                         l9062 219A  
                                       l9054 213A                                         l9046 2102  
                                       l9038 20BE                                         l9222 419A  
                                       l6670 1BBE                                         l6662 1B9E  
                                       l6646 1B02                                         l6638 1AE2  
                                       l6654 1B1A                                         l8174 1D9E  
                                       l8166 1D74                                         l8158 1D06  
                                       l8190 1F9E                                         l8182 1F5C  
                                       l8238 3F9C                                         l7710 2828  
                                       l8342 1710                                         l8350 1746  
                                       l8334 16DC                                         l8318 157A  
                                       l8326 166E                                         l7704 4762  
                                       l8096 336E                                         l8432 448A  
                                       l8600 43A0                                         l8416 25D6  
                                       l8408 250C                                         l9136 35D4  
                                       l8264 2480                                         l8272 24C4  
                                       l8256 23AA                                         l9072 21F4  
                                       l9064 21AC                                         l9056 214C  
                                       l9048 210A                                         l9224 419E  
                                       l6672 1BC6                                         l6664 1BA6  
                                       l6680 1C42                                         l6656 1B86  
                                       l6648 1B0A                                         l8176 1DBE  
                                       l8168 1D76                                         l8192 1FBE  
                                       l8184 1F6C                                         l7712 283A  
                                       l8344 1722                                         l8328 168A  
                                       l8336 16EA                                         l8440 1770  
                                       l9080 3448                                         l7706 4744  
                                       l8290 3A0C                                         l8282 39DE  
                                       l8434 448E                                         l8602 43A8  
                                       l8610 435C                                         l8418 2600  
                                       l9138 3604                                         l8266 2484  
                                       l8258 23BA                                         l9074 2206  
                                       l9066 21BE                                         l9058 215E  
                                       l9226 41AC                                         l6674 1BCE  
                                       l6666 1BAE                                         l6658 1B8E  
                                       l9170 3734                                         l8194 1FDC  
                                       l8186 1F8C                                         l7714 2844  
                                       l8346 172E                                         l8338 16FC  
                                       l8450 17E0                                         l8442 1796  
                                       l9090 3496                                         l9082 3452  
                                       l7900 4650                                         l8284 39E2  
                                       l8436 4492                                         l8604 43AC  
                                       l8612 436E                                         l8268 24AE  
                                       l8380 3D10                                         l8540 32D6  
                                       l9076 2218                                         l9068 21D0  
                                       l9228 41BA                                         l6668 1BB6  
                                       l8700 2EB6                                         l9180 379A  
                                       l9172 3746                                         l8196 1FE4  
                                       l8188 1F90                                         l7716 2862  
                                       l7708 2816                                         l8348 1736  
                                       l8292 148C                                         l8460 18AC  
                                       l8452 1806                                         l8444 17A4  
                                       l9092 349A                                         l9084 3464  
                                       l9500 1256                                         l8630 476E  
                                       l7590 3638                                         l7910 4616  
                                       l8286 39F2                                         l8438 4496  
                                       l8622 4446                                         l8614 4376  
                                       l8390 4022                                         l8382 3D14  
                                       l8542 32DE                                         l6678 1BD6  
                                       l8550 3232                                         l8702 2EBC  
                                       l9182 379E                                         l9174 3756  
                                       l8198 1FF8                                         l7718 2898  
                                       l8294 14AC                                         l8470 18EA  
                                       l8462 18BA                                         l8454 184E  
                                       l8446 17B6                                         l9094 34AE  
                                       l9086 3476                                         l9190 3E4A  
                                       l9510 12B6                                         l9502 1268  
                                       l8632 4772                                         l7592 364A  
                                       l7920 473E                                         l7904 463A  
                                       l7912 461A                                         l8288 3A06  
                                       l8640 3F2A                                         l8624 4454  
                                       l8616 437E                                         l8608 435C  
                                       l8800 38B8                                         l8392 4036  
                                       l8384 3D24                                         l8376 3CC6  
                                       l8544 333A                                         l8536 32BA  
                                       l8560 32B6                                         l8552 323C  
                                       l8704 2ED2                                         l8712 2F14  
                                       l9176 3766                                         l9168 372A  
                                       l8296 14D6                                         l8464 18CE  
                                       l8448 17BA                                         l9096 34C2  
                                       l9088 3486                                         l9192 3E4E  
                                       l9520 1316                                         l9512 12C8  
                                       l9504 1286                                         l7594 367E  
                                       l7906 463E                                         l7930 45F6  
                                       l7922 45E0                                         l8650 3F4E  
                                       l8642 3F2E                                         l8634 3F14  
                                       l8626 4464                                         l8618 4382  
                                       l8810 38FA                                         l8802 38F6  
                                       l8570 3D62                                         l8394 403E  
                                       l8378 3CD4                                         l8546 333E  
                                       l8538 32C4                                         l8554 324E  
                                       l8706 2EE8                                         l8714 2F4E  
                                       l9178 376E                                         l8298 14F6  
                                       l8458 1886                                         l8474 18F6  
                                       l8730 2D8E                                         l8722 2D58  
                                       l9194 3E5C                                         l9186 3E2E  
                                       l9530 1376                                         l9522 1328  
                                       l9514 12E6                                         l7692 4510  
                                       l7852 4104                                         l7860 40CE  
                                       l7916 475A                                         l7924 45E4  
                                       l8644 3F3E                                         l8652 3F52  
                                       l8636 3F1A                                         l8580 43B0  
                                       l8900 2E02                                         l8812 38FA  
                                       l8572 3D6A                                         l8564 3D28  
                                       l8396 4054                                         l8388 401C  
                                       l8556 3256                                         l8708 2EFE  
                                       l8740 1DE0                                         l8476 191C  
                                       l8468 18DC                                         l8660 3C78  
                                       l8732 2DC0                                         l8724 2D62  
                                       l9188 3E38                                         l9540 13D6  
                                       l9532 1388                                         l9524 1346  
                                       l9508 12A4                                         l9460 1094  
                                       l9452 105C                                         l7694 43FE  
                                       l7854 4118                                         l7862 40E2  
                                       l7870 40AC                                         l7934 475E  
                                       l7942 4756                                         l8646 3F46  
                                       l8638 3F28                                         l9198 3B2C  
                                       l8590 43D6                                         l8582 43B0  
                                       l8902 2E14                                         l8814 390C  
                                       l8574 3D7A                                         l8566 3D2E  
                                       l8558 32B2                                         l8750 1E42  
                                       l8662 3C9E                                         l8734 2DC6  
                                       l8726 2D74                                         l9550 1436  
                                       l9542 13E8                                         l9534 13A6  
                                       l9518 1304                                         l9470 1102  
                                       l9462 10B2                                         l9454 1060  
                                       l7696 440E                                         l7880 4162  
                                       l7856 412C                                         l7864 40F6  
                                       l7872 40C0                                         l7944 46AA  
                                       l7936 4628                                         l7928 45F2  
                                       l8648 3F4A                                         l8584 43C2  
                                       l8904 2E1C                                         l8816 3916  
                                       l8840 262C                                         l8576 3D80  
                                       l8568 3D40                                         l8752 1E9A  
                                       l8744 1DFE                                         l7952 3EC8  
                                       l7960 4058                                         l8656 3C62  
                                       l8736 2DF8                                         l8728 2D86  
                                       l9552 1448                                         l9544 1406  
                                       l9528 1364                                         l9480 117C  
                                       l9472 111C                                         l9464 10C0  
                                       l9456 1070                                         l7698 4416  
                                       l7938 462C                                         l8586 43CA  
                                       l8594 4386                                         l8906 2E36  
                                       l8914 2E6A                                         l8826 392A  
                                       l8850 2674                                         l8842 2634  
                                       l8930 33EA                                         l8690 3858  
                                       l8682 3816                                         l8770 1F44  
                                       l8762 1EFA                                         l8746 1E0A  
                                       l7954 3ED6                                         l7962 4064  
                                       l8658 3C6A                                         l9554 1466  
                                       l9538 13C4                                         l9490 11E6  
                                       l9482 118A                                         l9474 1136  
                                       l9466 10DA                                         l9458 1082  
                                       l7980 4776                                         l7876 413A  
                                       l7868 4098                                         l7884 3E86  
                                       l7948 469C                                         l7892 45AE  
                                       l8588 43D2                                         l8596 4386  
                                       l8908 2E50                                         l8916 2EA8  
                                       l8828 3968                                         l8852 267C  
                                       l8844 2650                                         l8836 261A  
                                       l8940 3406                                         l8924 33CA  
                                       l8692 3880                                         l8684 381C  
                                       l8764 1F2E                                         l8756 1EB4  
                                       l7956 3EE8                                         l7964 4068  
                                       l8780 3E1A                                         l8772 3DDA  
                                       l9548 1424                                         l9492 1200  
                                       l9484 11A4                                         l9476 1144  
                                       l9468 10F4                                         l7878 414E  
                                       l7886 3EB0                                         l7982 458E  
                                       l7990 44D0                                         l8950 3118  
                                       l8598 4398                                         l8790 38A4  
                                       l8862 26C0                                         l8854 2698  
                                       l8846 2656                                         l8838 261A  
                                       l8942 3444                                         l8926 33CA  
                                       l8694 3884                                         l8686 382E  
                                       l8766 1F3A                                         l8758 1EE0  
                                       l7958 3EEE                                         l7966 4080  
                                       l8774 3DEC                                         l9494 120E  
                                       l9486 11BE                                         l9478 115E  
                                       l7888 3EC4                                         l7896 46EA  
                                       l7984 4592                                         l7992 44D4  
                                       l8960 3134                                         l8952 311C  
                                       l8784 3888                                         l8864 26DC  
                                       l8856 269E                                         l8848 2672  
                                       l8928 33DC                                         l8688 3850  
                                       l8768 1F40                                         l8776 3DF4  
                                       l9496 1228                                         l9488 11CC  
                                       l7986 4596                                         l7994 44DC  
                                       l7898 464C                                         l8970 314C  
                                       l8962 3136                                         l8954 312C  
                                       l8786 3888                                         l8866 26E2  
                                       l8858 26BA                                         l8890 417A  
                                       l8698 2EAC                                         l8778 3DFC  
                                       l9498 1246                                         l8980 3174  
                                       l8972 3154                                         l8964 313A  
                                       l8956 3130                                         l8788 389A  
                                       l8868 26FE                                         l8876 2704  
                                       l8892 4182                                         l7998 4502  
                                       l8990 3198                                         l8982 317C  
                                       l8974 315C                                         l8966 3142  
                                       l8958 3132                                         l8878 2742  
                                       l8894 4196                                         l8886 4166  
                                       STR_1 1058                                         l8992 319C  
                                       l8984 3184                                         l8976 3164  
                                       l8968 3144                                         l8888 4166  
                                       l9960 1B30                                         l8986 318C  
                                       l8978 316C                                         l8994 31A0  
                                       l8898 2E02                                         l9970 2724  
                                       l9962 1BEC                                         STR_4 1041  
                                       STR_5 1047                                         l9980 2C80  
                                       l8988 3194                                         l9972 38D8  
                                       l9964 2498                                         STR_6 1021  
                                       STR_7 102A                                         l9982 27B6  
                                       l8998 44E0                                         l9974 394A  
                                       l9966 25EA                                         l9958 2F28  
                                       STR_8 103A                                         STR_9 1053  
                                       l9984 33A2                                         l9976 2E8A  
                                       l9968 3426                                         l9978 39C6  
               fp_i2_rdBlkRegCompleteHandler 0000                             ?_lcd_send_enable 0080  
                                       _LATA 000F89                                         _LATB 000F8A  
                                       _LATC 000F8B                                         _LATD 000F8C  
                                       _LATE 000F8D                                         u5010 280C  
                                       u5011 2808                                         u5020 2C2C  
                                       u5100 1D14                                         u5021 2C28  
                                       u5101 1D10                                         u5110 1D54  
                                       u5111 1D50                                         u5008 278E  
                                       u6000 417A                                         u5120 1D9E  
                                       u5200 2912                                         u5009 27A2  
                                       u6001 4176                                         u5121 1D9A  
                                       u5201 290E                                         u6010 2E14  
                                       u5130 1F6C                                         u5210 296A  
                                       u6011 2E10                                         u5131 1F68  
                                       u5211 2966                                         u6020 33DC  
                                       u5060 1C6A                                         u5140 1F9E  
                                       u5220 2978                                         u6100 3464  
                                       u6021 33D8                                         u5061 1C66  
                                       u5141 1F9A                                         u5221 2974  
                                       u6101 3460                                         u5038 2C5A  
                                       u5310 4662                                         u6030 312C  
                                       u5070 1C9C                                         u5150 1FDC  
                                       u5230 3FB6                                         u6110 3476  
                                       u5039 2C6C                                         u5311 465E  
                                       u6031 3128                                         u5071 1C98  
                                       u5151 1FD8                                         u5231 3FB2  
                                       u6111 3472                                         u6040 4268  
                                       u5048 337C                                         u5320 39F2  
                                       u5160 2006                                         u5400 154E  
                                       u6120 3486                                         u6041 4264  
                                       u5049 338E                                         u5321 39EE  
                                       u5305 24BE                                         u5081 1CC6  
                                       u5161 2002                                         u5401 154A  
                                       u6121 3482                                         u5058 39A0  
                                       u5330 3A06                                         u5306 24C0  
                                       u5250 2388                                         u6210 3746  
                                       u5090 1CEA                                         u5170 2034  
                                       u5410 155C                                         u6130 3496  
                                       u5059 39B2                                         u5331 3A02  
                                       u5251 2384                                         u6211 3742  
                                       u5091 1CE6                                         u5171 2030  
                                       u5411 1558                                         u6131 3492  
                                       u5260 23AA                                         u6220 3756  
                                       u5180 207C                                         u5420 168A  
                                       u6140 3D9C                                         u5261 23A6  
                                       u6221 3752                                         u5181 2078  
                                       u5421 1686                                         u6141 3D98  
                                       u6150 34E6                                         u5270 23BA  
                                       u6230 3766                                         u5190 28EE  
                                       u5430 16A8                                         u5350 14BE  
                                       u6151 34E2                                         u5271 23B6  
                                       u6231 3762                                         u5191 28EA  
                                       u5431 16A4                                         u5351 14B8  
                                       u5600 44A6                                         u6160 353A  
                                       u6080 20DA                                         u5440 16C2  
                                       u5360 14C0                                         u6240 3E4A  
                                       u5601 44A2                                         u6161 3536  
                                       u6081 20D6                                         u5441 16BE  
                                       u6241 3E46                                         u4810 440E  
                                       u6170 35D0                                         u5530 3D24  
                                       u6090 213A                                         u5450 16DC  
                                       u5370 14D6                                         u5610 1796  
                                       u4811 440A                                         u6251 3B8A  
                                       u6171 35CC                                         u5531 3D20  
                                       u6091 2136                                         u5451 16D8  
                                       u5371 14D2                                         u5611 1792  
                                       u5348 3A36                                         u5700 43C2  
                                       u5540 24DA                                         u5284 23E2  
                                       u5524 3CFE                                         u4820 2828  
                                       u5460 16EA                                         u5380 1504  
                                       u5620 17E0                                         u5349 3A48  
                                       u5701 43BE                                         u5541 24D6  
                                       u5285 23DE                                         u5525 3CFA  
                                       u4821 2824                                         u5461 16E6  
                                       u5381 1500                                         u5621 17DC  
                                       u5710 4398                                         u5550 24FC  
                                       u5294 2444                                         u4830 283A  
                                       u5470 16FC                                         u5390 1520  
                                       u5630 1806                                         u5711 4394  
                                       u5551 24F8                                         u5295 2440  
                                       u4831 2836                                         u5471 16F8  
                                       u5391 151C                                         u5631 1802  
                                       u5720 436E                                         u5560 250C  
                                       u5800 3850                                         u4840 2862  
                                       u5480 170A                                         u5640 18AC  
                                       u5721 436A                                         u5561 2508  
                                       u5801 384C                                         u4841 285E  
                                       u5481 1706                                         u5641 18A8  
                                       u4930 45BE                                         u5730 4454  
                                       u4850 2898                                         u5490 1722  
                                       u5810 2D74                                         u4931 45B8  
                                       u5731 4450                                         u4851 2894  
                                       u5491 171E                                         u5811 2D70  
                                       u5740 3F28                                         u5660 32D6  
                                       u5900 1F56                                         u4940 3F0E  
                                       u5820 2D86                                         u6620 1070  
                                       u5741 3F24                                         u5661 32D2  
                                       u5901 1F52                                         u4941 3F0A  
                                       u5821 2D82                                         u6621 106C  
                                       u4790 364A                                         u5750 3F3E  
                                       u5910 389A                                         u5574 2534  
                                       u5670 324E                                         u4950 4080  
                                       u5830 2DB8                                         u4791 3646  
                                       u5751 3F3A                                         u5911 3896  
                                       u5575 2530                                         u5671 324A  
                                       u4951 407C                                         u6631 108C  
                                       u4936 45C0                                         u5920 390C  
                                       u5584 2596                                         u5680 3D40  
                                       u5760 3CBC                                         u5840 2DE8  
                                       u6640 1256                                         u5921 3908  
                                       u5585 2592                                         u5681 3D3C  
                                       u5761 3CB8                                         u6641 1252  
                                       u5930 262C                                         u5690 3D62  
                                       u5850 2DF8                                         u6650 12B6  
                                       u5931 2628                                         u5595 2610  
                                       u5691 3D5E                                         u5851 2DF4  
                                       u6651 12B2                                         u6707 1234  
                                       u5940 2650                                         u5596 2612  
                                       u5860 1DFA                                         u6660 1316  
                                       u5941 264C                                         u6717 2142  
                                       u5861 1DF6                                         u5837 2DAE  
                                       u6661 1312                                         u4990 2764  
                                       u5950 2672                                         u5790 382E  
                                       u5870 1E3E                                         u6670 1376  
                                       u4991 2760                                         u5951 266E  
                                       u5791 382A                                         u6727 2166  
                                       u5871 1E3A                                         u5847 2DDE  
                                       u6671 1372                                         u5960 2698  
                                       u5880 1EB0                                         u6680 13D6  
                                       u5961 2694                                         u6737 218E  
                                       u5881 1EAC                                         u6681 13D2  
                                       u5970 26BA                                         u5890 1EF6  
                                       u6690 1436                                         u5971 26B6  
                                       u6747 4038                                         u5891 1EF2  
                                       u6691 1432                                         u5980 26DC  
                                       u5981 26D8                                         u5990 26FE  
                                       u5991 26FA                                 ?i2_I2C_DO_RX 0001  
                               ?i2_I2C_DO_TX 0001                         ??i2_I2C_MasterIsNack 0001  
                    ??_wr2RegCompleteHandler 0030            __end_of_interrupt_INTx_clear_flag 396C  
                       ?i2_I2C_MasterStartRx 0001                            fp_i2_I2C_DO_RESET 0000  
                                       abs@a 0029                                         _dbuf 0106  
                      i2_I2C_MasterOperation 3F58                                         _main 105C  
                                       _dtoa 148C                     ?_I2C_CallbackReturnReset 0080  
                                       _latx 0130                                 ?i2_I2C_Close 0001  
                       ??i2_I2C_MasterSetIrq 0001                                         _prec 0031  
                                       _nout 00F5                                         pad@i 008D  
                                       pad@p 008B                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       pad@w 008F                                         fsr2l 000FD9  
                           __end_of_I2C_Open 31A4                     ?_gpio_pin_direction_init 0027  
                                       btemp 0059                        ?i2_I2C_MasterClearIrq 0001  
                           ?_lcd_send_string 008F                                         prodh 000FF4  
                                       prodl 000FF3                                         start 000E  
                  i2I2C_MasterOperation@read 0010                    convert_BCD_to_int@BCD_num 002B  
               fp__I2C_DO_SEND_RESTART_WRITE 0000                   i2rd1RegCompleteHandler@ptr 000A  
               ??i2_I2C_DO_SEND_RESTART_READ 0001                                 ___param_bank 000000  
                     convert_BCD_to_int@ones 002D                       convert_BCD_to_int@tens 002C  
                    _interrupt_INTx_pin_init 4166                    __end_ofi2_I2C_DO_TX_EMPTY 35BC  
              _I2C_DO_RX_NACK_STOP$intlevel0 45F2                     _interrupt_INTx_edge_init 261A  
                                      ??_abs 002B                                        ??_pad 0030  
                           ?_I2C_MasterClose 0001                    ?_gpio_pin_output_low_init 0080  
                           __end_of_INT0_ISR 4254                  ??_INT2_set_InterruptHandler 0029  
                           __end_of_INT1_ISR 4226                             __end_of_INT2_ISR 41F8  
                           ?_I2C_MasterStart 0001                                _I2C_DO_RX_ACK 45FA  
                           ?_I2C_MasterWrite 0001                        ?i2_I2C_MasterSendNack 0001  
                     i2_I2C_MasterSendTxData 4730                              __end_of___aodiv 1DE0  
                                      ?_main 0001                                        ?_dtoa 0091  
                            __end_of___aomod 20BE                              __end_of___awdiv 2B32  
                                      STR_10 1033                                        STR_11 104D  
                            __end_of___awmod 2D58                        _I2C_Read1ByteRegister 34C4  
                            ___awdiv@divisor 0003                                        i2l144 3BFA  
                                      i2l400 4252                                        i2l404 4224  
                                      i2l408 41F6                                        i2l530 3814  
                                      i2l198 1AC2                                        i2l359 2A3A  
                                      i2l800 46BA                                        i2l803 2BBC  
                                      i2l820 2FF6                                        i2l548 3B2A  
                                      i2l742 435A                                        i2l590 42D6  
                                      i2l806 2BF4                                        i2l831 46D2  
                                      i2l903 4488                                        i2l912 4736  
                                      i2l761 4444                                        i2l593 42AA  
                                      i2l921 4784                                        i2l906 47A0  
                                      i2l930 45D4                                        i2l754 46F6  
                                      i2l738 3230                                        i2l770 453E  
                                      i2l915 4794                                        i2l587 4302  
                                      i2l819 2F88                                        i2l924 4798  
                                      i2l764 4556                                        i2l596 432E  
                                      i2l748 3F9A                                        i2l781 3728  
                                      i2l909 4780                                        i2l933 474E  
                                      i2l837 35BA                                        i2l861 471E  
                                      i2l870 4706                                        i2l951 479C  
                                      i2l927 4790                                        i2l599 401A  
                                      i2l855 472E                                        i2l791 3ABC  
                                      i2l936 4754                                        i2l864 4716  
                                      i2l960 4664                                        i2l873 46FE  
                                      i2l954 47A4                                        i2l890 478C  
                                      i2l794 46DE                                        i2l858 4726  
                                      i2l882 3C60                                        i2l867 470E  
                                      i2l787 44C4                                        i2l876 46C6  
                                      i2l964 4672                              ___awdiv@counter 0005  
                                      i2l893 4788                                        i2l957 477C  
                                      i2l797 4682                            ?_lcd_send_command 0089  
                               vfpfcnvrt@fmt 00B7                                        _PORTA 000F80  
                                      _PORTB 000F81                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                          ??_I2C_DO_TX_EMPTY 0082                                        _TRISA 000F92  
                                      _TRISB 000F93                                        _TRISC 000F94  
                                      _TRISD 000F95                                        _TRISE 000F96  
                     gpio_pin_input_init@pin 0080                       gpio_pin_input_init@ret 0084  
                         ??_lcd_send_command 0031                            __end_of_I2C_DO_RX 2CA8  
                          __end_of_I2C_DO_TX 2816                       lcd_send_string@lcd_ret 0094  
                    ??i2_I2C_DO_SEND_RESTART 0001                                        _flags 0033  
                      ??i2_I2C_MasterSendAck 0001                                        _fputc 2816  
                          __end_of_I2C_Close 4280                                        _fputs 3EC8  
            INTx_select_InterruptHandler@ret 002E                           fp_i2_I2C_DO_RX_ACK 0000  
           i2I2C_MasterOperation@returnValue 0011               I2C_MasterOperation@returnValue 0087  
                                      pad@fp 0087                                        _width 00F7  
                                      _portx 0126                                        _putch 47A6  
                                      dtoa@d 0093                                        dtoa@i 00B3  
                                      dtoa@n 00AB                                        dtoa@p 00A5  
                                      dtoa@s 00A9                                        _trisx 013A  
                                      dtoa@w 00A7                   ?i2_I2C_MasterEnableRestart 0001  
                    _I2C_MasterEnableRestart 4766                          _I2C_DO_RX$intlevel0 2C00  
         _I2C_DO_SEND_RESTART_READ$intlevel0 464C                                        pclath 000FFA  
                                      pclatu 000FFB                                ?i2_I2C_Poller 0001  
                                      tablat 000FF5                             ?_I2C_SetCallback 0027  
                      ??i2_I2C_MasterStartRx 0001          __end_ofi2_I2C_DO_SEND_RESTART_WRITE 4728  
                i2_I2C_DO_SEND_RESTART_WRITE 4720                 I2C_SetAddressNackCallback@cb 002C  
                                      plusw0 000FEB                                        plusw2 000FDB  
                         _convert_BCD_to_int 1AC4                                        ttemp5 005A  
                                      ttemp6 005D                                        ttemp7 0061  
                                      status 000FD8                                        wtemp8 005A  
                            __end_of_sprintf 3E2E                            ?_I2C_DO_SEND_STOP 0001  
                     ?i2_I2C_MasterGetRxData 0001                                i2_I2C_DO_IDLE 46D4  
                      i2_I2C_DO_RX_NACK_STOP 4700                                i2_I2C_DO_RCEN 46C8  
                         ??_I2C_DO_SEND_STOP 0027                     fp__rd1RegCompleteHandler 0000  
                            __initialization 3088                          ?_convert_BCD_to_int 0027  
                      i2I2C_SetBuffer@buffer 0001                                 __end_of_main 148C  
                               __end_of_dtoa 1770                     fp__wr1RegCompleteHandler 0000  
                  convert_BCD_to_int@int_num 0027         __end_of_INTx_select_InterruptHandler 2EAC  
               _INTx_select_InterruptHandler 2E02                    ?_I2C_DO_SEND_RESTART_READ 0001  
                 ?_INT1_set_InterruptHandler 0027                               ?_I2C_DO_RX_ACK 0001  
                       __end_of_APP_INT0_ISR 3088                         __end_of_APP_INT1_ISR 2376  
            __end_ofi2_rd1RegCompleteHandler 4304                       ?i2_I2C_DO_ADDRESS_NACK 0001  
                                     ??_main 0169                                       ??_dtoa 009B  
                          ?_I2C_MasterIsNack 0001                    lcd_send_nbits@pin_counter 0088  
       __end_ofi2_I2C_SetAddressNackCallback 4540                 i2_I2C_SetAddressNackCallback 4528  
                              __activetblptr 000003              __end_ofi2_wr1RegCompleteHandler 42AC  
                              ??__Initialize 0031                            ?_I2C_MasterSetIrq 0001  
                         ??_I2C_MasterIsNack 0027                   i2wr1RegCompleteHandler@ptr 000A  
                       ??_convert_BCD_to_int 0029                           ??_I2C_MasterSetIrq 0027  
                    lcd_send_enable@gpio_ret 0082              __end_of_I2C_CallbackReturnReset 46A0  
                                     ?_fputc 0027                                       ?_fputs 0080  
                           ___awdiv@dividend 0001                     ??i2_I2C_DO_SEND_ADR_READ 0001  
              I2C_SetDataCompleteCallback@cb 002C              i2I2C_SetDataCompleteCallback@cb 0006  
                                     ?_putch 0001                               ??i2_I2C_Poller 0010  
                  _INT2_set_InterruptHandler 435C                                 ??_I2C_Poller 0030  
                     lcd_send_string_pos@lcd 0097                       _lcd_send_char_data_pos 372A  
                        _I2C_DO_TX$intlevel0 2750                                       i2l1026 3086  
                                     i2l1301 2B30                                       i2l1037 2374  
                                     i2l1046 2374                                       i2l1314 2D56  
                     lcd_send_string_pos@row 0099                                       i2l5014 46BC  
                     lcd_send_string_pos@str 009B                                       i2l5016 46C0  
                     lcd_send_number@counter 003E                                       i2l5042 47A2  
                                     i2l5018 46C4                                       i2l6100 1966  
                                     i2l6102 196E                                       i2l6110 197E  
                                     i2l6120 1A14                                       i2l6112 19F4  
                                     i2l6104 1976                       ?i2_I2C_MasterOperation 0001  
                                     i2l6122 1A1C                                       i2l6114 19FC  
                                     i2l6124 1A24                                       i2l6116 1A04  
                                     i2l6126 1A2C                                       i2l6118 1A0C  
                                     i2l6134 1A3C                                       i2l6128 1A34  
                                     i2l6136 1AB2                                       i2l6090 193E  
                                     i2l5444 4796                                       i2l6092 1946  
                                     i2l6094 194E                                       i2l6086 1932  
                                     i2l6096 1956                                       i2l6088 1936  
                                     i2l6098 195E                                       i2l5580 479E  
                                     i2l5740 4334                                       i2l5572 4468  
                                     i2l9020 3AC0                                       i2l5900 2AD0  
                                     i2l6540 223C                                       i2l5582 479A  
                                     i2l5742 4344                                       i2l5574 4476  
                                     i2l9030 3B16                                       i2l9022 3AD6  
                                     i2l5910 2B04                                       i2l5902 2ADE  
                                     i2l6550 2276                                       i2l6542 2240  
                                     i2l6534 221A                                       i2l5744 4348  
                                     i2l7600 4300                                       i2l4848 4782  
                                     i2l4856 477A                                       i2l5576 4486  
                                     i2l9024 3AEA                                       i2l9032 3B94  
                                     i2l5912 2B0A                                       i2l5904 2AE4  
                                     i2l6560 22B0                                       i2l6552 227A  
                                     i2l6536 222A                                       i2l6544 2252  
                                     i2l5746 4354                                       i2l5738 4330  
                                     i2l4890 46D8                                       i2l8242 44A8  
                                     i2l9026 3AFE                                       i2l9018 3AC0  
                                     i2l9034 3BE8                                       i2l5906 2AFA  
                                     i2l5914 2B10                                       i2l5930 2CC6  
                                     i2l5922 2CA8                                       i2l6570 22EA  
                                     i2l6562 22B4                                       i2l6546 2264  
                                     i2l6554 228C                                       i2l6538 222C  
                                     i2l9210 41F8                                       i2l5748 4358  
                                     i2l7620 4304                                       i2l7604 42AC  
                                     i2l7612 4280                                       i2l4892 46DC  
                                     i2l4980 46D0                                       i2l8244 44AC  
                                     i2l8500 31D2                                       i2l9028 3B12  
                                     i2l5916 2B20                                       i2l5908 2B02  
                                     i2l5940 2CFE                                       i2l5932 2CD4  
                                     i2l5924 2CAC                                       i2l6580 2324  
                                     i2l6572 22EE                                       i2l6556 229E  
                                     i2l6564 22C6                                       i2l6548 2266  
                                     i2l9204 4226                                       i2l9212 41FA  
                                     i2l9220 41DE                                       i2l7622 4318  
                                     i2l7606 42C0                                       i2l7614 4294  
                                     i2l7630 4004                                       i2l8246 44B0  
                                     i2l8510 31FA                                       i2l8502 31DA  
                                     i2l5918 2B28                                       i2l5942 2D0C  
                                     i2l5950 2D36                                       i2l5934 2CDC  
                                     i2l5926 2CBA                                       i2l6590 235E  
                                     i2l6582 2328                                       i2l6566 22D8  
                                     i2l6574 2300                                       i2l6558 22A0  
                                     i2l9150 301A                                       i2l9206 4228  
                                     i2l9214 420C                                       i2l7624 432C  
                                     i2l7608 42D4                                       i2l7616 42A8  
                                     i2l7632 4018                                       i2l4888 46D4  
                                     i2l4976 46C8                                       i2l8248 44B4  
                                     i2l8360 3F70                                       i2l8520 3222  
                                     i2l8512 3202                                       i2l8504 31E2  
                                     i2l5880 2A72                                       i2l5952 2D46  
                                     i2l5944 2D22                                       i2l5936 2CEE  
                                     i2l5928 2CC2                                       i2l6592 2362  
                                     i2l6576 2312                                       i2l6584 233A  
                                     i2l6568 22DA                                       i2l9160 304E  
                                     i2l9152 301C                                       i2l9208 423A  
                                     i2l9216 41CA                                       i2l9320 29DA  
                                     i2l7570 36C4                                       i2l7810 3554  
                                     i2l7802 3540                                       i2l7722 4674  
                                     i2l7730 46AE                                       i2l4978 46CC  
                                     i2l7642 4720                                       i2l7650 471C  
                                     i2l8370 3F94                                       i2l8362 3F74  
                                     i2l8354 3F5A                                       i2l8530 46F0  
                                     i2l8522 3226                                       i2l8514 320A  
                                     i2l8506 31EA                                       i2l5890 2AA2  
                                     i2l5882 2A80                                       i2l5954 2D4E  
                                     i2l5946 2D2A                                       i2l5938 2CF6  
                                     i2l6586 234C                                       i2l6578 2314  
                                     i2l9162 305C                                       i2l9154 302E  
                                     i2l9146 2FF8                                       i2l9218 41CC  
                                     i2l9330 2A16                                       i2l9322 29E8  
                                     i2l7580 4442                                       i2l7572 36F8  
                                     i2l7628 3FDC                                       i2l7804 3548  
                                     i2l7820 3562                                       i2l7724 4678  
                                     i2l7732 46B2                                       i2l7636 4728  
                                     i2l7644 4724                                       i2l7660 4700  
                                     i2l8364 3F84                                       i2l8372 3F98  
                                     i2l8356 3F5E                                       i2l8524 322A  
                                     i2l8516 3212                                       i2l8508 31F2  
                                     i2l5892 2AA6                                       i2l5884 2A88  
                                     i2l5948 2D30                                       i2l6588 234E  
                                     i2l9164 306A                                       i2l9156 3032  
                                     i2l9148 3008                                       i2l9332 2A1A  
                                     i2l9324 29F6                                       i2l7574 4422  
                                     i2l7582 4540                                       i2l7814 355A  
                                     i2l7726 4680                                       i2l7734 46B8  
                                     i2l7750 2B5A                                       i2l7742 2B4A  
                                     i2l7638 472C                                       i2l7654 4710  
                                     i2l7662 4704                                       i2l8366 3F8C  
                                     i2l8358 3F6E                                       i2l8518 321A  
                                     i2l8526 322E                                       i2l8534 4528  
                                     i2l5894 2AAE                                       i2l5886 2A8C  
                                     i2l5878 2A6E                                       i2l9166 3078  
                                     i2l9158 3040                                       i2l9334 2A28  
                                     i2l9326 29FA                                       i2l7584 4792  
                                     i2l7576 4432                                       i2l7568 36B2  
                                     i2l7672 478A                                       i2l7680 477E  
                                     i2l7808 3550                                       i2l7760 2BD2  
                                     i2l7648 4718                                       i2l7656 4714  
                                     i2l7840 3C10                                       i2l7832 3BFC  
                                     i2l8368 3F90                                       i2l5896 2AC0  
                                     i2l5888 2A9A                                       i2l9336 2A36  
                                     i2l9328 2A08                                       i2l7586 478E  
                                     i2l7578 443A                                       i2l7690 474A  
                                     i2l7762 2BEC                                       i2l7746 2B52  
                                     i2l7738 2B32                                       i2l7826 4708  
                                     i2l7666 46F8                                       i2l7834 3C00  
                                     i2l8490 31C0                                       i2l8482 31A6  
                                     i2l5898 2AC8                                       i2l7596 42D8  
                                     i2l7676 4786                                       i2l7588 4750  
                                     i2l7684 4732                                       i2l7764 2BF2  
                                     i2l7756 2B62                                       i2l7780 2F82  
                                     i2l7772 2F52                                       i2l7828 470C  
                                     i2l7668 46FC                                       i2l7836 3C08  
                                     i2l8492 31C2                                       i2l8484 31AA  
                                     i2l7598 42EC                                       i2l7686 45C2  
                                     i2l7758 2BC0                                       i2l7790 2F96  
                                     i2l7774 2F60                                       i2l7846 3C18  
                                     i2l8494 31C4                                       i2l8486 31BA  
                                     i2l8670 37D2                                       i2l7776 2F66  
                                     i2l8496 31C8                                       i2l8488 31BE  
                                     i2l8672 37E6                                       i2l8664 37A4  
                                     i2l7786 2F8E                                       i2l7778 2F7E  
                                     i2l7970 3A4E                                       i2l8498 31D0  
                                     i2l8674 37FA                                       i2l8666 37A8  
                                     i2l7796 2F9E                                       i2l7972 3A52  
                                     i2l8676 37FE                                       i2l8668 37BE  
                                     i2l7974 3A62                                       i2l8678 3812  
                                     i2l7976 3A76                                       i2l7978 3A7C  
          __end_ofi2_I2C_MasterEnableRestart 4796                                       i2l9990 3C4A  
                                     i2l9992 2FD0                                       i2l9994 2B96  
                                     i2l9986 199E                                       i2l9996 3594  
                                     i2l9988 1A5C                       ??i2_I2C_MasterClearIrq 0001  
                     _I2C_DO_RESET$intlevel0 4562                               ?i2_I2C_DO_IDLE 0001  
                                     _SSPADD 000FC8                               ?i2_I2C_DO_RCEN 0001  
                                     _SSPBUF 000FC9  __end_ofi2_RealTimeClockDS1307_Get_Date_Time 3BFC  
  __end_of_RealTimeClockDS1307_Get_Date_Time 3B94          ??_RealTimeClockDS1307_Get_Date_Time 0031  
      ??i2_RealTimeClockDS1307_Get_Date_Time 001B         ?i2_RealTimeClockDS1307_Get_Date_Time 0015  
         ?_RealTimeClockDS1307_Get_Date_Time 008A          i2_RealTimeClockDS1307_Get_Date_Time 3B94  
          _RealTimeClockDS1307_Get_Date_Time 3B2C              _I2C_DO_SEND_ADR_WRITE$intlevel0 4502  
                  ??_interrupt_INTx_pin_init 0031                          _I2C_MasterGetRxData 475A  
                               vfprintf@cfmt 014A                             __end_of_lcd_init 221A  
                 _I2C_DO_SEND_STOP$intlevel0 4616                                    ??___aodiv 0027  
                                  ??___aomod 0027                                _I2C_MasterFsm 39DE  
                                  ??___awdiv 0005                                    ??___awmod 0005  
                  interrupt_INTx_disable@ret 002B                       ??i2_I2C_MasterSendNack 0001  
                                     _memset 1DE0            __end_of_INT1_set_InterruptHandler 43B0  
                                     clear_0 30EE                                       clear_1 30FA  
                                     clear_2 3106                            I2C_SetCallback@cb 0027  
              ?_INTx_select_InterruptHandler 002A                             ___awdiv@quotient 0007  
                    fp__I2C_DO_SEND_ADR_READ 0000                              ___awmod@divisor 0003  
                    lcd_send_string@gpio_ret 0093                       ?_I2C_Read1ByteRegister 0030  
                                     isa$std 000001                              ___awmod@counter 0005  
                                     pad@buf 0089                                _I2C_SetBuffer 43FE  
                                     dtoa@fp 0091                           __end_of_I2C_Poller 44A8  
                                     _strlen 4058                 __end_of_I2C_MasterDisableIrq 4772  
                 ??i2_I2C_DO_RX_NACK_RESTART 0001                  __end_of_lcd_send_number_pos 3E7C  
                                     fputc@c 0027               _I2C_DO_SEND_ADR_READ$intlevel0 44D0  
                                     fputs@c 0084                          _I2C_DO_ADDRESS_NACK 396C  
                                     fputs@i 0085                                 __pdataCOMRAM 004B  
                                     fputs@s 0080                         ?_I2C_MasterGetRxData 0001  
                                  ?_I2C_Open 0001           __end_of_I2C_SetAddressNackCallback 44F8  
              ?i2_I2C_SetAddressNackCallback 0006                   _I2C_SetAddressNackCallback 44E0  
                               __mediumconst 0000                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                  ??_I2C_MasterEnableRestart 0027                                       putch@c 0001  
                           __end_of_vfprintf 3CC6    INT2_set_InterruptHandler@InterruptHandler 0027  
  INT1_set_InterruptHandler@InterruptHandler 0027    INT0_set_InterruptHandler@InterruptHandler 0027  
                                  ??_sprintf 0031                          __end_of__Initialize 41CA  
                    ?i2_I2C_MasterDisableIrq 0001                               i2_I2C_DO_RESET 46BC  
                    _convert_uint8_to_string 3D84                                   __accesstop 0080  
                    __end_of__initialization 310C                       ?i2_I2C_DO_RX_NACK_STOP 0001  
                           i2_I2C_MasterOpen 4468                       lcd_send_number_pos@lcd 0162  
                                  ?_INT0_ISR 0001                             i2_I2C_MasterStop 478E  
                                  ?_INT1_ISR 0001                _I2C_DO_ADDRESS_NACK$intlevel0 3976  
                                  ?_INT2_ISR 0001                       lcd_send_number_pos@num 0166  
                     lcd_send_number_pos@row 0164                          _I2C_MasterOperation 3F10  
          interrupt_INTx_pin_init@_interrupt 0085                            ??i2_I2C_DO_RX_ACK 0001  
                              ___rparam_used 000001                         ?_I2C_DO_ADDRESS_NACK 0001  
          _rdBlkRegCompleteHandler$intlevel0 3E86                         lcd_set_curser@column 0092  
         __end_ofi2_I2C_DO_SEND_RESTART_READ 4730                   i2_I2C_DO_SEND_RESTART_READ 4728  
                      _interrupt_INTx_enable 33CA                   convert_uint8_to_string@str 015F  
                 ?i2_rdBlkRegCompleteHandler 000A                      _rdBlkRegCompleteHandler 3E7C  
                 fp__rdBlkRegCompleteHandler 0000             __end_ofi2_I2C_MasterWaitForEvent 4674  
                             __pcstackCOMRAM 0001                               ?_I2C_MasterFsm 0001  
                            ??_I2C_DO_RX_ACK 0027                                 __pidataBANK0 4738  
                               __pidataBANK1 43DA                    ?i2_I2C_CallbackReturnStop 000A  
                     _I2C_CallbackReturnStop 46A0                   i2I2C_Read1ByteRegister@reg 0012  
                           ??_lcd_send_nbits 0083                                __end_of_fputc 28E0  
                              __end_of_fputs 3F10                                __end_of_putch 47A8  
                             ?_I2C_SetBuffer 0027                      ?_I2C_MasterWaitForEvent 0001  
                    i2_I2C_Read1ByteRegister 37A2                  __end_of_lcd_send_string_pos 34C4  
                lcd_send_string_pos@gpio_ret 009D                __end_of_I2C_DO_SEND_ADR_WRITE 4510  
                 ?_I2C_DO_SEND_RESTART_WRITE 0001                         ?_I2C_MasterOperation 0001  
                   ??_interrupt_INTx_disable 0029                             ??_lcd_set_curser 0093  
                      ??_I2C_MasterGetRxData 0027              __end_of_interrupt_INTx_pin_init 419A  
                    ?_I2C_Write1ByteRegister 0012                                 ??i2_I2C_Open 0001  
                                 ??_I2C_Open 0027                   __end_of_I2C_MasterClearIrq 477A  
                   interrupt_INTx_enable@ret 002B               __end_ofi2_I2C_MasterDisableIrq 479E  
                     __end_ofi2_I2C_DO_RESET 46C8                                      ??_fputc 002B  
                                    ??_fputs 0030                                      ??_putch 0027  
                          _I2C_MasterSendAck 473E                              ??i2_I2C_DO_IDLE 0001  
                                 __pbssBANK0 00CB                                   __pbssBANK1 0100  
                            ??i2_I2C_DO_RCEN 0001                        lcd_send_char_data@lcd 0089  
                              ??_I2C_DO_IDLE 0027                        lcd_send_char_data@ret 008E  
                              ??_I2C_DO_RCEN 0027                __end_of_rd2RegCompleteHandler 40FA  
                         lcd_send_enable@lcd 0080                 __end_of_I2C_MasterSendTxData 46F0  
                         ?_I2C_MasterSendAck 0001                        _INT0_InterruptHandler 0039  
                                 ??_INT0_ISR 001B                            _I2C_MasterStartRx 475E  
                                 ??_INT1_ISR 001B                                   ??_INT2_ISR 001B  
               fp_i2_I2C_CallbackReturnReset 0000                 interrupt_INTx_clear_flag@ret 002B  
                 ??_interrupt_INTx_edge_init 0029                        ??_I2C_DO_ADDRESS_NACK 0082  
              __end_of_wr2RegCompleteHandler 4166                           _lcd_send_char_data 3232  
                        _I2C_DO_RX_NACK_STOP 45E8                        _rd1RegCompleteHandler 40FA  
                         ?_I2C_MasterStartRx 0001                   __end_of_I2C_MasterSendNack 474A  
                   ?i2_I2C_DO_SEND_ADR_WRITE 0001                        _wr1RegCompleteHandler 408E  
            _rd1RegCompleteHandler$intlevel0 4104              _wr1RegCompleteHandler$intlevel0 4098  
                        ??_I2C_MasterSendAck 0027                     rd1RegCompleteHandler@ptr 0080  
          __end_ofi2_rdBlkRegCompleteHandler 401C                           __end_ofi2_I2C_Open 3232  
                __end_of_I2C_DO_SEND_RESTART 4630                              _I2C_DO_TX_EMPTY 3342  
                        I2C_SetBuffer@buffer 0027                 INT0_set_InterruptHandler@ret 0029  
                     interrupt_INTx_init@ret 008A                              _minutes_counter 0048  
                        ?_lcd_send_char_data 0089                      ?i2_I2C_MasterSendTxData 0001  
             __end_of_I2C_MasterWaitForEvent 4664                          ??_I2C_MasterStartRx 0027  
                       __end_ofi2_I2C_Poller 44C6                                      ?_memset 0027  
                    _I2C_DO_RX_ACK$intlevel0 4604                        ??_I2C_MasterOperation 0030  
             I2C_SetDataCompleteCallback@ptr 002E             i2I2C_SetDataCompleteCallback@ptr 0008  
             __end_of_I2C_Write1ByteRegister 3B2C                                      ?_strlen 0027  
                   ??_I2C_DO_RX_NACK_RESTART 0027               fp_i2_I2C_DO_SEND_RESTART_WRITE 0000  
          __end_of_I2C_DO_SEND_RESTART_WRITE 4642                         ?_I2C_DO_RX_NACK_STOP 0001  
     INTx_select_InterruptHandler@_interrupt 002A                             lcd_send_number@i 003F  
                                __Initialize 419A               ??_INTx_select_InterruptHandler 002C  
                                    _RTC1307 0041                     ?i2_rd2RegCompleteHandler 000A  
                            _seconds_counter 0049                    __end_of_I2C_MasterSendAck 4744  
                   ?i2_wr2RegCompleteHandler 000A                         ??_lcd_send_char_data 0031  
                  ??_convert_uint8_to_string 0031                                      _SSPCON1 000FC6  
                                    _SSPCON2 000FC5                              ?i2_I2C_DO_RESET 0001  
        _I2C_DO_SEND_RESTART_WRITE$intlevel0 463A                                      _MY_INT0 00FA  
                                  ?_lcd_init 008F                                      _MY_INT1 0144  
                                    _SSPSTAT 000FC7               ??i2_I2C_SetAddressNackCallback 000A  
                    ??i2_I2C_MasterGetRxData 0001                    __end_of_I2C_MasterStartRx 4762  
                       I2C_Close@returnValue 0027                 ?_I2C_SetDataCompleteCallback 002C  
              __end_ofi2_I2C_DO_SEND_RESTART 4720                  ??i2_I2C_MasterEnableRestart 0001  
                                  _I2C_DO_RX 2BF6                                    _I2C_DO_TX 2746  
                          ??i2_I2C_MasterFsm 000E             __end_of_I2C_DO_SEND_RESTART_READ 4654  
               I2C_Read1ByteRegister@address 0088                                 _APP_INT0_ISR 2FF8  
                               _APP_INT1_ISR 221A                                    _I2C_Close 4254  
                 interrupt_INTx_pin_init@ret 0087                    ??_rdBlkRegCompleteHandler 0030  
                     ?_interrupt_INTx_enable 0027                   ?_interrupt_INTx_clear_flag 0027  
              lcd_send_nbits@data_or_command 0082                         _I2C_MasterDisableIrq 476E  
                          ??i2_I2C_SetBuffer 0005                              ??_I2C_MasterFsm 0084  
                                    __Hparam 0000                                      __Lparam 0000  
                        __end_of_I2C_DO_IDLE 459A                   i2rd2RegCompleteHandler@ptr 000A  
             __end_ofi2_I2C_MasterSendTxData 4738                          __end_of_I2C_DO_RCEN 4584  
                                    ___aodiv 1C56                    ??i2_I2C_Read1ByteRegister 0013  
                                    ___aomod 1F58                                      ___awdiv 2A6E  
                                    ___awmod 2CA8                      ??i2_I2C_DO_ADDRESS_NACK 000C  
                            ??_I2C_SetBuffer 002B                       i2_I2C_DO_SEND_ADR_READ 4674  
                                  ?_vfprintf 00C5                      I2C_SetBuffer@bufferSize 0029  
                               __psmallconst 1000                  ??_INT1_set_InterruptHandler 0029  
             i2I2C_SetAddressNackCallback@cb 0006                               _I2C_MasterOpen 4446  
                   i2_I2C_MasterWaitForEvent 4664                                      __pcinit 3088  
                             _I2C_MasterStop 4762                               _I2C_Initialize 459A  
              gpio_pin_logic_write@pin_logic 0029                                      __ramtop 1000  
                      i2I2C_Open@returnValue 0002                                      __ptext0 105C  
                                    __ptext1 3E2E                                      __ptext2 3448  
                                    __ptext3 2D58                                      __ptext4 3D84  
                                    __ptext5 3DDA                                      __ptext6 3C62  
                                    __ptext7 1770                                      __ptext8 148C  
                                    __ptext9 28E0                        ??_I2C_DO_RX_NACK_STOP 0027  
                __end_ofi2_I2C_MasterSendAck 4750                          _gpio_pin_input_init 3D28  
                           ___awmod@dividend 0001                           I2C_SetCallback@idx 002B  
            i2I2C_CallbackReturnReset@funPtr 000A                I2C_CallbackReturnReset@funPtr 0080  
                         I2C_SetCallback@ptr 0029                     wr1RegCompleteHandler@ptr 0080  
                __end_ofi2_I2C_MasterStartRx 4786                    I2C_Write1ByteRegister@reg 0012  
                   fp__I2C_DO_SEND_ADR_WRITE 0000                   __end_of_convert_int_to_BCD 1AC4  
                    ?_lcd_send_char_data_pos 0097                      ??i2_I2C_MasterOperation 0010  
                       fp_i2_I2C_DO_TX_EMPTY 0000                                      _sprintf 3DDA  
                                 ??_lcd_init 0091                              lcd_init@lcd_ret 0095  
           _I2C_CallbackReturnStop$intlevel0 46AA                               __pintcode_body 29A8  
                       end_of_initialization 310C                 i2rdBlkRegCompleteHandler@ptr 000A  
                                 ?_I2C_DO_RX 0001                                   ?_I2C_DO_TX 0001  
                                    fputc@fp 0029              __end_ofi2_I2C_DO_SEND_ADR_WRITE 46BC  
                                    memset@c 0029                                      memset@k 0080  
                                    memset@n 002B                                      memset@s 0082  
                                 ?_I2C_Close 0001                                      int_func 29A8  
                                    fputs@fp 0082                       ?_rd1RegCompleteHandler 0080  
                    __end_of_I2C_DO_TX_EMPTY 33CA                        ?_I2C_MasterDisableIrq 0001  
                       ?_gpio_pin_input_init 0080                       ?_wr1RegCompleteHandler 0080  
                   fp__rd2RegCompleteHandler 0000                     _gpio_pin_output_low_init 3816  
                          __end_of_vfpfcnvrt 1930              __end_of_convert_uint8_to_string 3DDA  
                                    postdec1 000FE5                                      postdec2 000FDD  
                    ??_I2C_Read1ByteRegister 0031                       __end_of_I2C_MasterOpen 4468  
                   fp__wr2RegCompleteHandler 0000                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                     __end_of_I2C_MasterStop 4766                       __end_of_I2C_Initialize 45AE  
                 ?_INT0_set_InterruptHandler 0027                    i2_I2C_MasterEnableRestart 4792  
                                 ??_vfprintf 0031                    fp__I2C_CallbackReturnStop 0000  
                                    strlen@a 0029                                      strlen@s 0027  
            __end_ofi2_rd2RegCompleteHandler 42D8                        _INT1_InterruptHandler 0037  
                   __end_ofi2_I2C_MasterOpen 448A                     __end_ofi2_I2C_MasterStop 4792  
            __end_of_rdBlkRegCompleteHandler 3EC8                   i2I2C_MasterSendTxData@data 0001  
                       _I2C_MasterSendTxData 46E8                              fp__I2C_DO_RESET 0000  
                           _InterruptManager 0008              __end_ofi2_wr2RegCompleteHandler 4330  
             __end_of_lcd_send_char_data_pos 37A2                         lcd_init@pins_counter 0094  
              _I2C_DO_SEND_RESTART$intlevel0 4628                  ?_I2C_SetAddressNackCallback 002C  
                 i2wr2RegCompleteHandler@ptr 000A                            i2_I2C_MasterClose 479E  
                            i2_I2C_DO_RX_ACK 4708                            i2I2C_Open@address 0001  
                          i2_I2C_MasterStart 4796                            i2_I2C_MasterWrite 46F0  
                         lcd_send_string@lcd 008F                      ??i2_I2C_DO_RX_NACK_STOP 0001  
                         lcd_send_string@ret 0095                           lcd_send_string@str 0091  
                         ?i2_I2C_MasterClose 0001                    _INT1_set_InterruptHandler 4386  
           __end_ofi2_I2C_CallbackReturnStop 478E                           ?i2_I2C_MasterStart 0001  
                         ?i2_I2C_MasterWrite 0001             gpio_pin_output_low_init@gpio_ret 0083  
                      lcd_set_curser@lcd_ret 0096                                  _I2C_DO_IDLE 4584  
           __end_of_interrupt_INTx_edge_init 2746                                  _I2C_DO_RCEN 456E  
                    i2_rd1RegCompleteHandler 42D8                   rdBlkRegCompleteHandler@ptr 0080  
                 fp_i2_rd1RegCompleteHandler 0000                                _hours_counter 0047  
              I2C_Write1ByteRegister@address 0014                        ??_gpio_pin_input_init 0082  
                     _interrupt_INTx_disable 3888                          ??i2_I2C_MasterClose 0001  
                    i2_wr1RegCompleteHandler 4280                   fp_i2_wr1RegCompleteHandler 0000  
                    ?_I2C_CallbackReturnStop 0080                          ??i2_I2C_MasterStart 0001  
                   fp_i2_I2C_DO_SEND_RESTART 0000                  ?i2_I2C_DO_SEND_RESTART_READ 0001  
                   _I2C_DO_SEND_RESTART_READ 4642                          ??i2_I2C_MasterWrite 0012  
                fp__I2C_DO_SEND_RESTART_READ 0000                  ??i2_rdBlkRegCompleteHandler 000C  
                          i2_I2C_SetCallback 36B0                 I2C_CallbackReturnStop@funPtr 0080  
                            ?_I2C_MasterOpen 0001                              ?_I2C_MasterStop 0001  
                            ?_I2C_Initialize 0001                convert_uint16_to_string@F3167 0100  
                 ?i2_I2C_CallbackReturnReset 000A                      _I2C_CallbackReturnReset 4692  
                   I2C_Read1ByteRegister@reg 0030                   fp__I2C_CallbackReturnReset 0000  
                    _gpio_pin_direction_init 24C8                           ?i2_I2C_SetCallback 0001  
                                vfpfcnvrt@ap 00B9                                  vfpfcnvrt@fp 00B5  
                                vfpfcnvrt@ll 00BD            __end_of_INT0_set_InterruptHandler 43DA  
            ??i2_I2C_SetDataCompleteCallback 000A                            ??_lcd_send_enable 0031  
                              __pidataCOMRAM 4684                        ?_I2C_MasterSendTxData 0001  
                             __end_of_memset 1F58                  ??_I2C_DO_SEND_RESTART_WRITE 0027  
                  __end_ofi2_I2C_MasterClose 47A2                            ??_lcd_send_string 0031  
                        ??i2_I2C_SetCallback 0005                               __end_of_strlen 408E  
                        start_initialization 3088                    __end_ofi2_I2C_MasterStart 479A  
                  __end_ofi2_I2C_MasterWrite 46F8                          _interrupt_INTx_init 35BC  
                                __end_of_abs 3FDC                                  __end_of_pad 29A8  
                              ?_I2C_DO_RESET 0001                   convert_int_to_BCD@h_nipple 000D  
        interrupt_INTx_clear_flag@_interrupt 0027                                ??i2_I2C_DO_RX 000C  
                              ??i2_I2C_DO_TX 000C                                  ??_I2C_DO_RX 0082  
                                ??_I2C_DO_TX 0082                     ?_interrupt_INTx_pin_init 0085  
                          ??_I2C_MasterClose 0027                   convert_int_to_BCD@l_nipple 000C  
                               i2_I2C_Poller 44A8                                ??i2_I2C_Close 0001  
                     ??_I2C_MasterDisableIrq 0027                                  ??_I2C_Close 0027  
                          ??_I2C_MasterStart 0027                            ??_I2C_MasterWrite 0030  
                           _lcd_send_command 32BA               __end_of_I2C_CallbackReturnStop 46AE  
                  ?i2_I2C_DO_RX_NACK_RESTART 0001                       _I2C_DO_RX_NACK_RESTART 45D6  
                           ?_I2C_DO_TX_EMPTY 0001                  gpio_pin_input_init@gpio_ret 0083  
                         _I2C_MasterClearIrq 4776                        lcd_send_number@number 004A  
                  __end_ofi2_I2C_SetCallback 372A                lcd_send_char_data_pos@lcd_ret 009D  
                       ?_interrupt_INTx_init 0088                                  vfprintf@fmt 00C7  
                        ?_I2C_MasterClearIrq 0001                  __end_of_I2C_MasterGetRxData 475E  
                  lcd_send_number_pos@column 0165                                  __pdataBANK0 00FA  
                                __pdataBANK1 0126                        __end_of_I2C_DO_RX_ACK 460C  
          __end_ofi2_I2C_CallbackReturnReset 478A                                     ??_memset 002D  
                  fp_i2_I2C_DO_SEND_ADR_READ 0000                    lcd_send_number_pos@number 00F9  
                           _I2C_DO_SEND_STOP 460C                                   memset@dest 0027  
                          ??_I2C_SetCallback 002B                      __end_ofi2_I2C_DO_RX_ACK 4710  
                        I2C_Open@returnValue 0028                           _I2C_MasterSendNack 4744  
                                   ??_strlen 0029                     ?_I2C_MasterEnableRestart 0001  
                          _i2c_fsmStateTable 1001                       fp__I2C_DO_SEND_RESTART 0000  
                            i2_I2C_MasterFsm 3A4E                             ??i2_I2C_DO_RESET 0001  
                lcd_send_number_pos@gpio_ret 0167                        _I2C_DO_SEND_ADR_WRITE 44F8  
                               ?__Initialize 0001                                  __pbssCOMRAM 0031  
                     lcd_send_char_data@data 008B                    lcd_send_char_data@lcd_ret 008D  
                  i2_rdBlkRegCompleteHandler 3FDC                                __pcstackBANK0 0080  
                              __pcstackBANK1 014A                               ??_I2C_DO_RESET 0027  
                           ___aodiv@dividend 0080                          ?_I2C_MasterSendNack 0001  
               convert_uint8_to_string@value 0161                   lcd_send_string_pos@lcd_ret 009E  
                            i2_I2C_SetBuffer 4422                 __end_of_I2C_DO_SEND_ADR_READ 44E0  
                       ??_I2C_MasterClearIrq 0027                  __end_of_I2C_DO_ADDRESS_NACK 39DE  
                  ??i2_rd1RegCompleteHandler 000C                      ??_interrupt_INTx_enable 0029  
                  ??i2_wr1RegCompleteHandler 000C                             _I2C_MasterIsNack 45AE  
                lcd_send_custom_char@counter 0040                __end_ofi2_I2C_MasterGetRxData 4782  
               ?i2_I2C_DO_SEND_RESTART_WRITE 0001                    _I2C_DO_SEND_RESTART_WRITE 4630  
                      __end_ofi2_I2C_DO_IDLE 46E0                        _INT2_InterruptHandler 0035  
                      __end_ofi2_I2C_DO_RCEN 46D4                             _I2C_MasterSetIrq 4756  
              interrupt_INTx_init@_interrupt 0088                  ??_interrupt_INTx_clear_flag 0029  
                      _rd2RegCompleteHandler 40C4                     i2_I2C_CallbackReturnStop 478A  
                 ??i2_I2C_MasterWaitForEvent 0001                  fp_i2_I2C_CallbackReturnStop 0000  
                      ??_interrupt_INTx_init 0031                 __end_of_gpio_pin_logic_write 24C8  
                        __end_ofi2_I2C_DO_RX 2FF8                          __end_ofi2_I2C_DO_TX 2BF6  
                    ?i2_I2C_DO_SEND_ADR_READ 0001                                    _dtoa$2400 00A3  
                      _wr2RegCompleteHandler 4130                    ??_I2C_CallbackReturnReset 0030  
                                _day_counter 0058                    ??_gpio_pin_direction_init 002A  
                __end_of_I2C_MasterOperation 3F58                         ??_I2C_MasterSendNack 0027  
                   rd2RegCompleteHandler@ptr 0080                          __end_ofi2_I2C_Close 435C  
                                  __pintcode 0008                                     ?___aodiv 0080  
                                   ?___aomod 0080                                     ?___awdiv 0001  
                                  __ptext100 2A6E                                    __ptext101 3B94  
                                  __ptext110 4664                                    __ptext102 37A2  
                           ___aodiv@quotient 0029                                    __ptext111 3A4E  
                                  __ptext103 3ABE                                    __ptext120 4728  
                                  __ptext112 3BFC                                    __ptext104 4528  
                                  __ptext121 46C8                                    __ptext113 46BC  
                                  __ptext105 31A4                                    __ptext130 4730  
                                  __ptext122 2F52                                    __ptext114 46F8  
                                  __ptext106 4468                                    __ptext131 474A  
                                  __ptext123 2B32                                    __ptext115 4700  
                                  __ptext107 46F0                                    __ptext140 42D8  
                                  __ptext132 477E                                    __ptext124 46AE  
                                  __ptext116 4708                                    __ptext108 3F58  
                                  __ptext141 4304                                    __ptext133 4750  
                                  __ptext125 4674                   __end_ofi2_I2C_DO_SEND_STOP 4718  
                                  __ptext117 4710                                    __ptext109 44A8  
                                  __ptext150 479E                                    __ptext142 4540  
                                  __ptext134 4782                                    __ptext126 46D4  
                                  __ptext118 4718                                    __ptext151 47A2  
                                  __ptext143 36B0                                    __ptext135 4786  
                                  __ptext127 3540                                    __ptext119 4720  
                                  __ptext152 0000                                    __ptext144 4422  
                                  __ptext136 478A                                    __ptext128 477A  
                                  __ptext145 478E                                    __ptext137 3FDC  
                                  __ptext129 45C2                                    __ptext146 4792  
                                  __ptext138 4280                                    __ptext147 4796  
                                  __ptext139 42AC                                    __ptext148 4330  
                                  __ptext149 479A                                     ?___awmod 0001  
              fp_i2_I2C_DO_SEND_RESTART_READ 0000               i2I2C_Read1ByteRegister@address 0013  
                     ??_I2C_MasterSendTxData 0027                          lcd_send_command@lcd 0089  
                  __end_of_i2c_fsmStateTable 1021                          lcd_send_command@ret 008E  
              __end_ofi2_I2C_DO_ADDRESS_NACK 3C62                                 fp__I2C_DO_RX 0000  
                               fp__I2C_DO_TX 0000                    ?_interrupt_INTx_edge_init 0027  
                          lcd_send_nbits@lcd 0080                            lcd_send_nbits@ret 0087  
                                __smallconst 1000        __end_ofi2_I2C_SetDataCompleteCallback 4558  
              i2_I2C_SetDataCompleteCallback 4540                      I2C_MasterOperation@read 0086  
                                   _I2C_Open 3116                 INT2_set_InterruptHandler@ret 0029  
                  lcd_send_char_data_pos@lcd 0097                    lcd_send_char_data_pos@ret 009E  
                  lcd_send_char_data_pos@row 0099                                     ?_sprintf 014C  
                 __end_ofi2_I2C_MasterIsNack 45D6                      ??_rd1RegCompleteHandler 0030  
              __end_ofi2_I2C_MasterOperation 3F9C                                _month_counter 0057  
                 __end_ofi2_I2C_MasterSetIrq 477E                   ??_gpio_pin_output_low_init 0082  
                    ??_wr1RegCompleteHandler 0030           interrupt_INTx_edge_init@_interrupt 0027  
                                   _INT0_ISR 4226                                     _INT1_ISR 41F8  
                                   _INT2_ISR 41CA                                     _RB4_Flag 004E  
                                   _RB5_Flag 004D                        i2_I2C_DO_SEND_RESTART 4718  
                                   _RB6_Flag 004C                                     _RB7_Flag 004B  
                   __end_of_InterruptManager 2A6E               __end_ofi2_I2C_DO_SEND_ADR_READ 4684  
                                   _PIE1bits 000F9D                ??i2_I2C_DO_SEND_RESTART_WRITE 0001  
                         _convert_int_to_BCD 1930                                     i2u400_40 2264  
                                   i2u400_41 2260                                     i2u401_40 2276  
                                   i2u401_41 2272                                     i2u330_40 4344  
                                   i2u402_40 229E                                     i2u330_41 4340  
                                   i2u402_41 229A                                     i2u315_40 4476  
                                   i2u403_40 22B0                                     i2u315_41 4472  
                                   i2u403_41 22AC                                     i2u404_40 22D8  
                                   i2u404_41 22D4                                     i2u261_40 4672  
                                   i2u341_40 2A80                                     i2u405_40 22EA  
                                   i2u261_41 466E                                     i2u341_41 2A7C  
                                   i2u405_41 22E6                                     i2u342_40 2A9A  
                                   i2u350_40 2D0C                                     i2u406_40 2312  
                                   i2u342_41 2A96                                     i2u350_41 2D08  
                                   i2u406_41 230E                                     i2u343_40 2AC0  
                                   i2u351_40 2D22                                     i2u407_40 2324  
                                   i2u343_41 2ABC                                     i2u351_41 2D1E  
                                   i2u407_41 2320                                     i2u344_40 2ADE  
                                   i2u352_40 2D46                                     i2u408_40 234C  
                                   i2u344_41 2ADA                                     i2u352_41 2D42  
                                   i2u408_41 2348                                     i2u345_40 2AFA  
                                   i2u409_40 235E                                     i2u345_41 2AF6  
                                   i2u409_41 235A                                     _PIR1bits 000F9E  
                                   i2u346_40 2B20                                     i2u346_41 2B1C  
                                   i2u347_40 2CBA                                     i2u347_41 2CB6  
                                   _PIR2bits 000FA1                                     i2u524_40 44C4  
                                   i2u348_40 2CD4                                     i2u620_40 302E  
                                   i2u524_41 44C0                                     i2u348_41 2CD0  
                                   i2u620_41 302A                                     i2u605_40 3AD6  
                                   i2u349_40 2CEE                                     i2u605_41 3AD2  
                                   i2u349_41 2CEA                                     i2u550_40 3F6E  
                                   i2u606_40 3B2A                                     i2u630_40 41DE  
                                   i2u550_41 3F6A                                     i2u606_41 3B26  
                                   i2u630_41 41DA                                     i2u551_40 3F84  
                                   i2u551_41 3F80                                     i2u607_41 3BF2  
                                   i2u480_40 45D2                                     i2u631_48 41E4  
                                   i2u480_41 45CC                                     i2u631_49 41F6  
                                   i2u480_46 45D4                                     i2u618_40 3008  
                                   i2u626_40 423A                                     i2u618_41 3004  
                                   i2u626_41 4236                                     i2u490_48 2FAC  
                                   i2u643_40 29E8                                     i2u490_49 2FBE  
                                   i2u619_41 3012                                     i2u643_41 29E4  
                                   i2u491_48 3570                                     i2u627_48 4240  
                                   i2u628_40 420C                                     i2u644_40 29F6  
                                   i2u491_49 3582                                     i2u627_49 4252  
                                   i2u628_41 4208                                     i2u644_41 29F2  
                                   i2u477_40 36C4                                     i2u492_48 3C26  
                                   i2u565_40 31BA                                     i2u645_40 2A08  
                                   i2u477_41 36C0                                     i2u492_49 3C38  
                                   i2u565_41 31B6                                     i2u645_41 2A04  
                                   i2u478_40 4432                                     i2u486_40 2B46  
                                   i2u398_40 222A                                     i2u629_48 4212  
                                   i2u646_40 2A16                                     i2u478_41 442E  
                                   i2u486_41 2B42                                     i2u398_41 2226  
                                   i2u629_49 4224                                     i2u646_41 2A12  
                                   i2u399_40 223C                                     i2u647_40 2A28  
                                   i2u399_41 2238                                     i2u647_41 2A24  
                                   i2u488_40 2BEC                                     i2u487_48 2B70  
                                   i2u496_40 3A62                                     i2u648_40 2A36  
                                   i2u488_41 2BE8                                     i2u487_49 2B84  
                                   i2u496_41 3A5E                                     i2u648_41 2A32  
                                   i2u489_40 2F7E                                     i2u497_40 3A76  
                                   i2u577_40 37BE                                     i2u489_41 2F7A  
                                   i2u497_41 3A72                                     i2u577_41 37BA  
                                   i2u578_40 3812                                     i2u578_41 380E  
                                   i2u498_48 3AA6                                     i2u498_49 3AB8  
                      __end_of_I2C_MasterFsm 3A4E                  __end_of_I2C_DO_RX_NACK_STOP 45FA  
            __end_of_I2C_MasterEnableRestart 476A                      __end_ofi2_I2C_MasterFsm 3ABE  
                        ?_convert_int_to_BCD 0009                               fp__I2C_DO_IDLE 0000  
                ??_INT0_set_InterruptHandler 0029                               fp__I2C_DO_RCEN 0000  
              __end_of_I2C_Read1ByteRegister 3540                                    _vfpfcnvrt 1770  
                interrupt_INTx_edge_init@ret 002B                        __end_of_I2C_SetBuffer 4422  
                           ?i2_I2C_DO_RX_ACK 0001                       ?_I2C_DO_SEND_ADR_WRITE 0001  
                    __end_ofi2_I2C_SetBuffer 4446                    _interrupt_INTx_clear_flag 38FA  
                          ?i2_I2C_MasterOpen 0001                            ?i2_I2C_MasterStop 0001  
                   ??i2_I2C_MasterDisableIrq 0001                     I2C_MasterSendTxData@data 0027  
                   ?_convert_uint8_to_string 015F                           ??i2_I2C_MasterOpen 0001  
                         ??i2_I2C_MasterStop 0001              __end_of_gpio_pin_direction_init 261A  
                   wr2RegCompleteHandler@ptr 0080                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0                         ??_convert_int_to_BCD 000B  
                 ??_I2C_DO_SEND_RESTART_READ 0027                                    copy_data0 309C  
                                  copy_data1 30BC                                    copy_data2 30DC  
                   ?_rdBlkRegCompleteHandler 0080                    i2I2C_SetBuffer@bufferSize 0003  
                    ?_interrupt_INTx_disable 0027                                   _I2C_Poller 448A  
              __end_ofi2_I2C_DO_RX_NACK_STOP 4708                                  i2_I2C_DO_RX 2F52  
                                i2_I2C_DO_TX 2B32                                   _I2C_Status 00CB  
                               ?_I2C_DO_IDLE 0001                                 ?_I2C_DO_RCEN 0001  
           _RTC1307@RealTimeClockDS1307$F281 00EF                       ?_rd2RegCompleteHandler 0080  
                                i2_I2C_Close 4330              interrupt_INTx_enable@_interrupt 0027  
             lcd_send_char_data_pos@gpio_ret 009C                             ??_I2C_MasterOpen 0027  
                  _I2C_DO_TX_EMPTY$intlevel0 334C                              _lcd_send_enable 401C  
                     ?_wr2RegCompleteHandler 0080                             ??_I2C_MasterStop 0027  
                   ??_I2C_MasterWaitForEvent 0027                             ??_I2C_Initialize 0027  
                   ?i2_I2C_Read1ByteRegister 0012                    fp__I2C_DO_RX_NACK_RESTART 0000  
            _wr2RegCompleteHandler$intlevel0 413A              _rd2RegCompleteHandler$intlevel0 40CE  
                                   __Hrparam 0000         gpio_pin_direction_init@pin_direction 0029  
           interrupt_INTx_disable@_interrupt 0027                                   vfprintf@ap 00C9  
                                   __Lrparam 0000                                   vfprintf@fp 00C5  
                       __end_of_I2C_DO_RESET 456E                     ??_I2C_Write1ByteRegister 0014  
                            _lcd_send_string 2D58                   lcd_send_number_pos@lcd_ret 0168  
                   lcd_send_command@gpio_ret 008C                  ??i2_I2C_CallbackReturnReset 000C  
                        _lcd_send_number_pos 3E2E                   ?_INT2_set_InterruptHandler 0027  
                       _I2C_DO_SEND_ADR_READ 44C6                   lcd_send_number_pos@counter 003C  
                       lcd_send_number_pos@i 003D                                   ?_vfpfcnvrt 00B5  
          _I2C_CallbackReturnReset$intlevel0 469C                        fp_i2_I2C_DO_SEND_STOP 0000  
                            ___aodiv@divisor 0088                              ___aodiv@counter 0027  
         i2I2C_Read1ByteRegister@returnValue 0014             I2C_Read1ByteRegister@returnValue 0089  
                    i2_I2C_DO_SEND_ADR_WRITE 46AE                 __end_ofi2_I2C_MasterClearIrq 47A6  
                 fp_i2_I2C_DO_SEND_ADR_WRITE 0000                     __end_of_lcd_send_command 3342  
                            _I2C_MasterClose 4772                I2C_SetAddressNackCallback@ptr 002E  
            i2I2C_SetAddressNackCallback@ptr 0008                   __end_of_convert_BCD_to_int 1C56  
                                 sprintf@fmt 014E                              I2C_Open@address 0027  
           __end_ofi2_I2C_DO_RX_NACK_RESTART 4700                          fp__I2C_DO_SEND_STOP 0000  
                       i2I2C_SetCallback@idx 0005                              _I2C_MasterStart 476A  
                       i2I2C_SetCallback@ptr 0003                              _I2C_MasterWrite 46E0  
                   fp_i2_I2C_DO_ADDRESS_NACK 0000               i2I2C_CallbackReturnStop@funPtr 000A  
                       _gpio_pin_logic_write 2376                              fp__APP_INT0_ISR 0000  
                            fp__APP_INT1_ISR 0000                                     __ptext10 4058  
                                   __ptext11 3EC8                                     __ptext20 3232  
                                   __ptext12 2816                                     __ptext21 1AC4  
                                   __ptext13 47A6                                     __ptext30 4166  
                                   __ptext22 419A                                     __ptext14 3F9C  
                                   __ptext31 3D28                                     __ptext23 20BE  
                                   __ptext15 1F58                                     __ptext40 43B0  
                                   __ptext32 24C8                                     __ptext24 32BA  
                                   __ptext16 1C56                                     __ptext41 459A  
                                   __ptext33 33CA                                     __ptext25 3CC6  
                                   __ptext17 1DE0                                     __ptext50 4654  
                                   __ptext42 3B2C                                     __ptext34 261A  
                                   __ptext26 401C                                     __ptext18 372A  
                                   __ptext51 39DE                                     __ptext43 34C4  
                                   __ptext35 3888                                     __ptext27 3816  
                                   __ptext19 2EAC                                     __ptext60 4642  
                                   __ptext52 396C                                     __ptext44 44E0  
                                   __ptext36 38FA                                     __ptext28 2376  
                                   __ptext61 456E                                     __ptext53 4558  
                                   __ptext45 3116                                     __ptext37 2E02  
                                   __ptext29 35BC                                     __ptext70 46E8  
                                   __ptext62 2BF6                                     __ptext54 45D6  
                                   __ptext46 4446                                     __ptext38 435C  
                                   __ptext71 473E                                     __ptext63 2746  
                                   __ptext55 45E8                                     __ptext47 46E0  
                                   __ptext39 4386                                     __ptext80 40FA  
                                   __ptext72 475A                                     __ptext64 44F8  
                                   __ptext56 45FA                                     __ptext48 3F10  
                                   __ptext81 4130                                     __ptext73 4744  
                                   __ptext65 44C6                                     __ptext57 460C  
                                   __ptext49 448A                                     __ptext90 4772  
                                   __ptext82 4510                                     __ptext74 475E  
                                   __ptext66 4584                                     __ptext58 461E  
                                   __ptext91 4776                                     __ptext83 3636  
                                   __ptext75 4692                                     __ptext67 3342  
                                   __ptext59 4630                                     __ptext84 43FE  
                                   __ptext76 46A0                                     __ptext68 4756  
                                   __ptext93 41CA                                     __ptext85 4762  
                                   __ptext77 3E7C                                     __ptext69 45AE  
                                   __ptext94 41F8                                     __ptext86 4766  
                                   __ptext78 408E                                     __ptext95 4226  
                                   __ptext87 476A                                     __ptext79 40C4  
                                   __ptext96 2FF8                                     __ptext88 4254  
                                   __ptext97 221A                                     __ptext89 476E  
                                   __ptext98 1930                                     __ptext99 2CA8  
             __end_of_interrupt_INTx_disable 38FA                  __end_of_gpio_pin_input_init 3D84  
                                   _lcd_init 20BE                    _INT0_set_InterruptHandler 43B0  
        __end_of_I2C_SetDataCompleteCallback 4528               ?i2_I2C_SetDataCompleteCallback 0006  
                _I2C_SetDataCompleteCallback 4510                         ?_lcd_send_number_pos 0162  
                    ?_I2C_DO_RX_NACK_RESTART 0001                 __end_ofi2_I2C_MasterSendNack 4756  
                     ?i2_I2C_DO_SEND_RESTART 0001                     __end_of_I2C_DO_SEND_STOP 461E  
                   ??i2_I2C_MasterSendTxData 0001                      i2_rd2RegCompleteHandler 42AC  
                 fp_i2_rd2RegCompleteHandler 0000                   lcd_send_char_data@gpio_ret 008C  
           _I2C_DO_RX_NACK_RESTART$intlevel0 45E0                      i2_wr2RegCompleteHandler 4304  
                 fp_i2_wr2RegCompleteHandler 0000                              _I2C_SetCallback 3636  
              ??_I2C_SetDataCompleteCallback 0030                   I2C_Write1ByteRegister@data 0013  
                        _lcd_send_string_pos 3448                                     isa$xinst 000000  
                                   int$flags 0059                        ?_I2C_DO_SEND_ADR_READ 0001  
                           ?i2_I2C_MasterFsm 0001                                     _vfprintf 3C62  
                             _option_counter 003B            __end_of_INT2_set_InterruptHandler 4386  
                   __end_of_I2C_MasterIsNack 45C2                             ___aomod@dividend 0080  
                   __end_of_I2C_MasterSetIrq 475A                             ?i2_I2C_SetBuffer 0001  
                           lcd_init@gpio_ret 0093                                   _INTCONbits 000FF2  
                                 i2_I2C_Open 31A4                        ?_gpio_pin_logic_write 0027  
                             _lcd_send_nbits 3CC6                         ?_lcd_send_string_pos 0097  
                    lcd_send_command@command 008B                      lcd_send_command@lcd_ret 008D  
             __end_of_I2C_DO_RX_NACK_RESTART 45E8                   ??i2_I2C_CallbackReturnStop 000C  
                      ??_lcd_send_number_pos 0031                            lcd_set_curser@lcd 008F  
                    gpio_pin_logic_write@pin 0027                      gpio_pin_logic_write@ret 0030  
                  i2_I2C_CallbackReturnReset 4786                            lcd_set_curser@row 0091  
           __end_of_gpio_pin_output_low_init 3888                      __end_of_lcd_send_enable 4058  
                             _lcd_set_curser 2EAC                                     intlevel2 0000  
                                ?_I2C_Poller 0001                                    sprintf@ap 0152  
            __end_ofi2_I2C_Read1ByteRegister 3816                          i2I2C_SetCallback@cb 0001  
                              ?_APP_INT0_ISR 0001                                ?_APP_INT1_ISR 0001  
              __end_of_interrupt_INTx_enable 3448                      __end_of_lcd_send_string 2E02  
                        _I2C_DO_SEND_RESTART 461E                    convert_int_to_BCD@BCD_num 0009  
                     fp__I2C_DO_ADDRESS_NACK 0000                     fp_i2_I2C_DO_RX_NACK_STOP 0000  
                    __end_of_I2C_MasterClose 4776                    ??i2_I2C_DO_SEND_ADR_WRITE 0001  
                         fp__I2C_DO_TX_EMPTY 0000                              ___aomod@divisor 0088  
                   ??_lcd_send_char_data_pos 0031                                  ??_vfpfcnvrt 00BB  
                    __end_of_I2C_MasterStart 476E                              ___aomod@counter 0027  
                    __end_of_I2C_MasterWrite 46E8                         ?_I2C_DO_SEND_RESTART 0001  
                                   sprintf@f 0154                                     sprintf@s 014C  
                     __end_of_lcd_send_nbits 3D28                        ??_lcd_send_string_pos 0031  
                      _I2C_DO_IDLE$intlevel0 458E                           i2_I2C_DO_SEND_STOP 4710  
                               _year_counter 0056                                  _SSPCON1bits 000FC6  
                                _SSPCON2bits 000FC5                       __end_of_lcd_set_curser 2F52  
                 gpio_pin_direction_init@pin 0027                   gpio_pin_direction_init@ret 0030  
                     i2I2C_Close@returnValue 0001                    ??i2_rd2RegCompleteHandler 000C  
                   i2_I2C_DO_RX_NACK_RESTART 46F8                               ??_APP_INT0_ISR 001B  
                fp_i2_I2C_DO_RX_NACK_RESTART 0000                               ??_APP_INT1_ISR 000E  
                               ___aodiv@sign 0028                      __end_of_I2C_SetCallback 36B0  
                __end_of_interrupt_INTx_init 3636                    ??i2_wr2RegCompleteHandler 000C  
                        ?i2_I2C_DO_SEND_STOP 0001                __end_of_rd1RegCompleteHandler 4130  
                           fp__I2C_DO_RX_ACK 0000                __end_of_wr1RegCompleteHandler 40C4  
                     i2_I2C_MasterDisableIrq 479A                         i2_I2C_MasterClearIrq 47A2  
                      i2_I2C_MasterGetRxData 477E                            ?_InterruptManager 0001  
                               ___aomod@sign 0028                           i2_I2C_MasterIsNack 45C2  
                 lcd_send_char_data_pos@data 009B                    convert_int_to_BCD@int_num 000B  
