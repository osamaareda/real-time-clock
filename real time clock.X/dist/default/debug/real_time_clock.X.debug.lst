

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 13 06:53:24 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,delta=1
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	text123,global,reloc=2,class=CODE,delta=1
   142                           	psect	text124,global,reloc=2,class=CODE,delta=1,inline
   143                           	psect	text125,global,reloc=2,class=CODE,delta=1,inline
   144                           	psect	text126,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   146                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline
   147                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text130,global,reloc=2,class=CODE,delta=1,inline
   149                           	psect	text131,global,reloc=2,class=CODE,delta=1
   150                           	psect	text132,global,reloc=2,class=CODE,delta=1
   151                           	psect	text133,global,reloc=2,class=CODE,delta=1
   152                           	psect	text134,global,reloc=2,class=CODE,delta=1
   153                           	psect	text135,global,reloc=2,class=CODE,delta=1
   154                           	psect	text136,global,reloc=2,class=CODE,delta=1
   155                           	psect	text137,global,reloc=2,class=CODE,delta=1
   156                           	psect	text138,global,reloc=2,class=CODE,delta=1
   157                           	psect	text139,global,reloc=2,class=CODE,delta=1
   158                           	psect	text140,global,reloc=2,class=CODE,delta=1
   159                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text142,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text144,global,reloc=2,class=CODE,delta=1
   163                           	psect	text145,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text146,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text147,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   167                           	psect	text148,global,reloc=2,class=CODE,delta=1,inline
   168                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   169                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   170                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   171   000000                     
   172                           ; Generated 23/03/2023 GMT
   173                           ; 
   174                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   175                           ; All rights reserved.
   176                           ; 
   177                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   178                           ; 
   179                           ; Redistribution and use in source and binary forms, with or without modification, are
   180                           ; permitted provided that the following conditions are met:
   181                           ; 
   182                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   183                           ;        conditions and the following disclaimer.
   184                           ; 
   185                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   186                           ;        of conditions and the following disclaimer in the documentation and/or other
   187                           ;        materials provided with the distribution. Publication is not required when
   188                           ;        this file is used in an embedded application.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F4620 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206   000000                     
   207                           	psect	idataCOMRAM
   208   003DD0                     __pidataCOMRAM:
   209                           	callstack 0
   210                           
   211                           ;initializer for _RB7_Flag
   212   003DD0  01                 	db	1
   213                           
   214                           ;initializer for _RB6_Flag
   215   003DD1  01                 	db	1
   216                           
   217                           ;initializer for _RB5_Flag
   218   003DD2  01                 	db	1
   219                           
   220                           ;initializer for _RB4_Flag
   221   003DD3  01                 	db	1
   222                           
   223                           ;initializer for _n
   224   003DD4  04                 	db	4
   225                           
   226                           	psect	idataBANK0
   227   0037D4                     __pidataBANK0:
   228                           	callstack 0
   229                           
   230                           ;initializer for _portx
   231   0037D4  80                 	db	128
   232   0037D5  0F                 	db	15
   233   0037D6  81                 	db	129
   234   0037D7  0F                 	db	15
   235   0037D8  82                 	db	130
   236   0037D9  0F                 	db	15
   237   0037DA  83                 	db	131
   238   0037DB  0F                 	db	15
   239   0037DC  84                 	db	132
   240   0037DD  0F                 	db	15
   241                           
   242                           ;initializer for _latx
   243   0037DE  89                 	db	137
   244   0037DF  0F                 	db	15
   245   0037E0  8A                 	db	138
   246   0037E1  0F                 	db	15
   247   0037E2  8B                 	db	139
   248   0037E3  0F                 	db	15
   249   0037E4  8C                 	db	140
   250   0037E5  0F                 	db	15
   251   0037E6  8D                 	db	141
   252   0037E7  0F                 	db	15
   253                           
   254                           ;initializer for _trisx
   255   0037E8  92                 	db	146
   256   0037E9  0F                 	db	15
   257   0037EA  93                 	db	147
   258   0037EB  0F                 	db	15
   259   0037EC  94                 	db	148
   260   0037ED  0F                 	db	15
   261   0037EE  95                 	db	149
   262   0037EF  0F                 	db	15
   263   0037F0  96                 	db	150
   264   0037F1  0F                 	db	15
   265                           
   266                           ;initializer for _MY_INT1
   267   0037F2  14                 	db	low _APP_INT1_ISR
   268   0037F3  19                 	db	high _APP_INT1_ISR
   269   0037F4  09                 	db	9
   270   0037F5  01                 	db	1
   271   0037F6  01                 	db	1
   272   0037F7  00                 	db	0
   273                           
   274                           ;initializer for _MY_INT0
   275   0037F8  2A                 	db	low _APP_INT0_ISR
   276   0037F9  28                 	db	high _APP_INT0_ISR
   277   0037FA  01                 	db	1
   278   0037FB  01                 	db	1
   279   0037FC  00                 	db	0
   280   0037FD  00                 	db	0
   281                           
   282                           ;initializer for _lcd
   283   0037FE  23                 	db	35
   284   0037FF  2B                 	db	43
   285   003800  03                 	db	3
   286   003801  0B                 	db	11
   287   003802  13                 	db	19
   288   003803  1B                 	db	27
   289                           
   290                           	psect	smallconst
   291   001000                     __psmallconst:
   292                           	callstack 0
   293   001000  00                 	db	0
   294   001001                     _i2c_fsmStateTable:
   295                           	callstack 0
   296   001001  12                 	db	low _I2C_DO_IDLE
   297   001002  3C                 	db	high _I2C_DO_IDLE
   298   001003  54                 	db	low _I2C_DO_SEND_ADR_READ
   299   001004  3B                 	db	high _I2C_DO_SEND_ADR_READ
   300   001005  86                 	db	low _I2C_DO_SEND_ADR_WRITE
   301   001006  3B                 	db	high _I2C_DO_SEND_ADR_WRITE
   302   001007  02                 	db	low _I2C_DO_TX
   303   001008  1F                 	db	high _I2C_DO_TX
   304   001009  98                 	db	low _I2C_DO_RX
   305   00100A  23                 	db	high _I2C_DO_RX
   306   00100B  FC                 	db	low _I2C_DO_RCEN
   307   00100C  3B                 	db	high _I2C_DO_RCEN
   308   00100D  D6                 	db	low _I2C_DO_TX_EMPTY
   309   00100E  29                 	db	high _I2C_DO_TX_EMPTY
   310   00100F  D0                 	db	low _I2C_DO_SEND_RESTART_READ
   311   001010  3C                 	db	high _I2C_DO_SEND_RESTART_READ
   312   001011  BE                 	db	low _I2C_DO_SEND_RESTART_WRITE
   313   001012  3C                 	db	high _I2C_DO_SEND_RESTART_WRITE
   314   001013  AC                 	db	low _I2C_DO_SEND_RESTART
   315   001014  3C                 	db	high _I2C_DO_SEND_RESTART
   316   001015  9A                 	db	low _I2C_DO_SEND_STOP
   317   001016  3C                 	db	high _I2C_DO_SEND_STOP
   318   001017  88                 	db	low _I2C_DO_RX_ACK
   319   001018  3C                 	db	high _I2C_DO_RX_ACK
   320   001019  76                 	db	low _I2C_DO_RX_NACK_STOP
   321   00101A  3C                 	db	high _I2C_DO_RX_NACK_STOP
   322   00101B  64                 	db	low _I2C_DO_RX_NACK_RESTART
   323   00101C  3C                 	db	high _I2C_DO_RX_NACK_RESTART
   324   00101D  E6                 	db	low _I2C_DO_RESET
   325   00101E  3B                 	db	high _I2C_DO_RESET
   326   00101F  26                 	db	low _I2C_DO_ADDRESS_NACK
   327   001020  2D                 	db	high _I2C_DO_ADDRESS_NACK
   328   001021                     __end_of_i2c_fsmStateTable:
   329                           	callstack 0
   330   000000                     _INTCON2bits	set	4081
   331   000000                     _TRISD	set	3989
   332   000000                     _TRISC	set	3988
   333   000000                     _TRISB	set	3987
   334   000000                     _LATC	set	3979
   335   000000                     _LATB	set	3978
   336   000000                     _SSPSTATbits	set	4039
   337   000000                     _SSPCON2bits	set	4037
   338   000000                     _SSPCON1bits	set	4038
   339   000000                     _PORTE	set	3972
   340   000000                     _PORTD	set	3971
   341   000000                     _PORTC	set	3970
   342   000000                     _PORTB	set	3969
   343   000000                     _PORTA	set	3968
   344   000000                     _LATA	set	3977
   345   000000                     _LATD	set	3980
   346   000000                     _LATE	set	3981
   347   000000                     _TRISA	set	3986
   348   000000                     _TRISE	set	3990
   349   000000                     _PIE1bits	set	3997
   350   000000                     _PIR2bits	set	4001
   351   000000                     _SSPCON2	set	4037
   352   000000                     _SSPCON1	set	4038
   353   000000                     _SSPSTAT	set	4039
   354   000000                     _INTCONbits	set	4082
   355   000000                     _INTCON3bits	set	4080
   356   000000                     _SSPBUF	set	4041
   357   000000                     _SSPADD	set	4040
   358   000000                     _PIR1bits	set	3998
   359   001021                     STR_3:
   360   001021  73                 	db	115	;'s'
   361   001022  65                 	db	101	;'e'
   362   001023  63                 	db	99	;'c'
   363   001024  6F                 	db	111	;'o'
   364   001025  6E                 	db	110	;'n'
   365   001026  64                 	db	100	;'d'
   366   001027  73                 	db	115	;'s'
   367   001028  3A                 	db	58	;':'
   368   001029  00                 	db	0
   369   00102A                     STR_4:
   370   00102A  6D                 	db	109	;'m'
   371   00102B  69                 	db	105	;'i'
   372   00102C  6E                 	db	110	;'n'
   373   00102D  75                 	db	117	;'u'
   374   00102E  74                 	db	116	;'t'
   375   00102F  65                 	db	101	;'e'
   376   001030  73                 	db	115	;'s'
   377   001031  3A                 	db	58	;':'
   378   001032  00                 	db	0
   379   001033                     STR_7:
   380   001033  6D                 	db	109	;'m'
   381   001034  6F                 	db	111	;'o'
   382   001035  6E                 	db	110	;'n'
   383   001036  74                 	db	116	;'t'
   384   001037  68                 	db	104	;'h'
   385   001038  3A                 	db	58	;':'
   386   001039  00                 	db	0
   387   00103A                     STR_5:
   388   00103A  68                 	db	104	;'h'
   389   00103B  6F                 	db	111	;'o'
   390   00103C  75                 	db	117	;'u'
   391   00103D  72                 	db	114	;'r'
   392   00103E  73                 	db	115	;'s'
   393   00103F  3A                 	db	58	;':'
   394   001040  00                 	db	0
   395   001041                     STR_1:
   396   001041  54                 	db	84	;'T'
   397   001042  49                 	db	73	;'I'
   398   001043  4D                 	db	77	;'M'
   399   001044  45                 	db	69	;'E'
   400   001045  3A                 	db	58	;':'
   401   001046  00                 	db	0
   402   001047                     STR_2:
   403   001047  44                 	db	68	;'D'
   404   001048  41                 	db	65	;'A'
   405   001049  54                 	db	84	;'T'
   406   00104A  45                 	db	69	;'E'
   407   00104B  3A                 	db	58	;':'
   408   00104C  00                 	db	0
   409   00104D                     STR_8:
   410   00104D  79                 	db	121	;'y'
   411   00104E  65                 	db	101	;'e'
   412   00104F  61                 	db	97	;'a'
   413   001050  72                 	db	114	;'r'
   414   001051  3A                 	db	58	;':'
   415   001052  00                 	db	0
   416   001053                     STR_6:
   417   001053  64                 	db	100	;'d'
   418   001054  61                 	db	97	;'a'
   419   001055  79                 	db	121	;'y'
   420   001056  3A                 	db	58	;':'
   421   001057  00                 	db	0
   422   001058                     STR_9:
   423   001058  25                 	db	37
   424   001059  69                 	db	105	;'i'
   425   00105A  00                 	db	0
   426   00105B  00                 	db	0	; dummy byte at the end
   427   000000                     
   428                           ; #config settings
   429                           
   430                           	psect	cinit
   431   002E08                     __pcinit:
   432                           	callstack 0
   433   002E08                     start_initialization:
   434                           	callstack 0
   435   002E08                     __initialization:
   436                           	callstack 0
   437                           
   438                           ; Initialize objects allocated to BANK0 (48 bytes)
   439                           ; load TBLPTR registers with __pidataBANK0
   440   002E08  0ED4               	movlw	low __pidataBANK0
   441   002E0A  6EF6               	movwf	tblptrl,c
   442   002E0C  0E37               	movlw	high __pidataBANK0
   443   002E0E  6EF7               	movwf	tblptrh,c
   444   002E10  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   445   002E12  6EF8               	movwf	tblptru,c
   446   002E14  EE00  F080         	lfsr	0,__pdataBANK0
   447   002E18  EE10 F030          	lfsr	1,48
   448   002E1C                     copy_data0:
   449   002E1C  0009               	tblrd		*+
   450   002E1E  CFF5 FFEE          	movff	tablat,postinc0
   451   002E22  50E5               	movf	postdec1,w,c
   452   002E24  50E1               	movf	fsr1l,w,c
   453   002E26  E1FA               	bnz	copy_data0
   454                           
   455                           ; Initialize objects allocated to COMRAM (5 bytes)
   456                           ; load TBLPTR registers with __pidataCOMRAM
   457   002E28  0ED0               	movlw	low __pidataCOMRAM
   458   002E2A  6EF6               	movwf	tblptrl,c
   459   002E2C  0E3D               	movlw	high __pidataCOMRAM
   460   002E2E  6EF7               	movwf	tblptrh,c
   461   002E30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   462   002E32  6EF8               	movwf	tblptru,c
   463   002E34  EE00  F052         	lfsr	0,__pdataCOMRAM
   464   002E38  EE10 F005          	lfsr	1,5
   465   002E3C                     copy_data1:
   466   002E3C  0009               	tblrd		*+
   467   002E3E  CFF5 FFEE          	movff	tablat,postinc0
   468   002E42  50E5               	movf	postdec1,w,c
   469   002E44  50E1               	movf	fsr1l,w,c
   470   002E46  E1FA               	bnz	copy_data1
   471                           
   472                           ; Clear objects allocated to BANK1 (32 bytes)
   473   002E48  EE01  F000         	lfsr	0,__pbssBANK1
   474   002E4C  0E20               	movlw	32
   475   002E4E                     clear_0:
   476   002E4E  6AEE               	clrf	postinc0,c
   477   002E50  06E8               	decf	wreg,f,c
   478   002E52  E1FD               	bnz	clear_0
   479                           
   480                           ; Clear objects allocated to BANK0 (43 bytes)
   481   002E54  EE00  F0B0         	lfsr	0,__pbssBANK0
   482   002E58  0E2B               	movlw	43
   483   002E5A                     clear_1:
   484   002E5A  6AEE               	clrf	postinc0,c
   485   002E5C  06E8               	decf	wreg,f,c
   486   002E5E  E1FD               	bnz	clear_1
   487                           
   488                           ; Clear objects allocated to COMRAM (36 bytes)
   489   002E60  EE00  F02E         	lfsr	0,__pbssCOMRAM
   490   002E64  0E24               	movlw	36
   491   002E66                     clear_2:
   492   002E66  6AEE               	clrf	postinc0,c
   493   002E68  06E8               	decf	wreg,f,c
   494   002E6A  E1FD               	bnz	clear_2
   495   002E6C                     end_of_initialization:
   496                           	callstack 0
   497   002E6C                     __end_of__initialization:
   498                           	callstack 0
   499   002E6C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   500   002E6E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   501   002E70  0100               	movlb	0
   502   002E72  EF2E  F008         	goto	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMRAM
   505   00002E                     __pbssCOMRAM:
   506                           	callstack 0
   507   00002E                     _RTC1307@RealTimeClockDS1307$F1374:
   508                           	callstack 0
   509   00002E                     	ds	6
   510   000034                     _width:
   511                           	callstack 0
   512   000034                     	ds	2
   513   000036                     _prec:
   514                           	callstack 0
   515   000036                     	ds	2
   516   000038                     _INT2_InterruptHandler:
   517                           	callstack 0
   518   000038                     	ds	2
   519   00003A                     _INT1_InterruptHandler:
   520                           	callstack 0
   521   00003A                     	ds	2
   522   00003C                     _INT0_InterruptHandler:
   523                           	callstack 0
   524   00003C                     	ds	2
   525   00003E                     _flags:
   526                           	callstack 0
   527   00003E                     	ds	1
   528   00003F                     	ds	1
   529   000040                     	ds	1
   530   000041                     	ds	1
   531   000042                     	ds	1
   532   000043                     lcd_send_custom_char@counter:
   533                           	callstack 0
   534   000043                     	ds	1
   535   000044                     _category_counter:
   536                           	callstack 0
   537   000044                     	ds	1
   538   000045                     _RTC1307:
   539                           	callstack 0
   540   000045                     	ds	6
   541   00004B                     lcd_send_number@number:
   542                           	callstack 0
   543   00004B                     	ds	1
   544   00004C                     _year_counter:
   545                           	callstack 0
   546   00004C                     	ds	1
   547   00004D                     _month_counter:
   548                           	callstack 0
   549   00004D                     	ds	1
   550   00004E                     _day_counter:
   551                           	callstack 0
   552   00004E                     	ds	1
   553   00004F                     _hours_counter:
   554                           	callstack 0
   555   00004F                     	ds	1
   556   000050                     _minutes_counter:
   557                           	callstack 0
   558   000050                     	ds	1
   559   000051                     _seconds_counter:
   560                           	callstack 0
   561   000051                     	ds	1
   562                           
   563                           	psect	dataCOMRAM
   564   000052                     __pdataCOMRAM:
   565                           	callstack 0
   566   000052                     _RB7_Flag:
   567                           	callstack 0
   568   000052                     	ds	1
   569   000053                     _RB6_Flag:
   570                           	callstack 0
   571   000053                     	ds	1
   572   000054                     _RB5_Flag:
   573                           	callstack 0
   574   000054                     	ds	1
   575   000055                     _RB4_Flag:
   576                           	callstack 0
   577   000055                     	ds	1
   578   000056                     _n:
   579                           	callstack 0
   580   000056                     	ds	1
   581                           
   582                           	psect	bssBANK0
   583   0000B0                     __pbssBANK0:
   584                           	callstack 0
   585   0000B0                     _I2C_Status:
   586                           	callstack 0
   587   0000B0                     	ds	36
   588   0000D4                     	ds	6
   589   0000DA                     lcd_send_number_pos@number:
   590                           	callstack 0
   591   0000DA                     	ds	1
   592                           
   593                           	psect	dataBANK0
   594   000080                     __pdataBANK0:
   595                           	callstack 0
   596   000080                     _portx:
   597                           	callstack 0
   598   000080                     	ds	10
   599   00008A                     _latx:
   600                           	callstack 0
   601   00008A                     	ds	10
   602   000094                     _trisx:
   603                           	callstack 0
   604   000094                     	ds	10
   605   00009E                     _MY_INT1:
   606                           	callstack 0
   607   00009E                     	ds	6
   608   0000A4                     _MY_INT0:
   609                           	callstack 0
   610   0000A4                     	ds	6
   611   0000AA                     _lcd:
   612                           	callstack 0
   613   0000AA                     	ds	6
   614                           
   615                           	psect	bssBANK1
   616   000100                     __pbssBANK1:
   617                           	callstack 0
   618   000100                     _dbuf:
   619                           	callstack 0
   620   000100                     	ds	32
   621                           
   622                           	psect	cstackBANK1
   623   000120                     __pcstackBANK1:
   624                           	callstack 0
   625   000120                     convert_uint8_to_string@str:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x0
   629   000120                     	ds	1
   630   000121                     convert_uint8_to_string@value:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x1
   634   000121                     	ds	1
   635   000122                     lcd_send_number_pos@lcd:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x2
   639   000122                     	ds	1
   640   000123                     lcd_send_number_pos@row:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x3
   644   000123                     	ds	1
   645   000124                     lcd_send_number_pos@column:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x4
   649   000124                     	ds	1
   650   000125                     lcd_send_number_pos@num:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x5
   654   000125                     	ds	1
   655   000126                     lcd_send_number_pos@gpio_ret:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x6
   659   000126                     	ds	1
   660   000127                     lcd_send_number_pos@lcd_ret:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x7
   664   000127                     	ds	1
   665   000128                     ??_main:
   666                           
   667                           ; 1 bytes @ 0x8
   668   000128                     	ds	2
   669                           
   670                           	psect	cstackBANK0
   671   0000DB                     __pcstackBANK0:
   672                           	callstack 0
   673   0000DB                     ??_gpio_pin_logic_write:
   674   0000DB                     ??_INTx_select_InterruptHandler:
   675   0000DB                     ??_fputc:
   676   0000DB                     ??_gpio_pin_direction_init:
   677   0000DB                     convert_BCD_to_int@BCD_num:
   678                           	callstack 0
   679   0000DB                     ___awdiv@counter:
   680                           	callstack 0
   681   0000DB                     ___awmod@counter:
   682                           	callstack 0
   683   0000DB                     memset@p:
   684                           	callstack 0
   685   0000DB                     I2C_SetDataCompleteCallback@cb:
   686                           	callstack 0
   687   0000DB                     I2C_SetAddressNackCallback@cb:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x0
   691   0000DB                     	ds	1
   692   0000DC                     convert_BCD_to_int@tens:
   693                           	callstack 0
   694   0000DC                     ___awdiv@sign:
   695                           	callstack 0
   696   0000DC                     ___awmod@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x1
   700   0000DC                     	ds	1
   701   0000DD                     ?_abs:
   702                           	callstack 0
   703   0000DD                     convert_BCD_to_int@ones:
   704                           	callstack 0
   705   0000DD                     I2C_SetDataCompleteCallback@ptr:
   706                           	callstack 0
   707   0000DD                     I2C_SetAddressNackCallback@ptr:
   708                           	callstack 0
   709   0000DD                     ___awdiv@quotient:
   710                           	callstack 0
   711   0000DD                     abs@a:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715   0000DD                     	ds	2
   716   0000DF                     ??_abs:
   717   0000DF                     rd1RegCompleteHandler@ptr:
   718                           	callstack 0
   719   0000DF                     rd2RegCompleteHandler@ptr:
   720                           	callstack 0
   721   0000DF                     wr1RegCompleteHandler@ptr:
   722                           	callstack 0
   723   0000DF                     wr2RegCompleteHandler@ptr:
   724                           	callstack 0
   725   0000DF                     rdBlkRegCompleteHandler@ptr:
   726                           	callstack 0
   727   0000DF                     I2C_CallbackReturnReset@funPtr:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x4
   731   0000DF                     	ds	1
   732   0000E0                     ??_lcd_send_nbits:
   733   0000E0                     gpio_pin_output_low_init@gpio_ret:
   734                           	callstack 0
   735   0000E0                     gpio_pin_input_init@gpio_ret:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x5
   739   0000E0                     	ds	1
   740   0000E1                     ??_rdBlkRegCompleteHandler:
   741   0000E1                     gpio_pin_output_low_init@ret:
   742                           	callstack 0
   743   0000E1                     gpio_pin_input_init@ret:
   744                           	callstack 0
   745   0000E1                     vfpfcnvrt@fp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x6
   749   0000E1                     	ds	1
   750   0000E2                     ??_I2C_DO_TX:
   751   0000E2                     ??_I2C_DO_RX:
   752   0000E2                     ??_I2C_DO_TX_EMPTY:
   753   0000E2                     ??_I2C_DO_ADDRESS_NACK:
   754   0000E2                     lcd_send_nbits@ret:
   755                           	callstack 0
   756   0000E2                     interrupt_INTx_pin_init@_interrupt:
   757                           	callstack 0
   758   0000E2                     vfpfcnvrt@fmt:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x7
   762   0000E2                     	ds	1
   763   0000E3                     lcd_send_nbits@pin_counter:
   764                           	callstack 0
   765   0000E3                     interrupt_INTx_pin_init@ret:
   766                           	callstack 0
   767   0000E3                     vfpfcnvrt@ap:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x8
   771   0000E3                     	ds	1
   772   0000E4                     ??_I2C_MasterFsm:
   773   0000E4                     lcd_send_command@lcd:
   774                           	callstack 0
   775   0000E4                     lcd_send_char_data@lcd:
   776                           	callstack 0
   777   0000E4                     interrupt_INTx_init@_interrupt:
   778                           	callstack 0
   779   0000E4                     vfpfcnvrt@done:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x9
   783   0000E4                     	ds	1
   784   0000E5                     lcd_send_command@command:
   785                           	callstack 0
   786   0000E5                     lcd_send_char_data@data:
   787                           	callstack 0
   788   0000E5                     interrupt_INTx_init@ret:
   789                           	callstack 0
   790   0000E5                     vfpfcnvrt@cp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xA
   794   0000E5                     	ds	1
   795   0000E6                     lcd_send_command@gpio_ret:
   796                           	callstack 0
   797   0000E6                     lcd_send_char_data@gpio_ret:
   798                           	callstack 0
   799   0000E6                     vfpfcnvrt@convarg:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0xB
   803   0000E6                     	ds	1
   804   0000E7                     I2C_MasterOperation@read:
   805                           	callstack 0
   806   0000E7                     lcd_send_command@lcd_ret:
   807                           	callstack 0
   808   0000E7                     lcd_send_char_data@lcd_ret:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0xC
   812   0000E7                     	ds	1
   813   0000E8                     I2C_MasterOperation@returnValue:
   814                           	callstack 0
   815   0000E8                     lcd_send_command@ret:
   816                           	callstack 0
   817   0000E8                     lcd_send_char_data@ret:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xD
   821   0000E8                     	ds	1
   822   0000E9                     I2C_Read1ByteRegister@reg:
   823                           	callstack 0
   824   0000E9                     lcd_init@lcd:
   825                           	callstack 0
   826   0000E9                     lcd_send_string@lcd:
   827                           	callstack 0
   828   0000E9                     lcd_set_curser@lcd:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0xE
   832   0000E9                     	ds	1
   833   0000EA                     ??_lcd_init:
   834   0000EA                     I2C_Read1ByteRegister@address:
   835                           	callstack 0
   836   0000EA                     lcd_set_curser@row:
   837                           	callstack 0
   838   0000EA                     vfpfcnvrt@c:
   839                           	callstack 0
   840   0000EA                     lcd_send_string@str:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0xF
   844   0000EA                     	ds	1
   845   0000EB                     ?_vfprintf:
   846                           	callstack 0
   847   0000EB                     I2C_Read1ByteRegister@returnValue:
   848                           	callstack 0
   849   0000EB                     lcd_set_curser@column:
   850                           	callstack 0
   851   0000EB                     vfprintf@fp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x10
   855   0000EB                     	ds	1
   856   0000EC                     ??_lcd_set_curser:
   857   0000EC                     ?_RealTimeClockDS1307_Get_Date_Time:
   858                           	callstack 0
   859   0000EC                     lcd_init@gpio_ret:
   860                           	callstack 0
   861   0000EC                     lcd_send_string@gpio_ret:
   862                           	callstack 0
   863   0000EC                     vfprintf@fmt:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x11
   867   0000EC                     	ds	1
   868   0000ED                     lcd_init@pins_counter:
   869                           	callstack 0
   870   0000ED                     lcd_send_string@lcd_ret:
   871                           	callstack 0
   872   0000ED                     vfprintf@ap:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x12
   876   0000ED                     	ds	1
   877   0000EE                     lcd_init@lcd_ret:
   878                           	callstack 0
   879   0000EE                     lcd_send_string@ret:
   880                           	callstack 0
   881   0000EE                     lcd_set_curser@gpio_ret:
   882                           	callstack 0
   883   0000EE                     vfprintf@cfmt:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x13
   887   0000EE                     	ds	1
   888   0000EF                     ?_sprintf:
   889                           	callstack 0
   890   0000EF                     lcd_set_curser@lcd_ret:
   891                           	callstack 0
   892   0000EF                     sprintf@s:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x14
   896   0000EF                     	ds	1
   897   0000F0                     lcd_send_char_data_pos@lcd:
   898                           	callstack 0
   899   0000F0                     lcd_send_string_pos@lcd:
   900                           	callstack 0
   901   0000F0                     sprintf@fmt:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x15
   905   0000F0                     	ds	1
   906   0000F1                     lcd_send_char_data_pos@row:
   907                           	callstack 0
   908   0000F1                     lcd_send_string_pos@row:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x16
   912   0000F1                     	ds	1
   913   0000F2                     lcd_send_char_data_pos@column:
   914                           	callstack 0
   915   0000F2                     lcd_send_string_pos@column:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x17
   919   0000F2                     	ds	1
   920   0000F3                     lcd_send_char_data_pos@data:
   921                           	callstack 0
   922   0000F3                     sprintf@ap:
   923                           	callstack 0
   924   0000F3                     lcd_send_string_pos@str:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x18
   928   0000F3                     	ds	1
   929   0000F4                     lcd_send_char_data_pos@gpio_ret:
   930                           	callstack 0
   931   0000F4                     sprintf@f:
   932                           	callstack 0
   933                           
   934                           ; 12 bytes @ 0x19
   935   0000F4                     	ds	1
   936   0000F5                     lcd_send_char_data_pos@lcd_ret:
   937                           	callstack 0
   938   0000F5                     lcd_send_string_pos@gpio_ret:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x1A
   942   0000F5                     	ds	1
   943   0000F6                     lcd_send_char_data_pos@ret:
   944                           	callstack 0
   945   0000F6                     lcd_send_string_pos@lcd_ret:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x1B
   949   0000F6                     	ds	10
   950                           
   951                           	psect	cstackCOMRAM
   952   000001                     __pcstackCOMRAM:
   953                           	callstack 0
   954   000001                     ?i2___awdiv:
   955                           	callstack 0
   956   000001                     ?i2___awmod:
   957                           	callstack 0
   958   000001                     i2I2C_Open@address:
   959                           	callstack 0
   960   000001                     i2I2C_Close@returnValue:
   961                           	callstack 0
   962   000001                     i2I2C_MasterSendTxData@data:
   963                           	callstack 0
   964   000001                     i2I2C_SetBuffer@buffer:
   965                           	callstack 0
   966   000001                     i2I2C_SetCallback@cb:
   967                           	callstack 0
   968   000001                     i2___awdiv@dividend:
   969                           	callstack 0
   970   000001                     i2___awmod@dividend:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x0
   974   000001                     	ds	1
   975   000002                     i2I2C_Open@returnValue:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x1
   979   000002                     	ds	1
   980   000003                     i2I2C_SetBuffer@bufferSize:
   981                           	callstack 0
   982   000003                     i2I2C_SetCallback@ptr:
   983                           	callstack 0
   984   000003                     i2___awdiv@divisor:
   985                           	callstack 0
   986   000003                     i2___awmod@divisor:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x2
   990   000003                     	ds	2
   991   000005                     i2I2C_SetCallback@idx:
   992                           	callstack 0
   993   000005                     i2___awdiv@counter:
   994                           	callstack 0
   995   000005                     i2___awmod@counter:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x4
   999   000005                     	ds	1
  1000   000006                     i2___awdiv@sign:
  1001                           	callstack 0
  1002   000006                     i2___awmod@sign:
  1003                           	callstack 0
  1004   000006                     i2I2C_SetDataCompleteCallback@cb:
  1005                           	callstack 0
  1006   000006                     i2I2C_SetAddressNackCallback@cb:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x5
  1010   000006                     	ds	1
  1011   000007                     i2___awdiv@quotient:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x6
  1015   000007                     	ds	1
  1016   000008                     i2I2C_SetDataCompleteCallback@ptr:
  1017                           	callstack 0
  1018   000008                     i2I2C_SetAddressNackCallback@ptr:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x7
  1022   000008                     	ds	1
  1023   000009                     convert_int_to_BCD@BCD_num:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x8
  1027   000009                     	ds	1
  1028   00000A                     convert_int_to_BCD@int_num:
  1029                           	callstack 0
  1030   00000A                     i2rd1RegCompleteHandler@ptr:
  1031                           	callstack 0
  1032   00000A                     i2rd2RegCompleteHandler@ptr:
  1033                           	callstack 0
  1034   00000A                     i2wr1RegCompleteHandler@ptr:
  1035                           	callstack 0
  1036   00000A                     i2wr2RegCompleteHandler@ptr:
  1037                           	callstack 0
  1038   00000A                     i2rdBlkRegCompleteHandler@ptr:
  1039                           	callstack 0
  1040   00000A                     
  1041                           ; 2 bytes @ 0x9
  1042   00000A                     	ds	1
  1043   00000B                     convert_int_to_BCD@l_nipple:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0xA
  1047   00000B                     	ds	1
  1048   00000C                     ??i2_rdBlkRegCompleteHandler:
  1049   00000C                     convert_int_to_BCD@h_nipple:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0xB
  1053   00000C                     	ds	1
  1054   00000D                     ??i2_I2C_DO_TX:
  1055   00000D                     ??i2_I2C_DO_RX:
  1056   00000D                     ??i2_I2C_DO_TX_EMPTY:
  1057   00000D                     ??i2_I2C_DO_ADDRESS_NACK:
  1058                           
  1059                           ; 1 bytes @ 0xC
  1060   00000D                     	ds	2
  1061   00000F                     ??i2_I2C_MasterFsm:
  1062                           
  1063                           ; 1 bytes @ 0xE
  1064   00000F                     	ds	3
  1065   000012                     i2I2C_MasterOperation@read:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x11
  1069   000012                     	ds	1
  1070   000013                     i2I2C_MasterOperation@returnValue:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x12
  1074   000013                     	ds	1
  1075   000014                     I2C_Write1ByteRegister@reg:
  1076                           	callstack 0
  1077   000014                     i2I2C_Read1ByteRegister@reg:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x13
  1081   000014                     	ds	1
  1082   000015                     I2C_Write1ByteRegister@data:
  1083                           	callstack 0
  1084   000015                     i2I2C_Read1ByteRegister@address:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x14
  1088   000015                     	ds	1
  1089   000016                     I2C_Write1ByteRegister@address:
  1090                           	callstack 0
  1091   000016                     i2I2C_Read1ByteRegister@returnValue:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x15
  1095   000016                     	ds	1
  1096   000017                     ?i2_RealTimeClockDS1307_Get_Date_Time:
  1097                           	callstack 0
  1098                           
  1099                           ; 6 bytes @ 0x16
  1100   000017                     	ds	6
  1101   00001D                     ??_InterruptManager:
  1102   00001D                     
  1103                           ; 1 bytes @ 0x1C
  1104   00001D                     	ds	12
  1105   000029                     ?___awdiv:
  1106                           	callstack 0
  1107   000029                     ?___awmod:
  1108                           	callstack 0
  1109   000029                     I2C_Open@address:
  1110                           	callstack 0
  1111   000029                     I2C_Close@returnValue:
  1112                           	callstack 0
  1113   000029                     I2C_MasterSendTxData@data:
  1114                           	callstack 0
  1115   000029                     convert_BCD_to_int@int_num:
  1116                           	callstack 0
  1117   000029                     gpio_pin_direction_init@pin:
  1118                           	callstack 0
  1119   000029                     gpio_pin_logic_write@pin:
  1120                           	callstack 0
  1121   000029                     interrupt_INTx_enable@_interrupt:
  1122                           	callstack 0
  1123   000029                     interrupt_INTx_disable@_interrupt:
  1124                           	callstack 0
  1125   000029                     interrupt_INTx_clear_flag@_interrupt:
  1126                           	callstack 0
  1127   000029                     interrupt_INTx_edge_init@_interrupt:
  1128                           	callstack 0
  1129   000029                     memset@dest:
  1130                           	callstack 0
  1131   000029                     I2C_SetBuffer@buffer:
  1132                           	callstack 0
  1133   000029                     I2C_SetCallback@cb:
  1134                           	callstack 0
  1135   000029                     INT0_set_InterruptHandler@InterruptHandler:
  1136                           	callstack 0
  1137   000029                     INT1_set_InterruptHandler@InterruptHandler:
  1138                           	callstack 0
  1139   000029                     INT2_set_InterruptHandler@InterruptHandler:
  1140                           	callstack 0
  1141   000029                     ___awdiv@dividend:
  1142                           	callstack 0
  1143   000029                     ___awmod@dividend:
  1144                           	callstack 0
  1145   000029                     fputc@c:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x28
  1149   000029                     	ds	1
  1150   00002A                     ??_convert_BCD_to_int:
  1151   00002A                     ??_interrupt_INTx_disable:
  1152   00002A                     ??_interrupt_INTx_clear_flag:
  1153   00002A                     ??_interrupt_INTx_edge_init:
  1154   00002A                     ??_interrupt_INTx_enable:
  1155   00002A                     I2C_Open@returnValue:
  1156                           	callstack 0
  1157   00002A                     gpio_pin_direction_init@pin_direction:
  1158                           	callstack 0
  1159   00002A                     gpio_pin_logic_write@pin_logic:
  1160                           	callstack 0
  1161   00002A                     memset@c:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x29
  1165   00002A                     	ds	1
  1166   00002B                     gpio_pin_direction_init@ret:
  1167                           	callstack 0
  1168   00002B                     gpio_pin_logic_write@ret:
  1169                           	callstack 0
  1170   00002B                     INT0_set_InterruptHandler@ret:
  1171                           	callstack 0
  1172   00002B                     INT1_set_InterruptHandler@ret:
  1173                           	callstack 0
  1174   00002B                     INT2_set_InterruptHandler@ret:
  1175                           	callstack 0
  1176   00002B                     fputc@fp:
  1177                           	callstack 0
  1178   00002B                     I2C_SetBuffer@bufferSize:
  1179                           	callstack 0
  1180   00002B                     I2C_SetCallback@ptr:
  1181                           	callstack 0
  1182   00002B                     ___awdiv@divisor:
  1183                           	callstack 0
  1184   00002B                     ___awmod@divisor:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x2A
  1188   00002B                     	ds	1
  1189   00002C                     lcd_send_nbits@lcd:
  1190                           	callstack 0
  1191   00002C                     lcd_send_enable@lcd:
  1192                           	callstack 0
  1193   00002C                     gpio_pin_output_low_init@pin:
  1194                           	callstack 0
  1195   00002C                     gpio_pin_input_init@pin:
  1196                           	callstack 0
  1197   00002C                     interrupt_INTx_enable@ret:
  1198                           	callstack 0
  1199   00002C                     interrupt_INTx_disable@ret:
  1200                           	callstack 0
  1201   00002C                     interrupt_INTx_clear_flag@ret:
  1202                           	callstack 0
  1203   00002C                     interrupt_INTx_edge_init@ret:
  1204                           	callstack 0
  1205   00002C                     INTx_select_InterruptHandler@_interrupt:
  1206                           	callstack 0
  1207   00002C                     memset@n:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x2B
  1211   00002C                     	ds	1
  1212   00002D                     ??_gpio_pin_output_low_init:
  1213   00002D                     ??_gpio_pin_input_init:
  1214   00002D                     ??_vfpfcnvrt:
  1215   00002D                     I2C_SetCallback@idx:
  1216                           	callstack 0
  1217   00002D                     lcd_send_nbits@data_or_command:
  1218                           	callstack 0
  1219   00002D                     lcd_send_enable@gpio_ret:
  1220                           	callstack 0
  1221   00002D                     INTx_select_InterruptHandler@ret:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x2C
  1225   00002D                     	ds	1
  1226   00002E                     
  1227                           ; 1 bytes @ 0x2D
  1228 ;;
  1229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1230 ;;
  1231 ;; *************** function _main *****************
  1232 ;; Defined at:
  1233 ;;		line 79 in file "app.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;Total ram usage:        2 bytes
  1252 ;; Hardware stack levels required when called: 23
  1253 ;; This function calls:
  1254 ;;		_RealTimeClockDS1307_Get_Date_Time
  1255 ;;		__Initialize
  1256 ;;		_convert_BCD_to_int
  1257 ;;		_lcd_send_char_data_pos
  1258 ;;		_lcd_send_command
  1259 ;;		_lcd_send_number_pos
  1260 ;;		_lcd_send_string_pos
  1261 ;; This function is called by:
  1262 ;;		Startup code after reset
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text0
  1267   00105C                     __ptext0:
  1268                           	callstack 0
  1269   00105C                     _main:
  1270                           	callstack 8
  1271   00105C                     
  1272                           ;app.c: 82:     _Initialize();
  1273   00105C  EC34  F01D         	call	__Initialize	;wreg free
  1274   001060                     l8606:
  1275                           
  1276                           ;app.c: 85:     {;app.c: 86:         if(category_counter==0){
  1277   001060  5044               	movf	_category_counter^0,w,c	;volatile
  1278   001062  A4D8               	btfss	status,2,c
  1279   001064  EF36  F008         	goto	u5841
  1280   001068  EF38  F008         	goto	u5840
  1281   00106C                     u5841:
  1282   00106C  EF01  F009         	goto	l8650
  1283   001070                     u5840:
  1284   001070                     
  1285                           ;app.c: 88:             lcd_send_command(&lcd,0X01);
  1286   001070  0EAA               	movlw	low _lcd
  1287   001072  0100               	movlb	0	; () banked
  1288   001074  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1289   001076  0E01               	movlw	1
  1290   001078  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1291   00107A  EC5A  F016         	call	_lcd_send_command	;wreg free
  1292   00107E                     
  1293                           ;app.c: 89:             RTC1307 = RealTimeClockDS1307_Get_Date_Time();
  1294   00107E  EC83  F018         	call	_RealTimeClockDS1307_Get_Date_Time	;wreg free
  1295   001082  EE20  F045         	lfsr	2,_RTC1307	;volatile
  1296   001086  0E05               	movlw	5
  1297   001088                     u5851:
  1298   001088  CFEB FFDB          	movff	plusw0,plusw2
  1299   00108C  06E8               	decf	wreg,f,c
  1300   00108E  E2FC               	bc	u5851
  1301   001090                     
  1302                           ;app.c: 90:             lcd_send_string_pos(&lcd,1,1,"TIME:");
  1303   001090  0EAA               	movlw	low _lcd
  1304   001092  0100               	movlb	0	; () banked
  1305   001094  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1306   001096  0E01               	movlw	1
  1307   001098  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1308   00109A  0E01               	movlw	1
  1309   00109C  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1310   00109E  0E41               	movlw	low STR_1
  1311   0010A0  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1312   0010A2  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1313   0010A4  A4D8               	btfss	status,2,c
  1314   0010A6  0E10               	movlw	high __smallconst
  1315   0010A8  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1316   0010AA  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1317   0010AE                     
  1318                           ;app.c: 91:             convert_BCD_to_int(RTC1307._Hours,&hours_counter);
  1319   0010AE  0E4F               	movlw	low _hours_counter
  1320   0010B0  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1321   0010B2  5045               	movf	_RTC1307^0,w,c	;volatile
  1322   0010B4  ECF7  F00A         	call	_convert_BCD_to_int
  1323   0010B8                     
  1324                           ;app.c: 92:             lcd_send_number_pos(&lcd,1,7,hours_counter);
  1325   0010B8  0EAA               	movlw	low _lcd
  1326   0010BA  0101               	movlb	1	; () banked
  1327   0010BC  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1328   0010BE  0E01               	movlw	1
  1329   0010C0  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1330   0010C2  0E07               	movlw	7
  1331   0010C4  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1332   0010C6  C04F  F125         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  1333   0010CA  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1334   0010CE                     
  1335                           ;app.c: 93:             lcd_send_char_data_pos(&lcd,1,9,':');
  1336   0010CE  0EAA               	movlw	low _lcd
  1337   0010D0  0100               	movlb	0	; () banked
  1338   0010D2  6FF0               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1339   0010D4  0E01               	movlw	1
  1340   0010D6  6FF1               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1341   0010D8  0E09               	movlw	9
  1342   0010DA  6FF2               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1343   0010DC  0E3A               	movlw	58
  1344   0010DE  6FF3               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1345   0010E0  EC3B  F017         	call	_lcd_send_char_data_pos	;wreg free
  1346   0010E4                     
  1347                           ;app.c: 94:             convert_BCD_to_int(RTC1307._Minutes,&minutes_counter);
  1348   0010E4  0E50               	movlw	low _minutes_counter
  1349   0010E6  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1350   0010E8  5046               	movf	(_RTC1307+1)^0,w,c	;volatile
  1351   0010EA  ECF7  F00A         	call	_convert_BCD_to_int
  1352   0010EE                     
  1353                           ;app.c: 95:             lcd_send_number_pos(&lcd,1,10,minutes_counter);
  1354   0010EE  0EAA               	movlw	low _lcd
  1355   0010F0  0101               	movlb	1	; () banked
  1356   0010F2  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1357   0010F4  0E01               	movlw	1
  1358   0010F6  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1359   0010F8  0E0A               	movlw	10
  1360   0010FA  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1361   0010FC  C050  F125         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  1362   001100  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1363   001104                     
  1364                           ;app.c: 96:             lcd_send_char_data_pos(&lcd,1,12,':');
  1365   001104  0EAA               	movlw	low _lcd
  1366   001106  0100               	movlb	0	; () banked
  1367   001108  6FF0               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1368   00110A  0E01               	movlw	1
  1369   00110C  6FF1               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1370   00110E  0E0C               	movlw	12
  1371   001110  6FF2               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1372   001112  0E3A               	movlw	58
  1373   001114  6FF3               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1374   001116  EC3B  F017         	call	_lcd_send_char_data_pos	;wreg free
  1375   00111A                     
  1376                           ;app.c: 97:             convert_BCD_to_int(RTC1307._Seconds,&seconds_counter);
  1377   00111A  0E51               	movlw	low _seconds_counter
  1378   00111C  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1379   00111E  5047               	movf	(_RTC1307+2)^0,w,c	;volatile
  1380   001120  ECF7  F00A         	call	_convert_BCD_to_int
  1381   001124                     
  1382                           ;app.c: 98:             lcd_send_number_pos(&lcd,1,13,seconds_counter);
  1383   001124  0EAA               	movlw	low _lcd
  1384   001126  0101               	movlb	1	; () banked
  1385   001128  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1386   00112A  0E01               	movlw	1
  1387   00112C  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1388   00112E  0E0D               	movlw	13
  1389   001130  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1390   001132  C051  F125         	movff	_seconds_counter,lcd_send_number_pos@num	;volatile
  1391   001136  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1392   00113A                     
  1393                           ;app.c: 101:             lcd_send_string_pos(&lcd,2,1,"DATE:");
  1394   00113A  0EAA               	movlw	low _lcd
  1395   00113C  0100               	movlb	0	; () banked
  1396   00113E  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1397   001140  0E02               	movlw	2
  1398   001142  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1399   001144  0E01               	movlw	1
  1400   001146  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1401   001148  0E47               	movlw	low STR_2
  1402   00114A  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1403   00114C  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1404   00114E  A4D8               	btfss	status,2,c
  1405   001150  0E10               	movlw	high __smallconst
  1406   001152  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1407   001154  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1408   001158                     
  1409                           ;app.c: 102:             convert_BCD_to_int(RTC1307._Day,&day_counter);
  1410   001158  0E4E               	movlw	low _day_counter
  1411   00115A  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1412   00115C  504A               	movf	(_RTC1307+5)^0,w,c	;volatile
  1413   00115E  ECF7  F00A         	call	_convert_BCD_to_int
  1414   001162                     
  1415                           ;app.c: 103:             lcd_send_number_pos(&lcd,2,7,day_counter);
  1416   001162  0EAA               	movlw	low _lcd
  1417   001164  0101               	movlb	1	; () banked
  1418   001166  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1419   001168  0E02               	movlw	2
  1420   00116A  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1421   00116C  0E07               	movlw	7
  1422   00116E  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1423   001170  C04E  F125         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  1424   001174  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1425   001178                     
  1426                           ;app.c: 104:             lcd_send_char_data_pos(&lcd,2,9,'/');
  1427   001178  0EAA               	movlw	low _lcd
  1428   00117A  0100               	movlb	0	; () banked
  1429   00117C  6FF0               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1430   00117E  0E02               	movlw	2
  1431   001180  6FF1               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1432   001182  0E09               	movlw	9
  1433   001184  6FF2               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1434   001186  0E2F               	movlw	47
  1435   001188  6FF3               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1436   00118A  EC3B  F017         	call	_lcd_send_char_data_pos	;wreg free
  1437   00118E                     
  1438                           ;app.c: 105:             convert_BCD_to_int(RTC1307._Month,&month_counter);
  1439   00118E  0E4D               	movlw	low _month_counter
  1440   001190  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1441   001192  5049               	movf	(_RTC1307+4)^0,w,c	;volatile
  1442   001194  ECF7  F00A         	call	_convert_BCD_to_int
  1443   001198                     
  1444                           ;app.c: 106:             lcd_send_number_pos(&lcd,2,10,RTC1307._Month);
  1445   001198  0EAA               	movlw	low _lcd
  1446   00119A  0101               	movlb	1	; () banked
  1447   00119C  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1448   00119E  0E02               	movlw	2
  1449   0011A0  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1450   0011A2  0E0A               	movlw	10
  1451   0011A4  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1452   0011A6  C049  F125         	movff	_RTC1307+4,lcd_send_number_pos@num	;volatile
  1453   0011AA  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1454   0011AE                     
  1455                           ;app.c: 107:             lcd_send_char_data_pos(&lcd,2,12,'/');
  1456   0011AE  0EAA               	movlw	low _lcd
  1457   0011B0  0100               	movlb	0	; () banked
  1458   0011B2  6FF0               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1459   0011B4  0E02               	movlw	2
  1460   0011B6  6FF1               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1461   0011B8  0E0C               	movlw	12
  1462   0011BA  6FF2               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1463   0011BC  0E2F               	movlw	47
  1464   0011BE  6FF3               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1465   0011C0  EC3B  F017         	call	_lcd_send_char_data_pos	;wreg free
  1466   0011C4                     
  1467                           ;app.c: 108:             convert_BCD_to_int(RTC1307._Year,&year_counter);
  1468   0011C4  0E4C               	movlw	low _year_counter
  1469   0011C6  6E29               	movwf	convert_BCD_to_int@int_num^0,c
  1470   0011C8  5048               	movf	(_RTC1307+3)^0,w,c	;volatile
  1471   0011CA  ECF7  F00A         	call	_convert_BCD_to_int
  1472   0011CE                     
  1473                           ;app.c: 109:             lcd_send_number_pos(&lcd,2,13,year_counter);
  1474   0011CE  0EAA               	movlw	low _lcd
  1475   0011D0  0101               	movlb	1	; () banked
  1476   0011D2  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1477   0011D4  0E02               	movlw	2
  1478   0011D6  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1479   0011D8  0E0D               	movlw	13
  1480   0011DA  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1481   0011DC  C04C  F125         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  1482   0011E0  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1483   0011E4                     l8648:
  1484                           
  1485                           ;app.c: 110:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1486   0011E4  0E06               	movlw	6
  1487   0011E6  0101               	movlb	1	; () banked
  1488   0011E8  6F29               	movwf	(??_main+1)& (0+255),b
  1489   0011EA  0E13               	movlw	19
  1490   0011EC  6F28               	movwf	??_main& (0+255),b
  1491   0011EE  0EAD               	movlw	173
  1492   0011F0                     u6107:
  1493   0011F0  2EE8               	decfsz	wreg,f,c
  1494   0011F2  D7FE               	bra	u6107
  1495   0011F4  2F28               	decfsz	??_main& (0+255),f,b
  1496   0011F6  D7FC               	bra	u6107
  1497   0011F8  2F29               	decfsz	(??_main+1)& (0+255),f,b
  1498   0011FA  D7FA               	bra	u6107
  1499   0011FC  D000               	nop2	
  1500                           
  1501                           ;app.c: 111:         }
  1502   0011FE  EF30  F008         	goto	l8606
  1503   001202                     l8650:
  1504   001202  0444               	decf	_category_counter^0,w,c	;volatile
  1505   001204  A4D8               	btfss	status,2,c
  1506   001206  EF07  F009         	goto	u5861
  1507   00120A  EF09  F009         	goto	u5860
  1508   00120E                     u5861:
  1509   00120E  EF2C  F009         	goto	l8660
  1510   001212                     u5860:
  1511   001212                     
  1512                           ;app.c: 114:             lcd_send_command(&lcd,0X01);
  1513   001212  0EAA               	movlw	low _lcd
  1514   001214  0100               	movlb	0	; () banked
  1515   001216  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1516   001218  0E01               	movlw	1
  1517   00121A  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1518   00121C  EC5A  F016         	call	_lcd_send_command	;wreg free
  1519   001220                     
  1520                           ;app.c: 115:             lcd_send_string_pos(&lcd,1,1,"seconds:");
  1521   001220  0EAA               	movlw	low _lcd
  1522   001222  0100               	movlb	0	; () banked
  1523   001224  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1524   001226  0E01               	movlw	1
  1525   001228  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1526   00122A  0E01               	movlw	1
  1527   00122C  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1528   00122E  0E21               	movlw	low STR_3
  1529   001230  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1530   001232  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1531   001234  A4D8               	btfss	status,2,c
  1532   001236  0E10               	movlw	high __smallconst
  1533   001238  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1534   00123A  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1535   00123E                     
  1536                           ;app.c: 116:             lcd_send_number_pos(&lcd,1,10,seconds_counter);
  1537   00123E  0EAA               	movlw	low _lcd
  1538   001240  0101               	movlb	1	; () banked
  1539   001242  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1540   001244  0E01               	movlw	1
  1541   001246  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1542   001248  0E0A               	movlw	10
  1543   00124A  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1544   00124C  C051  F125         	movff	_seconds_counter,lcd_send_number_pos@num	;volatile
  1545   001250  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1546   001254  EFF2  F008         	goto	l8648
  1547   001258                     l8660:
  1548   001258  0E02               	movlw	2
  1549   00125A  1844               	xorwf	_category_counter^0,w,c	;volatile
  1550   00125C  A4D8               	btfss	status,2,c
  1551   00125E  EF33  F009         	goto	u5871
  1552   001262  EF35  F009         	goto	u5870
  1553   001266                     u5871:
  1554   001266  EF58  F009         	goto	l8670
  1555   00126A                     u5870:
  1556   00126A                     
  1557                           ;app.c: 121:             lcd_send_command(&lcd,0X01);
  1558   00126A  0EAA               	movlw	low _lcd
  1559   00126C  0100               	movlb	0	; () banked
  1560   00126E  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1561   001270  0E01               	movlw	1
  1562   001272  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1563   001274  EC5A  F016         	call	_lcd_send_command	;wreg free
  1564   001278                     
  1565                           ;app.c: 122:             lcd_send_string_pos(&lcd,1,1,"minutes:");
  1566   001278  0EAA               	movlw	low _lcd
  1567   00127A  0100               	movlb	0	; () banked
  1568   00127C  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1569   00127E  0E01               	movlw	1
  1570   001280  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1571   001282  0E01               	movlw	1
  1572   001284  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1573   001286  0E2A               	movlw	low STR_4
  1574   001288  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1575   00128A  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1576   00128C  A4D8               	btfss	status,2,c
  1577   00128E  0E10               	movlw	high __smallconst
  1578   001290  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1579   001292  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1580   001296                     
  1581                           ;app.c: 123:             lcd_send_number_pos(&lcd,1,10,minutes_counter);
  1582   001296  0EAA               	movlw	low _lcd
  1583   001298  0101               	movlb	1	; () banked
  1584   00129A  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1585   00129C  0E01               	movlw	1
  1586   00129E  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1587   0012A0  0E0A               	movlw	10
  1588   0012A2  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1589   0012A4  C050  F125         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  1590   0012A8  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1591   0012AC  EFF2  F008         	goto	l8648
  1592   0012B0                     l8670:
  1593   0012B0  0E03               	movlw	3
  1594   0012B2  1844               	xorwf	_category_counter^0,w,c	;volatile
  1595   0012B4  A4D8               	btfss	status,2,c
  1596   0012B6  EF5F  F009         	goto	u5881
  1597   0012BA  EF61  F009         	goto	u5880
  1598   0012BE                     u5881:
  1599   0012BE  EF84  F009         	goto	l8680
  1600   0012C2                     u5880:
  1601   0012C2                     
  1602                           ;app.c: 128:             lcd_send_command(&lcd,0X01);
  1603   0012C2  0EAA               	movlw	low _lcd
  1604   0012C4  0100               	movlb	0	; () banked
  1605   0012C6  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1606   0012C8  0E01               	movlw	1
  1607   0012CA  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1608   0012CC  EC5A  F016         	call	_lcd_send_command	;wreg free
  1609   0012D0                     
  1610                           ;app.c: 129:             lcd_send_string_pos(&lcd,1,1,"hours:");
  1611   0012D0  0EAA               	movlw	low _lcd
  1612   0012D2  0100               	movlb	0	; () banked
  1613   0012D4  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1614   0012D6  0E01               	movlw	1
  1615   0012D8  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1616   0012DA  0E01               	movlw	1
  1617   0012DC  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1618   0012DE  0E3A               	movlw	low STR_5
  1619   0012E0  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1620   0012E2  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1621   0012E4  A4D8               	btfss	status,2,c
  1622   0012E6  0E10               	movlw	high __smallconst
  1623   0012E8  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1624   0012EA  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1625   0012EE                     
  1626                           ;app.c: 130:             lcd_send_number_pos(&lcd,1,8,hours_counter);
  1627   0012EE  0EAA               	movlw	low _lcd
  1628   0012F0  0101               	movlb	1	; () banked
  1629   0012F2  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1630   0012F4  0E01               	movlw	1
  1631   0012F6  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1632   0012F8  0E08               	movlw	8
  1633   0012FA  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1634   0012FC  C04F  F125         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  1635   001300  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1636   001304  EFF2  F008         	goto	l8648
  1637   001308                     l8680:
  1638   001308  0E04               	movlw	4
  1639   00130A  1844               	xorwf	_category_counter^0,w,c	;volatile
  1640   00130C  A4D8               	btfss	status,2,c
  1641   00130E  EF8B  F009         	goto	u5891
  1642   001312  EF8D  F009         	goto	u5890
  1643   001316                     u5891:
  1644   001316  EFB0  F009         	goto	l8690
  1645   00131A                     u5890:
  1646   00131A                     
  1647                           ;app.c: 135:             lcd_send_command(&lcd,0X01);
  1648   00131A  0EAA               	movlw	low _lcd
  1649   00131C  0100               	movlb	0	; () banked
  1650   00131E  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1651   001320  0E01               	movlw	1
  1652   001322  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1653   001324  EC5A  F016         	call	_lcd_send_command	;wreg free
  1654   001328                     
  1655                           ;app.c: 136:             lcd_send_string_pos(&lcd,1,1,"day:");
  1656   001328  0EAA               	movlw	low _lcd
  1657   00132A  0100               	movlb	0	; () banked
  1658   00132C  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1659   00132E  0E01               	movlw	1
  1660   001330  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1661   001332  0E01               	movlw	1
  1662   001334  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1663   001336  0E53               	movlw	low STR_6
  1664   001338  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1665   00133A  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1666   00133C  A4D8               	btfss	status,2,c
  1667   00133E  0E10               	movlw	high __smallconst
  1668   001340  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1669   001342  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1670   001346                     
  1671                           ;app.c: 137:             lcd_send_number_pos(&lcd,1,6,day_counter);
  1672   001346  0EAA               	movlw	low _lcd
  1673   001348  0101               	movlb	1	; () banked
  1674   00134A  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1675   00134C  0E01               	movlw	1
  1676   00134E  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1677   001350  0E06               	movlw	6
  1678   001352  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1679   001354  C04E  F125         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  1680   001358  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1681   00135C  EFF2  F008         	goto	l8648
  1682   001360                     l8690:
  1683   001360  0E05               	movlw	5
  1684   001362  1844               	xorwf	_category_counter^0,w,c	;volatile
  1685   001364  A4D8               	btfss	status,2,c
  1686   001366  EFB7  F009         	goto	u5901
  1687   00136A  EFB9  F009         	goto	u5900
  1688   00136E                     u5901:
  1689   00136E  EFDC  F009         	goto	l8700
  1690   001372                     u5900:
  1691   001372                     
  1692                           ;app.c: 142:             lcd_send_command(&lcd,0X01);
  1693   001372  0EAA               	movlw	low _lcd
  1694   001374  0100               	movlb	0	; () banked
  1695   001376  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1696   001378  0E01               	movlw	1
  1697   00137A  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1698   00137C  EC5A  F016         	call	_lcd_send_command	;wreg free
  1699   001380                     
  1700                           ;app.c: 143:             lcd_send_string_pos(&lcd,1,1,"month:");
  1701   001380  0EAA               	movlw	low _lcd
  1702   001382  0100               	movlb	0	; () banked
  1703   001384  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1704   001386  0E01               	movlw	1
  1705   001388  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1706   00138A  0E01               	movlw	1
  1707   00138C  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1708   00138E  0E33               	movlw	low STR_7
  1709   001390  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1710   001392  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1711   001394  A4D8               	btfss	status,2,c
  1712   001396  0E10               	movlw	high __smallconst
  1713   001398  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1714   00139A  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1715   00139E                     
  1716                           ;app.c: 144:             lcd_send_number_pos(&lcd,1,8,month_counter);
  1717   00139E  0EAA               	movlw	low _lcd
  1718   0013A0  0101               	movlb	1	; () banked
  1719   0013A2  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1720   0013A4  0E01               	movlw	1
  1721   0013A6  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1722   0013A8  0E08               	movlw	8
  1723   0013AA  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1724   0013AC  C04D  F125         	movff	_month_counter,lcd_send_number_pos@num	;volatile
  1725   0013B0  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1726   0013B4  EFF2  F008         	goto	l8648
  1727   0013B8                     l8700:
  1728   0013B8  0E06               	movlw	6
  1729   0013BA  1844               	xorwf	_category_counter^0,w,c	;volatile
  1730   0013BC  A4D8               	btfss	status,2,c
  1731   0013BE  EFE3  F009         	goto	u5911
  1732   0013C2  EFE5  F009         	goto	u5910
  1733   0013C6                     u5911:
  1734   0013C6  EF08  F00A         	goto	l543
  1735   0013CA                     u5910:
  1736   0013CA                     
  1737                           ;app.c: 149:             lcd_send_command(&lcd,0X01);
  1738   0013CA  0EAA               	movlw	low _lcd
  1739   0013CC  0100               	movlb	0	; () banked
  1740   0013CE  6FE4               	movwf	lcd_send_command@lcd& (0+255),b
  1741   0013D0  0E01               	movlw	1
  1742   0013D2  6FE5               	movwf	lcd_send_command@command& (0+255),b
  1743   0013D4  EC5A  F016         	call	_lcd_send_command	;wreg free
  1744   0013D8                     
  1745                           ;app.c: 150:             lcd_send_string_pos(&lcd,1,1,"year:");
  1746   0013D8  0EAA               	movlw	low _lcd
  1747   0013DA  0100               	movlb	0	; () banked
  1748   0013DC  6FF0               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1749   0013DE  0E01               	movlw	1
  1750   0013E0  6FF1               	movwf	lcd_send_string_pos@row& (0+255),b
  1751   0013E2  0E01               	movlw	1
  1752   0013E4  6FF2               	movwf	lcd_send_string_pos@column& (0+255),b
  1753   0013E6  0E4D               	movlw	low STR_8
  1754   0013E8  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1755   0013EA  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1756   0013EC  A4D8               	btfss	status,2,c
  1757   0013EE  0E10               	movlw	high __smallconst
  1758   0013F0  6FF4               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1759   0013F2  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1760   0013F6                     
  1761                           ;app.c: 151:             lcd_send_number_pos(&lcd,1,7,year_counter);
  1762   0013F6  0EAA               	movlw	low _lcd
  1763   0013F8  0101               	movlb	1	; () banked
  1764   0013FA  6F22               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1765   0013FC  0E01               	movlw	1
  1766   0013FE  6F23               	movwf	lcd_send_number_pos@row& (0+255),b
  1767   001400  0E07               	movlw	7
  1768   001402  6F24               	movwf	lcd_send_number_pos@column& (0+255),b
  1769   001404  C04C  F125         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  1770   001408  ECE8  F01A         	call	_lcd_send_number_pos	;wreg free
  1771   00140C  EFF2  F008         	goto	l8648
  1772   001410                     l543:
  1773   001410  EF30  F008         	goto	l8606
  1774   001414  EF07  F000         	goto	start
  1775   001418                     __end_of_main:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _lcd_send_number_pos *****************
  1779 ;; Defined at:
  1780 ;;		line 289 in file "ECUAL/LCD/lcd.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  lcd             1    2[BANK1 ] PTR struct .
  1783 ;;		 -> lcd(6), 
  1784 ;;  row             1    3[BANK1 ] unsigned char 
  1785 ;;  column          1    4[BANK1 ] unsigned char 
  1786 ;;  num             1    5[BANK1 ] unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  ret             1    0        unsigned char 
  1789 ;;  lcd_ret         1    7[BANK1 ] unsigned char 
  1790 ;;  gpio_ret        1    6[BANK1 ] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      unsigned char 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1800 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        6 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 19
  1807 ;; This function calls:
  1808 ;;		_convert_uint8_to_string
  1809 ;;		_lcd_send_string_pos
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text1
  1816   0035D0                     __ptext1:
  1817                           	callstack 0
  1818   0035D0                     _lcd_send_number_pos:
  1819                           	callstack 11
  1820   0035D0                     
  1821                           ;ECUAL/LCD/lcd.c: 295:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1822   0035D0  0E00               	movlw	0
  1823   0035D2  0101               	movlb	1	; () banked
  1824   0035D4  6F26               	movwf	lcd_send_number_pos@gpio_ret& (0+255),b
  1825                           
  1826                           ;ECUAL/LCD/lcd.c: 296:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  1827   0035D6  0E00               	movlw	0
  1828   0035D8  6F27               	movwf	lcd_send_number_pos@lcd_ret& (0+255),b
  1829                           
  1830                           ;ECUAL/LCD/lcd.c: 297:     if(((void*)0)==lcd){
  1831   0035DA  5122               	movf	lcd_send_number_pos@lcd& (0+255),w,b
  1832   0035DC  A4D8               	btfss	status,2,c
  1833   0035DE  EFF3  F01A         	goto	u5621
  1834   0035E2  EFF5  F01A         	goto	u5620
  1835   0035E6                     u5621:
  1836   0035E6  EFF7  F01A         	goto	l8460
  1837   0035EA                     u5620:
  1838   0035EA                     
  1839                           ; BSR set to: 1
  1840                           ;ECUAL/LCD/lcd.c: 299:     }
  1841   0035EA  EF08  F01B         	goto	l669
  1842   0035EE                     l8460:
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;ECUAL/LCD/lcd.c: 301:         convert_uint8_to_string(num,number);
  1846   0035EE  0EDA               	movlw	low lcd_send_number_pos@number
  1847   0035F0  6F20               	movwf	convert_uint8_to_string@str& (0+255),b
  1848   0035F2  5125               	movf	lcd_send_number_pos@num& (0+255),w,b
  1849   0035F4  EC5C  F01A         	call	_convert_uint8_to_string
  1850   0035F8                     
  1851                           ;ECUAL/LCD/lcd.c: 302:         lcd_send_string_pos(lcd,row,column,number);
  1852   0035F8  C122  F0F0         	movff	lcd_send_number_pos@lcd,lcd_send_string_pos@lcd
  1853   0035FC  C123  F0F1         	movff	lcd_send_number_pos@row,lcd_send_string_pos@row
  1854   003600  C124  F0F2         	movff	lcd_send_number_pos@column,lcd_send_string_pos@column
  1855   003604  0EDA               	movlw	low lcd_send_number_pos@number
  1856   003606  0100               	movlb	0	; () banked
  1857   003608  6FF3               	movwf	lcd_send_string_pos@str& (0+255),b
  1858   00360A  6BF4               	clrf	(lcd_send_string_pos@str+1)& (0+255),b
  1859   00360C  ECE8  F015         	call	_lcd_send_string_pos	;wreg free
  1860   003610                     l669:
  1861   003610  0012               	return		;funcret
  1862   003612                     __end_of_lcd_send_number_pos:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _lcd_send_string_pos *****************
  1866 ;; Defined at:
  1867 ;;		line 206 in file "ECUAL/LCD/lcd.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  lcd             1   21[BANK0 ] PTR struct .
  1870 ;;		 -> lcd(6), 
  1871 ;;  row             1   22[BANK0 ] unsigned char 
  1872 ;;  column          1   23[BANK0 ] unsigned char 
  1873 ;;  str             2   24[BANK0 ] PTR unsigned char 
  1874 ;;		 -> lcd_send_number_pos@number(1), STR_8(6), STR_7(7), STR_6(5), 
  1875 ;;		 -> STR_5(7), STR_4(9), STR_3(9), STR_2(6), 
  1876 ;;		 -> STR_1(6), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  ret             1    0        unsigned char 
  1879 ;;  lcd_ret         1   27[BANK0 ] unsigned char 
  1880 ;;  gpio_ret        1   26[BANK0 ] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      unsigned char 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1890 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;Total ram usage:        7 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 17
  1897 ;; This function calls:
  1898 ;;		_lcd_send_string
  1899 ;;		_lcd_set_curser
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;;		_lcd_send_number_pos
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text2
  1907   002BD0                     __ptext2:
  1908                           	callstack 0
  1909   002BD0                     _lcd_send_string_pos:
  1910                           	callstack 13
  1911   002BD0                     
  1912                           ;ECUAL/LCD/lcd.c: 209:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  1913   002BD0  0E00               	movlw	0
  1914   002BD2  0100               	movlb	0	; () banked
  1915   002BD4  6FF5               	movwf	lcd_send_string_pos@gpio_ret& (0+255),b
  1916                           
  1917                           ;ECUAL/LCD/lcd.c: 210:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  1918   002BD6  0E00               	movlw	0
  1919   002BD8  6FF6               	movwf	lcd_send_string_pos@lcd_ret& (0+255),b
  1920                           
  1921                           ;ECUAL/LCD/lcd.c: 211:     if(((void*)0)==lcd || ((void*)0)==str || row>4 || column>40){
  1922   002BDA  51F0               	movf	lcd_send_string_pos@lcd& (0+255),w,b
  1923   002BDC  B4D8               	btfsc	status,2,c
  1924   002BDE  EFF3  F015         	goto	u5531
  1925   002BE2  EFF5  F015         	goto	u5530
  1926   002BE6                     u5531:
  1927   002BE6  EF0E  F016         	goto	l8306
  1928   002BEA                     u5530:
  1929   002BEA                     
  1930                           ; BSR set to: 0
  1931   002BEA  51F3               	movf	lcd_send_string_pos@str& (0+255),w,b
  1932   002BEC  11F4               	iorwf	(lcd_send_string_pos@str+1)& (0+255),w,b
  1933   002BEE  B4D8               	btfsc	status,2,c
  1934   002BF0  EFFC  F015         	goto	u5541
  1935   002BF4  EFFE  F015         	goto	u5540
  1936   002BF8                     u5541:
  1937   002BF8  EF0E  F016         	goto	l8306
  1938   002BFC                     u5540:
  1939   002BFC                     
  1940                           ; BSR set to: 0
  1941   002BFC  0E05               	movlw	5
  1942   002BFE  61F1               	cpfslt	lcd_send_string_pos@row& (0+255),b
  1943   002C00  EF04  F016         	goto	u5551
  1944   002C04  EF06  F016         	goto	u5550
  1945   002C08                     u5551:
  1946   002C08  EF0E  F016         	goto	l8306
  1947   002C0C                     u5550:
  1948   002C0C                     
  1949                           ; BSR set to: 0
  1950   002C0C  0E28               	movlw	40
  1951   002C0E  65F2               	cpfsgt	lcd_send_string_pos@column& (0+255),b
  1952   002C10  EF0C  F016         	goto	u5561
  1953   002C14  EF0E  F016         	goto	u5560
  1954   002C18                     u5561:
  1955   002C18  EF10  F016         	goto	l8308
  1956   002C1C                     u5560:
  1957   002C1C                     l8306:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;ECUAL/LCD/lcd.c: 213:     }
  1961   002C1C  EF20  F016         	goto	l636
  1962   002C20                     l8308:
  1963                           
  1964                           ; BSR set to: 0
  1965   002C20  C0F0  F0E9         	movff	lcd_send_string_pos@lcd,lcd_set_curser@lcd
  1966   002C24  C0F1  F0EA         	movff	lcd_send_string_pos@row,lcd_set_curser@row
  1967   002C28  C0F2  F0EB         	movff	lcd_send_string_pos@column,lcd_set_curser@column
  1968   002C2C  ECCA  F013         	call	_lcd_set_curser	;wreg free
  1969   002C30  C0F0  F0E9         	movff	lcd_send_string_pos@lcd,lcd_send_string@lcd
  1970   002C34  C0F3  F0EA         	movff	lcd_send_string_pos@str,lcd_send_string@str
  1971   002C38  C0F4  F0EB         	movff	lcd_send_string_pos@str+1,lcd_send_string@str+1
  1972   002C3C  EC27  F013         	call	_lcd_send_string	;wreg free
  1973   002C40                     l636:
  1974   002C40  0012               	return		;funcret
  1975   002C42                     __end_of_lcd_send_string_pos:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _lcd_send_string *****************
  1979 ;; Defined at:
  1980 ;;		line 177 in file "ECUAL/LCD/lcd.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  lcd             1   14[BANK0 ] PTR struct .
  1983 ;;		 -> lcd(6), 
  1984 ;;  str             2   15[BANK0 ] PTR unsigned char 
  1985 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), STR_8(6), STR_7(7), 
  1986 ;;		 -> STR_6(5), STR_5(7), STR_4(9), STR_3(9), 
  1987 ;;		 -> STR_2(6), STR_1(6), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  ret             1   19[BANK0 ] unsigned char 
  1990 ;;  lcd_ret         1   18[BANK0 ] unsigned char 
  1991 ;;  gpio_ret        1   17[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      unsigned char 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2001 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;Total ram usage:        6 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 16
  2008 ;; This function calls:
  2009 ;;		_lcd_send_char_data
  2010 ;; This function is called by:
  2011 ;;		_lcd_send_string_pos
  2012 ;;		_lcd_send_number
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text3
  2017   00264E                     __ptext3:
  2018                           	callstack 0
  2019   00264E                     _lcd_send_string:
  2020                           	callstack 13
  2021   00264E                     
  2022                           ;ECUAL/LCD/lcd.c: 180:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2023   00264E  0E00               	movlw	0
  2024   002650  0100               	movlb	0	; () banked
  2025   002652  6FEC               	movwf	lcd_send_string@gpio_ret& (0+255),b
  2026                           
  2027                           ;ECUAL/LCD/lcd.c: 181:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2028   002654  0E00               	movlw	0
  2029   002656  6FED               	movwf	lcd_send_string@lcd_ret& (0+255),b
  2030                           
  2031                           ;ECUAL/LCD/lcd.c: 182:     if(((void*)0)==lcd || ((void*)0)==str){
  2032   002658  51E9               	movf	lcd_send_string@lcd& (0+255),w,b
  2033   00265A  B4D8               	btfsc	status,2,c
  2034   00265C  EF32  F013         	goto	u5291
  2035   002660  EF34  F013         	goto	u5290
  2036   002664                     u5291:
  2037   002664  EF3D  F013         	goto	l8066
  2038   002668                     u5290:
  2039   002668                     
  2040                           ; BSR set to: 0
  2041   002668  51EA               	movf	lcd_send_string@str& (0+255),w,b
  2042   00266A  11EB               	iorwf	(lcd_send_string@str+1)& (0+255),w,b
  2043   00266C  A4D8               	btfss	status,2,c
  2044   00266E  EF3B  F013         	goto	u5301
  2045   002672  EF3D  F013         	goto	u5300
  2046   002676                     u5301:
  2047   002676  EF5B  F013         	goto	l8072
  2048   00267A                     u5300:
  2049   00267A                     l8066:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;ECUAL/LCD/lcd.c: 183:         ret=(Std_ReturnType)0x00;
  2053   00267A  0E00               	movlw	0
  2054   00267C  6FEE               	movwf	lcd_send_string@ret& (0+255),b
  2055                           
  2056                           ;ECUAL/LCD/lcd.c: 184:     }
  2057   00267E  EF77  F013         	goto	l625
  2058   002682                     l8068:
  2059   002682  C0E9  F0E4         	movff	lcd_send_string@lcd,lcd_send_char_data@lcd
  2060   002686  C0EA  FFF6         	movff	lcd_send_string@str,tblptrl
  2061   00268A  C0EB  FFF7         	movff	lcd_send_string@str+1,tblptrh
  2062   00268E  0E00               	movlw	low (__smallconst shr (0+16))
  2063   002690  6EF8               	movwf	tblptru,c
  2064   002692  0E0F               	movlw	(high __ramtop+-1)
  2065   002694  64F7               	cpfsgt	tblptrh,c
  2066   002696  D003               	bra	u5317
  2067   002698  0008               	tblrd		*
  2068   00269A  50F5               	movf	tablat,w,c
  2069   00269C  D005               	bra	u5310
  2070   00269E                     u5317:
  2071   00269E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2072   0026A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2073   0026A6  50EF               	movf	indf0,w,c
  2074   0026A8                     u5310:
  2075   0026A8  0100               	movlb	0	; () banked
  2076   0026AA  6FE5               	movwf	lcd_send_char_data@data& (0+255),b
  2077   0026AC  EC21  F016         	call	_lcd_send_char_data	;wreg free
  2078   0026B0  0100               	movlb	0	; () banked
  2079   0026B2  4BEA               	infsnz	lcd_send_string@str& (0+255),f,b
  2080   0026B4  2BEB               	incf	(lcd_send_string@str+1)& (0+255),f,b
  2081   0026B6                     l8072:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;ECUAL/LCD/lcd.c: 186:         while(*str){
  2085   0026B6  C0EA  FFF6         	movff	lcd_send_string@str,tblptrl
  2086   0026BA  C0EB  FFF7         	movff	lcd_send_string@str+1,tblptrh
  2087   0026BE  0E00               	movlw	low (__smallconst shr (0+16))
  2088   0026C0  6EF8               	movwf	tblptru,c
  2089   0026C2  0E0F               	movlw	(high __ramtop+-1)
  2090   0026C4  64F7               	cpfsgt	tblptrh,c
  2091   0026C6  D003               	bra	u5327
  2092   0026C8  0008               	tblrd		*
  2093   0026CA  50F5               	movf	tablat,w,c
  2094   0026CC  D005               	bra	u5320
  2095   0026CE                     u5327:
  2096   0026CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2097   0026D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2098   0026D6  50EF               	movf	indf0,w,c
  2099   0026D8                     u5320:
  2100   0026D8  0900               	iorlw	0
  2101   0026DA  A4D8               	btfss	status,2,c
  2102   0026DC  EF72  F013         	goto	u5331
  2103   0026E0  EF74  F013         	goto	u5330
  2104   0026E4                     u5331:
  2105   0026E4  EF41  F013         	goto	l8068
  2106   0026E8                     u5330:
  2107   0026E8                     
  2108                           ;ECUAL/LCD/lcd.c: 190:         ret=(Std_ReturnType)0x01;
  2109   0026E8  0E01               	movlw	1
  2110   0026EA  0100               	movlb	0	; () banked
  2111   0026EC  6FEE               	movwf	lcd_send_string@ret& (0+255),b
  2112   0026EE                     l625:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;ECUAL/LCD/lcd.c: 193:     return ret;
  2116   0026EE  51EE               	movf	lcd_send_string@ret& (0+255),w,b
  2117   0026F0                     
  2118                           ; BSR set to: 0
  2119   0026F0  0012               	return		;funcret
  2120   0026F2                     __end_of_lcd_send_string:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _convert_uint8_to_string *****************
  2124 ;; Defined at:
  2125 ;;		line 317 in file "ECUAL/LCD/lcd.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  value           1    wreg     unsigned char 
  2128 ;;  str             1    0[BANK1 ] PTR unsigned char 
  2129 ;;		 -> lcd_send_number_pos@number(1), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  value           1    1[BANK1 ] unsigned char 
  2132 ;;  ret             1    0        unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      unsigned char 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:        2 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 18
  2149 ;; This function calls:
  2150 ;;		_memset
  2151 ;;		_sprintf
  2152 ;; This function is called by:
  2153 ;;		_lcd_send_number_pos
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text4
  2158   0034B8                     __ptext4:
  2159                           	callstack 0
  2160   0034B8                     _convert_uint8_to_string:
  2161                           	callstack 11
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;incstack = 0
  2165                           ;convert_uint8_to_string@value stored from wreg
  2166   0034B8  0101               	movlb	1	; () banked
  2167   0034BA  6F21               	movwf	convert_uint8_to_string@value& (0+255),b
  2168   0034BC                     
  2169                           ;ECUAL/LCD/lcd.c: 319:     if(((void*)0) == str){
  2170   0034BC  0101               	movlb	1	; () banked
  2171   0034BE  5120               	movf	convert_uint8_to_string@str& (0+255),w,b
  2172   0034C0  A4D8               	btfss	status,2,c
  2173   0034C2  EF65  F01A         	goto	u5601
  2174   0034C6  EF67  F01A         	goto	u5600
  2175   0034CA                     u5601:
  2176   0034CA  EF69  F01A         	goto	l8376
  2177   0034CE                     u5600:
  2178   0034CE                     
  2179                           ; BSR set to: 1
  2180                           ;ECUAL/LCD/lcd.c: 321:     }
  2181   0034CE  EF7F  F01A         	goto	l674
  2182   0034D2                     l8376:
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;ECUAL/LCD/lcd.c: 323:         memset((char *)str, '\0', 4);
  2186   0034D2  C120  F029         	movff	convert_uint8_to_string@str,memset@dest
  2187   0034D6  0E00               	movlw	0
  2188   0034D8  6E2B               	movwf	(memset@c+1)^0,c
  2189   0034DA  0E00               	movlw	0
  2190   0034DC  6E2A               	movwf	memset@c^0,c
  2191   0034DE  0E00               	movlw	0
  2192   0034E0  6E2D               	movwf	(memset@n+1)^0,c
  2193   0034E2  0E04               	movlw	4
  2194   0034E4  6E2C               	movwf	memset@n^0,c
  2195   0034E6  ECD1  F01B         	call	_memset	;wreg free
  2196   0034EA                     
  2197                           ;ECUAL/LCD/lcd.c: 324:         sprintf(str, "%i", value);
  2198   0034EA  C120  F0EF         	movff	convert_uint8_to_string@str,sprintf@s
  2199   0034EE  0E58               	movlw	low STR_9
  2200   0034F0  0100               	movlb	0	; () banked
  2201   0034F2  6FF0               	movwf	sprintf@fmt& (0+255),b
  2202   0034F4  C121  F0F1         	movff	convert_uint8_to_string@value,?_sprintf+2
  2203   0034F8  6BF2               	clrf	(?_sprintf+3)& (0+255),b
  2204   0034FA  EC2A  F01B         	call	_sprintf	;wreg free
  2205   0034FE                     l674:
  2206   0034FE  0012               	return		;funcret
  2207   003500                     __end_of_convert_uint8_to_string:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _sprintf *****************
  2211 ;; Defined at:
  2212 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  s               1   20[BANK0 ] PTR unsigned char 
  2215 ;;		 -> convert_uint16_to_string@Temp_String(6), lcd_send_number_pos@number(1), 
  2216 ;;  fmt             1   21[BANK0 ] PTR const unsigned char 
  2217 ;;		 -> STR_11(3), STR_10(3), STR_9(3), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  f              12   25[BANK0 ] struct _IO_FILE
  2220 ;;  ret             2    0        int 
  2221 ;;  ap              1   24[BANK0 ] PTR void [1]
  2222 ;;		 -> ?_sprintf(2), 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  2   20[BANK0 ] int 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:       17 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 17
  2239 ;; This function calls:
  2240 ;;		_vfprintf
  2241 ;; This function is called by:
  2242 ;;		_convert_uint8_to_string
  2243 ;;		_convert_uint16_to_string
  2244 ;;		_convert_uint32_to_string
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text5
  2249   003654                     __ptext5:
  2250                           	callstack 0
  2251   003654                     _sprintf:
  2252                           	callstack 11
  2253   003654  0EF1               	movlw	low (?_sprintf+2)
  2254   003656  0100               	movlb	0	; () banked
  2255   003658  6FF3               	movwf	sprintf@ap& (0+255),b
  2256   00365A  C0EF  F0F4         	movff	sprintf@s,sprintf@f
  2257   00365E                     
  2258                           ; BSR set to: 0
  2259   00365E  0E00               	movlw	0
  2260   003660  6FF8               	movwf	(sprintf@f+4)& (0+255),b
  2261   003662  0E00               	movlw	0
  2262   003664  6FF7               	movwf	(sprintf@f+3)& (0+255),b
  2263   003666                     
  2264                           ; BSR set to: 0
  2265   003666  0E00               	movlw	0
  2266   003668  6FFF               	movwf	(sprintf@f+11)& (0+255),b
  2267   00366A  0E00               	movlw	0
  2268   00366C  6FFE               	movwf	(sprintf@f+10)& (0+255),b
  2269   00366E                     
  2270                           ; BSR set to: 0
  2271   00366E  0EF4               	movlw	low sprintf@f
  2272   003670  6FEB               	movwf	vfprintf@fp& (0+255),b
  2273   003672  C0F0  F0EC         	movff	sprintf@fmt,vfprintf@fmt
  2274   003676  0EF3               	movlw	low sprintf@ap
  2275   003678  6FED               	movwf	vfprintf@ap& (0+255),b
  2276   00367A  ECA4  F01A         	call	_vfprintf	;wreg free
  2277   00367E  0100               	movlb	0	; () banked
  2278   003680  51EF               	movf	sprintf@s& (0+255),w,b
  2279   003682  25F7               	addwf	(sprintf@f+3)& (0+255),w,b
  2280   003684  6ED9               	movwf	fsr2l,c
  2281   003686  6ADA               	clrf	fsr2h,c
  2282   003688  6ADF               	clrf	indf2,c
  2283   00368A                     
  2284                           ; BSR set to: 0
  2285   00368A  0012               	return		;funcret
  2286   00368C                     __end_of_sprintf:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _vfprintf *****************
  2290 ;; Defined at:
  2291 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  2294 ;;		 -> sprintf@f(12), 
  2295 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
  2296 ;;		 -> STR_11(3), STR_10(3), STR_9(3), 
  2297 ;;  ap              1   18[BANK0 ] PTR PTR void 
  2298 ;;		 -> sprintf@ap(1), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  cfmt            1   19[BANK0 ] PTR unsigned char 
  2301 ;;		 -> STR_11(3), STR_10(3), STR_9(3), 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2   16[BANK0 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2311 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 16
  2318 ;; This function calls:
  2319 ;;		_vfpfcnvrt
  2320 ;; This function is called by:
  2321 ;;		_sprintf
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text6
  2326   003548                     __ptext6:
  2327                           	callstack 0
  2328   003548                     _vfprintf:
  2329                           	callstack 11
  2330   003548                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2332   003548  C0EC  F0EE         	movff	vfprintf@fmt,vfprintf@cfmt
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2335   00354C  EFB1  F01A         	goto	l7918
  2336   003550                     l7916:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2339   003550  C0EB  F0E1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2340   003554  0EEE               	movlw	low vfprintf@cfmt
  2341   003556  0100               	movlb	0	; () banked
  2342   003558  6FE2               	movwf	vfpfcnvrt@fmt& (0+255),b
  2343   00355A  C0ED  F0E3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2344   00355E  EC0C  F00A         	call	_vfpfcnvrt	;wreg free
  2345   003562                     l7918:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2348   003562  C0EE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2349   003566                     	if	1	;There is more than 1 active tblptr byte
  2350   003566  0E10               	movlw	high __smallconst
  2351   003568  6EF7               	movwf	tblptrh,c
  2352   00356A                     	endif
  2353   00356A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2354   00356A  6AF8               	clrf	tblptru,c
  2355   00356C                     	endif
  2356   00356C                     	if	0	;tblptru may be non-zero
  2357   00356C                     	endif
  2358   00356C  0008               	tblrd		*
  2359   00356E  50F5               	movf	tablat,w,c
  2360   003570  0900               	iorlw	0
  2361   003572  A4D8               	btfss	status,2,c
  2362   003574  EFBE  F01A         	goto	u5201
  2363   003578  EFC0  F01A         	goto	u5200
  2364   00357C                     u5201:
  2365   00357C  EFA8  F01A         	goto	l7916
  2366   003580                     u5200:
  2367   003580                     
  2368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2369   003580  0E00               	movlw	0
  2370   003582  0100               	movlb	0	; () banked
  2371   003584  6FEC               	movwf	(?_vfprintf+1)& (0+255),b
  2372   003586  0E00               	movlw	0
  2373   003588  6FEB               	movwf	?_vfprintf& (0+255),b
  2374   00358A                     
  2375                           ; BSR set to: 0
  2376   00358A  0012               	return		;funcret
  2377   00358C                     __end_of_vfprintf:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _vfpfcnvrt *****************
  2381 ;; Defined at:
  2382 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  2385 ;;		 -> sprintf@f(12), 
  2386 ;;  fmt             1    7[BANK0 ] PTR PTR unsigned char 
  2387 ;;		 -> vfprintf@cfmt(1), 
  2388 ;;  ap              1    8[BANK0 ] PTR PTR void 
  2389 ;;		 -> sprintf@ap(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  convarg         4   11[BANK0 ] struct .
  2392 ;;  c               1   15[BANK0 ] unsigned char 
  2393 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  2394 ;;		 -> STR_11(3), STR_10(3), STR_9(3), 
  2395 ;;  done            1    9[BANK0 ] _Bool 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:       11 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 15
  2412 ;; This function calls:
  2413 ;;		___awdiv
  2414 ;;		___awmod
  2415 ;;		_abs
  2416 ;;		_fputc
  2417 ;; This function is called by:
  2418 ;;		_vfprintf
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text7
  2423   001418                     __ptext7:
  2424                           	callstack 0
  2425   001418                     _vfpfcnvrt:
  2426                           	callstack 11
  2427   001418                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2429   001418  0100               	movlb	0	; () banked
  2430   00141A  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2431   00141C  6ED9               	movwf	fsr2l,c
  2432   00141E  6ADA               	clrf	fsr2h,c
  2433   001420  CFDF FFF6          	movff	indf2,tblptrl
  2434   001424                     	if	1	;There is more than 1 active tblptr byte
  2435   001424  0E10               	movlw	high __smallconst
  2436   001426  6EF7               	movwf	tblptrh,c
  2437   001428                     	endif
  2438   001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2439   001428  6AF8               	clrf	tblptru,c
  2440   00142A                     	endif
  2441   00142A                     	if	0	;tblptru may be non-zero
  2442   00142A                     	endif
  2443   00142A  0008               	tblrd		*
  2444   00142C  50F5               	movf	tablat,w,c
  2445   00142E  0A25               	xorlw	37
  2446   001430  A4D8               	btfss	status,2,c
  2447   001432  EF1D  F00A         	goto	u4991
  2448   001436  EF1F  F00A         	goto	u4990
  2449   00143A                     u4991:
  2450   00143A  EFE4  F00A         	goto	l7740
  2451   00143E                     u4990:
  2452   00143E                     
  2453                           ; BSR set to: 0
  2454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2455   00143E  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2456   001440  6ED9               	movwf	fsr2l,c
  2457   001442  6ADA               	clrf	fsr2h,c
  2458   001444  2ADF               	incf	indf2,f,c
  2459   001446                     
  2460                           ; BSR set to: 0
  2461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2462   001446  0E00               	movlw	0
  2463   001448  6E35               	movwf	(_width+1)^0,c
  2464   00144A  0E00               	movlw	0
  2465   00144C  6E34               	movwf	_width^0,c
  2466   00144E  C034  F03E         	movff	_width,_flags
  2467   001452                     
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2470   001452  6836               	setf	_prec^0,c
  2471   001454  6837               	setf	(_prec+1)^0,c
  2472   001456                     
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2475   001456  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2476   001458  6ED9               	movwf	fsr2l,c
  2477   00145A  6ADA               	clrf	fsr2h,c
  2478   00145C  50DF               	movf	indf2,w,c
  2479   00145E  6FE5               	movwf	vfpfcnvrt@cp& (0+255),b
  2480   001460                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2483   001460  C0E5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2484   001464                     	if	1	;There is more than 1 active tblptr byte
  2485   001464  0E10               	movlw	high __smallconst
  2486   001466  6EF7               	movwf	tblptrh,c
  2487   001468                     	endif
  2488   001468                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2489   001468  6AF8               	clrf	tblptru,c
  2490   00146A                     	endif
  2491   00146A                     	if	0	;tblptru may be non-zero
  2492   00146A                     	endif
  2493   00146A  0008               	tblrd		*
  2494   00146C  50F5               	movf	tablat,w,c
  2495   00146E  0A64               	xorlw	100
  2496   001470  B4D8               	btfsc	status,2,c
  2497   001472  EF3D  F00A         	goto	u5001
  2498   001476  EF3F  F00A         	goto	u5000
  2499   00147A                     u5001:
  2500   00147A  EF4E  F00A         	goto	l7710
  2501   00147E                     u5000:
  2502   00147E                     
  2503                           ; BSR set to: 0
  2504   00147E  C0E5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2505   001482                     	if	1	;There is more than 1 active tblptr byte
  2506   001482  0E10               	movlw	high __smallconst
  2507   001484  6EF7               	movwf	tblptrh,c
  2508   001486                     	endif
  2509   001486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2510   001486  6AF8               	clrf	tblptru,c
  2511   001488                     	endif
  2512   001488                     	if	0	;tblptru may be non-zero
  2513   001488                     	endif
  2514   001488  0008               	tblrd		*
  2515   00148A  50F5               	movf	tablat,w,c
  2516   00148C  0A69               	xorlw	105
  2517   00148E  A4D8               	btfss	status,2,c
  2518   001490  EF4C  F00A         	goto	u5011
  2519   001494  EF4E  F00A         	goto	u5010
  2520   001498                     u5011:
  2521   001498  EFDD  F00A         	goto	l7736
  2522   00149C                     u5010:
  2523   00149C                     l7710:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2527   00149C  51E3               	movf	vfpfcnvrt@ap& (0+255),w,b
  2528   00149E  6ED9               	movwf	fsr2l,c
  2529   0014A0  6ADA               	clrf	fsr2h,c
  2530   0014A2  0E02               	movlw	2
  2531   0014A4  26DF               	addwf	indf2,f,c
  2532   0014A6  5CDF               	subwf	indf2,w,c
  2533   0014A8  6ED9               	movwf	fsr2l,c
  2534   0014AA  6ADA               	clrf	fsr2h,c
  2535   0014AC  CFDE F0E6          	movff	postinc2,vfpfcnvrt@convarg
  2536   0014B0  CFDE F0E7          	movff	postinc2,vfpfcnvrt@convarg+1
  2537   0014B4                     
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2540   0014B4  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2541   0014B6  6ED9               	movwf	fsr2l,c
  2542   0014B8  6ADA               	clrf	fsr2h,c
  2543   0014BA  29E5               	incf	vfpfcnvrt@cp& (0+255),w,b
  2544   0014BC  6EDF               	movwf	indf2,c
  2545   0014BE                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2548   0014BE  0E20               	movlw	32
  2549   0014C0  6FEA               	movwf	vfpfcnvrt@c& (0+255),b
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2552   0014C2  BFE7               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2553   0014C4  EF66  F00A         	goto	u5021
  2554   0014C8  EF69  F00A         	goto	u5020
  2555   0014CC                     u5021:
  2556   0014CC  0E01               	movlw	1
  2557   0014CE  EF6A  F00A         	goto	u5030
  2558   0014D2                     u5020:
  2559   0014D2  0E00               	movlw	0
  2560   0014D4                     u5030:
  2561   0014D4  6FE4               	movwf	vfpfcnvrt@done& (0+255),b
  2562   0014D6                     l7716:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2566   0014D6  07EA               	decf	vfpfcnvrt@c& (0+255),f,b
  2567   0014D8  0E00               	movlw	low _dbuf
  2568   0014DA  25EA               	addwf	vfpfcnvrt@c& (0+255),w,b
  2569   0014DC  6ED9               	movwf	fsr2l,c
  2570   0014DE  6ADA               	clrf	fsr2h,c
  2571   0014E0  0E01               	movlw	high _dbuf
  2572   0014E2  22DA               	addwfc	fsr2h,f,c
  2573   0014E4  C0E6  F029         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2574   0014E8  C0E7  F02A         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2575   0014EC  0E00               	movlw	0
  2576   0014EE  6E2C               	movwf	(___awmod@divisor+1)^0,c
  2577   0014F0  0E0A               	movlw	10
  2578   0014F2  6E2B               	movwf	___awmod@divisor^0,c
  2579   0014F4  EC73  F011         	call	___awmod	;wreg free
  2580   0014F8  C029  F0DD         	movff	?___awmod,abs@a
  2581   0014FC  C02A  F0DE         	movff	?___awmod+1,abs@a+1
  2582   001500  ECB6  F01B         	call	_abs	;wreg free
  2583   001504  0100               	movlb	0	; () banked
  2584   001506  51DD               	movf	?_abs& (0+255),w,b
  2585   001508  0F30               	addlw	48
  2586   00150A  6EDF               	movwf	indf2,c
  2587   00150C                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2590   00150C  C0E6  F029         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2591   001510  C0E7  F02A         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2592   001514  0E00               	movlw	0
  2593   001516  6E2C               	movwf	(___awdiv@divisor+1)^0,c
  2594   001518  0E0A               	movlw	10
  2595   00151A  6E2B               	movwf	___awdiv@divisor^0,c
  2596   00151C  ECE9  F00F         	call	___awdiv	;wreg free
  2597   001520  C029  F0E6         	movff	?___awdiv,vfpfcnvrt@convarg
  2598   001524  C02A  F0E7         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2599   001528                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2601   001528  0100               	movlb	0	; () banked
  2602   00152A  51E6               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2603   00152C  11E7               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2604   00152E  B4D8               	btfsc	status,2,c
  2605   001530  EF9C  F00A         	goto	u5041
  2606   001534  EF9E  F00A         	goto	u5040
  2607   001538                     u5041:
  2608   001538  EFA6  F00A         	goto	l7724
  2609   00153C                     u5040:
  2610   00153C                     
  2611                           ; BSR set to: 0
  2612   00153C  51EA               	movf	vfpfcnvrt@c& (0+255),w,b
  2613   00153E  A4D8               	btfss	status,2,c
  2614   001540  EFA4  F00A         	goto	u5051
  2615   001544  EFA6  F00A         	goto	u5050
  2616   001548                     u5051:
  2617   001548  EF6B  F00A         	goto	l7716
  2618   00154C                     u5050:
  2619   00154C                     l7724:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2623   00154C  51EA               	movf	vfpfcnvrt@c& (0+255),w,b
  2624   00154E  B4D8               	btfsc	status,2,c
  2625   001550  EFAC  F00A         	goto	u5061
  2626   001554  EFAE  F00A         	goto	u5060
  2627   001558                     u5061:
  2628   001558  EFD2  F00A         	goto	l7734
  2629   00155C                     u5060:
  2630   00155C                     
  2631                           ; BSR set to: 0
  2632   00155C  51E4               	movf	vfpfcnvrt@done& (0+255),w,b
  2633   00155E  B4D8               	btfsc	status,2,c
  2634   001560  EFB4  F00A         	goto	u5071
  2635   001564  EFB6  F00A         	goto	u5070
  2636   001568                     u5071:
  2637   001568  EFD2  F00A         	goto	l7734
  2638   00156C                     u5070:
  2639   00156C                     
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2642   00156C  07EA               	decf	vfpfcnvrt@c& (0+255),f,b
  2643   00156E  0E00               	movlw	low _dbuf
  2644   001570  25EA               	addwf	vfpfcnvrt@c& (0+255),w,b
  2645   001572  6ED9               	movwf	fsr2l,c
  2646   001574  6ADA               	clrf	fsr2h,c
  2647   001576  0E01               	movlw	high _dbuf
  2648   001578  22DA               	addwfc	fsr2h,f,c
  2649   00157A  0E2D               	movlw	45
  2650   00157C  6EDF               	movwf	indf2,c
  2651   00157E  EFD2  F00A         	goto	l7734
  2652   001582                     l7730:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2656   001582  0E00               	movlw	low _dbuf
  2657   001584  25EA               	addwf	vfpfcnvrt@c& (0+255),w,b
  2658   001586  6ED9               	movwf	fsr2l,c
  2659   001588  6ADA               	clrf	fsr2h,c
  2660   00158A  0E01               	movlw	high _dbuf
  2661   00158C  22DA               	addwfc	fsr2h,f,c
  2662   00158E  50DF               	movf	indf2,w,c
  2663   001590  6E2D               	movwf	??_vfpfcnvrt^0,c
  2664   001592  502D               	movf	??_vfpfcnvrt^0,w,c
  2665   001594  6E29               	movwf	fputc@c^0,c
  2666   001596  6A2A               	clrf	(fputc@c+1)^0,c
  2667   001598  C0E1  F02B         	movff	vfpfcnvrt@fp,fputc@fp
  2668   00159C  EC7D  F012         	call	_fputc	;wreg free
  2669   0015A0  0100               	movlb	0	; () banked
  2670   0015A2  2BEA               	incf	vfpfcnvrt@c& (0+255),f,b
  2671   0015A4                     l7734:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2675   0015A4  0E20               	movlw	32
  2676   0015A6  19EA               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2677   0015A8  A4D8               	btfss	status,2,c
  2678   0015AA  EFD9  F00A         	goto	u5081
  2679   0015AE  EFDB  F00A         	goto	u5080
  2680   0015B2                     u5081:
  2681   0015B2  EFC1  F00A         	goto	l7730
  2682   0015B6                     u5080:
  2683   0015B6  EFF6  F00A         	goto	l1792
  2684   0015BA                     l7736:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2687   0015BA  0100               	movlb	0	; () banked
  2688   0015BC  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2689   0015BE  6ED9               	movwf	fsr2l,c
  2690   0015C0  6ADA               	clrf	fsr2h,c
  2691   0015C2  2ADF               	incf	indf2,f,c
  2692   0015C4  EFF6  F00A         	goto	l1792
  2693   0015C8                     l7740:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2697   0015C8  51E2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2698   0015CA  6ED9               	movwf	fsr2l,c
  2699   0015CC  6ADA               	clrf	fsr2h,c
  2700   0015CE  CFDF FFF6          	movff	indf2,tblptrl
  2701   0015D2                     	if	1	;There is more than 1 active tblptr byte
  2702   0015D2  0E10               	movlw	high __smallconst
  2703   0015D4  6EF7               	movwf	tblptrh,c
  2704   0015D6                     	endif
  2705   0015D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2706   0015D6  6AF8               	clrf	tblptru,c
  2707   0015D8                     	endif
  2708   0015D8                     	if	0	;tblptru may be non-zero
  2709   0015D8                     	endif
  2710   0015D8  0008               	tblrd		*
  2711   0015DA  50F5               	movf	tablat,w,c
  2712   0015DC  6E29               	movwf	fputc@c^0,c
  2713   0015DE  6A2A               	clrf	(fputc@c+1)^0,c
  2714   0015E0  C0E1  F02B         	movff	vfpfcnvrt@fp,fputc@fp
  2715   0015E4  EC7D  F012         	call	_fputc	;wreg free
  2716   0015E8  EFDD  F00A         	goto	l7736
  2717   0015EC                     l1792:
  2718                           
  2719                           ; BSR set to: 0
  2720   0015EC  0012               	return		;funcret
  2721   0015EE                     __end_of_vfpfcnvrt:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _fputc *****************
  2725 ;; Defined at:
  2726 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  c               2   40[COMRAM] int 
  2729 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  2730 ;;		 -> sprintf@f(12), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2   40[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        8 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 14
  2749 ;; This function calls:
  2750 ;;		_putch
  2751 ;; This function is called by:
  2752 ;;		_vfpfcnvrt
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text8
  2757   0024FA                     __ptext8:
  2758                           	callstack 0
  2759   0024FA                     _fputc:
  2760                           	callstack 11
  2761   0024FA  502B               	movf	fputc@fp^0,w,c
  2762   0024FC  B4D8               	btfsc	status,2,c
  2763   0024FE  EF83  F012         	goto	u4831
  2764   002502  EF85  F012         	goto	u4830
  2765   002506                     u4831:
  2766   002506  EF8D  F012         	goto	l7596
  2767   00250A                     u4830:
  2768   00250A  502B               	movf	fputc@fp^0,w,c
  2769   00250C  A4D8               	btfss	status,2,c
  2770   00250E  EF8B  F012         	goto	u4841
  2771   002512  EF8D  F012         	goto	u4840
  2772   002516                     u4841:
  2773   002516  EF92  F012         	goto	l7598
  2774   00251A                     u4840:
  2775   00251A                     l7596:
  2776   00251A  5029               	movf	fputc@c^0,w,c
  2777   00251C  EC13  F01F         	call	_putch
  2778   002520  EFD3  F012         	goto	l1817
  2779   002524                     l7598:
  2780   002524  502B               	movf	fputc@fp^0,w,c
  2781   002526  6ED9               	movwf	fsr2l,c
  2782   002528  6ADA               	clrf	fsr2h,c
  2783   00252A  0E0A               	movlw	10
  2784   00252C  26D9               	addwf	fsr2l,f,c
  2785   00252E  50DE               	movf	postinc2,w,c
  2786   002530  10DE               	iorwf	postinc2,w,c
  2787   002532  B4D8               	btfsc	status,2,c
  2788   002534  EF9E  F012         	goto	u4851
  2789   002538  EFA0  F012         	goto	u4850
  2790   00253C                     u4851:
  2791   00253C  EFBA  F012         	goto	l7602
  2792   002540                     u4850:
  2793   002540  502B               	movf	fputc@fp^0,w,c
  2794   002542  6ED9               	movwf	fsr2l,c
  2795   002544  6ADA               	clrf	fsr2h,c
  2796   002546  0E0A               	movlw	10
  2797   002548  26D9               	addwf	fsr2l,f,c
  2798   00254A  502B               	movf	fputc@fp^0,w,c
  2799   00254C  6EE1               	movwf	fsr1l,c
  2800   00254E  6AE2               	clrf	fsr1h,c
  2801   002550  0E03               	movlw	3
  2802   002552  26E1               	addwf	fsr1l,f,c
  2803   002554  50DE               	movf	postinc2,w,c
  2804   002556  5CE6               	subwf	postinc1,w,c
  2805   002558  50E6               	movf	postinc1,w,c
  2806   00255A  0A80               	xorlw	128
  2807   00255C  0100               	movlb	0	; () banked
  2808   00255E  6FDF               	movwf	(??_fputc+4)& (0+255),b
  2809   002560  50DE               	movf	postinc2,w,c
  2810   002562  0A80               	xorlw	128
  2811   002564  59DF               	subwfb	(??_fputc+4)& (0+255),w,b
  2812   002566  B0D8               	btfsc	status,0,c
  2813   002568  EFB8  F012         	goto	u4861
  2814   00256C  EFBA  F012         	goto	u4860
  2815   002570                     u4861:
  2816   002570  EFD3  F012         	goto	l1817
  2817   002574                     u4860:
  2818   002574                     l7602:
  2819   002574  502B               	movf	fputc@fp^0,w,c
  2820   002576  6ED9               	movwf	fsr2l,c
  2821   002578  6ADA               	clrf	fsr2h,c
  2822   00257A  0E03               	movlw	3
  2823   00257C  26D9               	addwf	fsr2l,f,c
  2824   00257E  50DF               	movf	indf2,w,c
  2825   002580  0100               	movlb	0	; () banked
  2826   002582  6FDB               	movwf	??_fputc& (0+255),b
  2827   002584  502B               	movf	fputc@fp^0,w,c
  2828   002586  6ED9               	movwf	fsr2l,c
  2829   002588  6ADA               	clrf	fsr2h,c
  2830   00258A  50DF               	movf	indf2,w,c
  2831   00258C  25DB               	addwf	??_fputc& (0+255),w,b
  2832   00258E  6ED9               	movwf	fsr2l,c
  2833   002590  6ADA               	clrf	fsr2h,c
  2834   002592  C029  FFDF         	movff	fputc@c,indf2
  2835   002596  502B               	movf	fputc@fp^0,w,c
  2836   002598  6ED9               	movwf	fsr2l,c
  2837   00259A  6ADA               	clrf	fsr2h,c
  2838   00259C  0E03               	movlw	3
  2839   00259E  26D9               	addwf	fsr2l,f,c
  2840   0025A0  2ADE               	incf	postinc2,f,c
  2841   0025A2  0E00               	movlw	0
  2842   0025A4  22DD               	addwfc	postdec2,f,c
  2843   0025A6                     l1817:
  2844   0025A6  0012               	return		;funcret
  2845   0025A8                     __end_of_fputc:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _putch *****************
  2849 ;; Defined at:
  2850 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  c               1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  c               1    0[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 13
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_fputc
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text9
  2879   003E26                     __ptext9:
  2880                           	callstack 0
  2881   003E26                     _putch:
  2882                           	callstack 11
  2883   003E26  0012               	return		;funcret
  2884   003E28                     __end_of_putch:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _abs *****************
  2888 ;; Defined at:
  2889 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  a               2    2[BANK0 ] int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    2[BANK0 ] int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;Total ram usage:        4 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 13
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_vfpfcnvrt
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text10
  2918   00376C                     __ptext10:
  2919                           	callstack 0
  2920   00376C                     _abs:
  2921                           	callstack 12
  2922   00376C  0100               	movlb	0	; () banked
  2923   00376E  BFDE               	btfsc	(abs@a+1)& (0+255),7,b
  2924   003770  EFBC  F01B         	goto	u4871
  2925   003774  EFBE  F01B         	goto	u4870
  2926   003778                     u4871:
  2927   003778  EFC4  F01B         	goto	l1802
  2928   00377C                     u4870:
  2929   00377C                     
  2930                           ; BSR set to: 0
  2931   00377C  C0DD  F0DD         	movff	abs@a,?_abs
  2932   003780  C0DE  F0DE         	movff	abs@a+1,?_abs+1
  2933   003784  EFD0  F01B         	goto	l1805
  2934   003788                     l1802:
  2935                           
  2936                           ; BSR set to: 0
  2937   003788  C0DD  F0DF         	movff	abs@a,??_abs
  2938   00378C  C0DE  F0E0         	movff	abs@a+1,??_abs+1
  2939   003790  1FDF               	comf	??_abs& (0+255),f,b
  2940   003792  1FE0               	comf	(??_abs+1)& (0+255),f,b
  2941   003794  4BDF               	infsnz	??_abs& (0+255),f,b
  2942   003796  2BE0               	incf	(??_abs+1)& (0+255),f,b
  2943   003798  C0DF  F0DD         	movff	??_abs,?_abs
  2944   00379C  C0E0  F0DE         	movff	??_abs+1,?_abs+1
  2945   0037A0                     l1805:
  2946                           
  2947                           ; BSR set to: 0
  2948   0037A0  0012               	return		;funcret
  2949   0037A2                     __end_of_abs:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function ___awmod *****************
  2953 ;; Defined at:
  2954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  dividend        2   40[COMRAM] int 
  2957 ;;  divisor         2   42[COMRAM] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  sign            1    1[BANK0 ] unsigned char 
  2960 ;;  counter         1    0[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2   40[COMRAM] int 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        6 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 13
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_vfpfcnvrt
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text11
  2985   0022E6                     __ptext11:
  2986                           	callstack 0
  2987   0022E6                     ___awmod:
  2988                           	callstack 12
  2989   0022E6  0E00               	movlw	0
  2990   0022E8  0100               	movlb	0	; () banked
  2991   0022EA  6FDC               	movwf	___awmod@sign& (0+255),b
  2992   0022EC                     
  2993                           ; BSR set to: 0
  2994   0022EC  BE2A               	btfsc	(___awmod@dividend+1)^0,7,c
  2995   0022EE  EF7D  F011         	goto	u4770
  2996   0022F2  EF7B  F011         	goto	u4771
  2997   0022F6                     u4771:
  2998   0022F6  EF83  F011         	goto	l7564
  2999   0022FA                     u4770:
  3000   0022FA                     
  3001                           ; BSR set to: 0
  3002   0022FA  6C29               	negf	___awmod@dividend^0,c
  3003   0022FC  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  3004   0022FE  B0D8               	btfsc	status,0,c
  3005   002300  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  3006   002302                     
  3007                           ; BSR set to: 0
  3008   002302  0E01               	movlw	1
  3009   002304  6FDC               	movwf	___awmod@sign& (0+255),b
  3010   002306                     l7564:
  3011                           
  3012                           ; BSR set to: 0
  3013   002306  BE2C               	btfsc	(___awmod@divisor+1)^0,7,c
  3014   002308  EF8A  F011         	goto	u4780
  3015   00230C  EF88  F011         	goto	u4781
  3016   002310                     u4781:
  3017   002310  EF8E  F011         	goto	l7568
  3018   002314                     u4780:
  3019   002314                     
  3020                           ; BSR set to: 0
  3021   002314  6C2B               	negf	___awmod@divisor^0,c
  3022   002316  1E2C               	comf	(___awmod@divisor+1)^0,f,c
  3023   002318  B0D8               	btfsc	status,0,c
  3024   00231A  2A2C               	incf	(___awmod@divisor+1)^0,f,c
  3025   00231C                     l7568:
  3026                           
  3027                           ; BSR set to: 0
  3028   00231C  502B               	movf	___awmod@divisor^0,w,c
  3029   00231E  102C               	iorwf	(___awmod@divisor+1)^0,w,c
  3030   002320  B4D8               	btfsc	status,2,c
  3031   002322  EF95  F011         	goto	u4791
  3032   002326  EF97  F011         	goto	u4790
  3033   00232A                     u4791:
  3034   00232A  EFBB  F011         	goto	l7584
  3035   00232E                     u4790:
  3036   00232E                     
  3037                           ; BSR set to: 0
  3038   00232E  0E01               	movlw	1
  3039   002330  6FDB               	movwf	___awmod@counter& (0+255),b
  3040   002332  EF9F  F011         	goto	l7574
  3041   002336                     l7572:
  3042                           
  3043                           ; BSR set to: 0
  3044   002336  90D8               	bcf	status,0,c
  3045   002338  362B               	rlcf	___awmod@divisor^0,f,c
  3046   00233A  362C               	rlcf	(___awmod@divisor+1)^0,f,c
  3047   00233C  2BDB               	incf	___awmod@counter& (0+255),f,b
  3048   00233E                     l7574:
  3049                           
  3050                           ; BSR set to: 0
  3051   00233E  AE2C               	btfss	(___awmod@divisor+1)^0,7,c
  3052   002340  EFA4  F011         	goto	u4801
  3053   002344  EFA6  F011         	goto	u4800
  3054   002348                     u4801:
  3055   002348  EF9B  F011         	goto	l7572
  3056   00234C                     u4800:
  3057   00234C                     l7576:
  3058                           
  3059                           ; BSR set to: 0
  3060   00234C  502B               	movf	___awmod@divisor^0,w,c
  3061   00234E  5C29               	subwf	___awmod@dividend^0,w,c
  3062   002350  502C               	movf	(___awmod@divisor+1)^0,w,c
  3063   002352  582A               	subwfb	(___awmod@dividend+1)^0,w,c
  3064   002354  A0D8               	btfss	status,0,c
  3065   002356  EFAF  F011         	goto	u4811
  3066   00235A  EFB1  F011         	goto	u4810
  3067   00235E                     u4811:
  3068   00235E  EFB5  F011         	goto	l7580
  3069   002362                     u4810:
  3070   002362                     
  3071                           ; BSR set to: 0
  3072   002362  502B               	movf	___awmod@divisor^0,w,c
  3073   002364  5E29               	subwf	___awmod@dividend^0,f,c
  3074   002366  502C               	movf	(___awmod@divisor+1)^0,w,c
  3075   002368  5A2A               	subwfb	(___awmod@dividend+1)^0,f,c
  3076   00236A                     l7580:
  3077                           
  3078                           ; BSR set to: 0
  3079   00236A  90D8               	bcf	status,0,c
  3080   00236C  322C               	rrcf	(___awmod@divisor+1)^0,f,c
  3081   00236E  322B               	rrcf	___awmod@divisor^0,f,c
  3082   002370                     
  3083                           ; BSR set to: 0
  3084   002370  2FDB               	decfsz	___awmod@counter& (0+255),f,b
  3085   002372  EFA6  F011         	goto	l7576
  3086   002376                     l7584:
  3087                           
  3088                           ; BSR set to: 0
  3089   002376  51DC               	movf	___awmod@sign& (0+255),w,b
  3090   002378  B4D8               	btfsc	status,2,c
  3091   00237A  EFC1  F011         	goto	u4821
  3092   00237E  EFC3  F011         	goto	u4820
  3093   002382                     u4821:
  3094   002382  EFC7  F011         	goto	l7588
  3095   002386                     u4820:
  3096   002386                     
  3097                           ; BSR set to: 0
  3098   002386  6C29               	negf	___awmod@dividend^0,c
  3099   002388  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  3100   00238A  B0D8               	btfsc	status,0,c
  3101   00238C  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  3102   00238E                     l7588:
  3103                           
  3104                           ; BSR set to: 0
  3105   00238E  C029  F029         	movff	___awmod@dividend,?___awmod
  3106   002392  C02A  F02A         	movff	___awmod@dividend+1,?___awmod+1
  3107   002396                     
  3108                           ; BSR set to: 0
  3109   002396  0012               	return		;funcret
  3110   002398                     __end_of___awmod:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function ___awdiv *****************
  3114 ;; Defined at:
  3115 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  dividend        2   40[COMRAM] int 
  3118 ;;  divisor         2   42[COMRAM] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  quotient        2    2[BANK0 ] int 
  3121 ;;  sign            1    1[BANK0 ] unsigned char 
  3122 ;;  counter         1    0[BANK0 ] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  2   40[COMRAM] int 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        8 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 13
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_vfpfcnvrt
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text12
  3147   001FD2                     __ptext12:
  3148                           	callstack 0
  3149   001FD2                     ___awdiv:
  3150                           	callstack 12
  3151   001FD2  0E00               	movlw	0
  3152   001FD4  0100               	movlb	0	; () banked
  3153   001FD6  6FDC               	movwf	___awdiv@sign& (0+255),b
  3154   001FD8                     
  3155                           ; BSR set to: 0
  3156   001FD8  BE2C               	btfsc	(___awdiv@divisor+1)^0,7,c
  3157   001FDA  EFF3  F00F         	goto	u4710
  3158   001FDE  EFF1  F00F         	goto	u4711
  3159   001FE2                     u4711:
  3160   001FE2  EFF9  F00F         	goto	l7520
  3161   001FE6                     u4710:
  3162   001FE6                     
  3163                           ; BSR set to: 0
  3164   001FE6  6C2B               	negf	___awdiv@divisor^0,c
  3165   001FE8  1E2C               	comf	(___awdiv@divisor+1)^0,f,c
  3166   001FEA  B0D8               	btfsc	status,0,c
  3167   001FEC  2A2C               	incf	(___awdiv@divisor+1)^0,f,c
  3168   001FEE                     
  3169                           ; BSR set to: 0
  3170   001FEE  0E01               	movlw	1
  3171   001FF0  6FDC               	movwf	___awdiv@sign& (0+255),b
  3172   001FF2                     l7520:
  3173                           
  3174                           ; BSR set to: 0
  3175   001FF2  BE2A               	btfsc	(___awdiv@dividend+1)^0,7,c
  3176   001FF4  EF00  F010         	goto	u4720
  3177   001FF8  EFFE  F00F         	goto	u4721
  3178   001FFC                     u4721:
  3179   001FFC  EF06  F010         	goto	l7526
  3180   002000                     u4720:
  3181   002000                     
  3182                           ; BSR set to: 0
  3183   002000  6C29               	negf	___awdiv@dividend^0,c
  3184   002002  1E2A               	comf	(___awdiv@dividend+1)^0,f,c
  3185   002004  B0D8               	btfsc	status,0,c
  3186   002006  2A2A               	incf	(___awdiv@dividend+1)^0,f,c
  3187   002008                     
  3188                           ; BSR set to: 0
  3189   002008  0E01               	movlw	1
  3190   00200A  1BDC               	xorwf	___awdiv@sign& (0+255),f,b
  3191   00200C                     l7526:
  3192                           
  3193                           ; BSR set to: 0
  3194   00200C  0E00               	movlw	0
  3195   00200E  6FDE               	movwf	(___awdiv@quotient+1)& (0+255),b
  3196   002010  0E00               	movlw	0
  3197   002012  6FDD               	movwf	___awdiv@quotient& (0+255),b
  3198   002014                     
  3199                           ; BSR set to: 0
  3200   002014  502B               	movf	___awdiv@divisor^0,w,c
  3201   002016  102C               	iorwf	(___awdiv@divisor+1)^0,w,c
  3202   002018  B4D8               	btfsc	status,2,c
  3203   00201A  EF11  F010         	goto	u4731
  3204   00201E  EF13  F010         	goto	u4730
  3205   002022                     u4731:
  3206   002022  EF3B  F010         	goto	l7548
  3207   002026                     u4730:
  3208   002026                     
  3209                           ; BSR set to: 0
  3210   002026  0E01               	movlw	1
  3211   002028  6FDB               	movwf	___awdiv@counter& (0+255),b
  3212   00202A  EF1B  F010         	goto	l7534
  3213   00202E                     l7532:
  3214                           
  3215                           ; BSR set to: 0
  3216   00202E  90D8               	bcf	status,0,c
  3217   002030  362B               	rlcf	___awdiv@divisor^0,f,c
  3218   002032  362C               	rlcf	(___awdiv@divisor+1)^0,f,c
  3219   002034  2BDB               	incf	___awdiv@counter& (0+255),f,b
  3220   002036                     l7534:
  3221                           
  3222                           ; BSR set to: 0
  3223   002036  AE2C               	btfss	(___awdiv@divisor+1)^0,7,c
  3224   002038  EF20  F010         	goto	u4741
  3225   00203C  EF22  F010         	goto	u4740
  3226   002040                     u4741:
  3227   002040  EF17  F010         	goto	l7532
  3228   002044                     u4740:
  3229   002044                     l7536:
  3230                           
  3231                           ; BSR set to: 0
  3232   002044  90D8               	bcf	status,0,c
  3233   002046  37DD               	rlcf	___awdiv@quotient& (0+255),f,b
  3234   002048  37DE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3235   00204A                     
  3236                           ; BSR set to: 0
  3237   00204A  502B               	movf	___awdiv@divisor^0,w,c
  3238   00204C  5C29               	subwf	___awdiv@dividend^0,w,c
  3239   00204E  502C               	movf	(___awdiv@divisor+1)^0,w,c
  3240   002050  582A               	subwfb	(___awdiv@dividend+1)^0,w,c
  3241   002052  A0D8               	btfss	status,0,c
  3242   002054  EF2E  F010         	goto	u4751
  3243   002058  EF30  F010         	goto	u4750
  3244   00205C                     u4751:
  3245   00205C  EF35  F010         	goto	l7544
  3246   002060                     u4750:
  3247   002060                     
  3248                           ; BSR set to: 0
  3249   002060  502B               	movf	___awdiv@divisor^0,w,c
  3250   002062  5E29               	subwf	___awdiv@dividend^0,f,c
  3251   002064  502C               	movf	(___awdiv@divisor+1)^0,w,c
  3252   002066  5A2A               	subwfb	(___awdiv@dividend+1)^0,f,c
  3253   002068                     
  3254                           ; BSR set to: 0
  3255   002068  81DD               	bsf	___awdiv@quotient& (0+255),0,b
  3256   00206A                     l7544:
  3257                           
  3258                           ; BSR set to: 0
  3259   00206A  90D8               	bcf	status,0,c
  3260   00206C  322C               	rrcf	(___awdiv@divisor+1)^0,f,c
  3261   00206E  322B               	rrcf	___awdiv@divisor^0,f,c
  3262   002070                     
  3263                           ; BSR set to: 0
  3264   002070  2FDB               	decfsz	___awdiv@counter& (0+255),f,b
  3265   002072  EF22  F010         	goto	l7536
  3266   002076                     l7548:
  3267                           
  3268                           ; BSR set to: 0
  3269   002076  51DC               	movf	___awdiv@sign& (0+255),w,b
  3270   002078  B4D8               	btfsc	status,2,c
  3271   00207A  EF41  F010         	goto	u4761
  3272   00207E  EF43  F010         	goto	u4760
  3273   002082                     u4761:
  3274   002082  EF47  F010         	goto	l7552
  3275   002086                     u4760:
  3276   002086                     
  3277                           ; BSR set to: 0
  3278   002086  6DDD               	negf	___awdiv@quotient& (0+255),b
  3279   002088  1FDE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3280   00208A  B0D8               	btfsc	status,0,c
  3281   00208C  2BDE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3282   00208E                     l7552:
  3283                           
  3284                           ; BSR set to: 0
  3285   00208E  C0DD  F029         	movff	___awdiv@quotient,?___awdiv
  3286   002092  C0DE  F02A         	movff	___awdiv@quotient+1,?___awdiv+1
  3287   002096                     
  3288                           ; BSR set to: 0
  3289   002096  0012               	return		;funcret
  3290   002098                     __end_of___awdiv:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _memset *****************
  3294 ;; Defined at:
  3295 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  dest            1   40[COMRAM] PTR void 
  3298 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  3299 ;;  c               2   41[COMRAM] int 
  3300 ;;  n               2   43[COMRAM] unsigned int 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  p               1    0[BANK0 ] PTR unsigned char 
  3303 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      PTR void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        6 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 13
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_convert_uint8_to_string
  3324 ;;		_convert_uint16_to_string
  3325 ;;		_convert_uint32_to_string
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text13
  3330   0037A2                     __ptext13:
  3331                           	callstack 0
  3332   0037A2                     _memset:
  3333                           	callstack 15
  3334   0037A2  C029  F0DB         	movff	memset@dest,memset@p
  3335   0037A6  EFDC  F01B         	goto	l8084
  3336   0037AA                     l8080:
  3337   0037AA  0100               	movlb	0	; () banked
  3338   0037AC  51DB               	movf	memset@p& (0+255),w,b
  3339   0037AE  6ED9               	movwf	fsr2l,c
  3340   0037B0  6ADA               	clrf	fsr2h,c
  3341   0037B2  C02A  FFDF         	movff	memset@c,indf2
  3342   0037B6                     
  3343                           ; BSR set to: 0
  3344   0037B6  2BDB               	incf	memset@p& (0+255),f,b
  3345   0037B8                     l8084:
  3346   0037B8  062C               	decf	memset@n^0,f,c
  3347   0037BA  A0D8               	btfss	status,0,c
  3348   0037BC  062D               	decf	(memset@n+1)^0,f,c
  3349   0037BE  282C               	incf	memset@n^0,w,c
  3350   0037C0  E106               	bnz	u5341
  3351   0037C2  282D               	incf	(memset@n+1)^0,w,c
  3352   0037C4  A4D8               	btfss	status,2,c
  3353   0037C6  EFE7  F01B         	goto	u5341
  3354   0037CA  EFE9  F01B         	goto	u5340
  3355   0037CE                     u5341:
  3356   0037CE  EFD5  F01B         	goto	l8080
  3357   0037D2                     u5340:
  3358   0037D2  0012               	return		;funcret
  3359   0037D4                     __end_of_memset:
  3360                           	callstack 0
  3361                           
  3362 ;; *************** function _lcd_send_char_data_pos *****************
  3363 ;; Defined at:
  3364 ;;		line 151 in file "ECUAL/LCD/lcd.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  lcd             1   21[BANK0 ] PTR struct .
  3367 ;;		 -> lcd(6), 
  3368 ;;  row             1   22[BANK0 ] unsigned char 
  3369 ;;  column          1   23[BANK0 ] unsigned char 
  3370 ;;  data            1   24[BANK0 ] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  ret             1   27[BANK0 ] unsigned char 
  3373 ;;  lcd_ret         1   26[BANK0 ] unsigned char 
  3374 ;;  gpio_ret        1   25[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      unsigned char 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        7 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 17
  3391 ;; This function calls:
  3392 ;;		_lcd_send_char_data
  3393 ;;		_lcd_set_curser
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;;		_lcd_send_custom_char
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text14
  3401   002E76                     __ptext14:
  3402                           	callstack 0
  3403   002E76                     _lcd_send_char_data_pos:
  3404                           	callstack 13
  3405   002E76                     
  3406                           ;ECUAL/LCD/lcd.c: 154:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  3407   002E76  0E00               	movlw	0
  3408   002E78  0100               	movlb	0	; () banked
  3409   002E7A  6FF4               	movwf	lcd_send_char_data_pos@gpio_ret& (0+255),b
  3410                           
  3411                           ;ECUAL/LCD/lcd.c: 155:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  3412   002E7C  0E00               	movlw	0
  3413   002E7E  6FF5               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  3414                           
  3415                           ;ECUAL/LCD/lcd.c: 156:     if(((void*)0)==lcd || row>4 || column>20){
  3416   002E80  51F0               	movf	lcd_send_char_data_pos@lcd& (0+255),w,b
  3417   002E82  B4D8               	btfsc	status,2,c
  3418   002E84  EF46  F017         	goto	u5631
  3419   002E88  EF48  F017         	goto	u5630
  3420   002E8C                     u5631:
  3421   002E8C  EF58  F017         	goto	l8472
  3422   002E90                     u5630:
  3423   002E90                     
  3424                           ; BSR set to: 0
  3425   002E90  0E05               	movlw	5
  3426   002E92  61F1               	cpfslt	lcd_send_char_data_pos@row& (0+255),b
  3427   002E94  EF4E  F017         	goto	u5641
  3428   002E98  EF50  F017         	goto	u5640
  3429   002E9C                     u5641:
  3430   002E9C  EF58  F017         	goto	l8472
  3431   002EA0                     u5640:
  3432   002EA0                     
  3433                           ; BSR set to: 0
  3434   002EA0  0E14               	movlw	20
  3435   002EA2  65F2               	cpfsgt	lcd_send_char_data_pos@column& (0+255),b
  3436   002EA4  EF56  F017         	goto	u5651
  3437   002EA8  EF58  F017         	goto	u5650
  3438   002EAC                     u5651:
  3439   002EAC  EF5C  F017         	goto	l8474
  3440   002EB0                     u5650:
  3441   002EB0                     l8472:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;ECUAL/LCD/lcd.c: 157:         ret=(Std_ReturnType)0x00;
  3445   002EB0  0E00               	movlw	0
  3446   002EB2  6FF6               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  3447                           
  3448                           ;ECUAL/LCD/lcd.c: 158:     }
  3449   002EB4  EF70  F017         	goto	l8478
  3450   002EB8                     l8474:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;ECUAL/LCD/lcd.c: 160:         lcd_ret=lcd_set_curser(lcd, row, column);
  3454   002EB8  C0F0  F0E9         	movff	lcd_send_char_data_pos@lcd,lcd_set_curser@lcd
  3455   002EBC  C0F1  F0EA         	movff	lcd_send_char_data_pos@row,lcd_set_curser@row
  3456   002EC0  C0F2  F0EB         	movff	lcd_send_char_data_pos@column,lcd_set_curser@column
  3457   002EC4  ECCA  F013         	call	_lcd_set_curser	;wreg free
  3458   002EC8  0100               	movlb	0	; () banked
  3459   002ECA  6FF5               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  3460                           
  3461                           ;ECUAL/LCD/lcd.c: 161:         lcd_ret=lcd_send_char_data(lcd, data);
  3462   002ECC  C0F0  F0E4         	movff	lcd_send_char_data_pos@lcd,lcd_send_char_data@lcd
  3463   002ED0  C0F3  F0E5         	movff	lcd_send_char_data_pos@data,lcd_send_char_data@data
  3464   002ED4  EC21  F016         	call	_lcd_send_char_data	;wreg free
  3465   002ED8  0100               	movlb	0	; () banked
  3466   002EDA  6FF5               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  3467   002EDC                     
  3468                           ; BSR set to: 0
  3469                           ;ECUAL/LCD/lcd.c: 162:         ret=(Std_ReturnType)0x01;
  3470   002EDC  0E01               	movlw	1
  3471   002EDE  6FF6               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  3472   002EE0                     l8478:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;ECUAL/LCD/lcd.c: 165:     return ret;
  3476   002EE0  51F6               	movf	lcd_send_char_data_pos@ret& (0+255),w,b
  3477   002EE2                     
  3478                           ; BSR set to: 0
  3479   002EE2  0012               	return		;funcret
  3480   002EE4                     __end_of_lcd_send_char_data_pos:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _lcd_set_curser *****************
  3484 ;; Defined at:
  3485 ;;		line 401 in file "ECUAL/LCD/lcd.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  lcd             1   14[BANK0 ] PTR struct .
  3488 ;;		 -> lcd(6), 
  3489 ;;  row             1   15[BANK0 ] unsigned char 
  3490 ;;  column          1   16[BANK0 ] unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  lcd_ret         1   20[BANK0 ] unsigned char 
  3493 ;;  ret             1    0        unsigned char 
  3494 ;;  gpio_ret        1   19[BANK0 ] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      unsigned char 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        7 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 16
  3511 ;; This function calls:
  3512 ;;		_lcd_send_command
  3513 ;; This function is called by:
  3514 ;;		_lcd_send_char_data_pos
  3515 ;;		_lcd_send_string_pos
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text15
  3520   002794                     __ptext15:
  3521                           	callstack 0
  3522   002794                     _lcd_set_curser:
  3523                           	callstack 13
  3524   002794                     
  3525                           ;ECUAL/LCD/lcd.c: 404:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  3526   002794  0E00               	movlw	0
  3527   002796  0100               	movlb	0	; () banked
  3528   002798  6FEE               	movwf	lcd_set_curser@gpio_ret& (0+255),b
  3529                           
  3530                           ;ECUAL/LCD/lcd.c: 405:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  3531   00279A  0E00               	movlw	0
  3532   00279C  6FEF               	movwf	lcd_set_curser@lcd_ret& (0+255),b
  3533   00279E                     
  3534                           ; BSR set to: 0
  3535                           ;ECUAL/LCD/lcd.c: 406:  column--;
  3536   00279E  07EB               	decf	lcd_set_curser@column& (0+255),f,b
  3537                           
  3538                           ;ECUAL/LCD/lcd.c: 414:     switch(row){
  3539   0027A0  EFF6  F013         	goto	l8052
  3540   0027A4                     l8042:
  3541                           
  3542                           ; BSR set to: 0
  3543   0027A4  C0E9  F0E4         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  3544   0027A8  51EB               	movf	lcd_set_curser@column& (0+255),w,b
  3545   0027AA  0F80               	addlw	128
  3546   0027AC  6FE5               	movwf	lcd_send_command@command& (0+255),b
  3547   0027AE  EC5A  F016         	call	_lcd_send_command	;wreg free
  3548   0027B2  EF13  F014         	goto	l8054
  3549   0027B6                     l8044:
  3550                           
  3551                           ; BSR set to: 0
  3552   0027B6  C0E9  F0E4         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  3553   0027BA  51EB               	movf	lcd_set_curser@column& (0+255),w,b
  3554   0027BC  0FC0               	addlw	192
  3555   0027BE  6FE5               	movwf	lcd_send_command@command& (0+255),b
  3556   0027C0  EC5A  F016         	call	_lcd_send_command	;wreg free
  3557   0027C4  EF13  F014         	goto	l8054
  3558   0027C8                     l8046:
  3559                           
  3560                           ; BSR set to: 0
  3561   0027C8  C0E9  F0E4         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  3562   0027CC  51EB               	movf	lcd_set_curser@column& (0+255),w,b
  3563   0027CE  0F94               	addlw	148
  3564   0027D0  6FE5               	movwf	lcd_send_command@command& (0+255),b
  3565   0027D2  EC5A  F016         	call	_lcd_send_command	;wreg free
  3566   0027D6  EF13  F014         	goto	l8054
  3567   0027DA                     l8048:
  3568                           
  3569                           ; BSR set to: 0
  3570   0027DA  C0E9  F0E4         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  3571   0027DE  51EB               	movf	lcd_set_curser@column& (0+255),w,b
  3572   0027E0  0FD4               	addlw	212
  3573   0027E2  6FE5               	movwf	lcd_send_command@command& (0+255),b
  3574   0027E4  EC5A  F016         	call	_lcd_send_command	;wreg free
  3575   0027E8  EF13  F014         	goto	l8054
  3576   0027EC                     l8052:
  3577                           
  3578                           ; BSR set to: 0
  3579   0027EC  51EA               	movf	lcd_set_curser@row& (0+255),w,b
  3580   0027EE  6FEC               	movwf	??_lcd_set_curser& (0+255),b
  3581   0027F0  6BED               	clrf	(??_lcd_set_curser+1)& (0+255),b
  3582                           
  3583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3584                           ; Switch size 1, requested type "simple"
  3585                           ; Number of cases is 1, Range of values is 0 to 0
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte            4     3 (average)
  3589                           ;	Chosen strategy is simple_byte
  3590   0027F2  51ED               	movf	(??_lcd_set_curser+1)& (0+255),w,b
  3591   0027F4  0A00               	xorlw	0	; case 0
  3592   0027F6  B4D8               	btfsc	status,2,c
  3593   0027F8  EF00  F014         	goto	l9248
  3594   0027FC  EF13  F014         	goto	l8054
  3595   002800                     l9248:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ; Switch size 1, requested type "simple"
  3599                           ; Number of cases is 4, Range of values is 1 to 4
  3600                           ; switch strategies available:
  3601                           ; Name         Instructions Cycles
  3602                           ; simple_byte           13     7 (average)
  3603                           ;	Chosen strategy is simple_byte
  3604   002800  51EC               	movf	??_lcd_set_curser& (0+255),w,b
  3605   002802  0A01               	xorlw	1	; case 1
  3606   002804  B4D8               	btfsc	status,2,c
  3607   002806  EFD2  F013         	goto	l8042
  3608   00280A  0A03               	xorlw	3	; case 2
  3609   00280C  B4D8               	btfsc	status,2,c
  3610   00280E  EFDB  F013         	goto	l8044
  3611   002812  0A01               	xorlw	1	; case 3
  3612   002814  B4D8               	btfsc	status,2,c
  3613   002816  EFE4  F013         	goto	l8046
  3614   00281A  0A07               	xorlw	7	; case 4
  3615   00281C  B4D8               	btfsc	status,2,c
  3616   00281E  EFED  F013         	goto	l8048
  3617   002822  EF13  F014         	goto	l8054
  3618   002826                     l8054:
  3619                           
  3620                           ;ECUAL/LCD/lcd.c: 422:     return ret;
  3621   002826  0E00               	movlw	0
  3622   002828  0012               	return		;funcret
  3623   00282A                     __end_of_lcd_set_curser:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _lcd_send_char_data *****************
  3627 ;; Defined at:
  3628 ;;		line 115 in file "ECUAL/LCD/lcd.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  lcd             1    9[BANK0 ] PTR struct .
  3631 ;;		 -> lcd(6), 
  3632 ;;  data            1   10[BANK0 ] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  ret             1   13[BANK0 ] unsigned char 
  3635 ;;  lcd_ret         1   12[BANK0 ] unsigned char 
  3636 ;;  gpio_ret        1   11[BANK0 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        5 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 15
  3653 ;; This function calls:
  3654 ;;		_gpio_pin_logic_write
  3655 ;;		_lcd_send_enable
  3656 ;;		_lcd_send_nbits
  3657 ;; This function is called by:
  3658 ;;		_lcd_send_char_data_pos
  3659 ;;		_lcd_send_string
  3660 ;;		_lcd_send_custom_char
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text16
  3665   002C42                     __ptext16:
  3666                           	callstack 0
  3667   002C42                     _lcd_send_char_data:
  3668                           	callstack 13
  3669   002C42                     
  3670                           ;ECUAL/LCD/lcd.c: 118:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  3671   002C42  0E00               	movlw	0
  3672   002C44  0100               	movlb	0	; () banked
  3673   002C46  6FE6               	movwf	lcd_send_char_data@gpio_ret& (0+255),b
  3674                           
  3675                           ;ECUAL/LCD/lcd.c: 119:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  3676   002C48  0E00               	movlw	0
  3677   002C4A  6FE7               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  3678                           
  3679                           ;ECUAL/LCD/lcd.c: 120:     if(((void*)0)==lcd){
  3680   002C4C  51E4               	movf	lcd_send_char_data@lcd& (0+255),w,b
  3681   002C4E  A4D8               	btfss	status,2,c
  3682   002C50  EF2C  F016         	goto	u5141
  3683   002C54  EF2E  F016         	goto	u5140
  3684   002C58                     u5141:
  3685   002C58  EF32  F016         	goto	l7850
  3686   002C5C                     u5140:
  3687   002C5C                     
  3688                           ; BSR set to: 0
  3689                           ;ECUAL/LCD/lcd.c: 121:         ret=(Std_ReturnType)0x00;
  3690   002C5C  0E00               	movlw	0
  3691   002C5E  6FE8               	movwf	lcd_send_char_data@ret& (0+255),b
  3692                           
  3693                           ;ECUAL/LCD/lcd.c: 122:     }
  3694   002C60  EF58  F016         	goto	l7854
  3695   002C64                     l7850:
  3696                           
  3697                           ; BSR set to: 0
  3698   002C64  C0E4  F029         	movff	lcd_send_char_data@lcd,gpio_pin_logic_write@pin
  3699   002C68  0E01               	movlw	1
  3700   002C6A  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  3701   002C6C  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  3702                           
  3703                           ;ECUAL/LCD/lcd.c: 126:         lcd_ret=lcd_send_nbits(lcd,data>>4);
  3704   002C70  C0E4  F02C         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  3705   002C74  0100               	movlb	0	; () banked
  3706   002C76  39E5               	swapf	lcd_send_char_data@data& (0+255),w,b
  3707   002C78  0B0F               	andlw	15
  3708   002C7A  6E2D               	movwf	lcd_send_nbits@data_or_command^0,c
  3709   002C7C  EC0B  F01A         	call	_lcd_send_nbits	;wreg free
  3710   002C80  0100               	movlb	0	; () banked
  3711   002C82  6FE7               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  3712                           
  3713                           ;ECUAL/LCD/lcd.c: 127:         lcd_ret=lcd_send_enable(lcd);
  3714   002C84  C0E4  F02C         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  3715   002C88  EC20  F01D         	call	_lcd_send_enable	;wreg free
  3716   002C8C  0100               	movlb	0	; () banked
  3717   002C8E  6FE7               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  3718                           
  3719                           ;ECUAL/LCD/lcd.c: 128:         lcd_ret=lcd_send_nbits(lcd,data);
  3720   002C90  C0E4  F02C         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  3721   002C94  C0E5  F02D         	movff	lcd_send_char_data@data,lcd_send_nbits@data_or_command
  3722   002C98  EC0B  F01A         	call	_lcd_send_nbits	;wreg free
  3723   002C9C  0100               	movlb	0	; () banked
  3724   002C9E  6FE7               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  3725                           
  3726                           ;ECUAL/LCD/lcd.c: 129:         lcd_ret=lcd_send_enable(lcd);
  3727   002CA0  C0E4  F02C         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  3728   002CA4  EC20  F01D         	call	_lcd_send_enable	;wreg free
  3729   002CA8  0100               	movlb	0	; () banked
  3730   002CAA  6FE7               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  3731   002CAC                     
  3732                           ; BSR set to: 0
  3733                           ;ECUAL/LCD/lcd.c: 136:         ret=(Std_ReturnType)0x01;
  3734   002CAC  0E01               	movlw	1
  3735   002CAE  6FE8               	movwf	lcd_send_char_data@ret& (0+255),b
  3736   002CB0                     l7854:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;ECUAL/LCD/lcd.c: 139:     return ret;
  3740   002CB0  51E8               	movf	lcd_send_char_data@ret& (0+255),w,b
  3741   002CB2                     
  3742                           ; BSR set to: 0
  3743   002CB2  0012               	return		;funcret
  3744   002CB4                     __end_of_lcd_send_char_data:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _convert_BCD_to_int *****************
  3748 ;; Defined at:
  3749 ;;		line 21 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  BCD_num         1    wreg     unsigned char 
  3752 ;;  int_num         1   40[COMRAM] PTR unsigned char 
  3753 ;;		 -> year_counter(1), month_counter(1), day_counter(1), hours_counter(1), 
  3754 ;;		 -> minutes_counter(1), seconds_counter(1), 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  BCD_num         1    0[BANK0 ] unsigned char 
  3757 ;;  ones            1    2[BANK0 ] unsigned char 
  3758 ;;  tens            1    1[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;Total ram usage:        6 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 13
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text17
  3783   0015EE                     __ptext17:
  3784                           	callstack 0
  3785   0015EE                     _convert_BCD_to_int:
  3786                           	callstack 17
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;incstack = 0
  3790                           ;convert_BCD_to_int@BCD_num stored from wreg
  3791   0015EE  0100               	movlb	0	; () banked
  3792   0015F0  6FDB               	movwf	convert_BCD_to_int@BCD_num& (0+255),b
  3793   0015F2                     
  3794                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 22:     uint8 tens,ones;;ECUAL/RealTim
      +                          eClockDS1307/RealTimeClockDS1307.c: 23:     switch(BCD_num&0x0f){
  3795   0015F2  EF23  F00B         	goto	l8420
  3796   0015F6                     l8398:
  3797                           
  3798                           ; BSR set to: 0
  3799   0015F6  0E00               	movlw	0
  3800   0015F8  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3801   0015FA  EF82  F00B         	goto	l8444
  3802   0015FE                     l8400:
  3803                           
  3804                           ; BSR set to: 0
  3805   0015FE  0E01               	movlw	1
  3806   001600  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3807   001602  EF82  F00B         	goto	l8444
  3808   001606                     l8402:
  3809                           
  3810                           ; BSR set to: 0
  3811   001606  0E02               	movlw	2
  3812   001608  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3813   00160A  EF82  F00B         	goto	l8444
  3814   00160E                     l8404:
  3815                           
  3816                           ; BSR set to: 0
  3817   00160E  0E03               	movlw	3
  3818   001610  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3819   001612  EF82  F00B         	goto	l8444
  3820   001616                     l8406:
  3821                           
  3822                           ; BSR set to: 0
  3823   001616  0E04               	movlw	4
  3824   001618  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3825   00161A  EF82  F00B         	goto	l8444
  3826   00161E                     l8408:
  3827                           
  3828                           ; BSR set to: 0
  3829   00161E  0E05               	movlw	5
  3830   001620  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3831   001622  EF82  F00B         	goto	l8444
  3832   001626                     l8410:
  3833                           
  3834                           ; BSR set to: 0
  3835   001626  0E06               	movlw	6
  3836   001628  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3837   00162A  EF82  F00B         	goto	l8444
  3838   00162E                     l8412:
  3839                           
  3840                           ; BSR set to: 0
  3841   00162E  0E07               	movlw	7
  3842   001630  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3843   001632  EF82  F00B         	goto	l8444
  3844   001636                     l8414:
  3845                           
  3846                           ; BSR set to: 0
  3847   001636  0E08               	movlw	8
  3848   001638  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3849   00163A  EF82  F00B         	goto	l8444
  3850   00163E                     l8416:
  3851                           
  3852                           ; BSR set to: 0
  3853   00163E  0E09               	movlw	9
  3854   001640  6FDD               	movwf	convert_BCD_to_int@ones& (0+255),b
  3855   001642  EF82  F00B         	goto	l8444
  3856   001646                     l8420:
  3857   001646  0100               	movlb	0	; () banked
  3858   001648  51DB               	movf	convert_BCD_to_int@BCD_num& (0+255),w,b
  3859   00164A  0B0F               	andlw	15
  3860   00164C  6E2A               	movwf	??_convert_BCD_to_int^0,c
  3861   00164E  6A2B               	clrf	(??_convert_BCD_to_int+1)^0,c
  3862                           
  3863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3864                           ; Switch size 1, requested type "simple"
  3865                           ; Number of cases is 1, Range of values is 0 to 0
  3866                           ; switch strategies available:
  3867                           ; Name         Instructions Cycles
  3868                           ; simple_byte            4     3 (average)
  3869                           ;	Chosen strategy is simple_byte
  3870   001650  502B               	movf	(??_convert_BCD_to_int+1)^0,w,c
  3871   001652  0A00               	xorlw	0	; case 0
  3872   001654  B4D8               	btfsc	status,2,c
  3873   001656  EF2F  F00B         	goto	l9250
  3874   00165A  EF82  F00B         	goto	l8444
  3875   00165E                     l9250:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ; Switch size 1, requested type "simple"
  3879                           ; Number of cases is 10, Range of values is 0 to 9
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte           31    16 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884   00165E  502A               	movf	??_convert_BCD_to_int^0,w,c
  3885   001660  0A00               	xorlw	0	; case 0
  3886   001662  B4D8               	btfsc	status,2,c
  3887   001664  EFFB  F00A         	goto	l8398
  3888   001668  0A01               	xorlw	1	; case 1
  3889   00166A  B4D8               	btfsc	status,2,c
  3890   00166C  EFFF  F00A         	goto	l8400
  3891   001670  0A03               	xorlw	3	; case 2
  3892   001672  B4D8               	btfsc	status,2,c
  3893   001674  EF03  F00B         	goto	l8402
  3894   001678  0A01               	xorlw	1	; case 3
  3895   00167A  B4D8               	btfsc	status,2,c
  3896   00167C  EF07  F00B         	goto	l8404
  3897   001680  0A07               	xorlw	7	; case 4
  3898   001682  B4D8               	btfsc	status,2,c
  3899   001684  EF0B  F00B         	goto	l8406
  3900   001688  0A01               	xorlw	1	; case 5
  3901   00168A  B4D8               	btfsc	status,2,c
  3902   00168C  EF0F  F00B         	goto	l8408
  3903   001690  0A03               	xorlw	3	; case 6
  3904   001692  B4D8               	btfsc	status,2,c
  3905   001694  EF13  F00B         	goto	l8410
  3906   001698  0A01               	xorlw	1	; case 7
  3907   00169A  B4D8               	btfsc	status,2,c
  3908   00169C  EF17  F00B         	goto	l8412
  3909   0016A0  0A0F               	xorlw	15	; case 8
  3910   0016A2  B4D8               	btfsc	status,2,c
  3911   0016A4  EF1B  F00B         	goto	l8414
  3912   0016A8  0A01               	xorlw	1	; case 9
  3913   0016AA  B4D8               	btfsc	status,2,c
  3914   0016AC  EF1F  F00B         	goto	l8416
  3915   0016B0  EF82  F00B         	goto	l8444
  3916   0016B4                     l8422:
  3917                           
  3918                           ; BSR set to: 0
  3919   0016B4  0E00               	movlw	0
  3920   0016B6  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3921   0016B8  EFB8  F00B         	goto	l8446
  3922   0016BC                     l8424:
  3923                           
  3924                           ; BSR set to: 0
  3925   0016BC  0E01               	movlw	1
  3926   0016BE  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3927   0016C0  EFB8  F00B         	goto	l8446
  3928   0016C4                     l8426:
  3929                           
  3930                           ; BSR set to: 0
  3931   0016C4  0E02               	movlw	2
  3932   0016C6  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3933   0016C8  EFB8  F00B         	goto	l8446
  3934   0016CC                     l8428:
  3935                           
  3936                           ; BSR set to: 0
  3937   0016CC  0E03               	movlw	3
  3938   0016CE  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3939   0016D0  EFB8  F00B         	goto	l8446
  3940   0016D4                     l8430:
  3941                           
  3942                           ; BSR set to: 0
  3943   0016D4  0E04               	movlw	4
  3944   0016D6  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3945   0016D8  EFB8  F00B         	goto	l8446
  3946   0016DC                     l8432:
  3947                           
  3948                           ; BSR set to: 0
  3949   0016DC  0E05               	movlw	5
  3950   0016DE  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3951   0016E0  EFB8  F00B         	goto	l8446
  3952   0016E4                     l8434:
  3953                           
  3954                           ; BSR set to: 0
  3955   0016E4  0E06               	movlw	6
  3956   0016E6  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3957   0016E8  EFB8  F00B         	goto	l8446
  3958   0016EC                     l8436:
  3959                           
  3960                           ; BSR set to: 0
  3961   0016EC  0E07               	movlw	7
  3962   0016EE  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3963   0016F0  EFB8  F00B         	goto	l8446
  3964   0016F4                     l8438:
  3965                           
  3966                           ; BSR set to: 0
  3967   0016F4  0E08               	movlw	8
  3968   0016F6  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3969   0016F8  EFB8  F00B         	goto	l8446
  3970   0016FC                     l8440:
  3971                           
  3972                           ; BSR set to: 0
  3973   0016FC  0E09               	movlw	9
  3974   0016FE  6FDC               	movwf	convert_BCD_to_int@tens& (0+255),b
  3975   001700  EFB8  F00B         	goto	l8446
  3976   001704                     l8444:
  3977                           
  3978                           ; BSR set to: 0
  3979   001704  39DB               	swapf	convert_BCD_to_int@BCD_num& (0+255),w,b
  3980   001706  0B0F               	andlw	15
  3981   001708  6E2A               	movwf	??_convert_BCD_to_int^0,c
  3982   00170A  6A2B               	clrf	(??_convert_BCD_to_int+1)^0,c
  3983                           
  3984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3985                           ; Switch size 1, requested type "simple"
  3986                           ; Number of cases is 1, Range of values is 0 to 0
  3987                           ; switch strategies available:
  3988                           ; Name         Instructions Cycles
  3989                           ; simple_byte            4     3 (average)
  3990                           ;	Chosen strategy is simple_byte
  3991   00170C  502B               	movf	(??_convert_BCD_to_int+1)^0,w,c
  3992   00170E  0A00               	xorlw	0	; case 0
  3993   001710  B4D8               	btfsc	status,2,c
  3994   001712  EF8D  F00B         	goto	l9252
  3995   001716  EFB8  F00B         	goto	l8446
  3996   00171A                     l9252:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ; Switch size 1, requested type "simple"
  4000                           ; Number of cases is 10, Range of values is 0 to 9
  4001                           ; switch strategies available:
  4002                           ; Name         Instructions Cycles
  4003                           ; simple_byte           31    16 (average)
  4004                           ;	Chosen strategy is simple_byte
  4005   00171A  502A               	movf	??_convert_BCD_to_int^0,w,c
  4006   00171C  0A00               	xorlw	0	; case 0
  4007   00171E  B4D8               	btfsc	status,2,c
  4008   001720  EF5A  F00B         	goto	l8422
  4009   001724  0A01               	xorlw	1	; case 1
  4010   001726  B4D8               	btfsc	status,2,c
  4011   001728  EF5E  F00B         	goto	l8424
  4012   00172C  0A03               	xorlw	3	; case 2
  4013   00172E  B4D8               	btfsc	status,2,c
  4014   001730  EF62  F00B         	goto	l8426
  4015   001734  0A01               	xorlw	1	; case 3
  4016   001736  B4D8               	btfsc	status,2,c
  4017   001738  EF66  F00B         	goto	l8428
  4018   00173C  0A07               	xorlw	7	; case 4
  4019   00173E  B4D8               	btfsc	status,2,c
  4020   001740  EF6A  F00B         	goto	l8430
  4021   001744  0A01               	xorlw	1	; case 5
  4022   001746  B4D8               	btfsc	status,2,c
  4023   001748  EF6E  F00B         	goto	l8432
  4024   00174C  0A03               	xorlw	3	; case 6
  4025   00174E  B4D8               	btfsc	status,2,c
  4026   001750  EF72  F00B         	goto	l8434
  4027   001754  0A01               	xorlw	1	; case 7
  4028   001756  B4D8               	btfsc	status,2,c
  4029   001758  EF76  F00B         	goto	l8436
  4030   00175C  0A0F               	xorlw	15	; case 8
  4031   00175E  B4D8               	btfsc	status,2,c
  4032   001760  EF7A  F00B         	goto	l8438
  4033   001764  0A01               	xorlw	1	; case 9
  4034   001766  B4D8               	btfsc	status,2,c
  4035   001768  EF7E  F00B         	goto	l8440
  4036   00176C  EFB8  F00B         	goto	l8446
  4037   001770                     l8446:
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 47:     *int_num=tens*10+ones;
  4041   001770  5029               	movf	convert_BCD_to_int@int_num^0,w,c
  4042   001772  6ED9               	movwf	fsr2l,c
  4043   001774  6ADA               	clrf	fsr2h,c
  4044   001776  51DC               	movf	convert_BCD_to_int@tens& (0+255),w,b
  4045   001778  0D0A               	mullw	10
  4046   00177A  50F3               	movf	243,w,c
  4047   00177C  25DD               	addwf	convert_BCD_to_int@ones& (0+255),w,b
  4048   00177E  6EDF               	movwf	indf2,c
  4049   001780                     
  4050                           ; BSR set to: 0
  4051   001780  0012               	return		;funcret
  4052   001782                     __end_of_convert_BCD_to_int:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function __Initialize *****************
  4056 ;; Defined at:
  4057 ;;		line 31 in file "mcc_generated_files/init.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 17
  4078 ;; This function calls:
  4079 ;;		_I2C_Initialize
  4080 ;;		_interrupt_INTx_init
  4081 ;;		_lcd_init
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text18
  4088   003A68                     __ptext18:
  4089                           	callstack 0
  4090   003A68                     __Initialize:
  4091                           	callstack 13
  4092   003A68                     
  4093                           ;mcc_generated_files/init.c: 33:     I2C_Initialize();
  4094   003A68  EC14  F01E         	call	_I2C_Initialize	;wreg free
  4095   003A6C                     
  4096                           ;mcc_generated_files/init.c: 34:     lcd_init(&lcd);
  4097   003A6C  0EAA               	movlw	low _lcd
  4098   003A6E  0100               	movlb	0	; () banked
  4099   003A70  6FE9               	movwf	lcd_init@lcd& (0+255),b
  4100   003A72  ECF4  F00E         	call	_lcd_init	;wreg free
  4101   003A76                     
  4102                           ;mcc_generated_files/init.c: 35:     interrupt_INTx_init(&MY_INT0);
  4103   003A76  0EA4               	movlw	low _MY_INT0
  4104   003A78  0100               	movlb	0	; () banked
  4105   003A7A  6FE4               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  4106   003A7C  EC83  F019         	call	_interrupt_INTx_init	;wreg free
  4107   003A80                     
  4108                           ;mcc_generated_files/init.c: 36:     interrupt_INTx_init(&MY_INT1);
  4109   003A80  0E9E               	movlw	low _MY_INT1
  4110   003A82  0100               	movlb	0	; () banked
  4111   003A84  6FE4               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  4112   003A86  EC83  F019         	call	_interrupt_INTx_init	;wreg free
  4113   003A8A  0012               	return		;funcret
  4114   003A8C                     __end_of__Initialize:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _lcd_init *****************
  4118 ;; Defined at:
  4119 ;;		line 30 in file "ECUAL/LCD/lcd.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  lcd             1   14[BANK0 ] PTR struct .
  4122 ;;		 -> lcd(6), 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  lcd_ret         1   19[BANK0 ] unsigned char 
  4125 ;;  pins_counter    1   18[BANK0 ] unsigned char 
  4126 ;;  gpio_ret        1   17[BANK0 ] unsigned char 
  4127 ;;  ret             1    0        unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;Total ram usage:        6 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 16
  4144 ;; This function calls:
  4145 ;;		_gpio_pin_output_low_init
  4146 ;;		_lcd_send_command
  4147 ;; This function is called by:
  4148 ;;		__Initialize
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text19
  4153   001DE8                     __ptext19:
  4154                           	callstack 0
  4155   001DE8                     _lcd_init:
  4156                           	callstack 13
  4157   001DE8                     
  4158                           ;ECUAL/LCD/lcd.c: 33:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4159   001DE8  0E00               	movlw	0
  4160   001DEA  0100               	movlb	0	; () banked
  4161   001DEC  6FEC               	movwf	lcd_init@gpio_ret& (0+255),b
  4162                           
  4163                           ;ECUAL/LCD/lcd.c: 34:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  4164   001DEE  0E00               	movlw	0
  4165   001DF0  6FEE               	movwf	lcd_init@lcd_ret& (0+255),b
  4166                           
  4167                           ;ECUAL/LCD/lcd.c: 35:     uint8 pins_counter;;ECUAL/LCD/lcd.c: 36:     if(((void*)0)==lc
      +                          d){
  4168   001DF2  51E9               	movf	lcd_init@lcd& (0+255),w,b
  4169   001DF4  A4D8               	btfss	status,2,c
  4170   001DF6  EFFF  F00E         	goto	u5571
  4171   001DFA  EF01  F00F         	goto	u5570
  4172   001DFE                     u5571:
  4173   001DFE  EF03  F00F         	goto	l8320
  4174   001E02                     u5570:
  4175   001E02                     
  4176                           ; BSR set to: 0
  4177                           ;ECUAL/LCD/lcd.c: 38:     }
  4178   001E02  EF80  F00F         	goto	l602
  4179   001E06                     l8320:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;ECUAL/LCD/lcd.c: 40:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_en));
  4183   001E06  29E9               	incf	lcd_init@lcd& (0+255),w,b
  4184   001E08  6E2C               	movwf	gpio_pin_output_low_init@pin^0,c
  4185   001E0A  ECB7  F018         	call	_gpio_pin_output_low_init	;wreg free
  4186   001E0E  0100               	movlb	0	; () banked
  4187   001E10  6FEC               	movwf	lcd_init@gpio_ret& (0+255),b
  4188                           
  4189                           ;ECUAL/LCD/lcd.c: 41:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_rs));
  4190   001E12  C0E9  F02C         	movff	lcd_init@lcd,gpio_pin_output_low_init@pin
  4191   001E16  ECB7  F018         	call	_gpio_pin_output_low_init	;wreg free
  4192   001E1A  0100               	movlb	0	; () banked
  4193   001E1C  6FEC               	movwf	lcd_init@gpio_ret& (0+255),b
  4194   001E1E                     
  4195                           ; BSR set to: 0
  4196                           ;ECUAL/LCD/lcd.c: 42:         for(pins_counter=0;pins_counter<n;pins_counter++){
  4197   001E1E  0E00               	movlw	0
  4198   001E20  6FED               	movwf	lcd_init@pins_counter& (0+255),b
  4199   001E22  EF1B  F00F         	goto	l8328
  4200   001E26                     l8324:
  4201                           
  4202                           ; BSR set to: 0
  4203   001E26  51E9               	movf	lcd_init@lcd& (0+255),w,b
  4204   001E28  25ED               	addwf	lcd_init@pins_counter& (0+255),w,b
  4205   001E2A  0F02               	addlw	2
  4206   001E2C  6E2C               	movwf	gpio_pin_output_low_init@pin^0,c
  4207   001E2E  ECB7  F018         	call	_gpio_pin_output_low_init	;wreg free
  4208   001E32                     
  4209                           ;ECUAL/LCD/lcd.c: 44:         }
  4210   001E32  0100               	movlb	0	; () banked
  4211   001E34  2BED               	incf	lcd_init@pins_counter& (0+255),f,b
  4212   001E36                     l8328:
  4213                           
  4214                           ; BSR set to: 0
  4215   001E36  0E03               	movlw	3
  4216   001E38  65ED               	cpfsgt	lcd_init@pins_counter& (0+255),b
  4217   001E3A  EF21  F00F         	goto	u5581
  4218   001E3E  EF23  F00F         	goto	u5580
  4219   001E42                     u5581:
  4220   001E42  EF13  F00F         	goto	l8324
  4221   001E46                     u5580:
  4222   001E46                     
  4223                           ; BSR set to: 0
  4224                           ;ECUAL/LCD/lcd.c: 45:         _delay((unsigned long)((20)*(8000000/4000.0)));
  4225   001E46  0E34               	movlw	52
  4226   001E48  0100               	movlb	0	; () banked
  4227   001E4A  6FEA               	movwf	??_lcd_init& (0+255),b
  4228   001E4C  0EF1               	movlw	241
  4229   001E4E                     u6117:
  4230   001E4E  2EE8               	decfsz	wreg,f,c
  4231   001E50  D7FE               	bra	u6117
  4232   001E52  2FEA               	decfsz	??_lcd_init& (0+255),f,b
  4233   001E54  D7FC               	bra	u6117
  4234   001E56  D000               	nop2	
  4235   001E58  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4236   001E5C  0E38               	movlw	56
  4237   001E5E  0100               	movlb	0	; () banked
  4238   001E60  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4239   001E62  EC5A  F016         	call	_lcd_send_command	;wreg free
  4240   001E66                     
  4241                           ;ECUAL/LCD/lcd.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4242   001E66  0E0D               	movlw	13
  4243   001E68  0100               	movlb	0	; () banked
  4244   001E6A  6FEA               	movwf	??_lcd_init& (0+255),b
  4245   001E6C  0EFB               	movlw	251
  4246   001E6E                     u6127:
  4247   001E6E  2EE8               	decfsz	wreg,f,c
  4248   001E70  D7FE               	bra	u6127
  4249   001E72  2FEA               	decfsz	??_lcd_init& (0+255),f,b
  4250   001E74  D7FC               	bra	u6127
  4251   001E76  D000               	nop2	
  4252   001E78  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4253   001E7C  0E38               	movlw	56
  4254   001E7E  0100               	movlb	0	; () banked
  4255   001E80  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4256   001E82  EC5A  F016         	call	_lcd_send_command	;wreg free
  4257   001E86                     
  4258                           ;ECUAL/LCD/lcd.c: 49:         _delay((unsigned long)((150)*(8000000/4000.0)));
  4259   001E86  0E02               	movlw	2
  4260   001E88  0100               	movlb	0	; () banked
  4261   001E8A  6FEB               	movwf	(??_lcd_init+1)& (0+255),b
  4262   001E8C  0E86               	movlw	134
  4263   001E8E  6FEA               	movwf	??_lcd_init& (0+255),b
  4264   001E90  0E99               	movlw	153
  4265   001E92                     u6137:
  4266   001E92  2EE8               	decfsz	wreg,f,c
  4267   001E94  D7FE               	bra	u6137
  4268   001E96  2FEA               	decfsz	??_lcd_init& (0+255),f,b
  4269   001E98  D7FC               	bra	u6137
  4270   001E9A  2FEB               	decfsz	(??_lcd_init+1)& (0+255),f,b
  4271   001E9C  D7FA               	bra	u6137
  4272   001E9E  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4273   001EA2  0E38               	movlw	56
  4274   001EA4  0100               	movlb	0	; () banked
  4275   001EA6  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4276   001EA8  EC5A  F016         	call	_lcd_send_command	;wreg free
  4277   001EAC  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4278   001EB0  0E01               	movlw	1
  4279   001EB2  0100               	movlb	0	; () banked
  4280   001EB4  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4281   001EB6  EC5A  F016         	call	_lcd_send_command	;wreg free
  4282   001EBA  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4283   001EBE  0E02               	movlw	2
  4284   001EC0  0100               	movlb	0	; () banked
  4285   001EC2  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4286   001EC4  EC5A  F016         	call	_lcd_send_command	;wreg free
  4287   001EC8  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4288   001ECC  0E06               	movlw	6
  4289   001ECE  0100               	movlb	0	; () banked
  4290   001ED0  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4291   001ED2  EC5A  F016         	call	_lcd_send_command	;wreg free
  4292   001ED6  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4293   001EDA  0E0C               	movlw	12
  4294   001EDC  0100               	movlb	0	; () banked
  4295   001EDE  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4296   001EE0  EC5A  F016         	call	_lcd_send_command	;wreg free
  4297   001EE4  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4298   001EE8  0E80               	movlw	128
  4299   001EEA  0100               	movlb	0	; () banked
  4300   001EEC  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4301   001EEE  EC5A  F016         	call	_lcd_send_command	;wreg free
  4302   001EF2  C0E9  F0E4         	movff	lcd_init@lcd,lcd_send_command@lcd
  4303   001EF6  0E28               	movlw	40
  4304   001EF8  0100               	movlb	0	; () banked
  4305   001EFA  6FE5               	movwf	lcd_send_command@command& (0+255),b
  4306   001EFC  EC5A  F016         	call	_lcd_send_command	;wreg free
  4307   001F00                     l602:
  4308   001F00  0012               	return		;funcret
  4309   001F02                     __end_of_lcd_init:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _lcd_send_command *****************
  4313 ;; Defined at:
  4314 ;;		line 78 in file "ECUAL/LCD/lcd.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  lcd             1    9[BANK0 ] PTR struct .
  4317 ;;		 -> lcd(6), 
  4318 ;;  command         1   10[BANK0 ] unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  ret             1   13[BANK0 ] unsigned char 
  4321 ;;  lcd_ret         1   12[BANK0 ] unsigned char 
  4322 ;;  gpio_ret        1   11[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      unsigned char 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        5 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 15
  4339 ;; This function calls:
  4340 ;;		_gpio_pin_logic_write
  4341 ;;		_lcd_send_enable
  4342 ;;		_lcd_send_nbits
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;;		_lcd_init
  4346 ;;		_lcd_set_curser
  4347 ;;		_lcd_send_custom_char
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text20
  4352   002CB4                     __ptext20:
  4353                           	callstack 0
  4354   002CB4                     _lcd_send_command:
  4355                           	callstack 13
  4356   002CB4                     
  4357                           ;ECUAL/LCD/lcd.c: 81:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4358   002CB4  0E00               	movlw	0
  4359   002CB6  0100               	movlb	0	; () banked
  4360   002CB8  6FE6               	movwf	lcd_send_command@gpio_ret& (0+255),b
  4361                           
  4362                           ;ECUAL/LCD/lcd.c: 82:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  4363   002CBA  0E00               	movlw	0
  4364   002CBC  6FE7               	movwf	lcd_send_command@lcd_ret& (0+255),b
  4365                           
  4366                           ;ECUAL/LCD/lcd.c: 83:     if(((void*)0)==lcd){
  4367   002CBE  51E4               	movf	lcd_send_command@lcd& (0+255),w,b
  4368   002CC0  A4D8               	btfss	status,2,c
  4369   002CC2  EF65  F016         	goto	u5131
  4370   002CC6  EF67  F016         	goto	u5130
  4371   002CCA                     u5131:
  4372   002CCA  EF6B  F016         	goto	l7838
  4373   002CCE                     u5130:
  4374   002CCE                     
  4375                           ; BSR set to: 0
  4376                           ;ECUAL/LCD/lcd.c: 84:         ret=(Std_ReturnType)0x00;
  4377   002CCE  0E00               	movlw	0
  4378   002CD0  6FE8               	movwf	lcd_send_command@ret& (0+255),b
  4379                           
  4380                           ;ECUAL/LCD/lcd.c: 85:     }
  4381   002CD2  EF91  F016         	goto	l7842
  4382   002CD6                     l7838:
  4383                           
  4384                           ; BSR set to: 0
  4385   002CD6  C0E4  F029         	movff	lcd_send_command@lcd,gpio_pin_logic_write@pin
  4386   002CDA  0E00               	movlw	0
  4387   002CDC  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4388   002CDE  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  4389                           
  4390                           ;ECUAL/LCD/lcd.c: 89:         lcd_ret=lcd_send_nbits(lcd,command>>4);
  4391   002CE2  C0E4  F02C         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  4392   002CE6  0100               	movlb	0	; () banked
  4393   002CE8  39E5               	swapf	lcd_send_command@command& (0+255),w,b
  4394   002CEA  0B0F               	andlw	15
  4395   002CEC  6E2D               	movwf	lcd_send_nbits@data_or_command^0,c
  4396   002CEE  EC0B  F01A         	call	_lcd_send_nbits	;wreg free
  4397   002CF2  0100               	movlb	0	; () banked
  4398   002CF4  6FE7               	movwf	lcd_send_command@lcd_ret& (0+255),b
  4399                           
  4400                           ;ECUAL/LCD/lcd.c: 90:         lcd_ret=lcd_send_enable(lcd);
  4401   002CF6  C0E4  F02C         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  4402   002CFA  EC20  F01D         	call	_lcd_send_enable	;wreg free
  4403   002CFE  0100               	movlb	0	; () banked
  4404   002D00  6FE7               	movwf	lcd_send_command@lcd_ret& (0+255),b
  4405                           
  4406                           ;ECUAL/LCD/lcd.c: 91:         lcd_ret=lcd_send_nbits(lcd,command);
  4407   002D02  C0E4  F02C         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  4408   002D06  C0E5  F02D         	movff	lcd_send_command@command,lcd_send_nbits@data_or_command
  4409   002D0A  EC0B  F01A         	call	_lcd_send_nbits	;wreg free
  4410   002D0E  0100               	movlb	0	; () banked
  4411   002D10  6FE7               	movwf	lcd_send_command@lcd_ret& (0+255),b
  4412                           
  4413                           ;ECUAL/LCD/lcd.c: 92:         lcd_ret=lcd_send_enable(lcd);
  4414   002D12  C0E4  F02C         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  4415   002D16  EC20  F01D         	call	_lcd_send_enable	;wreg free
  4416   002D1A  0100               	movlb	0	; () banked
  4417   002D1C  6FE7               	movwf	lcd_send_command@lcd_ret& (0+255),b
  4418   002D1E                     
  4419                           ; BSR set to: 0
  4420                           ;ECUAL/LCD/lcd.c: 100:         ret=(Std_ReturnType)0x01;
  4421   002D1E  0E01               	movlw	1
  4422   002D20  6FE8               	movwf	lcd_send_command@ret& (0+255),b
  4423   002D22                     l7842:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;ECUAL/LCD/lcd.c: 103:     return ret;
  4427   002D22  51E8               	movf	lcd_send_command@ret& (0+255),w,b
  4428   002D24                     
  4429                           ; BSR set to: 0
  4430   002D24  0012               	return		;funcret
  4431   002D26                     __end_of_lcd_send_command:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _lcd_send_nbits *****************
  4435 ;; Defined at:
  4436 ;;		line 377 in file "ECUAL/LCD/lcd.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  lcd             1   43[COMRAM] PTR struct .
  4439 ;;		 -> lcd(6), 
  4440 ;;  data_or_comm    1   44[COMRAM] unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  pin_counter     1    8[BANK0 ] unsigned char 
  4443 ;;  ret             1    7[BANK0 ] unsigned char 
  4444 ;;  gpio_ret        1    0        unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      unsigned char 
  4447 ;; Registers used:
  4448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;Total ram usage:        6 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; Hardware stack levels required when called: 14
  4461 ;; This function calls:
  4462 ;;		_gpio_pin_logic_write
  4463 ;; This function is called by:
  4464 ;;		_lcd_send_command
  4465 ;;		_lcd_send_char_data
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text21
  4470   003416                     __ptext21:
  4471                           	callstack 0
  4472   003416                     _lcd_send_nbits:
  4473                           	callstack 13
  4474   003416                     
  4475                           ;ECUAL/LCD/lcd.c: 379:     uint8 pin_counter;;ECUAL/LCD/lcd.c: 380:     Std_ReturnType r
      +                          et=(Std_ReturnType)0x00;
  4476   003416  0E00               	movlw	0
  4477   003418  0100               	movlb	0	; () banked
  4478   00341A  6FE2               	movwf	lcd_send_nbits@ret& (0+255),b
  4479                           
  4480                           ;ECUAL/LCD/lcd.c: 382:     for(pin_counter=0;pin_counter<n;pin_counter++){
  4481   00341C  0E00               	movlw	0
  4482   00341E  6FE3               	movwf	lcd_send_nbits@pin_counter& (0+255),b
  4483   003420  EF2A  F01A         	goto	l7648
  4484   003424                     l7644:
  4485                           
  4486                           ; BSR set to: 0
  4487   003424  502C               	movf	lcd_send_nbits@lcd^0,w,c
  4488   003426  25E3               	addwf	lcd_send_nbits@pin_counter& (0+255),w,b
  4489   003428  0F02               	addlw	2
  4490   00342A  6E29               	movwf	gpio_pin_logic_write@pin^0,c
  4491   00342C  C0E3  F0E0         	movff	lcd_send_nbits@pin_counter,??_lcd_send_nbits
  4492   003430  C02D  F0E1         	movff	lcd_send_nbits@data_or_command,??_lcd_send_nbits+1
  4493   003434  2BE0               	incf	??_lcd_send_nbits& (0+255),f,b
  4494   003436  EF1F  F01A         	goto	u4914
  4495   00343A                     u4915:
  4496   00343A  90D8               	bcf	status,0,c
  4497   00343C  33E1               	rrcf	(??_lcd_send_nbits+1)& (0+255),f,b
  4498   00343E                     u4914:
  4499   00343E  2FE0               	decfsz	??_lcd_send_nbits& (0+255),f,b
  4500   003440  EF1D  F01A         	goto	u4915
  4501   003444  0100               	movlb	0	; () banked
  4502   003446  51E1               	movf	(??_lcd_send_nbits+1)& (0+255),w,b
  4503   003448  0B01               	andlw	1
  4504   00344A  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4505   00344C  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  4506   003450                     
  4507                           ;ECUAL/LCD/lcd.c: 384:     }
  4508   003450  0100               	movlb	0	; () banked
  4509   003452  2BE3               	incf	lcd_send_nbits@pin_counter& (0+255),f,b
  4510   003454                     l7648:
  4511                           
  4512                           ; BSR set to: 0
  4513   003454  0E03               	movlw	3
  4514   003456  65E3               	cpfsgt	lcd_send_nbits@pin_counter& (0+255),b
  4515   003458  EF30  F01A         	goto	u4921
  4516   00345C  EF32  F01A         	goto	u4920
  4517   003460                     u4921:
  4518   003460  EF12  F01A         	goto	l7644
  4519   003464                     u4920:
  4520   003464                     
  4521                           ; BSR set to: 0
  4522                           ;ECUAL/LCD/lcd.c: 386:     return ret;
  4523   003464  51E2               	movf	lcd_send_nbits@ret& (0+255),w,b
  4524   003466                     
  4525                           ; BSR set to: 0
  4526   003466  0012               	return		;funcret
  4527   003468                     __end_of_lcd_send_nbits:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _lcd_send_enable *****************
  4531 ;; Defined at:
  4532 ;;		line 389 in file "ECUAL/LCD/lcd.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  lcd             1   43[COMRAM] PTR struct .
  4535 ;;		 -> lcd(6), 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  ret             1    0        unsigned char 
  4538 ;;  gpio_ret        1   44[COMRAM] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      unsigned char 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        2 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 14
  4555 ;; This function calls:
  4556 ;;		_gpio_pin_logic_write
  4557 ;; This function is called by:
  4558 ;;		_lcd_send_command
  4559 ;;		_lcd_send_char_data
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text22
  4564   003A40                     __ptext22:
  4565                           	callstack 0
  4566   003A40                     _lcd_send_enable:
  4567                           	callstack 13
  4568   003A40                     
  4569                           ;ECUAL/LCD/lcd.c: 392:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4570   003A40  0E00               	movlw	0
  4571   003A42  6E2D               	movwf	lcd_send_enable@gpio_ret^0,c
  4572   003A44  282C               	incf	lcd_send_enable@lcd^0,w,c
  4573   003A46  6E29               	movwf	gpio_pin_logic_write@pin^0,c
  4574   003A48  0E01               	movlw	1
  4575   003A4A  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4576   003A4C  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  4577   003A50                     
  4578                           ;ECUAL/LCD/lcd.c: 394:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  4579   003A50  0E03               	movlw	3
  4580   003A52                     u6147:
  4581   003A52  2EE8               	decfsz	wreg,f,c
  4582   003A54  D7FE               	bra	u6147
  4583   003A56  0000               	nop	
  4584   003A58  282C               	incf	lcd_send_enable@lcd^0,w,c
  4585   003A5A  6E29               	movwf	gpio_pin_logic_write@pin^0,c
  4586   003A5C  0E00               	movlw	0
  4587   003A5E  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4588   003A60  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  4589   003A64                     
  4590                           ;ECUAL/LCD/lcd.c: 397:     return ret;
  4591   003A64  0E00               	movlw	0
  4592   003A66  0012               	return		;funcret
  4593   003A68                     __end_of_lcd_send_enable:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _gpio_pin_output_low_init *****************
  4597 ;; Defined at:
  4598 ;;		line 161 in file "MCAL/GPIO/gpio.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  pin             1   43[COMRAM] PTR struct .
  4601 ;;		 -> lcd$lcd_pins(4), lcd(6), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  ret             1    6[BANK0 ] unsigned char 
  4604 ;;  gpio_ret        1    5[BANK0 ] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      unsigned char 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        4 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 14
  4621 ;; This function calls:
  4622 ;;		_gpio_pin_direction_init
  4623 ;;		_gpio_pin_logic_write
  4624 ;; This function is called by:
  4625 ;;		_lcd_init
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text23
  4630   00316E                     __ptext23:
  4631                           	callstack 0
  4632   00316E                     _gpio_pin_output_low_init:
  4633                           	callstack 14
  4634   00316E                     
  4635                           ;MCAL/GPIO/gpio.c: 164:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  4636   00316E  0E00               	movlw	0
  4637   003170  0100               	movlb	0	; () banked
  4638   003172  6FE0               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  4639                           
  4640                           ;MCAL/GPIO/gpio.c: 165:     if(((void*)0)==pin || (pin->pin)>7){
  4641   003174  502C               	movf	gpio_pin_output_low_init@pin^0,w,c
  4642   003176  B4D8               	btfsc	status,2,c
  4643   003178  EFC0  F018         	goto	u5271
  4644   00317C  EFC2  F018         	goto	u5270
  4645   003180                     u5271:
  4646   003180  EFD2  F018         	goto	l8028
  4647   003184                     u5270:
  4648   003184                     
  4649                           ; BSR set to: 0
  4650   003184  502C               	movf	gpio_pin_output_low_init@pin^0,w,c
  4651   003186  6ED9               	movwf	fsr2l,c
  4652   003188  6ADA               	clrf	fsr2h,c
  4653   00318A  30DF               	rrcf	223,w,c
  4654   00318C  32E8               	rrcf	wreg,f,c
  4655   00318E  32E8               	rrcf	wreg,f,c
  4656   003190  0B07               	andlw	7
  4657   003192  6E2D               	movwf	??_gpio_pin_output_low_init^0,c
  4658   003194  0E07               	movlw	7
  4659   003196  642D               	cpfsgt	??_gpio_pin_output_low_init^0,c
  4660   003198  EFD0  F018         	goto	u5281
  4661   00319C  EFD2  F018         	goto	u5280
  4662   0031A0                     u5281:
  4663   0031A0  EFD6  F018         	goto	l8030
  4664   0031A4                     u5280:
  4665   0031A4                     l8028:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;MCAL/GPIO/gpio.c: 166:         ret=(Std_ReturnType)0x00;
  4669   0031A4  0E00               	movlw	0
  4670   0031A6  6FE1               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  4671                           
  4672                           ;MCAL/GPIO/gpio.c: 167:     }
  4673   0031A8  EFE8  F018         	goto	l8034
  4674   0031AC                     l8030:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;MCAL/GPIO/gpio.c: 169:         gpio_ret=gpio_pin_direction_init(pin,OUTPUT);
  4678   0031AC  C02C  F029         	movff	gpio_pin_output_low_init@pin,gpio_pin_direction_init@pin
  4679   0031B0  0E00               	movlw	0
  4680   0031B2  6E2A               	movwf	gpio_pin_direction_init@pin_direction^0,c
  4681   0031B4  ECC9  F00D         	call	_gpio_pin_direction_init	;wreg free
  4682   0031B8  0100               	movlb	0	; () banked
  4683   0031BA  6FE0               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  4684                           
  4685                           ;MCAL/GPIO/gpio.c: 170:         gpio_ret=gpio_pin_logic_write(pin,LOW);
  4686   0031BC  C02C  F029         	movff	gpio_pin_output_low_init@pin,gpio_pin_logic_write@pin
  4687   0031C0  0E00               	movlw	0
  4688   0031C2  6E2A               	movwf	gpio_pin_logic_write@pin_logic^0,c
  4689   0031C4  EC2C  F00D         	call	_gpio_pin_logic_write	;wreg free
  4690   0031C8  0100               	movlb	0	; () banked
  4691   0031CA  6FE0               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  4692   0031CC                     
  4693                           ; BSR set to: 0
  4694                           ;MCAL/GPIO/gpio.c: 171:         ret=(Std_ReturnType)0x01;
  4695   0031CC  0E01               	movlw	1
  4696   0031CE  6FE1               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  4697   0031D0                     l8034:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;MCAL/GPIO/gpio.c: 174:     return ret;
  4701   0031D0  51E1               	movf	gpio_pin_output_low_init@ret& (0+255),w,b
  4702   0031D2                     
  4703                           ; BSR set to: 0
  4704   0031D2  0012               	return		;funcret
  4705   0031D4                     __end_of_gpio_pin_output_low_init:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _gpio_pin_logic_write *****************
  4709 ;; Defined at:
  4710 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  pin             1   40[COMRAM] PTR struct .
  4713 ;;		 -> lcd$lcd_pins(4), lcd(6), 
  4714 ;;  pin_logic       1   41[COMRAM] enum E2978
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  ret             1   42[COMRAM] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      unsigned char 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;Total ram usage:        8 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 13
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_lcd_send_command
  4737 ;;		_lcd_send_char_data
  4738 ;;		_lcd_send_nbits
  4739 ;;		_lcd_send_enable
  4740 ;;		_gpio_pin_output_low_init
  4741 ;;		_gpio_pin_output_high_init
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text24
  4746   001A58                     __ptext24:
  4747                           	callstack 0
  4748   001A58                     _gpio_pin_logic_write:
  4749                           	callstack 13
  4750   001A58                     
  4751                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  4752   001A58  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4753   001A5A  B4D8               	btfsc	status,2,c
  4754   001A5C  EF32  F00D         	goto	u4651
  4755   001A60  EF34  F00D         	goto	u4650
  4756   001A64                     u4651:
  4757   001A64  EF4D  F00D         	goto	l7488
  4758   001A68                     u4650:
  4759   001A68  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4760   001A6A  6ED9               	movwf	fsr2l,c
  4761   001A6C  6ADA               	clrf	fsr2h,c
  4762   001A6E  30DF               	rrcf	223,w,c
  4763   001A70  32E8               	rrcf	wreg,f,c
  4764   001A72  32E8               	rrcf	wreg,f,c
  4765   001A74  0B07               	andlw	7
  4766   001A76  0100               	movlb	0	; () banked
  4767   001A78  6FDB               	movwf	??_gpio_pin_logic_write& (0+255),b
  4768   001A7A  0E08               	movlw	8
  4769   001A7C  61DB               	cpfslt	??_gpio_pin_logic_write& (0+255),b
  4770   001A7E  EF43  F00D         	goto	u4661
  4771   001A82  EF45  F00D         	goto	u4660
  4772   001A86                     u4661:
  4773   001A86  EF4D  F00D         	goto	l7488
  4774   001A8A                     u4660:
  4775   001A8A                     
  4776                           ; BSR set to: 0
  4777   001A8A  0E01               	movlw	1
  4778   001A8C  642A               	cpfsgt	gpio_pin_logic_write@pin_logic^0,c
  4779   001A8E  EF4B  F00D         	goto	u4671
  4780   001A92  EF4D  F00D         	goto	u4670
  4781   001A96                     u4671:
  4782   001A96  EFA8  F00D         	goto	l7496
  4783   001A9A                     u4670:
  4784   001A9A                     l7488:
  4785                           
  4786                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  4787   001A9A  0E00               	movlw	0
  4788   001A9C  6E2B               	movwf	gpio_pin_logic_write@ret^0,c
  4789                           
  4790                           ;MCAL/GPIO/gpio.c: 86:     }
  4791   001A9E  EFC7  F00D         	goto	l7502
  4792   001AA2                     l7490:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  4796   001AA2  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4797   001AA4  6ED9               	movwf	fsr2l,c
  4798   001AA6  6ADA               	clrf	fsr2h,c
  4799   001AA8  30DF               	rrcf	223,w,c
  4800   001AAA  32E8               	rrcf	wreg,f,c
  4801   001AAC  32E8               	rrcf	wreg,f,c
  4802   001AAE  0B07               	andlw	7
  4803   001AB0  6FDB               	movwf	??_gpio_pin_logic_write& (0+255),b
  4804   001AB2  0E01               	movlw	1
  4805   001AB4  6FDC               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  4806   001AB6  2BDB               	incf	??_gpio_pin_logic_write& (0+255),f,b
  4807   001AB8  EF60  F00D         	goto	u4684
  4808   001ABC                     u4685:
  4809   001ABC  90D8               	bcf	status,0,c
  4810   001ABE  37DC               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  4811   001AC0                     u4684:
  4812   001AC0  2FDB               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  4813   001AC2  EF5E  F00D         	goto	u4685
  4814   001AC6  0100               	movlb	0	; () banked
  4815   001AC8  51DC               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  4816   001ACA  0AFF               	xorlw	255
  4817   001ACC  6FDD               	movwf	(??_gpio_pin_logic_write+2)& (0+255),b
  4818   001ACE  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4819   001AD0  6ED9               	movwf	fsr2l,c
  4820   001AD2  6ADA               	clrf	fsr2h,c
  4821   001AD4  50DF               	movf	223,w,c
  4822   001AD6  0B07               	andlw	7
  4823   001AD8  0D02               	mullw	2
  4824   001ADA  50F3               	movf	243,w,c
  4825   001ADC  0F8A               	addlw	low _latx
  4826   001ADE  6ED9               	movwf	fsr2l,c
  4827   001AE0  6ADA               	clrf	fsr2h,c
  4828   001AE2  CFDE F0DE          	movff	postinc2,??_gpio_pin_logic_write+3
  4829   001AE6  CFDD F0DF          	movff	postdec2,??_gpio_pin_logic_write+4
  4830   001AEA  C0DE  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  4831   001AEE  C0DF  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  4832   001AF2  51DD               	movf	(??_gpio_pin_logic_write+2)& (0+255),w,b
  4833   001AF4  16DF               	andwf	indf2,f,c
  4834                           
  4835                           ;MCAL/GPIO/gpio.c: 91:                 break;
  4836   001AF6  EFBD  F00D         	goto	l7498
  4837   001AFA                     l7492:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  4841   001AFA  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4842   001AFC  6ED9               	movwf	fsr2l,c
  4843   001AFE  6ADA               	clrf	fsr2h,c
  4844   001B00  30DF               	rrcf	223,w,c
  4845   001B02  32E8               	rrcf	wreg,f,c
  4846   001B04  32E8               	rrcf	wreg,f,c
  4847   001B06  0B07               	andlw	7
  4848   001B08  6FDB               	movwf	??_gpio_pin_logic_write& (0+255),b
  4849   001B0A  0E01               	movlw	1
  4850   001B0C  6FDC               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  4851   001B0E  2BDB               	incf	??_gpio_pin_logic_write& (0+255),f,b
  4852   001B10  EF8C  F00D         	goto	u4694
  4853   001B14                     u4695:
  4854   001B14  90D8               	bcf	status,0,c
  4855   001B16  37DC               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  4856   001B18                     u4694:
  4857   001B18  2FDB               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  4858   001B1A  EF8A  F00D         	goto	u4695
  4859   001B1E  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4860   001B20  6ED9               	movwf	fsr2l,c
  4861   001B22  6ADA               	clrf	fsr2h,c
  4862   001B24  50DF               	movf	223,w,c
  4863   001B26  0B07               	andlw	7
  4864   001B28  0D02               	mullw	2
  4865   001B2A  50F3               	movf	243,w,c
  4866   001B2C  0F8A               	addlw	low _latx
  4867   001B2E  6ED9               	movwf	fsr2l,c
  4868   001B30  6ADA               	clrf	fsr2h,c
  4869   001B32  CFDE F0DD          	movff	postinc2,??_gpio_pin_logic_write+2
  4870   001B36  CFDD F0DE          	movff	postdec2,??_gpio_pin_logic_write+3
  4871   001B3A  C0DD  FFD9         	movff	??_gpio_pin_logic_write+2,fsr2l
  4872   001B3E  C0DE  FFDA         	movff	??_gpio_pin_logic_write+3,fsr2h
  4873   001B42  0100               	movlb	0	; () banked
  4874   001B44  51DC               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  4875   001B46  12DF               	iorwf	indf2,f,c
  4876                           
  4877                           ;MCAL/GPIO/gpio.c: 95:                 break;
  4878   001B48  EFBD  F00D         	goto	l7498
  4879   001B4C                     l7494:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;MCAL/GPIO/gpio.c: 99:         }
  4883   001B4C  EFBD  F00D         	goto	l7498
  4884   001B50                     l7496:
  4885                           
  4886                           ; BSR set to: 0
  4887   001B50  502A               	movf	gpio_pin_logic_write@pin_logic^0,w,c
  4888   001B52  6FDB               	movwf	??_gpio_pin_logic_write& (0+255),b
  4889   001B54  6BDC               	clrf	(??_gpio_pin_logic_write+1)& (0+255),b
  4890                           
  4891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4892                           ; Switch size 1, requested type "simple"
  4893                           ; Number of cases is 1, Range of values is 0 to 0
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; simple_byte            4     3 (average)
  4897                           ;	Chosen strategy is simple_byte
  4898   001B56  51DC               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  4899   001B58  0A00               	xorlw	0	; case 0
  4900   001B5A  B4D8               	btfsc	status,2,c
  4901   001B5C  EFB2  F00D         	goto	l9254
  4902   001B60  EFA6  F00D         	goto	l7494
  4903   001B64                     l9254:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ; Switch size 1, requested type "simple"
  4907                           ; Number of cases is 2, Range of values is 0 to 1
  4908                           ; switch strategies available:
  4909                           ; Name         Instructions Cycles
  4910                           ; simple_byte            7     4 (average)
  4911                           ;	Chosen strategy is simple_byte
  4912   001B64  51DB               	movf	??_gpio_pin_logic_write& (0+255),w,b
  4913   001B66  0A00               	xorlw	0	; case 0
  4914   001B68  B4D8               	btfsc	status,2,c
  4915   001B6A  EF51  F00D         	goto	l7490
  4916   001B6E  0A01               	xorlw	1	; case 1
  4917   001B70  B4D8               	btfsc	status,2,c
  4918   001B72  EF7D  F00D         	goto	l7492
  4919   001B76  EFA6  F00D         	goto	l7494
  4920   001B7A                     l7498:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  4924   001B7A  5029               	movf	gpio_pin_logic_write@pin^0,w,c
  4925   001B7C  6ED9               	movwf	fsr2l,c
  4926   001B7E  6ADA               	clrf	fsr2h,c
  4927   001B80  B02A               	btfsc	gpio_pin_logic_write@pin_logic^0,0,c
  4928   001B82  D002               	bra	u4705
  4929   001B84  9EDF               	bcf	indf2,7,c
  4930   001B86  D001               	bra	u4706
  4931   001B88                     u4705:
  4932   001B88  8EDF               	bsf	indf2,7,c
  4933   001B8A                     u4706:
  4934   001B8A                     
  4935                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  4936   001B8A  0E01               	movlw	1
  4937   001B8C  6E2B               	movwf	gpio_pin_logic_write@ret^0,c
  4938   001B8E                     l7502:
  4939                           
  4940                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  4941   001B8E  502B               	movf	gpio_pin_logic_write@ret^0,w,c
  4942   001B90  0012               	return		;funcret
  4943   001B92                     __end_of_gpio_pin_logic_write:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _interrupt_INTx_init *****************
  4947 ;; Defined at:
  4948 ;;		line 56 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  _interrupt      1    9[BANK0 ] PTR struct .
  4951 ;;		 -> MY_INT1(6), MY_INT0(6), 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  ret             1   10[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 16
  4970 ;; This function calls:
  4971 ;;		_INTx_select_InterruptHandler
  4972 ;;		_interrupt_INTx_clear_flag
  4973 ;;		_interrupt_INTx_disable
  4974 ;;		_interrupt_INTx_edge_init
  4975 ;;		_interrupt_INTx_enable
  4976 ;;		_interrupt_INTx_pin_init
  4977 ;; This function is called by:
  4978 ;;		__Initialize
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text25
  4983   003306                     __ptext25:
  4984                           	callstack 0
  4985   003306                     _interrupt_INTx_init:
  4986                           	callstack 13
  4987   003306                     
  4988                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 59:     if(((void*)0)==_interrupt){
  4989   003306  0100               	movlb	0	; () banked
  4990   003308  51E4               	movf	interrupt_INTx_init@_interrupt& (0+255),w,b
  4991   00330A  A4D8               	btfss	status,2,c
  4992   00330C  EF8A  F019         	goto	u5591
  4993   003310  EF8C  F019         	goto	u5590
  4994   003314                     u5591:
  4995   003314  EF8E  F019         	goto	l8360
  4996   003318                     u5590:
  4997   003318                     
  4998                           ; BSR set to: 0
  4999                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 61:     }
  5000   003318  EFB2  F019         	goto	l966
  5001   00331C                     l8360:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 65:         ret=interrupt_INTx_disable(_inter
      +                          rupt);
  5005   00331C  C0E4  F029         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_disable@_interrupt
  5006   003320  EC72  F017         	call	_interrupt_INTx_disable	;wreg free
  5007   003324  0100               	movlb	0	; () banked
  5008   003326  6FE5               	movwf	interrupt_INTx_init@ret& (0+255),b
  5009                           
  5010                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 67:         ret|=interrupt_INTx_clear_flag(_i
      +                          nterrupt);
  5011   003328  C0E4  F029         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_clear_flag@_interrupt
  5012   00332C  ECA9  F017         	call	_interrupt_INTx_clear_flag	;wreg free
  5013   003330  0100               	movlb	0	; () banked
  5014   003332  13E5               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  5015                           
  5016                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 73:         ret|=interrupt_INTx_edge_init(_in
      +                          terrupt);
  5017   003334  C0E4  F029         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_edge_init@_interrupt
  5018   003338  EC66  F00E         	call	_interrupt_INTx_edge_init	;wreg free
  5019   00333C  0100               	movlb	0	; () banked
  5020   00333E  13E5               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  5021   003340                     
  5022                           ; BSR set to: 0
  5023                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 75:         ret|=interrupt_INTx_pin_init(_int
      +                          errupt);
  5024   003340  C0E4  F0E2         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_pin_init@_interrupt
  5025   003344  EC47  F01C         	call	_interrupt_INTx_pin_init	;wreg free
  5026   003348  0100               	movlb	0	; () banked
  5027   00334A  13E5               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  5028   00334C                     
  5029                           ; BSR set to: 0
  5030                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 77:         ret|=INTx_select_InterruptHandler
      +                          (_interrupt);
  5031   00334C  C0E4  F02C         	movff	interrupt_INTx_init@_interrupt,INTx_select_InterruptHandler@_interrupt
  5032   003350  EC79  F013         	call	_INTx_select_InterruptHandler	;wreg free
  5033   003354  0100               	movlb	0	; () banked
  5034   003356  13E5               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  5035   003358                     
  5036                           ; BSR set to: 0
  5037                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 79:         ret|=interrupt_INTx_enable(_inter
      +                          rupt);
  5038   003358  C0E4  F029         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_enable@_interrupt
  5039   00335C  ECAB  F015         	call	_interrupt_INTx_enable	;wreg free
  5040   003360  0100               	movlb	0	; () banked
  5041   003362  13E5               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  5042   003364                     l966:
  5043                           
  5044                           ; BSR set to: 0
  5045   003364  0012               	return		;funcret
  5046   003366                     __end_of_interrupt_INTx_init:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function _interrupt_INTx_pin_init *****************
  5050 ;; Defined at:
  5051 ;;		line 341 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  _interrupt      1    7[BANK0 ] PTR struct .
  5054 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  ret             1    8[BANK0 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        2 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 15
  5073 ;; This function calls:
  5074 ;;		_gpio_pin_input_init
  5075 ;; This function is called by:
  5076 ;;		_interrupt_INTx_init
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text26
  5081   00388E                     __ptext26:
  5082                           	callstack 0
  5083   00388E                     _interrupt_INTx_pin_init:
  5084                           	callstack 13
  5085   00388E                     
  5086                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 344:     if(((void*)0)==_interrupt){
  5087   00388E  0100               	movlb	0	; () banked
  5088   003890  51E2               	movf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  5089   003892  A4D8               	btfss	status,2,c
  5090   003894  EF4E  F01C         	goto	u5441
  5091   003898  EF50  F01C         	goto	u5440
  5092   00389C                     u5441:
  5093   00389C  EF54  F01C         	goto	l8198
  5094   0038A0                     u5440:
  5095   0038A0                     
  5096                           ; BSR set to: 0
  5097                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 345:         ret=(Std_ReturnType)0x00;
  5098   0038A0  0E00               	movlw	0
  5099   0038A2  6FE3               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  5100                           
  5101                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 346:     }
  5102   0038A4  EF5B  F01C         	goto	l8200
  5103   0038A8                     l8198:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 348:         ret=gpio_pin_input_init(&(_inter
      +                          rupt->INTx_pin));
  5107   0038A8  51E2               	movf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  5108   0038AA  0F02               	addlw	2
  5109   0038AC  6E2C               	movwf	gpio_pin_input_init@pin^0,c
  5110   0038AE  ECE1  F019         	call	_gpio_pin_input_init	;wreg free
  5111   0038B2  0100               	movlb	0	; () banked
  5112   0038B4  6FE3               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  5113   0038B6                     l8200:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 351:     return ret;
  5117   0038B6  51E3               	movf	interrupt_INTx_pin_init@ret& (0+255),w,b
  5118   0038B8                     
  5119                           ; BSR set to: 0
  5120   0038B8  0012               	return		;funcret
  5121   0038BA                     __end_of_interrupt_INTx_pin_init:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _gpio_pin_input_init *****************
  5125 ;; Defined at:
  5126 ;;		line 211 in file "MCAL/GPIO/gpio.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  pin             1   43[COMRAM] PTR struct .
  5129 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  ret             1    6[BANK0 ] unsigned char 
  5132 ;;  gpio_ret        1    5[BANK0 ] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      unsigned char 
  5135 ;; Registers used:
  5136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5142 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;Total ram usage:        4 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; Hardware stack levels required when called: 14
  5149 ;; This function calls:
  5150 ;;		_gpio_pin_direction_init
  5151 ;; This function is called by:
  5152 ;;		_interrupt_INTx_pin_init
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text27
  5157   0033C2                     __ptext27:
  5158                           	callstack 0
  5159   0033C2                     _gpio_pin_input_init:
  5160                           	callstack 13
  5161   0033C2                     
  5162                           ;MCAL/GPIO/gpio.c: 214:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5163   0033C2  0E00               	movlw	0
  5164   0033C4  0100               	movlb	0	; () banked
  5165   0033C6  6FE0               	movwf	gpio_pin_input_init@gpio_ret& (0+255),b
  5166                           
  5167                           ;MCAL/GPIO/gpio.c: 215:     if(((void*)0)==pin || (pin->pin)>7){
  5168   0033C8  502C               	movf	gpio_pin_input_init@pin^0,w,c
  5169   0033CA  B4D8               	btfsc	status,2,c
  5170   0033CC  EFEA  F019         	goto	u5151
  5171   0033D0  EFEC  F019         	goto	u5150
  5172   0033D4                     u5151:
  5173   0033D4  EFFC  F019         	goto	l7862
  5174   0033D8                     u5150:
  5175   0033D8                     
  5176                           ; BSR set to: 0
  5177   0033D8  502C               	movf	gpio_pin_input_init@pin^0,w,c
  5178   0033DA  6ED9               	movwf	fsr2l,c
  5179   0033DC  6ADA               	clrf	fsr2h,c
  5180   0033DE  30DF               	rrcf	223,w,c
  5181   0033E0  32E8               	rrcf	wreg,f,c
  5182   0033E2  32E8               	rrcf	wreg,f,c
  5183   0033E4  0B07               	andlw	7
  5184   0033E6  6E2D               	movwf	??_gpio_pin_input_init^0,c
  5185   0033E8  0E07               	movlw	7
  5186   0033EA  642D               	cpfsgt	??_gpio_pin_input_init^0,c
  5187   0033EC  EFFA  F019         	goto	u5161
  5188   0033F0  EFFC  F019         	goto	u5160
  5189   0033F4                     u5161:
  5190   0033F4  EF00  F01A         	goto	l7864
  5191   0033F8                     u5160:
  5192   0033F8                     l7862:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;MCAL/GPIO/gpio.c: 216:         ret=(Std_ReturnType)0x00;
  5196   0033F8  0E00               	movlw	0
  5197   0033FA  6FE1               	movwf	gpio_pin_input_init@ret& (0+255),b
  5198                           
  5199                           ;MCAL/GPIO/gpio.c: 217:     }
  5200   0033FC  EF09  F01A         	goto	l7868
  5201   003400                     l7864:
  5202                           
  5203                           ; BSR set to: 0
  5204   003400  C02C  F029         	movff	gpio_pin_input_init@pin,gpio_pin_direction_init@pin
  5205   003404  0E01               	movlw	1
  5206   003406  6E2A               	movwf	gpio_pin_direction_init@pin_direction^0,c
  5207   003408  ECC9  F00D         	call	_gpio_pin_direction_init	;wreg free
  5208   00340C                     
  5209                           ;MCAL/GPIO/gpio.c: 220:         ret=(Std_ReturnType)0x01;
  5210   00340C  0E01               	movlw	1
  5211   00340E  0100               	movlb	0	; () banked
  5212   003410  6FE1               	movwf	gpio_pin_input_init@ret& (0+255),b
  5213   003412                     l7868:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;MCAL/GPIO/gpio.c: 223:     return ret;
  5217   003412  51E1               	movf	gpio_pin_input_init@ret& (0+255),w,b
  5218   003414                     
  5219                           ; BSR set to: 0
  5220   003414  0012               	return		;funcret
  5221   003416                     __end_of_gpio_pin_input_init:
  5222                           	callstack 0
  5223                           
  5224 ;; *************** function _gpio_pin_direction_init *****************
  5225 ;; Defined at:
  5226 ;;		line 23 in file "MCAL/GPIO/gpio.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  pin             1   40[COMRAM] PTR struct .
  5229 ;;		 -> MY_INT1(6), MY_INT0(6), lcd$lcd_pins(4), lcd(6), 
  5230 ;;  pin_directio    1   41[COMRAM] enum E2982
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  ret             1   42[COMRAM] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      unsigned char 
  5235 ;; Registers used:
  5236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;Total ram usage:        8 bytes
  5247 ;; Hardware stack levels used: 1
  5248 ;; Hardware stack levels required when called: 13
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_gpio_pin_output_low_init
  5253 ;;		_gpio_pin_input_init
  5254 ;;		_gpio_pin_output_high_init
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text28
  5259   001B92                     __ptext28:
  5260                           	callstack 0
  5261   001B92                     _gpio_pin_direction_init:
  5262                           	callstack 14
  5263   001B92                     
  5264                           ;MCAL/GPIO/gpio.c: 26:     if(((void*)0)==pin || (pin->pin)>7 || pin_direction>1){
  5265   001B92  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5266   001B94  B4D8               	btfsc	status,2,c
  5267   001B96  EFCF  F00D         	goto	u4931
  5268   001B9A  EFD1  F00D         	goto	u4930
  5269   001B9E                     u4931:
  5270   001B9E  EFEA  F00D         	goto	l7672
  5271   001BA2                     u4930:
  5272   001BA2  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5273   001BA4  6ED9               	movwf	fsr2l,c
  5274   001BA6  6ADA               	clrf	fsr2h,c
  5275   001BA8  30DF               	rrcf	223,w,c
  5276   001BAA  32E8               	rrcf	wreg,f,c
  5277   001BAC  32E8               	rrcf	wreg,f,c
  5278   001BAE  0B07               	andlw	7
  5279   001BB0  0100               	movlb	0	; () banked
  5280   001BB2  6FDB               	movwf	??_gpio_pin_direction_init& (0+255),b
  5281   001BB4  0E08               	movlw	8
  5282   001BB6  61DB               	cpfslt	??_gpio_pin_direction_init& (0+255),b
  5283   001BB8  EFE0  F00D         	goto	u4941
  5284   001BBC  EFE2  F00D         	goto	u4940
  5285   001BC0                     u4941:
  5286   001BC0  EFEA  F00D         	goto	l7672
  5287   001BC4                     u4940:
  5288   001BC4                     
  5289                           ; BSR set to: 0
  5290   001BC4  0E01               	movlw	1
  5291   001BC6  642A               	cpfsgt	gpio_pin_direction_init@pin_direction^0,c
  5292   001BC8  EFE8  F00D         	goto	u4951
  5293   001BCC  EFEA  F00D         	goto	u4950
  5294   001BD0                     u4951:
  5295   001BD0  EF45  F00E         	goto	l7680
  5296   001BD4                     u4950:
  5297   001BD4                     l7672:
  5298                           
  5299                           ;MCAL/GPIO/gpio.c: 27:         ret=(Std_ReturnType)0x00;
  5300   001BD4  0E00               	movlw	0
  5301   001BD6  6E2B               	movwf	gpio_pin_direction_init@ret^0,c
  5302                           
  5303                           ;MCAL/GPIO/gpio.c: 28:     }
  5304   001BD8  EF64  F00E         	goto	l7686
  5305   001BDC                     l7674:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;MCAL/GPIO/gpio.c: 32:                 (*trisx[pin->port] &= ~((uint8)1<<pin->pin));
  5309   001BDC  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5310   001BDE  6ED9               	movwf	fsr2l,c
  5311   001BE0  6ADA               	clrf	fsr2h,c
  5312   001BE2  30DF               	rrcf	223,w,c
  5313   001BE4  32E8               	rrcf	wreg,f,c
  5314   001BE6  32E8               	rrcf	wreg,f,c
  5315   001BE8  0B07               	andlw	7
  5316   001BEA  6FDB               	movwf	??_gpio_pin_direction_init& (0+255),b
  5317   001BEC  0E01               	movlw	1
  5318   001BEE  6FDC               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  5319   001BF0  2BDB               	incf	??_gpio_pin_direction_init& (0+255),f,b
  5320   001BF2  EFFD  F00D         	goto	u4964
  5321   001BF6                     u4965:
  5322   001BF6  90D8               	bcf	status,0,c
  5323   001BF8  37DC               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  5324   001BFA                     u4964:
  5325   001BFA  2FDB               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  5326   001BFC  EFFB  F00D         	goto	u4965
  5327   001C00  0100               	movlb	0	; () banked
  5328   001C02  51DC               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  5329   001C04  0AFF               	xorlw	255
  5330   001C06  6FDD               	movwf	(??_gpio_pin_direction_init+2)& (0+255),b
  5331   001C08  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5332   001C0A  6ED9               	movwf	fsr2l,c
  5333   001C0C  6ADA               	clrf	fsr2h,c
  5334   001C0E  50DF               	movf	223,w,c
  5335   001C10  0B07               	andlw	7
  5336   001C12  0D02               	mullw	2
  5337   001C14  50F3               	movf	243,w,c
  5338   001C16  0F94               	addlw	low _trisx
  5339   001C18  6ED9               	movwf	fsr2l,c
  5340   001C1A  6ADA               	clrf	fsr2h,c
  5341   001C1C  CFDE F0DE          	movff	postinc2,??_gpio_pin_direction_init+3
  5342   001C20  CFDD F0DF          	movff	postdec2,??_gpio_pin_direction_init+4
  5343   001C24  C0DE  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  5344   001C28  C0DF  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  5345   001C2C  51DD               	movf	(??_gpio_pin_direction_init+2)& (0+255),w,b
  5346   001C2E  16DF               	andwf	indf2,f,c
  5347                           
  5348                           ;MCAL/GPIO/gpio.c: 33:                 break;
  5349   001C30  EF5A  F00E         	goto	l7682
  5350   001C34                     l7676:
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;MCAL/GPIO/gpio.c: 36:                 (*trisx[pin->port] |= ((uint8)1<<pin->pin));
  5354   001C34  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5355   001C36  6ED9               	movwf	fsr2l,c
  5356   001C38  6ADA               	clrf	fsr2h,c
  5357   001C3A  30DF               	rrcf	223,w,c
  5358   001C3C  32E8               	rrcf	wreg,f,c
  5359   001C3E  32E8               	rrcf	wreg,f,c
  5360   001C40  0B07               	andlw	7
  5361   001C42  6FDB               	movwf	??_gpio_pin_direction_init& (0+255),b
  5362   001C44  0E01               	movlw	1
  5363   001C46  6FDC               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  5364   001C48  2BDB               	incf	??_gpio_pin_direction_init& (0+255),f,b
  5365   001C4A  EF29  F00E         	goto	u4974
  5366   001C4E                     u4975:
  5367   001C4E  90D8               	bcf	status,0,c
  5368   001C50  37DC               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  5369   001C52                     u4974:
  5370   001C52  2FDB               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  5371   001C54  EF27  F00E         	goto	u4975
  5372   001C58  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5373   001C5A  6ED9               	movwf	fsr2l,c
  5374   001C5C  6ADA               	clrf	fsr2h,c
  5375   001C5E  50DF               	movf	223,w,c
  5376   001C60  0B07               	andlw	7
  5377   001C62  0D02               	mullw	2
  5378   001C64  50F3               	movf	243,w,c
  5379   001C66  0F94               	addlw	low _trisx
  5380   001C68  6ED9               	movwf	fsr2l,c
  5381   001C6A  6ADA               	clrf	fsr2h,c
  5382   001C6C  CFDE F0DD          	movff	postinc2,??_gpio_pin_direction_init+2
  5383   001C70  CFDD F0DE          	movff	postdec2,??_gpio_pin_direction_init+3
  5384   001C74  C0DD  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  5385   001C78  C0DE  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  5386   001C7C  0100               	movlb	0	; () banked
  5387   001C7E  51DC               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  5388   001C80  12DF               	iorwf	indf2,f,c
  5389                           
  5390                           ;MCAL/GPIO/gpio.c: 37:                 break;
  5391   001C82  EF5A  F00E         	goto	l7682
  5392   001C86                     l7678:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;MCAL/GPIO/gpio.c: 41:         }
  5396   001C86  EF5A  F00E         	goto	l7682
  5397   001C8A                     l7680:
  5398                           
  5399                           ; BSR set to: 0
  5400   001C8A  502A               	movf	gpio_pin_direction_init@pin_direction^0,w,c
  5401   001C8C  6FDB               	movwf	??_gpio_pin_direction_init& (0+255),b
  5402   001C8E  6BDC               	clrf	(??_gpio_pin_direction_init+1)& (0+255),b
  5403                           
  5404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5405                           ; Switch size 1, requested type "simple"
  5406                           ; Number of cases is 1, Range of values is 0 to 0
  5407                           ; switch strategies available:
  5408                           ; Name         Instructions Cycles
  5409                           ; simple_byte            4     3 (average)
  5410                           ;	Chosen strategy is simple_byte
  5411   001C90  51DC               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  5412   001C92  0A00               	xorlw	0	; case 0
  5413   001C94  B4D8               	btfsc	status,2,c
  5414   001C96  EF4F  F00E         	goto	l9256
  5415   001C9A  EF43  F00E         	goto	l7678
  5416   001C9E                     l9256:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ; Switch size 1, requested type "simple"
  5420                           ; Number of cases is 2, Range of values is 0 to 1
  5421                           ; switch strategies available:
  5422                           ; Name         Instructions Cycles
  5423                           ; simple_byte            7     4 (average)
  5424                           ;	Chosen strategy is simple_byte
  5425   001C9E  51DB               	movf	??_gpio_pin_direction_init& (0+255),w,b
  5426   001CA0  0A00               	xorlw	0	; case 0
  5427   001CA2  B4D8               	btfsc	status,2,c
  5428   001CA4  EFEE  F00D         	goto	l7674
  5429   001CA8  0A01               	xorlw	1	; case 1
  5430   001CAA  B4D8               	btfsc	status,2,c
  5431   001CAC  EF1A  F00E         	goto	l7676
  5432   001CB0  EF43  F00E         	goto	l7678
  5433   001CB4                     l7682:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;MCAL/GPIO/gpio.c: 42:         pin->direction=pin_direction;
  5437   001CB4  5029               	movf	gpio_pin_direction_init@pin^0,w,c
  5438   001CB6  6ED9               	movwf	fsr2l,c
  5439   001CB8  6ADA               	clrf	fsr2h,c
  5440   001CBA  B02A               	btfsc	gpio_pin_direction_init@pin_direction^0,0,c
  5441   001CBC  D002               	bra	u4985
  5442   001CBE  9CDF               	bcf	indf2,6,c
  5443   001CC0  D001               	bra	u4986
  5444   001CC2                     u4985:
  5445   001CC2  8CDF               	bsf	indf2,6,c
  5446   001CC4                     u4986:
  5447   001CC4                     
  5448                           ;MCAL/GPIO/gpio.c: 43:         ret=(Std_ReturnType)0x01;
  5449   001CC4  0E01               	movlw	1
  5450   001CC6  6E2B               	movwf	gpio_pin_direction_init@ret^0,c
  5451   001CC8                     l7686:
  5452                           
  5453                           ;MCAL/GPIO/gpio.c: 46:     return ret;
  5454   001CC8  502B               	movf	gpio_pin_direction_init@ret^0,w,c
  5455   001CCA  0012               	return		;funcret
  5456   001CCC                     __end_of_gpio_pin_direction_init:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _interrupt_INTx_enable *****************
  5460 ;; Defined at:
  5461 ;;		line 138 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  _interrupt      1   40[COMRAM] PTR struct .
  5464 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  ret             1   43[COMRAM] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      unsigned char 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;Total ram usage:        4 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 13
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_interrupt_INTx_init
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text29
  5491   002B56                     __ptext29:
  5492                           	callstack 0
  5493   002B56                     _interrupt_INTx_enable:
  5494                           	callstack 15
  5495   002B56                     
  5496                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 141:     if(((void*)0)==_interrupt){
  5497   002B56  5029               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  5498   002B58  A4D8               	btfss	status,2,c
  5499   002B5A  EFB1  F015         	goto	u5461
  5500   002B5E  EFB3  F015         	goto	u5460
  5501   002B62                     u5461:
  5502   002B62  EFC8  F015         	goto	l8242
  5503   002B66                     u5460:
  5504   002B66                     l8230:
  5505                           
  5506                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 142:         ret=(Std_ReturnType)0x00;
  5507   002B66  0E00               	movlw	0
  5508   002B68  6E2C               	movwf	interrupt_INTx_enable@ret^0,c
  5509                           
  5510                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 143:     }
  5511   002B6A  EFE6  F015         	goto	l8244
  5512   002B6E                     l989:
  5513                           
  5514                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 151:                 (INTCONbits.GIE=1);
  5515   002B6E  8EF2               	bsf	242,7,c	;volatile
  5516                           
  5517                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 152:                 (INTCONbits.PEIE=1);
  5518   002B70  8CF2               	bsf	242,6,c	;volatile
  5519                           
  5520                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 155:                 (INTCONbits.INT0E=1);
  5521   002B72  88F2               	bsf	242,4,c	;volatile
  5522   002B74                     l8232:
  5523                           
  5524                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 156:                 ret=(Std_ReturnType)0x01
      +                          ;
  5525   002B74  0E01               	movlw	1
  5526   002B76  6E2C               	movwf	interrupt_INTx_enable@ret^0,c
  5527                           
  5528                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 157:                 break;
  5529   002B78  EFE6  F015         	goto	l8244
  5530   002B7C                     l991:
  5531                           
  5532                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 164:                 (INTCONbits.GIE=1);
  5533   002B7C  8EF2               	bsf	242,7,c	;volatile
  5534                           
  5535                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 165:                 (INTCONbits.PEIE=1);
  5536   002B7E  8CF2               	bsf	242,6,c	;volatile
  5537                           
  5538                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 167:                 (INTCON3bits.INT1E=1);
  5539   002B80  86F0               	bsf	240,3,c	;volatile
  5540   002B82  EFBA  F015         	goto	l8232
  5541   002B86                     l992:
  5542                           
  5543                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 176:                 (INTCONbits.GIE=1);
  5544   002B86  8EF2               	bsf	242,7,c	;volatile
  5545                           
  5546                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 177:                 (INTCONbits.PEIE=1);
  5547   002B88  8CF2               	bsf	242,6,c	;volatile
  5548                           
  5549                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 179:                 (INTCON3bits.INT2E=1);
  5550   002B8A  88F0               	bsf	240,4,c	;volatile
  5551   002B8C  EFBA  F015         	goto	l8232
  5552   002B90                     l8242:
  5553   002B90  5029               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  5554   002B92  6ED9               	movwf	fsr2l,c
  5555   002B94  6ADA               	clrf	fsr2h,c
  5556   002B96  0E04               	movlw	4
  5557   002B98  26D9               	addwf	fsr2l,f,c
  5558   002B9A  50DF               	movf	indf2,w,c
  5559   002B9C  6E2A               	movwf	??_interrupt_INTx_enable^0,c
  5560   002B9E  6A2B               	clrf	(??_interrupt_INTx_enable+1)^0,c
  5561                           
  5562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5563                           ; Switch size 1, requested type "simple"
  5564                           ; Number of cases is 1, Range of values is 0 to 0
  5565                           ; switch strategies available:
  5566                           ; Name         Instructions Cycles
  5567                           ; simple_byte            4     3 (average)
  5568                           ;	Chosen strategy is simple_byte
  5569   002BA0  502B               	movf	(??_interrupt_INTx_enable+1)^0,w,c
  5570   002BA2  0A00               	xorlw	0	; case 0
  5571   002BA4  B4D8               	btfsc	status,2,c
  5572   002BA6  EFD7  F015         	goto	l9258
  5573   002BAA  EFB3  F015         	goto	l8230
  5574   002BAE                     l9258:
  5575                           
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 3, Range of values is 0 to 2
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte           10     6 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582   002BAE  502A               	movf	??_interrupt_INTx_enable^0,w,c
  5583   002BB0  0A00               	xorlw	0	; case 0
  5584   002BB2  B4D8               	btfsc	status,2,c
  5585   002BB4  EFB7  F015         	goto	l989
  5586   002BB8  0A01               	xorlw	1	; case 1
  5587   002BBA  B4D8               	btfsc	status,2,c
  5588   002BBC  EFBE  F015         	goto	l991
  5589   002BC0  0A03               	xorlw	3	; case 2
  5590   002BC2  B4D8               	btfsc	status,2,c
  5591   002BC4  EFC3  F015         	goto	l992
  5592   002BC8  EFB3  F015         	goto	l8230
  5593   002BCC                     l8244:
  5594                           
  5595                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 188:     return ret;
  5596   002BCC  502C               	movf	interrupt_INTx_enable@ret^0,w,c
  5597   002BCE  0012               	return		;funcret
  5598   002BD0                     __end_of_interrupt_INTx_enable:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function _interrupt_INTx_edge_init *****************
  5602 ;; Defined at:
  5603 ;;		line 303 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  _interrupt      1   40[COMRAM] PTR struct .
  5606 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  ret             1   43[COMRAM] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      unsigned char 
  5611 ;; Registers used:
  5612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;Total ram usage:        4 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; Hardware stack levels required when called: 13
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_interrupt_INTx_init
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text30
  5633   001CCC                     __ptext30:
  5634                           	callstack 0
  5635   001CCC                     _interrupt_INTx_edge_init:
  5636                           	callstack 15
  5637   001CCC                     
  5638                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 306:     if(((void*)0)==_interrupt){
  5639   001CCC  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5640   001CCE  A4D8               	btfss	status,2,c
  5641   001CD0  EF6C  F00E         	goto	u5371
  5642   001CD4  EF6E  F00E         	goto	u5370
  5643   001CD8                     u5371:
  5644   001CD8  EFD4  F00E         	goto	l8184
  5645   001CDC                     u5370:
  5646   001CDC                     l8148:
  5647                           
  5648                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 307:         ret=(Std_ReturnType)0x00;
  5649   001CDC  0E00               	movlw	0
  5650   001CDE  6E2C               	movwf	interrupt_INTx_edge_init@ret^0,c
  5651                           
  5652                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 308:     }
  5653   001CE0  EFF2  F00E         	goto	l8186
  5654   001CE4                     l8150:
  5655                           
  5656                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 312:                 if(RISING_EDGE==_interru
      +                          pt->edge){ (INTCON2bits.INTEDG0=1);}
  5657   001CE4  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5658   001CE6  6ED9               	movwf	fsr2l,c
  5659   001CE8  6ADA               	clrf	fsr2h,c
  5660   001CEA  0E03               	movlw	3
  5661   001CEC  26D9               	addwf	fsr2l,f,c
  5662   001CEE  04DE               	decf	postinc2,w,c
  5663   001CF0  A4D8               	btfss	status,2,c
  5664   001CF2  EF7D  F00E         	goto	u5381
  5665   001CF6  EF7F  F00E         	goto	u5380
  5666   001CFA                     u5381:
  5667   001CFA  EF82  F00E         	goto	l8154
  5668   001CFE                     u5380:
  5669   001CFE  8CF1               	bsf	241,6,c	;volatile
  5670   001D00  EF90  F00E         	goto	l8158
  5671   001D04                     l8154:
  5672   001D04  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5673   001D06  6ED9               	movwf	fsr2l,c
  5674   001D08  6ADA               	clrf	fsr2h,c
  5675   001D0A  0E03               	movlw	3
  5676   001D0C  26D9               	addwf	fsr2l,f,c
  5677   001D0E  50DF               	movf	indf2,w,c
  5678   001D10  A4D8               	btfss	status,2,c
  5679   001D12  EF8D  F00E         	goto	u5391
  5680   001D16  EF8F  F00E         	goto	u5390
  5681   001D1A                     u5391:
  5682   001D1A  EF90  F00E         	goto	l8158
  5683   001D1E                     u5390:
  5684   001D1E  9CF1               	bcf	241,6,c	;volatile
  5685   001D20                     l8158:
  5686                           
  5687                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 314:                 ret=(Std_ReturnType)0x01
      +                          ;
  5688   001D20  0E01               	movlw	1
  5689   001D22  6E2C               	movwf	interrupt_INTx_edge_init@ret^0,c
  5690                           
  5691                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 315:                 break;
  5692   001D24  EFF2  F00E         	goto	l8186
  5693   001D28                     l8160:
  5694                           
  5695                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 317:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG1=1);}
  5696   001D28  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5697   001D2A  6ED9               	movwf	fsr2l,c
  5698   001D2C  6ADA               	clrf	fsr2h,c
  5699   001D2E  0E03               	movlw	3
  5700   001D30  26D9               	addwf	fsr2l,f,c
  5701   001D32  04DE               	decf	postinc2,w,c
  5702   001D34  A4D8               	btfss	status,2,c
  5703   001D36  EF9F  F00E         	goto	u5401
  5704   001D3A  EFA1  F00E         	goto	u5400
  5705   001D3E                     u5401:
  5706   001D3E  EFA4  F00E         	goto	l8164
  5707   001D42                     u5400:
  5708   001D42  8AF1               	bsf	241,5,c	;volatile
  5709   001D44  EF90  F00E         	goto	l8158
  5710   001D48                     l8164:
  5711   001D48  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5712   001D4A  6ED9               	movwf	fsr2l,c
  5713   001D4C  6ADA               	clrf	fsr2h,c
  5714   001D4E  0E03               	movlw	3
  5715   001D50  26D9               	addwf	fsr2l,f,c
  5716   001D52  50DF               	movf	indf2,w,c
  5717   001D54  A4D8               	btfss	status,2,c
  5718   001D56  EFAF  F00E         	goto	u5411
  5719   001D5A  EFB1  F00E         	goto	u5410
  5720   001D5E                     u5411:
  5721   001D5E  EF90  F00E         	goto	l8158
  5722   001D62                     u5410:
  5723   001D62  9AF1               	bcf	241,5,c	;volatile
  5724   001D64  EF90  F00E         	goto	l8158
  5725   001D68                     l8170:
  5726                           
  5727                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 322:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG2=1);}
  5728   001D68  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5729   001D6A  6ED9               	movwf	fsr2l,c
  5730   001D6C  6ADA               	clrf	fsr2h,c
  5731   001D6E  0E03               	movlw	3
  5732   001D70  26D9               	addwf	fsr2l,f,c
  5733   001D72  04DE               	decf	postinc2,w,c
  5734   001D74  A4D8               	btfss	status,2,c
  5735   001D76  EFBF  F00E         	goto	u5421
  5736   001D7A  EFC1  F00E         	goto	u5420
  5737   001D7E                     u5421:
  5738   001D7E  EFC4  F00E         	goto	l8174
  5739   001D82                     u5420:
  5740   001D82  88F1               	bsf	241,4,c	;volatile
  5741   001D84  EF90  F00E         	goto	l8158
  5742   001D88                     l8174:
  5743   001D88  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5744   001D8A  6ED9               	movwf	fsr2l,c
  5745   001D8C  6ADA               	clrf	fsr2h,c
  5746   001D8E  0E03               	movlw	3
  5747   001D90  26D9               	addwf	fsr2l,f,c
  5748   001D92  50DF               	movf	indf2,w,c
  5749   001D94  A4D8               	btfss	status,2,c
  5750   001D96  EFCF  F00E         	goto	u5431
  5751   001D9A  EFD1  F00E         	goto	u5430
  5752   001D9E                     u5431:
  5753   001D9E  EF90  F00E         	goto	l8158
  5754   001DA2                     u5430:
  5755   001DA2  98F1               	bcf	241,4,c	;volatile
  5756   001DA4  EF90  F00E         	goto	l8158
  5757   001DA8                     l8184:
  5758   001DA8  5029               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  5759   001DAA  6ED9               	movwf	fsr2l,c
  5760   001DAC  6ADA               	clrf	fsr2h,c
  5761   001DAE  0E04               	movlw	4
  5762   001DB0  26D9               	addwf	fsr2l,f,c
  5763   001DB2  50DF               	movf	indf2,w,c
  5764   001DB4  6E2A               	movwf	??_interrupt_INTx_edge_init^0,c
  5765   001DB6  6A2B               	clrf	(??_interrupt_INTx_edge_init+1)^0,c
  5766                           
  5767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5768                           ; Switch size 1, requested type "simple"
  5769                           ; Number of cases is 1, Range of values is 0 to 0
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ;	Chosen strategy is simple_byte
  5774   001DB8  502B               	movf	(??_interrupt_INTx_edge_init+1)^0,w,c
  5775   001DBA  0A00               	xorlw	0	; case 0
  5776   001DBC  B4D8               	btfsc	status,2,c
  5777   001DBE  EFE3  F00E         	goto	l9260
  5778   001DC2  EF6E  F00E         	goto	l8148
  5779   001DC6                     l9260:
  5780                           
  5781                           ; Switch size 1, requested type "simple"
  5782                           ; Number of cases is 3, Range of values is 0 to 2
  5783                           ; switch strategies available:
  5784                           ; Name         Instructions Cycles
  5785                           ; simple_byte           10     6 (average)
  5786                           ;	Chosen strategy is simple_byte
  5787   001DC6  502A               	movf	??_interrupt_INTx_edge_init^0,w,c
  5788   001DC8  0A00               	xorlw	0	; case 0
  5789   001DCA  B4D8               	btfsc	status,2,c
  5790   001DCC  EF72  F00E         	goto	l8150
  5791   001DD0  0A01               	xorlw	1	; case 1
  5792   001DD2  B4D8               	btfsc	status,2,c
  5793   001DD4  EF94  F00E         	goto	l8160
  5794   001DD8  0A03               	xorlw	3	; case 2
  5795   001DDA  B4D8               	btfsc	status,2,c
  5796   001DDC  EFB4  F00E         	goto	l8170
  5797   001DE0  EF6E  F00E         	goto	l8148
  5798   001DE4                     l8186:
  5799                           
  5800                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 332:     return ret;
  5801   001DE4  502C               	movf	interrupt_INTx_edge_init@ret^0,w,c
  5802   001DE6  0012               	return		;funcret
  5803   001DE8                     __end_of_interrupt_INTx_edge_init:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _interrupt_INTx_disable *****************
  5807 ;; Defined at:
  5808 ;;		line 197 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  _interrupt      1   40[COMRAM] PTR struct .
  5811 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  ret             1   43[COMRAM] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      unsigned char 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:        4 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; Hardware stack levels required when called: 13
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_interrupt_INTx_init
  5834 ;;		_interrupt_INTx_deInit
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text31
  5839   002EE4                     __ptext31:
  5840                           	callstack 0
  5841   002EE4                     _interrupt_INTx_disable:
  5842                           	callstack 15
  5843   002EE4                     
  5844                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 200:     if(((void*)0)==_interrupt){
  5845   002EE4  5029               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  5846   002EE6  A4D8               	btfss	status,2,c
  5847   002EE8  EF78  F017         	goto	u5351
  5848   002EEC  EF7A  F017         	goto	u5350
  5849   002EF0                     u5351:
  5850   002EF0  EF89  F017         	goto	l8112
  5851   002EF4                     u5350:
  5852   002EF4                     l8100:
  5853                           
  5854                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 201:         ret=(Std_ReturnType)0x00;
  5855   002EF4  0E00               	movlw	0
  5856   002EF6  6E2C               	movwf	interrupt_INTx_disable@ret^0,c
  5857                           
  5858                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 202:     }
  5859   002EF8  EFA7  F017         	goto	l8114
  5860   002EFC                     l1000:
  5861                           
  5862                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 206:                 (INTCONbits.INT0E=0);
  5863   002EFC  98F2               	bcf	242,4,c	;volatile
  5864   002EFE                     l8102:
  5865                           
  5866                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 207:                 ret=(Std_ReturnType)0x01
      +                          ;
  5867   002EFE  0E01               	movlw	1
  5868   002F00  6E2C               	movwf	interrupt_INTx_disable@ret^0,c
  5869                           
  5870                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 208:                 break;
  5871   002F02  EFA7  F017         	goto	l8114
  5872   002F06                     l1002:
  5873                           
  5874                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 210:                 (INTCON3bits.INT1E=0);
  5875   002F06  96F0               	bcf	240,3,c	;volatile
  5876   002F08  EF7F  F017         	goto	l8102
  5877   002F0C                     l1003:
  5878                           
  5879                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 214:                 (INTCON3bits.INT2E=0);
  5880   002F0C  98F0               	bcf	240,4,c	;volatile
  5881   002F0E  EF7F  F017         	goto	l8102
  5882   002F12                     l8112:
  5883   002F12  5029               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  5884   002F14  6ED9               	movwf	fsr2l,c
  5885   002F16  6ADA               	clrf	fsr2h,c
  5886   002F18  0E04               	movlw	4
  5887   002F1A  26D9               	addwf	fsr2l,f,c
  5888   002F1C  50DF               	movf	indf2,w,c
  5889   002F1E  6E2A               	movwf	??_interrupt_INTx_disable^0,c
  5890   002F20  6A2B               	clrf	(??_interrupt_INTx_disable+1)^0,c
  5891                           
  5892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5893                           ; Switch size 1, requested type "simple"
  5894                           ; Number of cases is 1, Range of values is 0 to 0
  5895                           ; switch strategies available:
  5896                           ; Name         Instructions Cycles
  5897                           ; simple_byte            4     3 (average)
  5898                           ;	Chosen strategy is simple_byte
  5899   002F22  502B               	movf	(??_interrupt_INTx_disable+1)^0,w,c
  5900   002F24  0A00               	xorlw	0	; case 0
  5901   002F26  B4D8               	btfsc	status,2,c
  5902   002F28  EF98  F017         	goto	l9262
  5903   002F2C  EF7A  F017         	goto	l8100
  5904   002F30                     l9262:
  5905                           
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 3, Range of values is 0 to 2
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte           10     6 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912   002F30  502A               	movf	??_interrupt_INTx_disable^0,w,c
  5913   002F32  0A00               	xorlw	0	; case 0
  5914   002F34  B4D8               	btfsc	status,2,c
  5915   002F36  EF7E  F017         	goto	l1000
  5916   002F3A  0A01               	xorlw	1	; case 1
  5917   002F3C  B4D8               	btfsc	status,2,c
  5918   002F3E  EF83  F017         	goto	l1002
  5919   002F42  0A03               	xorlw	3	; case 2
  5920   002F44  B4D8               	btfsc	status,2,c
  5921   002F46  EF86  F017         	goto	l1003
  5922   002F4A  EF7A  F017         	goto	l8100
  5923   002F4E                     l8114:
  5924                           
  5925                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 223:     return ret;
  5926   002F4E  502C               	movf	interrupt_INTx_disable@ret^0,w,c
  5927   002F50  0012               	return		;funcret
  5928   002F52                     __end_of_interrupt_INTx_disable:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function _interrupt_INTx_clear_flag *****************
  5932 ;; Defined at:
  5933 ;;		line 232 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  _interrupt      1   40[COMRAM] PTR struct .
  5936 ;;		 -> MY_INT1(6), MY_INT0(6), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  ret             1   43[COMRAM] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      unsigned char 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5948 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;Total ram usage:        4 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; Hardware stack levels required when called: 13
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_interrupt_INTx_init
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text32
  5963   002F52                     __ptext32:
  5964                           	callstack 0
  5965   002F52                     _interrupt_INTx_clear_flag:
  5966                           	callstack 15
  5967   002F52                     
  5968                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 235:     if(((void*)0)==_interrupt){
  5969   002F52  5029               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  5970   002F54  A4D8               	btfss	status,2,c
  5971   002F56  EFAF  F017         	goto	u5361
  5972   002F5A  EFB1  F017         	goto	u5360
  5973   002F5E                     u5361:
  5974   002F5E  EFC0  F017         	goto	l8136
  5975   002F62                     u5360:
  5976   002F62                     l8124:
  5977                           
  5978                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 236:         ret=(Std_ReturnType)0x00;
  5979   002F62  0E00               	movlw	0
  5980   002F64  6E2C               	movwf	interrupt_INTx_clear_flag@ret^0,c
  5981                           
  5982                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 237:     }
  5983   002F66  EFDE  F017         	goto	l8138
  5984   002F6A                     l1011:
  5985                           
  5986                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 241:                 (INTCONbits.INT0F=0);
  5987   002F6A  92F2               	bcf	242,1,c	;volatile
  5988   002F6C                     l8126:
  5989                           
  5990                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 242:                 ret=(Std_ReturnType)0x01
      +                          ;
  5991   002F6C  0E01               	movlw	1
  5992   002F6E  6E2C               	movwf	interrupt_INTx_clear_flag@ret^0,c
  5993                           
  5994                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 243:                 break;
  5995   002F70  EFDE  F017         	goto	l8138
  5996   002F74                     l1013:
  5997                           
  5998                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 245:                 (INTCONbits.INT0F=0);
  5999   002F74  92F2               	bcf	242,1,c	;volatile
  6000   002F76  EFB6  F017         	goto	l8126
  6001   002F7A                     l1014:
  6002                           
  6003                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 249:                 (INTCONbits.INT0F=0);
  6004   002F7A  92F2               	bcf	242,1,c	;volatile
  6005   002F7C  EFB6  F017         	goto	l8126
  6006   002F80                     l8136:
  6007   002F80  5029               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  6008   002F82  6ED9               	movwf	fsr2l,c
  6009   002F84  6ADA               	clrf	fsr2h,c
  6010   002F86  0E04               	movlw	4
  6011   002F88  26D9               	addwf	fsr2l,f,c
  6012   002F8A  50DF               	movf	indf2,w,c
  6013   002F8C  6E2A               	movwf	??_interrupt_INTx_clear_flag^0,c
  6014   002F8E  6A2B               	clrf	(??_interrupt_INTx_clear_flag+1)^0,c
  6015                           
  6016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6017                           ; Switch size 1, requested type "simple"
  6018                           ; Number of cases is 1, Range of values is 0 to 0
  6019                           ; switch strategies available:
  6020                           ; Name         Instructions Cycles
  6021                           ; simple_byte            4     3 (average)
  6022                           ;	Chosen strategy is simple_byte
  6023   002F90  502B               	movf	(??_interrupt_INTx_clear_flag+1)^0,w,c
  6024   002F92  0A00               	xorlw	0	; case 0
  6025   002F94  B4D8               	btfsc	status,2,c
  6026   002F96  EFCF  F017         	goto	l9264
  6027   002F9A  EFB1  F017         	goto	l8124
  6028   002F9E                     l9264:
  6029                           
  6030                           ; Switch size 1, requested type "simple"
  6031                           ; Number of cases is 3, Range of values is 0 to 2
  6032                           ; switch strategies available:
  6033                           ; Name         Instructions Cycles
  6034                           ; simple_byte           10     6 (average)
  6035                           ;	Chosen strategy is simple_byte
  6036   002F9E  502A               	movf	??_interrupt_INTx_clear_flag^0,w,c
  6037   002FA0  0A00               	xorlw	0	; case 0
  6038   002FA2  B4D8               	btfsc	status,2,c
  6039   002FA4  EFB5  F017         	goto	l1011
  6040   002FA8  0A01               	xorlw	1	; case 1
  6041   002FAA  B4D8               	btfsc	status,2,c
  6042   002FAC  EFBA  F017         	goto	l1013
  6043   002FB0  0A03               	xorlw	3	; case 2
  6044   002FB2  B4D8               	btfsc	status,2,c
  6045   002FB4  EFBD  F017         	goto	l1014
  6046   002FB8  EFB1  F017         	goto	l8124
  6047   002FBC                     l8138:
  6048                           
  6049                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 258:     return ret;
  6050   002FBC  502C               	movf	interrupt_INTx_clear_flag@ret^0,w,c
  6051   002FBE  0012               	return		;funcret
  6052   002FC0                     __end_of_interrupt_INTx_clear_flag:
  6053                           	callstack 0
  6054                           
  6055 ;; *************** function _INTx_select_InterruptHandler *****************
  6056 ;; Defined at:
  6057 ;;		line 360 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  _interrupt      1   43[COMRAM] PTR struct .
  6060 ;;		 -> MY_INT1(6), MY_INT0(6), 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  ret             1   44[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6072 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;Total ram usage:        4 bytes
  6077 ;; Hardware stack levels used: 1
  6078 ;; Hardware stack levels required when called: 14
  6079 ;; This function calls:
  6080 ;;		_INT0_set_InterruptHandler
  6081 ;;		_INT1_set_InterruptHandler
  6082 ;;		_INT2_set_InterruptHandler
  6083 ;; This function is called by:
  6084 ;;		_interrupt_INTx_init
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text33
  6089   0026F2                     __ptext33:
  6090                           	callstack 0
  6091   0026F2                     _INTx_select_InterruptHandler:
  6092                           	callstack 14
  6093   0026F2                     
  6094                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 363:     if(((void*)0)==_interrupt){
  6095   0026F2  502C               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  6096   0026F4  A4D8               	btfss	status,2,c
  6097   0026F6  EF7F  F013         	goto	u5451
  6098   0026FA  EF81  F013         	goto	u5450
  6099   0026FE                     u5451:
  6100   0026FE  EFA9  F013         	goto	l8218
  6101   002702                     u5450:
  6102   002702                     l8206:
  6103                           
  6104                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 364:         ret=(Std_ReturnType)0x00;
  6105   002702  0E00               	movlw	0
  6106   002704  6E2D               	movwf	INTx_select_InterruptHandler@ret^0,c
  6107                           
  6108                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 365:     }
  6109   002706  EFC8  F013         	goto	l8220
  6110   00270A                     l8208:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 369:                 ret=INT0_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  6114   00270A  502C               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  6115   00270C  6ED9               	movwf	fsr2l,c
  6116   00270E  6ADA               	clrf	fsr2h,c
  6117   002710  CFDE F029          	movff	postinc2,INT0_set_InterruptHandler@InterruptHandler
  6118   002714  CFDD F02A          	movff	postdec2,INT0_set_InterruptHandler@InterruptHandler+1
  6119   002718  EC0B  F01D         	call	_INT0_set_InterruptHandler	;wreg free
  6120   00271C  6E2D               	movwf	INTx_select_InterruptHandler@ret^0,c
  6121                           
  6122                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 370:                 break;
  6123   00271E  EFC8  F013         	goto	l8220
  6124   002722                     l8210:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 372:                 ret=INT1_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  6128   002722  502C               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  6129   002724  6ED9               	movwf	fsr2l,c
  6130   002726  6ADA               	clrf	fsr2h,c
  6131   002728  CFDE F029          	movff	postinc2,INT1_set_InterruptHandler@InterruptHandler
  6132   00272C  CFDD F02A          	movff	postdec2,INT1_set_InterruptHandler@InterruptHandler+1
  6133   002730  ECF6  F01C         	call	_INT1_set_InterruptHandler	;wreg free
  6134   002734  6E2D               	movwf	INTx_select_InterruptHandler@ret^0,c
  6135                           
  6136                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 373:                 break;
  6137   002736  EFC8  F013         	goto	l8220
  6138   00273A                     l8212:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 375:                 ret=INT2_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  6142   00273A  502C               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  6143   00273C  6ED9               	movwf	fsr2l,c
  6144   00273E  6ADA               	clrf	fsr2h,c
  6145   002740  CFDE F029          	movff	postinc2,INT2_set_InterruptHandler@InterruptHandler
  6146   002744  CFDD F02A          	movff	postdec2,INT2_set_InterruptHandler@InterruptHandler+1
  6147   002748  ECE1  F01C         	call	_INT2_set_InterruptHandler	;wreg free
  6148   00274C  6E2D               	movwf	INTx_select_InterruptHandler@ret^0,c
  6149                           
  6150                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 376:                 break;
  6151   00274E  EFC8  F013         	goto	l8220
  6152   002752                     l8218:
  6153   002752  502C               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  6154   002754  6ED9               	movwf	fsr2l,c
  6155   002756  6ADA               	clrf	fsr2h,c
  6156   002758  0E04               	movlw	4
  6157   00275A  26D9               	addwf	fsr2l,f,c
  6158   00275C  50DF               	movf	indf2,w,c
  6159   00275E  0100               	movlb	0	; () banked
  6160   002760  6FDB               	movwf	??_INTx_select_InterruptHandler& (0+255),b
  6161   002762  6BDC               	clrf	(??_INTx_select_InterruptHandler+1)& (0+255),b
  6162                           
  6163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6164                           ; Switch size 1, requested type "simple"
  6165                           ; Number of cases is 1, Range of values is 0 to 0
  6166                           ; switch strategies available:
  6167                           ; Name         Instructions Cycles
  6168                           ; simple_byte            4     3 (average)
  6169                           ;	Chosen strategy is simple_byte
  6170   002764  51DC               	movf	(??_INTx_select_InterruptHandler+1)& (0+255),w,b
  6171   002766  0A00               	xorlw	0	; case 0
  6172   002768  B4D8               	btfsc	status,2,c
  6173   00276A  EFB9  F013         	goto	l9266
  6174   00276E  EF81  F013         	goto	l8206
  6175   002772                     l9266:
  6176                           
  6177                           ; BSR set to: 0
  6178                           ; Switch size 1, requested type "simple"
  6179                           ; Number of cases is 3, Range of values is 0 to 2
  6180                           ; switch strategies available:
  6181                           ; Name         Instructions Cycles
  6182                           ; simple_byte           10     6 (average)
  6183                           ;	Chosen strategy is simple_byte
  6184   002772  51DB               	movf	??_INTx_select_InterruptHandler& (0+255),w,b
  6185   002774  0A00               	xorlw	0	; case 0
  6186   002776  B4D8               	btfsc	status,2,c
  6187   002778  EF85  F013         	goto	l8208
  6188   00277C  0A01               	xorlw	1	; case 1
  6189   00277E  B4D8               	btfsc	status,2,c
  6190   002780  EF91  F013         	goto	l8210
  6191   002784  0A03               	xorlw	3	; case 2
  6192   002786  B4D8               	btfsc	status,2,c
  6193   002788  EF9D  F013         	goto	l8212
  6194   00278C  EF81  F013         	goto	l8206
  6195   002790                     l8220:
  6196                           
  6197                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 383:     return ret;
  6198   002790  502D               	movf	INTx_select_InterruptHandler@ret^0,w,c
  6199   002792  0012               	return		;funcret
  6200   002794                     __end_of_INTx_select_InterruptHandler:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function _INT2_set_InterruptHandler *****************
  6204 ;; Defined at:
  6205 ;;		line 432 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  InterruptHan    2   40[COMRAM] PTR FTN()void 
  6208 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  ret             1   42[COMRAM] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      unsigned char 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:        3 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 13
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_INTx_select_InterruptHandler
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text34
  6235   0039C2                     __ptext34:
  6236                           	callstack 0
  6237   0039C2                     _INT2_set_InterruptHandler:
  6238                           	callstack 14
  6239   0039C2                     
  6240                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 435:     if(((void*)0)==InterruptHandler){
  6241   0039C2  5029               	movf	INT2_set_InterruptHandler@InterruptHandler^0,w,c
  6242   0039C4  102A               	iorwf	(INT2_set_InterruptHandler@InterruptHandler+1)^0,w,c
  6243   0039C6  A4D8               	btfss	status,2,c
  6244   0039C8  EFE8  F01C         	goto	u5191
  6245   0039CC  EFEA  F01C         	goto	u5190
  6246   0039D0                     u5191:
  6247   0039D0  EFEE  F01C         	goto	l7906
  6248   0039D4                     u5190:
  6249   0039D4                     
  6250                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 436:         ret=(Std_ReturnType)0x00;
  6251   0039D4  0E00               	movlw	0
  6252   0039D6  6E2B               	movwf	INT2_set_InterruptHandler@ret^0,c
  6253                           
  6254                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 437:     }
  6255   0039D8  EFF4  F01C         	goto	l7910
  6256   0039DC                     l7906:
  6257                           
  6258                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 439:         INT2_InterruptHandler=InterruptH
      +                          andler;
  6259   0039DC  C029  F038         	movff	INT2_set_InterruptHandler@InterruptHandler,_INT2_InterruptHandler
  6260   0039E0  C02A  F039         	movff	INT2_set_InterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  6261   0039E4                     
  6262                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 440:         ret=(Std_ReturnType)0x01;
  6263   0039E4  0E01               	movlw	1
  6264   0039E6  6E2B               	movwf	INT2_set_InterruptHandler@ret^0,c
  6265   0039E8                     l7910:
  6266                           
  6267                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 443:     return ret;
  6268   0039E8  502B               	movf	INT2_set_InterruptHandler@ret^0,w,c
  6269   0039EA  0012               	return		;funcret
  6270   0039EC                     __end_of_INT2_set_InterruptHandler:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _INT1_set_InterruptHandler *****************
  6274 ;; Defined at:
  6275 ;;		line 412 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  InterruptHan    2   40[COMRAM] PTR FTN()void 
  6278 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  ret             1   42[COMRAM] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      unsigned char 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;Total ram usage:        3 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 13
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_INTx_select_InterruptHandler
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text35
  6305   0039EC                     __ptext35:
  6306                           	callstack 0
  6307   0039EC                     _INT1_set_InterruptHandler:
  6308                           	callstack 14
  6309   0039EC                     
  6310                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 415:     if(((void*)0)==InterruptHandler){
  6311   0039EC  5029               	movf	INT1_set_InterruptHandler@InterruptHandler^0,w,c
  6312   0039EE  102A               	iorwf	(INT1_set_InterruptHandler@InterruptHandler+1)^0,w,c
  6313   0039F0  A4D8               	btfss	status,2,c
  6314   0039F2  EFFD  F01C         	goto	u5181
  6315   0039F6  EFFF  F01C         	goto	u5180
  6316   0039FA                     u5181:
  6317   0039FA  EF03  F01D         	goto	l7892
  6318   0039FE                     u5180:
  6319   0039FE                     
  6320                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 416:         ret=(Std_ReturnType)0x00;
  6321   0039FE  0E00               	movlw	0
  6322   003A00  6E2B               	movwf	INT1_set_InterruptHandler@ret^0,c
  6323                           
  6324                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 417:     }
  6325   003A02  EF09  F01D         	goto	l7896
  6326   003A06                     l7892:
  6327                           
  6328                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 419:         INT1_InterruptHandler=InterruptH
      +                          andler;
  6329   003A06  C029  F03A         	movff	INT1_set_InterruptHandler@InterruptHandler,_INT1_InterruptHandler
  6330   003A0A  C02A  F03B         	movff	INT1_set_InterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  6331   003A0E                     
  6332                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 420:         ret=(Std_ReturnType)0x01;
  6333   003A0E  0E01               	movlw	1
  6334   003A10  6E2B               	movwf	INT1_set_InterruptHandler@ret^0,c
  6335   003A12                     l7896:
  6336                           
  6337                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 423:     return ret;
  6338   003A12  502B               	movf	INT1_set_InterruptHandler@ret^0,w,c
  6339   003A14  0012               	return		;funcret
  6340   003A16                     __end_of_INT1_set_InterruptHandler:
  6341                           	callstack 0
  6342                           
  6343 ;; *************** function _INT0_set_InterruptHandler *****************
  6344 ;; Defined at:
  6345 ;;		line 392 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  InterruptHan    2   40[COMRAM] PTR FTN()void 
  6348 ;;		 -> APP_INT1_ISR(1), APP_INT0_ISR(1), 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  ret             1   42[COMRAM] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      unsigned char 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;Total ram usage:        3 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 13
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_INTx_select_InterruptHandler
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text36
  6375   003A16                     __ptext36:
  6376                           	callstack 0
  6377   003A16                     _INT0_set_InterruptHandler:
  6378                           	callstack 14
  6379   003A16                     
  6380                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 395:     if(((void*)0)==InterruptHandler){
  6381   003A16  5029               	movf	INT0_set_InterruptHandler@InterruptHandler^0,w,c
  6382   003A18  102A               	iorwf	(INT0_set_InterruptHandler@InterruptHandler+1)^0,w,c
  6383   003A1A  A4D8               	btfss	status,2,c
  6384   003A1C  EF12  F01D         	goto	u5171
  6385   003A20  EF14  F01D         	goto	u5170
  6386   003A24                     u5171:
  6387   003A24  EF18  F01D         	goto	l7878
  6388   003A28                     u5170:
  6389   003A28                     
  6390                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 396:         ret=(Std_ReturnType)0x00;
  6391   003A28  0E00               	movlw	0
  6392   003A2A  6E2B               	movwf	INT0_set_InterruptHandler@ret^0,c
  6393                           
  6394                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 397:     }
  6395   003A2C  EF1E  F01D         	goto	l7882
  6396   003A30                     l7878:
  6397                           
  6398                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 399:         INT0_InterruptHandler=InterruptH
      +                          andler;
  6399   003A30  C029  F03C         	movff	INT0_set_InterruptHandler@InterruptHandler,_INT0_InterruptHandler
  6400   003A34  C02A  F03D         	movff	INT0_set_InterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  6401   003A38                     
  6402                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 400:         ret=(Std_ReturnType)0x01;
  6403   003A38  0E01               	movlw	1
  6404   003A3A  6E2B               	movwf	INT0_set_InterruptHandler@ret^0,c
  6405   003A3C                     l7882:
  6406                           
  6407                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 403:     return ret;
  6408   003A3C  502B               	movf	INT0_set_InterruptHandler@ret^0,w,c
  6409   003A3E  0012               	return		;funcret
  6410   003A40                     __end_of_INT0_set_InterruptHandler:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function _I2C_Initialize *****************
  6414 ;; Defined at:
  6415 ;;		line 125 in file "mcc_generated_files/i2c_master.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 13
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		__Initialize
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text37
  6444   003C28                     __ptext37:
  6445                           	callstack 0
  6446   003C28                     _I2C_Initialize:
  6447                           	callstack 16
  6448   003C28                     
  6449                           ;mcc_generated_files/i2c_master.c: 127:     SSPSTAT = 0x00;
  6450   003C28  0E00               	movlw	0
  6451   003C2A  6EC7               	movwf	199,c	;volatile
  6452                           
  6453                           ;mcc_generated_files/i2c_master.c: 128:     SSPCON1 = 0x08;
  6454   003C2C  0E08               	movlw	8
  6455   003C2E  6EC6               	movwf	198,c	;volatile
  6456                           
  6457                           ;mcc_generated_files/i2c_master.c: 129:     SSPCON2 = 0x00;
  6458   003C30  0E00               	movlw	0
  6459   003C32  6EC5               	movwf	197,c	;volatile
  6460                           
  6461                           ;mcc_generated_files/i2c_master.c: 130:     SSPADD = 0x13;
  6462   003C34  0E13               	movlw	19
  6463   003C36  6EC8               	movwf	200,c	;volatile
  6464   003C38                     
  6465                           ;mcc_generated_files/i2c_master.c: 131:     SSPCON1bits.SSPEN = 0;
  6466   003C38  9AC6               	bcf	198,5,c	;volatile
  6467   003C3A  0012               	return		;funcret
  6468   003C3C                     __end_of_I2C_Initialize:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _RealTimeClockDS1307_Get_Date_Time *****************
  6472 ;; Defined at:
  6473 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  6   17[BANK0 ] struct .
  6480 ;; Registers used:
  6481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        6 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 22
  6494 ;; This function calls:
  6495 ;;		_I2C_Read1ByteRegister
  6496 ;; This function is called by:
  6497 ;;		_main
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text38
  6502   003106                     __ptext38:
  6503                           	callstack 0
  6504   003106                     _RealTimeClockDS1307_Get_Date_Time:
  6505                           	callstack 8
  6506   003106                     
  6507                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
  6508   003106  0E00               	movlw	0
  6509   003108  0100               	movlb	0	; () banked
  6510   00310A  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6511   00310C  0ED0               	movlw	208
  6512   00310E  EC2F  F015         	call	_I2C_Read1ByteRegister
  6513   003112  6E30               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+2)^0,c
  6514                           
  6515                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
  6516   003114  0E01               	movlw	1
  6517   003116  0100               	movlb	0	; () banked
  6518   003118  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6519   00311A  0ED0               	movlw	208
  6520   00311C  EC2F  F015         	call	_I2C_Read1ByteRegister
  6521   003120  6E2F               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+1)^0,c
  6522                           
  6523                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
  6524   003122  0E02               	movlw	2
  6525   003124  0100               	movlb	0	; () banked
  6526   003126  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6527   003128  0ED0               	movlw	208
  6528   00312A  EC2F  F015         	call	_I2C_Read1ByteRegister
  6529   00312E  6E2E               	movwf	_RTC1307@RealTimeClockDS1307$F1374^0,c
  6530                           
  6531                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
  6532   003130  0E04               	movlw	4
  6533   003132  0100               	movlb	0	; () banked
  6534   003134  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6535   003136  0ED0               	movlw	208
  6536   003138  EC2F  F015         	call	_I2C_Read1ByteRegister
  6537   00313C  6E33               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+5)^0,c
  6538                           
  6539                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
  6540   00313E  0E05               	movlw	5
  6541   003140  0100               	movlb	0	; () banked
  6542   003142  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6543   003144  0ED0               	movlw	208
  6544   003146  EC2F  F015         	call	_I2C_Read1ByteRegister
  6545   00314A  6E32               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+4)^0,c
  6546                           
  6547                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
  6548   00314C  0E06               	movlw	6
  6549   00314E  0100               	movlb	0	; () banked
  6550   003150  6FE9               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  6551   003152  0ED0               	movlw	208
  6552   003154  EC2F  F015         	call	_I2C_Read1ByteRegister
  6553   003158  6E31               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+3)^0,c
  6554   00315A                     
  6555                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
  6556   00315A  EE20  F02E         	lfsr	2,_RTC1307@RealTimeClockDS1307$F1374
  6557   00315E  EE00  F0EC         	lfsr	0,?_RealTimeClockDS1307_Get_Date_Time
  6558   003162  0E05               	movlw	5
  6559   003164                     u5611:
  6560   003164  CFDB FFEB          	movff	plusw2,plusw0
  6561   003168  06E8               	decf	wreg,f,c
  6562   00316A  E2FC               	bc	u5611
  6563   00316C  0012               	return		;funcret
  6564   00316E                     __end_of_RealTimeClockDS1307_Get_Date_Time:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function _I2C_Read1ByteRegister *****************
  6568 ;; Defined at:
  6569 ;;		line 21 in file "mcc_generated_files/examples/i2c_master_example.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  address         1    wreg     unsigned char 
  6572 ;;  reg             1   14[BANK0 ] unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  address         1   15[BANK0 ] unsigned char 
  6575 ;;  returnValue     1   16[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      unsigned char 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6585 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;Total ram usage:        3 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 21
  6592 ;; This function calls:
  6593 ;;		_I2C_Close
  6594 ;;		_I2C_MasterWrite
  6595 ;;		_I2C_Open
  6596 ;;		_I2C_SetAddressNackCallback
  6597 ;;		_I2C_SetBuffer
  6598 ;;		_I2C_SetDataCompleteCallback
  6599 ;; This function is called by:
  6600 ;;		_RealTimeClockDS1307_Get_Date_Time
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text39
  6605   002A5E                     __ptext39:
  6606                           	callstack 0
  6607   002A5E                     _I2C_Read1ByteRegister:
  6608                           	callstack 8
  6609                           
  6610                           ;incstack = 0
  6611                           ;I2C_Read1ByteRegister@address stored from wreg
  6612   002A5E  0100               	movlb	0	; () banked
  6613   002A60  6FEA               	movwf	I2C_Read1ByteRegister@address& (0+255),b
  6614   002A62                     
  6615                           ;mcc_generated_files/examples/i2c_master_example.c: 21: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 22:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 23:     uint8_t returnValue = 0x00
      +                          ;
  6616   002A62  0E00               	movlw	0
  6617   002A64  0100               	movlb	0	; () banked
  6618   002A66  6FEB               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
  6619   002A68                     l8260:
  6620   002A68  0100               	movlb	0	; () banked
  6621   002A6A  51EA               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
  6622   002A6C  EC5D  F014         	call	_I2C_Open
  6623   002A70  0900               	iorlw	0
  6624   002A72  B4D8               	btfsc	status,2,c
  6625   002A74  EF3E  F015         	goto	u5481
  6626   002A78  EF40  F015         	goto	u5480
  6627   002A7C                     u5481:
  6628   002A7C  EF34  F015         	goto	l8260
  6629   002A80                     u5480:
  6630   002A80                     
  6631                           ;mcc_generated_files/examples/i2c_master_example.c: 26:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  6632   002A80  0EFC               	movlw	low _rd1RegCompleteHandler
  6633   002A82  0100               	movlb	0	; () banked
  6634   002A84  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  6635   002A86  0E36               	movlw	high _rd1RegCompleteHandler
  6636   002A88  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  6637   002A8A  0EEB               	movlw	low I2C_Read1ByteRegister@returnValue
  6638   002A8C  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  6639   002A8E  6BDE               	clrf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  6640   002A90  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  6641   002A94                     
  6642                           ;mcc_generated_files/examples/i2c_master_example.c: 27:     I2C_SetBuffer(&reg,1);
  6643   002A94  0EE9               	movlw	low I2C_Read1ByteRegister@reg
  6644   002A96  6E29               	movwf	I2C_SetBuffer@buffer^0,c
  6645   002A98  6A2A               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  6646   002A9A  0E00               	movlw	0
  6647   002A9C  6E2C               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6648   002A9E  0E01               	movlw	1
  6649   002AA0  6E2B               	movwf	I2C_SetBuffer@bufferSize^0,c
  6650   002AA2  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  6651   002AA6                     
  6652                           ;mcc_generated_files/examples/i2c_master_example.c: 28:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  6653   002AA6  0E00               	movlw	0
  6654   002AA8  0100               	movlb	0	; () banked
  6655   002AAA  6FDB               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  6656   002AAC  0E00               	movlw	0
  6657   002AAE  6FDC               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  6658   002AB0  0E00               	movlw	0
  6659   002AB2  6FDD               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  6660   002AB4  0E00               	movlw	0
  6661   002AB6  6FDE               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  6662   002AB8  ECB7  F01D         	call	_I2C_SetAddressNackCallback	;wreg free
  6663   002ABC                     
  6664                           ;mcc_generated_files/examples/i2c_master_example.c: 29:     I2C_MasterWrite();
  6665   002ABC  ECB0  F01E         	call	_I2C_MasterWrite	;wreg free
  6666   002AC0                     l8270:
  6667   002AC0  EC5D  F01C         	call	_I2C_Close	;wreg free
  6668   002AC4  06E8               	decf	wreg,f,c
  6669   002AC6  B4D8               	btfsc	status,2,c
  6670   002AC8  EF68  F015         	goto	u5491
  6671   002ACC  EF6A  F015         	goto	u5490
  6672   002AD0                     u5491:
  6673   002AD0  EF60  F015         	goto	l8270
  6674   002AD4                     u5490:
  6675   002AD4                     
  6676                           ;mcc_generated_files/examples/i2c_master_example.c: 32:     return returnValue;
  6677   002AD4  0100               	movlb	0	; () banked
  6678   002AD6  51EB               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
  6679   002AD8                     
  6680                           ; BSR set to: 0
  6681   002AD8  0012               	return		;funcret
  6682   002ADA                     __end_of_I2C_Read1ByteRegister:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function _I2C_SetAddressNackCallback *****************
  6686 ;; Defined at:
  6687 ;;		line 241 in file "mcc_generated_files/i2c_master.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  6690 ;;		 -> NULL(1), 
  6691 ;;  ptr             2    2[BANK0 ] PTR void 
  6692 ;;		 -> NULL(0), 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:        4 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 14
  6711 ;; This function calls:
  6712 ;;		_I2C_SetCallback
  6713 ;; This function is called by:
  6714 ;;		_I2C_Read1ByteRegister
  6715 ;;		_I2C_Read2ByteRegister
  6716 ;;		_I2C_Write2ByteRegister
  6717 ;;		_I2C_WriteNBytes
  6718 ;;		_I2C_ReadDataBlock
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text40
  6723   003B6E                     __ptext40:
  6724                           	callstack 0
  6725   003B6E                     _I2C_SetAddressNackCallback:
  6726                           	callstack 14
  6727   003B6E                     
  6728                           ;mcc_generated_files/i2c_master.c: 241: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 242: {;mcc_generated_files/i2c_master.c:
      +                           243:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  6729   003B6E  C0DB  F029         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  6730   003B72  C0DC  F02A         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  6731   003B76  C0DD  F02B         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  6732   003B7A  C0DE  F02C         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  6733   003B7E  0E02               	movlw	2
  6734   003B80  ECEA  F018         	call	_I2C_SetCallback
  6735   003B84  0012               	return		;funcret
  6736   003B86                     __end_of_I2C_SetAddressNackCallback:
  6737                           	callstack 0
  6738                           
  6739 ;; *************** function _I2C_Open *****************
  6740 ;; Defined at:
  6741 ;;		line 134 in file "mcc_generated_files/i2c_master.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  address         1    wreg     unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  address         1   40[COMRAM] unsigned char 
  6746 ;;  returnValue     1   41[COMRAM] enum E358
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      enum E358
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;Total ram usage:        2 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 14
  6763 ;; This function calls:
  6764 ;;		_I2C_MasterClearIrq
  6765 ;;		_I2C_MasterOpen
  6766 ;; This function is called by:
  6767 ;;		_I2C_Read1ByteRegister
  6768 ;;		_I2C_Read2ByteRegister
  6769 ;;		_I2C_Write2ByteRegister
  6770 ;;		_I2C_WriteNBytes
  6771 ;;		_I2C_ReadNBytes
  6772 ;;		_I2C_ReadDataBlock
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text41
  6777   0028BA                     __ptext41:
  6778                           	callstack 0
  6779   0028BA                     _I2C_Open:
  6780                           	callstack 14
  6781                           
  6782                           ;incstack = 0
  6783                           ;I2C_Open@address stored from wreg
  6784   0028BA  6E29               	movwf	I2C_Open@address^0,c
  6785   0028BC                     
  6786                           ;mcc_generated_files/i2c_master.c: 134: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 135: {;mcc_generated_files/i2c_master.c: 136:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  6787   0028BC  0E01               	movlw	1
  6788   0028BE  6E2A               	movwf	I2C_Open@returnValue^0,c
  6789   0028C0                     
  6790                           ;mcc_generated_files/i2c_master.c: 138:     if(!I2C_Status.inUse)
  6791   0028C0  0100               	movlb	0	; () banked
  6792   0028C2  B5D3               	btfsc	(_I2C_Status+35)& (0+255),2,b
  6793   0028C4  EF66  F014         	goto	u5231
  6794   0028C8  EF68  F014         	goto	u5230
  6795   0028CC                     u5231:
  6796   0028CC  EFA2  F014         	goto	l7986
  6797   0028D0                     u5230:
  6798   0028D0                     
  6799                           ; BSR set to: 0
  6800                           ;mcc_generated_files/i2c_master.c: 139:     {;mcc_generated_files/i2c_master.c: 140:    
      +                               I2C_Status.address = address;
  6801   0028D0  C029  F0CC         	movff	I2C_Open@address,_I2C_Status+28
  6802   0028D4                     
  6803                           ; BSR set to: 0
  6804                           ;mcc_generated_files/i2c_master.c: 141:         I2C_Status.busy = 0;
  6805   0028D4  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
  6806   0028D6                     
  6807                           ; BSR set to: 0
  6808                           ;mcc_generated_files/i2c_master.c: 142:         I2C_Status.inUse = 1;
  6809   0028D6  85D3               	bsf	(_I2C_Status+35)& (0+255),2,b
  6810   0028D8                     
  6811                           ; BSR set to: 0
  6812                           ;mcc_generated_files/i2c_master.c: 143:         I2C_Status.addressNackCheck = 0;
  6813   0028D8  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
  6814   0028DA                     
  6815                           ; BSR set to: 0
  6816                           ;mcc_generated_files/i2c_master.c: 144:         I2C_Status.state = I2C_RESET;
  6817   0028DA  0E0E               	movlw	14
  6818   0028DC  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
  6819   0028DE                     
  6820                           ; BSR set to: 0
  6821                           ;mcc_generated_files/i2c_master.c: 145:         I2C_Status.time_out_value = 500;
  6822   0028DE  0E01               	movlw	1
  6823   0028E0  6FCB               	movwf	(_I2C_Status+27)& (0+255),b
  6824   0028E2  0EF4               	movlw	244
  6825   0028E4  6FCA               	movwf	(_I2C_Status+26)& (0+255),b
  6826   0028E6                     
  6827                           ; BSR set to: 0
  6828                           ;mcc_generated_files/i2c_master.c: 146:         I2C_Status.bufferFree = 1;
  6829   0028E6  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
  6830   0028E8                     
  6831                           ; BSR set to: 0
  6832                           ;mcc_generated_files/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  6833   0028E8  0E20               	movlw	low _I2C_CallbackReturnStop
  6834   0028EA  6FB0               	movwf	_I2C_Status& (0+255),b
  6835   0028EC  0E3D               	movlw	high _I2C_CallbackReturnStop
  6836   0028EE  6FB1               	movwf	(_I2C_Status+1)& (0+255),b
  6837   0028F0                     
  6838                           ; BSR set to: 0
  6839                           ;mcc_generated_files/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  6840   0028F0  0E00               	movlw	0
  6841   0028F2  6FBC               	movwf	(_I2C_Status+12)& (0+255),b
  6842   0028F4  0E00               	movlw	0
  6843   0028F6  6FBD               	movwf	(_I2C_Status+13)& (0+255),b
  6844   0028F8                     
  6845                           ; BSR set to: 0
  6846                           ;mcc_generated_files/i2c_master.c: 151:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  6847   0028F8  0E20               	movlw	low _I2C_CallbackReturnStop
  6848   0028FA  6FB2               	movwf	(_I2C_Status+2)& (0+255),b
  6849   0028FC  0E3D               	movlw	high _I2C_CallbackReturnStop
  6850   0028FE  6FB3               	movwf	(_I2C_Status+3)& (0+255),b
  6851   002900                     
  6852                           ; BSR set to: 0
  6853                           ;mcc_generated_files/i2c_master.c: 152:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  6854   002900  0E00               	movlw	0
  6855   002902  6FBE               	movwf	(_I2C_Status+14)& (0+255),b
  6856   002904  0E00               	movlw	0
  6857   002906  6FBF               	movwf	(_I2C_Status+15)& (0+255),b
  6858   002908                     
  6859                           ; BSR set to: 0
  6860                           ;mcc_generated_files/i2c_master.c: 153:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  6861   002908  0E20               	movlw	low _I2C_CallbackReturnStop
  6862   00290A  6FB4               	movwf	(_I2C_Status+4)& (0+255),b
  6863   00290C  0E3D               	movlw	high _I2C_CallbackReturnStop
  6864   00290E  6FB5               	movwf	(_I2C_Status+5)& (0+255),b
  6865   002910                     
  6866                           ; BSR set to: 0
  6867                           ;mcc_generated_files/i2c_master.c: 154:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  6868   002910  0E00               	movlw	0
  6869   002912  6FC0               	movwf	(_I2C_Status+16)& (0+255),b
  6870   002914  0E00               	movlw	0
  6871   002916  6FC1               	movwf	(_I2C_Status+17)& (0+255),b
  6872   002918                     
  6873                           ; BSR set to: 0
  6874                           ;mcc_generated_files/i2c_master.c: 155:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  6875   002918  0E20               	movlw	low _I2C_CallbackReturnStop
  6876   00291A  6FB6               	movwf	(_I2C_Status+6)& (0+255),b
  6877   00291C  0E3D               	movlw	high _I2C_CallbackReturnStop
  6878   00291E  6FB7               	movwf	(_I2C_Status+7)& (0+255),b
  6879   002920                     
  6880                           ; BSR set to: 0
  6881                           ;mcc_generated_files/i2c_master.c: 156:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  6882   002920  0E00               	movlw	0
  6883   002922  6FC2               	movwf	(_I2C_Status+18)& (0+255),b
  6884   002924  0E00               	movlw	0
  6885   002926  6FC3               	movwf	(_I2C_Status+19)& (0+255),b
  6886   002928                     
  6887                           ; BSR set to: 0
  6888                           ;mcc_generated_files/i2c_master.c: 157:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  6889   002928  0E12               	movlw	low _I2C_CallbackReturnReset
  6890   00292A  6FB8               	movwf	(_I2C_Status+8)& (0+255),b
  6891   00292C  0E3D               	movlw	high _I2C_CallbackReturnReset
  6892   00292E  6FB9               	movwf	(_I2C_Status+9)& (0+255),b
  6893   002930                     
  6894                           ; BSR set to: 0
  6895                           ;mcc_generated_files/i2c_master.c: 158:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  6896   002930  0E00               	movlw	0
  6897   002932  6FC4               	movwf	(_I2C_Status+20)& (0+255),b
  6898   002934  0E00               	movlw	0
  6899   002936  6FC5               	movwf	(_I2C_Status+21)& (0+255),b
  6900   002938                     
  6901                           ; BSR set to: 0
  6902                           ;mcc_generated_files/i2c_master.c: 160:         I2C_MasterClearIrq();
  6903   002938  ECFB  F01E         	call	_I2C_MasterClearIrq	;wreg free
  6904   00293C                     
  6905                           ;mcc_generated_files/i2c_master.c: 161:         I2C_MasterOpen();
  6906   00293C  EC6A  F01D         	call	_I2C_MasterOpen	;wreg free
  6907   002940                     
  6908                           ;mcc_generated_files/i2c_master.c: 162:         returnValue = I2C_NOERR;
  6909   002940  0E00               	movlw	0
  6910   002942  6E2A               	movwf	I2C_Open@returnValue^0,c
  6911   002944                     l7986:
  6912                           
  6913                           ;mcc_generated_files/i2c_master.c: 164:     return returnValue;
  6914   002944  502A               	movf	I2C_Open@returnValue^0,w,c
  6915   002946  0012               	return		;funcret
  6916   002948                     __end_of_I2C_Open:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function _I2C_MasterOpen *****************
  6920 ;; Defined at:
  6921 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      _Bool 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 13
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_I2C_Open
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text42
  6950   003AD4                     __ptext42:
  6951                           	callstack 0
  6952   003AD4                     _I2C_MasterOpen:
  6953                           	callstack 14
  6954   003AD4                     
  6955                           ;mcc_generated_files/i2c_master.c: 503:     if(!SSPCON1bits.SSPEN)
  6956   003AD4  BAC6               	btfsc	198,5,c	;volatile
  6957   003AD6  EF6F  F01D         	goto	u5101
  6958   003ADA  EF71  F01D         	goto	u5100
  6959   003ADE                     u5101:
  6960   003ADE  EF7A  F01D         	goto	l406
  6961   003AE2                     u5100:
  6962   003AE2                     
  6963                           ;mcc_generated_files/i2c_master.c: 504:     {;mcc_generated_files/i2c_master.c: 505:    
      +                               SSPSTAT = 0x00;
  6964   003AE2  0E00               	movlw	0
  6965   003AE4  6EC7               	movwf	199,c	;volatile
  6966                           
  6967                           ;mcc_generated_files/i2c_master.c: 506:         SSPCON1 = 0x08;
  6968   003AE6  0E08               	movlw	8
  6969   003AE8  6EC6               	movwf	198,c	;volatile
  6970                           
  6971                           ;mcc_generated_files/i2c_master.c: 507:         SSPCON2 = 0x00;
  6972   003AEA  0E00               	movlw	0
  6973   003AEC  6EC5               	movwf	197,c	;volatile
  6974                           
  6975                           ;mcc_generated_files/i2c_master.c: 508:         SSPADD = 0x13;
  6976   003AEE  0E13               	movlw	19
  6977   003AF0  6EC8               	movwf	200,c	;volatile
  6978   003AF2                     
  6979                           ;mcc_generated_files/i2c_master.c: 509:         SSPCON1bits.SSPEN = 1;
  6980   003AF2  8AC6               	bsf	198,5,c	;volatile
  6981   003AF4                     l406:
  6982   003AF4  0012               	return		;funcret
  6983   003AF6                     __end_of_I2C_MasterOpen:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function _I2C_MasterWrite *****************
  6987 ;; Defined at:
  6988 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      enum E358
  6995 ;; Registers used:
  6996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;Total ram usage:        0 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; Hardware stack levels required when called: 20
  7009 ;; This function calls:
  7010 ;;		_I2C_MasterOperation
  7011 ;; This function is called by:
  7012 ;;		_I2C_Read1ByteRegister
  7013 ;;		_I2C_Read2ByteRegister
  7014 ;;		_I2C_Write2ByteRegister
  7015 ;;		_I2C_WriteNBytes
  7016 ;;		_I2C_ReadDataBlock
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text43
  7021   003D60                     __ptext43:
  7022                           	callstack 0
  7023   003D60                     _I2C_MasterWrite:
  7024                           	callstack 8
  7025   003D60                     
  7026                           ;mcc_generated_files/i2c_master.c: 211:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  7027   003D60  0E00               	movlw	0
  7028   003D62  EC80  F01A         	call	_I2C_MasterOperation
  7029   003D66  0012               	return		;funcret
  7030   003D68                     __end_of_I2C_MasterWrite:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _I2C_MasterOperation *****************
  7034 ;; Defined at:
  7035 ;;		line 182 in file "mcc_generated_files/i2c_master.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  read            1    wreg     _Bool 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  read            1   12[BANK0 ] _Bool 
  7040 ;;  returnValue     1   13[BANK0 ] enum E358
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      enum E358
  7043 ;; Registers used:
  7044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;Total ram usage:        2 bytes
  7055 ;; Hardware stack levels used: 1
  7056 ;; Hardware stack levels required when called: 19
  7057 ;; This function calls:
  7058 ;;		_I2C_MasterStart
  7059 ;;		_I2C_Poller
  7060 ;; This function is called by:
  7061 ;;		_I2C_MasterWrite
  7062 ;;		_I2C_MasterRead
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text44
  7067   003500                     __ptext44:
  7068                           	callstack 0
  7069   003500                     _I2C_MasterOperation:
  7070                           	callstack 8
  7071                           
  7072                           ;incstack = 0
  7073                           ;I2C_MasterOperation@read stored from wreg
  7074   003500  0100               	movlb	0	; () banked
  7075   003502  6FE7               	movwf	I2C_MasterOperation@read& (0+255),b
  7076   003504                     
  7077                           ;mcc_generated_files/i2c_master.c: 182: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 183: {;mcc_generated_files/i2c_master.c: 184:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  7078   003504  0E01               	movlw	1
  7079   003506  0100               	movlb	0	; () banked
  7080   003508  6FE8               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  7081   00350A                     
  7082                           ; BSR set to: 0
  7083                           ;mcc_generated_files/i2c_master.c: 185:     if(!I2C_Status.busy)
  7084   00350A  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
  7085   00350C  EF8A  F01A         	goto	u5111
  7086   003510  EF8C  F01A         	goto	u5110
  7087   003514                     u5111:
  7088   003514  EFA1  F01A         	goto	l7830
  7089   003518                     u5110:
  7090   003518                     
  7091                           ; BSR set to: 0
  7092                           ;mcc_generated_files/i2c_master.c: 186:     {;mcc_generated_files/i2c_master.c: 187:    
      +                               I2C_Status.busy = 1;
  7093   003518  83D3               	bsf	(_I2C_Status+35)& (0+255),1,b
  7094   00351A                     
  7095                           ; BSR set to: 0
  7096                           ;mcc_generated_files/i2c_master.c: 188:         returnValue = I2C_NOERR;
  7097   00351A  0E00               	movlw	0
  7098   00351C  6FE8               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  7099   00351E                     
  7100                           ; BSR set to: 0
  7101                           ;mcc_generated_files/i2c_master.c: 190:         if(read)
  7102   00351E  51E7               	movf	I2C_MasterOperation@read& (0+255),w,b
  7103   003520  B4D8               	btfsc	status,2,c
  7104   003522  EF95  F01A         	goto	u5121
  7105   003526  EF97  F01A         	goto	u5120
  7106   00352A                     u5121:
  7107   00352A  EF9B  F01A         	goto	l7824
  7108   00352E                     u5120:
  7109   00352E                     
  7110                           ; BSR set to: 0
  7111                           ;mcc_generated_files/i2c_master.c: 191:         {;mcc_generated_files/i2c_master.c: 192:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  7112   00352E  0E01               	movlw	1
  7113   003530  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
  7114                           
  7115                           ;mcc_generated_files/i2c_master.c: 193:         }
  7116   003532  EF9D  F01A         	goto	l7826
  7117   003536                     l7824:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;mcc_generated_files/i2c_master.c: 195:         {;mcc_generated_files/i2c_master.c: 196:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  7121   003536  0E02               	movlw	2
  7122   003538  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
  7123   00353A                     l7826:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;mcc_generated_files/i2c_master.c: 198:         I2C_MasterStart();
  7127   00353A  ECF5  F01E         	call	_I2C_MasterStart	;wreg free
  7128   00353E                     
  7129                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Poller();
  7130   00353E  EC8C  F01D         	call	_I2C_Poller	;wreg free
  7131   003542                     l7830:
  7132                           
  7133                           ;mcc_generated_files/i2c_master.c: 201:     return returnValue;
  7134   003542  0100               	movlb	0	; () banked
  7135   003544  51E8               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  7136   003546                     
  7137                           ; BSR set to: 0
  7138   003546  0012               	return		;funcret
  7139   003548                     __end_of_I2C_MasterOperation:
  7140                           	callstack 0
  7141                           
  7142 ;; *************** function _I2C_Poller *****************
  7143 ;; Defined at:
  7144 ;;		line 270 in file "mcc_generated_files/i2c_master.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;Total ram usage:        0 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 18
  7165 ;; This function calls:
  7166 ;;		_I2C_MasterFsm
  7167 ;;		_I2C_MasterWaitForEvent
  7168 ;; This function is called by:
  7169 ;;		_I2C_MasterOperation
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text45
  7174   003B18                     __ptext45:
  7175                           	callstack 0
  7176   003B18                     _I2C_Poller:
  7177                           	callstack 8
  7178   003B18                     
  7179                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
  7180   003B18  EF92  F01D         	goto	l7640
  7181   003B1C                     l7636:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;mcc_generated_files/i2c_master.c: 273:     {;mcc_generated_files/i2c_master.c: 274:    
      +                               I2C_MasterWaitForEvent();
  7185   003B1C  EC71  F01E         	call	_I2C_MasterWaitForEvent	;wreg free
  7186   003B20                     
  7187                           ;mcc_generated_files/i2c_master.c: 275:         I2C_MasterFsm();
  7188   003B20  ECE0  F017         	call	_I2C_MasterFsm	;wreg free
  7189   003B24                     l7640:
  7190                           
  7191                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
  7192   003B24  0100               	movlb	0	; () banked
  7193   003B26  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
  7194   003B28  EF98  F01D         	goto	u4901
  7195   003B2C  EF9A  F01D         	goto	u4900
  7196   003B30                     u4901:
  7197   003B30  EF8E  F01D         	goto	l7636
  7198   003B34                     u4900:
  7199   003B34                     
  7200                           ; BSR set to: 0
  7201   003B34  0012               	return		;funcret
  7202   003B36                     __end_of_I2C_Poller:
  7203                           	callstack 0
  7204                           
  7205 ;; *************** function _I2C_MasterWaitForEvent *****************
  7206 ;; Defined at:
  7207 ;;		line 608 in file "mcc_generated_files/i2c_master.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;		None
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  1    wreg      void 
  7214 ;; Registers used:
  7215 ;;		None
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;Total ram usage:        0 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 13
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_I2C_Poller
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text46
  7236   003CE2                     __ptext46:
  7237                           	callstack 0
  7238   003CE2                     _I2C_MasterWaitForEvent:
  7239                           	callstack 12
  7240   003CE2                     l463:
  7241                           
  7242                           ;mcc_generated_files/i2c_master.c: 611:     {;mcc_generated_files/i2c_master.c: 612:    
      +                               if(PIR1bits.SSPIF)
  7243   003CE2  A69E               	btfss	158,3,c	;volatile
  7244   003CE4  EF76  F01E         	goto	u4611
  7245   003CE8  EF78  F01E         	goto	u4610
  7246   003CEC                     u4611:
  7247   003CEC  EF71  F01E         	goto	l463
  7248   003CF0                     u4610:
  7249   003CF0  0012               	return		;funcret
  7250   003CF2                     __end_of_I2C_MasterWaitForEvent:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function _I2C_MasterFsm *****************
  7254 ;; Defined at:
  7255 ;;		line 279 in file "mcc_generated_files/i2c_master.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;		None
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;Total ram usage:        3 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; Hardware stack levels required when called: 17
  7276 ;; This function calls:
  7277 ;;		_I2C_DO_ADDRESS_NACK
  7278 ;;		_I2C_DO_IDLE
  7279 ;;		_I2C_DO_RCEN
  7280 ;;		_I2C_DO_RESET
  7281 ;;		_I2C_DO_RX
  7282 ;;		_I2C_DO_RX_ACK
  7283 ;;		_I2C_DO_RX_NACK_RESTART
  7284 ;;		_I2C_DO_RX_NACK_STOP
  7285 ;;		_I2C_DO_SEND_ADR_READ
  7286 ;;		_I2C_DO_SEND_ADR_WRITE
  7287 ;;		_I2C_DO_SEND_RESTART
  7288 ;;		_I2C_DO_SEND_RESTART_READ
  7289 ;;		_I2C_DO_SEND_RESTART_WRITE
  7290 ;;		_I2C_DO_SEND_STOP
  7291 ;;		_I2C_DO_TX
  7292 ;;		_I2C_DO_TX_EMPTY
  7293 ;;		_I2C_MasterClearIrq
  7294 ;;		_I2C_MasterIsNack
  7295 ;; This function is called by:
  7296 ;;		_I2C_Poller
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text47
  7301   002FC0                     __ptext47:
  7302                           	callstack 0
  7303   002FC0                     _I2C_MasterFsm:
  7304                           	callstack 8
  7305   002FC0                     
  7306                           ;mcc_generated_files/i2c_master.c: 281:     I2C_MasterClearIrq();
  7307   002FC0  ECFB  F01E         	call	_I2C_MasterClearIrq	;wreg free
  7308   002FC4                     
  7309                           ;mcc_generated_files/i2c_master.c: 283:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  7310   002FC4  0100               	movlb	0	; () banked
  7311   002FC6  A1D3               	btfss	(_I2C_Status+35)& (0+255),0,b
  7312   002FC8  EFE8  F017         	goto	u4621
  7313   002FCC  EFEA  F017         	goto	u4620
  7314   002FD0                     u4621:
  7315   002FD0  EFF7  F017         	goto	l7480
  7316   002FD4                     u4620:
  7317   002FD4                     
  7318                           ; BSR set to: 0
  7319   002FD4  EC1E  F01E         	call	_I2C_MasterIsNack	;wreg free
  7320   002FD8  0900               	iorlw	0
  7321   002FDA  B4D8               	btfsc	status,2,c
  7322   002FDC  EFF2  F017         	goto	u4631
  7323   002FE0  EFF4  F017         	goto	u4630
  7324   002FE4                     u4631:
  7325   002FE4  EFF7  F017         	goto	l7480
  7326   002FE8                     u4630:
  7327   002FE8                     
  7328                           ;mcc_generated_files/i2c_master.c: 284:     {;mcc_generated_files/i2c_master.c: 285:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  7329   002FE8  0E0F               	movlw	15
  7330   002FEA  0100               	movlb	0	; () banked
  7331   002FEC  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
  7332   002FEE                     l7480:
  7333                           
  7334                           ;mcc_generated_files/i2c_master.c: 287:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  7335   002FEE  0100               	movlb	0	; () banked
  7336   002FF0  51D1               	movf	(_I2C_Status+33)& (0+255),w,b
  7337   002FF2  0D02               	mullw	2
  7338   002FF4  50F3               	movf	243,w,c
  7339   002FF6  0F01               	addlw	low _i2c_fsmStateTable
  7340   002FF8  6FE4               	movwf	??_I2C_MasterFsm& (0+255),b
  7341   002FFA  C0E4  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  7342   002FFE                     	if	1	;There is more than 1 active tblptr byte
  7343   002FFE  0E10               	movlw	high __smallconst
  7344   003000  6EF7               	movwf	tblptrh,c
  7345   003002                     	endif
  7346   003002                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7347   003002  6AF8               	clrf	tblptru,c
  7348   003004                     	endif
  7349   003004                     	if	0	;tblptru may be non-zero
  7350   003004                     	endif
  7351   003004  0009               	tblrd		*+
  7352   003006  CFF5 F0E5          	movff	tablat,??_I2C_MasterFsm+1
  7353   00300A  0009               	tblrd		*+
  7354   00300C  CFF5 F0E6          	movff	tablat,??_I2C_MasterFsm+2
  7355   003010  D802               	call	u4648
  7356   003012  EF14  F018         	goto	u4649
  7357   003016                     u4648:
  7358   003016  0005               	push	
  7359   003018  6EFA               	movwf	pclath,c
  7360   00301A  51E5               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
  7361   00301C  6EFD               	movwf	tosl,c
  7362   00301E  51E6               	movf	(??_I2C_MasterFsm+2)& (0+255),w,b
  7363   003020  6EFE               	movwf	tosh,c
  7364   003022  6AFF               	clrf	tosu,c
  7365   003024  50FA               	movf	pclath,w,c
  7366   003026  0012               	return		;indir
  7367   003028                     u4649:
  7368   003028  0100               	movlb	0	; () banked
  7369   00302A  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
  7370   00302C                     
  7371                           ; BSR set to: 0
  7372   00302C  0012               	return		;funcret
  7373   00302E                     __end_of_I2C_MasterFsm:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  7377 ;; Defined at:
  7378 ;;		line 458 in file "mcc_generated_files/i2c_master.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      enum E2876
  7385 ;; Registers used:
  7386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;Total ram usage:        2 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 16
  7399 ;; This function calls:
  7400 ;;		NULL
  7401 ;;		_I2C_CallbackReturnReset
  7402 ;;		_I2C_CallbackReturnStop
  7403 ;;		_I2C_DO_SEND_RESTART
  7404 ;;		_I2C_DO_SEND_STOP
  7405 ;;		_rd1RegCompleteHandler
  7406 ;;		_rd2RegCompleteHandler
  7407 ;;		_rdBlkRegCompleteHandler
  7408 ;;		_wr1RegCompleteHandler
  7409 ;;		_wr2RegCompleteHandler
  7410 ;; This function is called by:
  7411 ;;		i2_I2C_MasterFsm
  7412 ;;		_I2C_MasterFsm
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text48
  7417   002D26                     __ptext48:
  7418                           	callstack 0
  7419   002D26                     _I2C_DO_ADDRESS_NACK:
  7420                           	callstack 0
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;Skip over the trampoline to the duplicate function for level 2
  7424   002D26  A257               	btfss	int$flags,1,c
  7425   002D28  EF98  F016         	goto	_I2C_DO_ADDRESS_NACK$intlevel0
  7426   002D2C  EF1D  F019         	goto	i2_I2C_DO_ADDRESS_NACK
  7427   002D30                     _I2C_DO_ADDRESS_NACK$intlevel0:
  7428                           	callstack 8
  7429   002D30                     
  7430                           ;mcc_generated_files/i2c_master.c: 460:     I2C_Status.addressNackCheck = 0;
  7431   002D30  0100               	movlb	0	; () banked
  7432   002D32  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
  7433   002D34                     
  7434                           ; BSR set to: 0
  7435                           ;mcc_generated_files/i2c_master.c: 461:     I2C_Status.error = I2C_FAIL;
  7436   002D34  0E02               	movlw	2
  7437   002D36  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
  7438                           
  7439                           ;mcc_generated_files/i2c_master.c: 462:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  7440   002D38  EFA6  F016         	goto	l7456
  7441   002D3C                     l7446:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;mcc_generated_files/i2c_master.c: 466:             return I2C_DO_SEND_RESTART();
  7445   002D3C  EC56  F01E         	call	_I2C_DO_SEND_RESTART	;wreg free
  7446   002D40  EFCB  F016         	goto	l385
  7447   002D44                     l7450:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;mcc_generated_files/i2c_master.c: 468:             return I2C_DO_SEND_STOP();
  7451   002D44  EC4D  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
  7452   002D48  EFCB  F016         	goto	l385
  7453   002D4C                     l7456:
  7454                           
  7455                           ; BSR set to: 0
  7456   002D4C  C0C0  F0DF         	movff	_I2C_Status+16,rd1RegCompleteHandler@ptr
  7457   002D50  C0C1  F0E0         	movff	_I2C_Status+17,rd1RegCompleteHandler@ptr+1
  7458   002D54  D802               	call	u4598
  7459   002D56  EFB6  F016         	goto	u4599
  7460   002D5A                     u4598:
  7461   002D5A  0005               	push	
  7462   002D5C  6EFA               	movwf	pclath,c
  7463   002D5E  51B4               	movf	(_I2C_Status+4)& (0+255),w,b
  7464   002D60  6EFD               	movwf	tosl,c
  7465   002D62  51B5               	movf	(_I2C_Status+5)& (0+255),w,b
  7466   002D64  6EFE               	movwf	tosh,c
  7467   002D66  6AFF               	clrf	tosu,c
  7468   002D68  50FA               	movf	pclath,w,c
  7469   002D6A  0012               	return		;indir
  7470   002D6C                     u4599:
  7471   002D6C  0100               	movlb	0	; () banked
  7472   002D6E  6FE2               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
  7473   002D70  6BE3               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
  7474                           
  7475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7476                           ; Switch size 1, requested type "simple"
  7477                           ; Number of cases is 1, Range of values is 0 to 0
  7478                           ; switch strategies available:
  7479                           ; Name         Instructions Cycles
  7480                           ; simple_byte            4     3 (average)
  7481                           ;	Chosen strategy is simple_byte
  7482   002D72  51E3               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
  7483   002D74  0A00               	xorlw	0	; case 0
  7484   002D76  B4D8               	btfsc	status,2,c
  7485   002D78  EFC0  F016         	goto	l9268
  7486   002D7C  EFA2  F016         	goto	l7450
  7487   002D80                     l9268:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ; Switch size 1, requested type "simple"
  7491                           ; Number of cases is 2, Range of values is 2 to 3
  7492                           ; switch strategies available:
  7493                           ; Name         Instructions Cycles
  7494                           ; simple_byte            7     4 (average)
  7495                           ;	Chosen strategy is simple_byte
  7496   002D80  51E2               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
  7497   002D82  0A02               	xorlw	2	; case 2
  7498   002D84  B4D8               	btfsc	status,2,c
  7499   002D86  EF9E  F016         	goto	l7446
  7500   002D8A  0A01               	xorlw	1	; case 3
  7501   002D8C  B4D8               	btfsc	status,2,c
  7502   002D8E  EF9E  F016         	goto	l7446
  7503   002D92  EFA2  F016         	goto	l7450
  7504   002D96                     l385:
  7505   002D96  0012               	return		;funcret
  7506   002D98                     __end_of_I2C_DO_ADDRESS_NACK:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _I2C_DO_RESET *****************
  7510 ;; Defined at:
  7511 ;;		line 452 in file "mcc_generated_files/i2c_master.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      enum E2876
  7518 ;; Registers used:
  7519 ;;		wreg, status,2
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 13
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		i2_I2C_MasterFsm
  7536 ;;		_I2C_MasterFsm
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text49
  7541   003BE6                     __ptext49:
  7542                           	callstack 0
  7543   003BE6                     _I2C_DO_RESET:
  7544                           	callstack 0
  7545                           
  7546                           ;Skip over the trampoline to the duplicate function for level 2
  7547   003BE6  A257               	btfss	int$flags,1,c
  7548   003BE8  EFF8  F01D         	goto	_I2C_DO_RESET$intlevel0
  7549   003BEC  EF9E  F01E         	goto	i2_I2C_DO_RESET
  7550   003BF0                     _I2C_DO_RESET$intlevel0:
  7551                           	callstack 11
  7552   003BF0                     
  7553                           ;mcc_generated_files/i2c_master.c: 454:     I2C_Status.busy = 0;
  7554   003BF0  0100               	movlb	0	; () banked
  7555   003BF2  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
  7556   003BF4                     
  7557                           ; BSR set to: 0
  7558                           ;mcc_generated_files/i2c_master.c: 455:     I2C_Status.error = I2C_NOERR;
  7559   003BF4  0E00               	movlw	0
  7560   003BF6  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
  7561   003BF8                     
  7562                           ; BSR set to: 0
  7563                           ;mcc_generated_files/i2c_master.c: 456:     return I2C_RESET;
  7564   003BF8  0E0E               	movlw	14
  7565   003BFA                     
  7566                           ; BSR set to: 0
  7567   003BFA  0012               	return		;funcret
  7568   003BFC                     __end_of_I2C_DO_RESET:
  7569                           	callstack 0
  7570                           
  7571 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  7572 ;; Defined at:
  7573 ;;		line 446 in file "mcc_generated_files/i2c_master.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      enum E2876
  7580 ;; Registers used:
  7581 ;;		wreg, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; Hardware stack levels required when called: 14
  7594 ;; This function calls:
  7595 ;;		_I2C_MasterSendNack
  7596 ;; This function is called by:
  7597 ;;		_I2C_DO_RX
  7598 ;;		i2_I2C_MasterFsm
  7599 ;;		_I2C_MasterFsm
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text50
  7604   003C64                     __ptext50:
  7605                           	callstack 0
  7606   003C64                     _I2C_DO_RX_NACK_RESTART:
  7607                           	callstack 0
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;Skip over the trampoline to the duplicate function for level 2
  7611   003C64  A257               	btfss	int$flags,1,c
  7612   003C66  EF37  F01E         	goto	_I2C_DO_RX_NACK_RESTART$intlevel0
  7613   003C6A  EFBC  F01E         	goto	i2_I2C_DO_RX_NACK_RESTART
  7614   003C6E                     _I2C_DO_RX_NACK_RESTART$intlevel0:
  7615                           	callstack 10
  7616   003C6E                     
  7617                           ;mcc_generated_files/i2c_master.c: 448:     I2C_MasterSendNack();
  7618   003C6E  ECDF  F01E         	call	_I2C_MasterSendNack	;wreg free
  7619   003C72                     
  7620                           ;mcc_generated_files/i2c_master.c: 449:     return I2C_SEND_RESTART;
  7621   003C72  0E09               	movlw	9
  7622   003C74  0012               	return		;funcret
  7623   003C76                     __end_of_I2C_DO_RX_NACK_RESTART:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  7627 ;; Defined at:
  7628 ;;		line 440 in file "mcc_generated_files/i2c_master.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;		None
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;		None
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  1    wreg      enum E2876
  7635 ;; Registers used:
  7636 ;;		wreg, cstack
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;Total ram usage:        0 bytes
  7647 ;; Hardware stack levels used: 1
  7648 ;; Hardware stack levels required when called: 14
  7649 ;; This function calls:
  7650 ;;		_I2C_MasterSendNack
  7651 ;; This function is called by:
  7652 ;;		_I2C_DO_RX
  7653 ;;		i2_I2C_MasterFsm
  7654 ;;		_I2C_MasterFsm
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text51
  7659   003C76                     __ptext51:
  7660                           	callstack 0
  7661   003C76                     _I2C_DO_RX_NACK_STOP:
  7662                           	callstack 0
  7663                           
  7664                           ;Skip over the trampoline to the duplicate function for level 2
  7665   003C76  A257               	btfss	int$flags,1,c
  7666   003C78  EF40  F01E         	goto	_I2C_DO_RX_NACK_STOP$intlevel0
  7667   003C7C  EFC0  F01E         	goto	i2_I2C_DO_RX_NACK_STOP
  7668   003C80                     _I2C_DO_RX_NACK_STOP$intlevel0:
  7669                           	callstack 10
  7670   003C80                     
  7671                           ;mcc_generated_files/i2c_master.c: 442:     I2C_MasterSendNack();
  7672   003C80  ECDF  F01E         	call	_I2C_MasterSendNack	;wreg free
  7673   003C84                     
  7674                           ;mcc_generated_files/i2c_master.c: 443:     return I2C_SEND_STOP;
  7675   003C84  0E0A               	movlw	10
  7676   003C86  0012               	return		;funcret
  7677   003C88                     __end_of_I2C_DO_RX_NACK_STOP:
  7678                           	callstack 0
  7679                           
  7680 ;; *************** function _I2C_DO_RX_ACK *****************
  7681 ;; Defined at:
  7682 ;;		line 433 in file "mcc_generated_files/i2c_master.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      enum E2876
  7689 ;; Registers used:
  7690 ;;		wreg, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 14
  7703 ;; This function calls:
  7704 ;;		_I2C_MasterSendAck
  7705 ;; This function is called by:
  7706 ;;		i2_I2C_MasterFsm
  7707 ;;		_I2C_MasterFsm
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text52
  7712   003C88                     __ptext52:
  7713                           	callstack 0
  7714   003C88                     _I2C_DO_RX_ACK:
  7715                           	callstack 0
  7716                           
  7717                           ;Skip over the trampoline to the duplicate function for level 2
  7718   003C88  A257               	btfss	int$flags,1,c
  7719   003C8A  EF49  F01E         	goto	_I2C_DO_RX_ACK$intlevel0
  7720   003C8E  EFC4  F01E         	goto	i2_I2C_DO_RX_ACK
  7721   003C92                     _I2C_DO_RX_ACK$intlevel0:
  7722                           	callstack 10
  7723   003C92                     
  7724                           ;mcc_generated_files/i2c_master.c: 435:     I2C_MasterSendAck();
  7725   003C92  ECDC  F01E         	call	_I2C_MasterSendAck	;wreg free
  7726   003C96                     
  7727                           ;mcc_generated_files/i2c_master.c: 436:     return I2C_RCEN;
  7728   003C96  0E05               	movlw	5
  7729   003C98  0012               	return		;funcret
  7730   003C9A                     __end_of_I2C_DO_RX_ACK:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _I2C_DO_SEND_STOP *****************
  7734 ;; Defined at:
  7735 ;;		line 427 in file "mcc_generated_files/i2c_master.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      enum E2876
  7742 ;; Registers used:
  7743 ;;		wreg, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used: 1
  7755 ;; Hardware stack levels required when called: 14
  7756 ;; This function calls:
  7757 ;;		_I2C_MasterStop
  7758 ;; This function is called by:
  7759 ;;		_I2C_DO_TX
  7760 ;;		_I2C_DO_TX_EMPTY
  7761 ;;		_I2C_DO_ADDRESS_NACK
  7762 ;;		i2_I2C_MasterFsm
  7763 ;;		_I2C_MasterFsm
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text53
  7768   003C9A                     __ptext53:
  7769                           	callstack 0
  7770   003C9A                     _I2C_DO_SEND_STOP:
  7771                           	callstack 0
  7772                           
  7773                           ;Skip over the trampoline to the duplicate function for level 2
  7774   003C9A  A257               	btfss	int$flags,1,c
  7775   003C9C  EF52  F01E         	goto	_I2C_DO_SEND_STOP$intlevel0
  7776   003CA0  EFC8  F01E         	goto	i2_I2C_DO_SEND_STOP
  7777   003CA4                     _I2C_DO_SEND_STOP$intlevel0:
  7778                           	callstack 9
  7779   003CA4                     
  7780                           ;mcc_generated_files/i2c_master.c: 429:     I2C_MasterStop();
  7781   003CA4  ECF1  F01E         	call	_I2C_MasterStop	;wreg free
  7782   003CA8                     
  7783                           ;mcc_generated_files/i2c_master.c: 430:     return I2C_IDLE;
  7784   003CA8  0E00               	movlw	0
  7785   003CAA  0012               	return		;funcret
  7786   003CAC                     __end_of_I2C_DO_SEND_STOP:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _I2C_DO_SEND_RESTART *****************
  7790 ;; Defined at:
  7791 ;;		line 421 in file "mcc_generated_files/i2c_master.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      enum E2876
  7798 ;; Registers used:
  7799 ;;		wreg, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 14
  7812 ;; This function calls:
  7813 ;;		_I2C_MasterEnableRestart
  7814 ;; This function is called by:
  7815 ;;		_I2C_DO_TX_EMPTY
  7816 ;;		_I2C_DO_ADDRESS_NACK
  7817 ;;		i2_I2C_MasterFsm
  7818 ;;		_I2C_MasterFsm
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text54
  7823   003CAC                     __ptext54:
  7824                           	callstack 0
  7825   003CAC                     _I2C_DO_SEND_RESTART:
  7826                           	callstack 0
  7827                           
  7828                           ;Skip over the trampoline to the duplicate function for level 2
  7829   003CAC  A257               	btfss	int$flags,1,c
  7830   003CAE  EF5B  F01E         	goto	_I2C_DO_SEND_RESTART$intlevel0
  7831   003CB2  EFCC  F01E         	goto	i2_I2C_DO_SEND_RESTART
  7832   003CB6                     _I2C_DO_SEND_RESTART$intlevel0:
  7833                           	callstack 9
  7834   003CB6                     
  7835                           ;mcc_generated_files/i2c_master.c: 423:     I2C_MasterEnableRestart();
  7836   003CB6  ECF3  F01E         	call	_I2C_MasterEnableRestart	;wreg free
  7837   003CBA                     
  7838                           ;mcc_generated_files/i2c_master.c: 424:     return I2C_SEND_ADR_READ;
  7839   003CBA  0E01               	movlw	1
  7840   003CBC  0012               	return		;funcret
  7841   003CBE                     __end_of_I2C_DO_SEND_RESTART:
  7842                           	callstack 0
  7843                           
  7844 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  7845 ;; Defined at:
  7846 ;;		line 414 in file "mcc_generated_files/i2c_master.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      enum E2876
  7853 ;; Registers used:
  7854 ;;		wreg, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;Total ram usage:        0 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 14
  7867 ;; This function calls:
  7868 ;;		_I2C_MasterEnableRestart
  7869 ;; This function is called by:
  7870 ;;		_I2C_DO_TX
  7871 ;;		i2_I2C_MasterFsm
  7872 ;;		_I2C_MasterFsm
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text55
  7877   003CBE                     __ptext55:
  7878                           	callstack 0
  7879   003CBE                     _I2C_DO_SEND_RESTART_WRITE:
  7880                           	callstack 0
  7881                           
  7882                           ;Skip over the trampoline to the duplicate function for level 2
  7883   003CBE  A257               	btfss	int$flags,1,c
  7884   003CC0  EF64  F01E         	goto	_I2C_DO_SEND_RESTART_WRITE$intlevel0
  7885   003CC4  EFD0  F01E         	goto	i2_I2C_DO_SEND_RESTART_WRITE
  7886   003CC8                     _I2C_DO_SEND_RESTART_WRITE$intlevel0:
  7887                           	callstack 9
  7888   003CC8                     
  7889                           ;mcc_generated_files/i2c_master.c: 416:     I2C_MasterEnableRestart();
  7890   003CC8  ECF3  F01E         	call	_I2C_MasterEnableRestart	;wreg free
  7891   003CCC                     
  7892                           ;mcc_generated_files/i2c_master.c: 417:     return I2C_SEND_ADR_WRITE;
  7893   003CCC  0E02               	movlw	2
  7894   003CCE  0012               	return		;funcret
  7895   003CD0                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  7896                           	callstack 0
  7897                           
  7898 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  7899 ;; Defined at:
  7900 ;;		line 408 in file "mcc_generated_files/i2c_master.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;		None
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      enum E2876
  7907 ;; Registers used:
  7908 ;;		wreg, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:        0 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 14
  7921 ;; This function calls:
  7922 ;;		_I2C_MasterEnableRestart
  7923 ;; This function is called by:
  7924 ;;		_I2C_DO_TX
  7925 ;;		i2_I2C_MasterFsm
  7926 ;;		_I2C_MasterFsm
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text56
  7931   003CD0                     __ptext56:
  7932                           	callstack 0
  7933   003CD0                     _I2C_DO_SEND_RESTART_READ:
  7934                           	callstack 0
  7935                           
  7936                           ;Skip over the trampoline to the duplicate function for level 2
  7937   003CD0  A257               	btfss	int$flags,1,c
  7938   003CD2  EF6D  F01E         	goto	_I2C_DO_SEND_RESTART_READ$intlevel0
  7939   003CD6  EFD4  F01E         	goto	i2_I2C_DO_SEND_RESTART_READ
  7940   003CDA                     _I2C_DO_SEND_RESTART_READ$intlevel0:
  7941                           	callstack 9
  7942   003CDA                     
  7943                           ;mcc_generated_files/i2c_master.c: 410:     I2C_MasterEnableRestart();
  7944   003CDA  ECF3  F01E         	call	_I2C_MasterEnableRestart	;wreg free
  7945   003CDE                     
  7946                           ;mcc_generated_files/i2c_master.c: 411:     return I2C_SEND_ADR_READ;
  7947   003CDE  0E01               	movlw	1
  7948   003CE0  0012               	return		;funcret
  7949   003CE2                     __end_of_I2C_DO_SEND_RESTART_READ:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _I2C_DO_RCEN *****************
  7953 ;; Defined at:
  7954 ;;		line 360 in file "mcc_generated_files/i2c_master.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      enum E2876
  7961 ;; Registers used:
  7962 ;;		wreg, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; Hardware stack levels required when called: 14
  7975 ;; This function calls:
  7976 ;;		_I2C_MasterStartRx
  7977 ;; This function is called by:
  7978 ;;		i2_I2C_MasterFsm
  7979 ;;		_I2C_MasterFsm
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text57
  7984   003BFC                     __ptext57:
  7985                           	callstack 0
  7986   003BFC                     _I2C_DO_RCEN:
  7987                           	callstack 0
  7988                           
  7989                           ;Skip over the trampoline to the duplicate function for level 2
  7990   003BFC  A257               	btfss	int$flags,1,c
  7991   003BFE  EF03  F01E         	goto	_I2C_DO_RCEN$intlevel0
  7992   003C02  EFA4  F01E         	goto	i2_I2C_DO_RCEN
  7993   003C06                     _I2C_DO_RCEN$intlevel0:
  7994                           	callstack 10
  7995   003C06                     
  7996                           ;mcc_generated_files/i2c_master.c: 362:     I2C_Status.addressNackCheck = 0;
  7997   003C06  0100               	movlb	0	; () banked
  7998   003C08  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
  7999   003C0A                     
  8000                           ; BSR set to: 0
  8001                           ;mcc_generated_files/i2c_master.c: 363:     I2C_MasterStartRx();
  8002   003C0A  ECEF  F01E         	call	_I2C_MasterStartRx	;wreg free
  8003   003C0E                     
  8004                           ;mcc_generated_files/i2c_master.c: 364:     return I2C_RX;
  8005   003C0E  0E04               	movlw	4
  8006   003C10  0012               	return		;funcret
  8007   003C12                     __end_of_I2C_DO_RCEN:
  8008                           	callstack 0
  8009                           
  8010 ;; *************** function _I2C_DO_RX *****************
  8011 ;; Defined at:
  8012 ;;		line 336 in file "mcc_generated_files/i2c_master.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      enum E2876
  8019 ;; Registers used:
  8020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;Total ram usage:        2 bytes
  8031 ;; Hardware stack levels used: 1
  8032 ;; Hardware stack levels required when called: 16
  8033 ;; This function calls:
  8034 ;;		NULL
  8035 ;;		_I2C_CallbackReturnReset
  8036 ;;		_I2C_CallbackReturnStop
  8037 ;;		_I2C_DO_RX_NACK_RESTART
  8038 ;;		_I2C_DO_RX_NACK_STOP
  8039 ;;		_I2C_MasterGetRxData
  8040 ;;		_I2C_MasterSendAck
  8041 ;;		_rd1RegCompleteHandler
  8042 ;;		_rd2RegCompleteHandler
  8043 ;;		_rdBlkRegCompleteHandler
  8044 ;;		_wr1RegCompleteHandler
  8045 ;;		_wr2RegCompleteHandler
  8046 ;; This function is called by:
  8047 ;;		i2_I2C_MasterFsm
  8048 ;;		_I2C_MasterFsm
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text58
  8053   002398                     __ptext58:
  8054                           	callstack 0
  8055   002398                     _I2C_DO_RX:
  8056                           	callstack 0
  8057                           
  8058                           ;Skip over the trampoline to the duplicate function for level 2
  8059   002398  A257               	btfss	int$flags,1,c
  8060   00239A  EFD1  F011         	goto	_I2C_DO_RX$intlevel0
  8061   00239E  EFD4  F012         	goto	i2_I2C_DO_RX
  8062   0023A2                     _I2C_DO_RX$intlevel0:
  8063                           	callstack 8
  8064   0023A2                     
  8065                           ;mcc_generated_files/i2c_master.c: 338:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  8066   0023A2  ECED  F01E         	call	_I2C_MasterGetRxData	;wreg free
  8067   0023A6  C0CD  FFD9         	movff	_I2C_Status+29,fsr2l
  8068   0023AA  C0CE  FFDA         	movff	_I2C_Status+30,fsr2h
  8069   0023AE  6EDF               	movwf	indf2,c
  8070   0023B0  0100               	movlb	0	; () banked
  8071   0023B2  4BCD               	infsnz	(_I2C_Status+29)& (0+255),f,b
  8072   0023B4  2BCE               	incf	(_I2C_Status+30)& (0+255),f,b
  8073   0023B6                     
  8074                           ; BSR set to: 0
  8075                           ;mcc_generated_files/i2c_master.c: 339:     if(--I2C_Status.data_length)
  8076   0023B6  07CF               	decf	(_I2C_Status+31)& (0+255),f,b
  8077   0023B8  A0D8               	btfss	status,0,c
  8078   0023BA  07D0               	decf	(_I2C_Status+32)& (0+255),f,b
  8079   0023BC  51CF               	movf	(_I2C_Status+31)& (0+255),w,b
  8080   0023BE  11D0               	iorwf	(_I2C_Status+32)& (0+255),w,b
  8081   0023C0  B4D8               	btfsc	status,2,c
  8082   0023C2  EFE5  F011         	goto	u4561
  8083   0023C6  EFE7  F011         	goto	u4560
  8084   0023CA                     u4561:
  8085   0023CA  EFEC  F011         	goto	l322
  8086   0023CE                     u4560:
  8087   0023CE                     
  8088                           ; BSR set to: 0
  8089                           ;mcc_generated_files/i2c_master.c: 340:     {;mcc_generated_files/i2c_master.c: 341:    
      +                               I2C_MasterSendAck();
  8090   0023CE  ECDC  F01E         	call	_I2C_MasterSendAck	;wreg free
  8091   0023D2                     
  8092                           ;mcc_generated_files/i2c_master.c: 342:         return I2C_RCEN;
  8093   0023D2  0E05               	movlw	5
  8094   0023D4  EF24  F012         	goto	l323
  8095   0023D8                     l322:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;mcc_generated_files/i2c_master.c: 345:     {;mcc_generated_files/i2c_master.c: 346:    
      +                               I2C_Status.bufferFree = 1;
  8099   0023D8  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
  8100                           
  8101                           ;mcc_generated_files/i2c_master.c: 347:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  8102   0023DA  EFF7  F011         	goto	l7390
  8103   0023DE                     l7380:
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;mcc_generated_files/i2c_master.c: 351:                 return I2C_DO_RX_NACK_RESTART();
  8107   0023DE  EC32  F01E         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  8108   0023E2  EF24  F012         	goto	l323
  8109   0023E6                     l7384:
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;mcc_generated_files/i2c_master.c: 355:                 return I2C_DO_RX_NACK_STOP();
  8113   0023E6  EC3B  F01E         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  8114   0023EA  EF24  F012         	goto	l323
  8115   0023EE                     l7390:
  8116                           
  8117                           ; BSR set to: 0
  8118   0023EE  C0BC  F0DF         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
  8119   0023F2  C0BD  F0E0         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
  8120   0023F6  D802               	call	u4578
  8121   0023F8  EF07  F012         	goto	u4579
  8122   0023FC                     u4578:
  8123   0023FC  0005               	push	
  8124   0023FE  6EFA               	movwf	pclath,c
  8125   002400  51B0               	movf	_I2C_Status& (0+255),w,b
  8126   002402  6EFD               	movwf	tosl,c
  8127   002404  51B1               	movf	(_I2C_Status+1)& (0+255),w,b
  8128   002406  6EFE               	movwf	tosh,c
  8129   002408  6AFF               	clrf	tosu,c
  8130   00240A  50FA               	movf	pclath,w,c
  8131   00240C  0012               	return		;indir
  8132   00240E                     u4579:
  8133   00240E  0100               	movlb	0	; () banked
  8134   002410  6FE2               	movwf	??_I2C_DO_RX& (0+255),b
  8135   002412  6BE3               	clrf	(??_I2C_DO_RX+1)& (0+255),b
  8136                           
  8137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8138                           ; Switch size 1, requested type "simple"
  8139                           ; Number of cases is 1, Range of values is 0 to 0
  8140                           ; switch strategies available:
  8141                           ; Name         Instructions Cycles
  8142                           ; simple_byte            4     3 (average)
  8143                           ;	Chosen strategy is simple_byte
  8144   002414  51E3               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
  8145   002416  0A00               	xorlw	0	; case 0
  8146   002418  B4D8               	btfsc	status,2,c
  8147   00241A  EF11  F012         	goto	l9270
  8148   00241E  EFF3  F011         	goto	l7384
  8149   002422                     l9270:
  8150                           
  8151                           ; BSR set to: 0
  8152                           ; Switch size 1, requested type "simple"
  8153                           ; Number of cases is 4, Range of values is 1 to 4
  8154                           ; switch strategies available:
  8155                           ; Name         Instructions Cycles
  8156                           ; simple_byte           13     7 (average)
  8157                           ;	Chosen strategy is simple_byte
  8158   002422  51E2               	movf	??_I2C_DO_RX& (0+255),w,b
  8159   002424  0A01               	xorlw	1	; case 1
  8160   002426  B4D8               	btfsc	status,2,c
  8161   002428  EFF3  F011         	goto	l7384
  8162   00242C  0A03               	xorlw	3	; case 2
  8163   00242E  B4D8               	btfsc	status,2,c
  8164   002430  EFEF  F011         	goto	l7380
  8165   002434  0A01               	xorlw	1	; case 3
  8166   002436  B4D8               	btfsc	status,2,c
  8167   002438  EFEF  F011         	goto	l7380
  8168   00243C  0A07               	xorlw	7	; case 4
  8169   00243E  B4D8               	btfsc	status,2,c
  8170   002440  EFF3  F011         	goto	l7384
  8171   002444  EFF3  F011         	goto	l7384
  8172   002448                     l323:
  8173   002448  0012               	return		;funcret
  8174   00244A                     __end_of_I2C_DO_RX:
  8175                           	callstack 0
  8176                           
  8177 ;; *************** function _I2C_DO_TX *****************
  8178 ;; Defined at:
  8179 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      enum E2876
  8186 ;; Registers used:
  8187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;Total ram usage:        2 bytes
  8198 ;; Hardware stack levels used: 1
  8199 ;; Hardware stack levels required when called: 16
  8200 ;; This function calls:
  8201 ;;		NULL
  8202 ;;		_I2C_CallbackReturnReset
  8203 ;;		_I2C_CallbackReturnStop
  8204 ;;		_I2C_DO_SEND_RESTART_READ
  8205 ;;		_I2C_DO_SEND_RESTART_WRITE
  8206 ;;		_I2C_DO_SEND_STOP
  8207 ;;		_I2C_MasterIsNack
  8208 ;;		_I2C_MasterSendTxData
  8209 ;;		_rd1RegCompleteHandler
  8210 ;;		_rd2RegCompleteHandler
  8211 ;;		_rdBlkRegCompleteHandler
  8212 ;;		_wr1RegCompleteHandler
  8213 ;;		_wr2RegCompleteHandler
  8214 ;; This function is called by:
  8215 ;;		i2_I2C_MasterFsm
  8216 ;;		_I2C_MasterFsm
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text59
  8221   001F02                     __ptext59:
  8222                           	callstack 0
  8223   001F02                     _I2C_DO_TX:
  8224                           	callstack 0
  8225                           
  8226                           ;Skip over the trampoline to the duplicate function for level 2
  8227   001F02  A257               	btfss	int$flags,1,c
  8228   001F04  EF86  F00F         	goto	_I2C_DO_TX$intlevel0
  8229   001F08  EF11  F011         	goto	i2_I2C_DO_TX
  8230   001F0C                     _I2C_DO_TX$intlevel0:
  8231                           	callstack 8
  8232   001F0C                     
  8233                           ;mcc_generated_files/i2c_master.c: 314:     if(I2C_MasterIsNack())
  8234   001F0C  EC1E  F01E         	call	_I2C_MasterIsNack	;wreg free
  8235   001F10  0900               	iorlw	0
  8236   001F12  B4D8               	btfsc	status,2,c
  8237   001F14  EF8E  F00F         	goto	u4531
  8238   001F18  EF90  F00F         	goto	u4530
  8239   001F1C                     u4531:
  8240   001F1C  EFCC  F00F         	goto	l306
  8241   001F20                     u4530:
  8242   001F20  EF9E  F00F         	goto	l7350
  8243   001F24                     l7336:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;mcc_generated_files/i2c_master.c: 319:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  8247   001F24  EC68  F01E         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  8248   001F28  EFE8  F00F         	goto	l309
  8249   001F2C                     l7340:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;mcc_generated_files/i2c_master.c: 321:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  8253   001F2C  EC5F  F01E         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  8254   001F30  EFE8  F00F         	goto	l309
  8255   001F34                     l7344:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;mcc_generated_files/i2c_master.c: 325:                 return I2C_DO_SEND_STOP();
  8259   001F34  EC4D  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
  8260   001F38  EFE8  F00F         	goto	l309
  8261   001F3C                     l7350:
  8262   001F3C  C0C2  F0DF         	movff	_I2C_Status+18,rd1RegCompleteHandler@ptr
  8263   001F40  C0C3  F0E0         	movff	_I2C_Status+19,rd1RegCompleteHandler@ptr+1
  8264   001F44  D802               	call	u4548
  8265   001F46  EFAF  F00F         	goto	u4549
  8266   001F4A                     u4548:
  8267   001F4A  0005               	push	
  8268   001F4C  6EFA               	movwf	pclath,c
  8269   001F4E  0100               	movlb	0	; () banked
  8270   001F50  51B6               	movf	(_I2C_Status+6)& (0+255),w,b
  8271   001F52  6EFD               	movwf	tosl,c
  8272   001F54  51B7               	movf	(_I2C_Status+7)& (0+255),w,b
  8273   001F56  6EFE               	movwf	tosh,c
  8274   001F58  6AFF               	clrf	tosu,c
  8275   001F5A  50FA               	movf	pclath,w,c
  8276   001F5C  0012               	return		;indir
  8277   001F5E                     u4549:
  8278   001F5E  0100               	movlb	0	; () banked
  8279   001F60  6FE2               	movwf	??_I2C_DO_TX& (0+255),b
  8280   001F62  6BE3               	clrf	(??_I2C_DO_TX+1)& (0+255),b
  8281                           
  8282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8283                           ; Switch size 1, requested type "simple"
  8284                           ; Number of cases is 1, Range of values is 0 to 0
  8285                           ; switch strategies available:
  8286                           ; Name         Instructions Cycles
  8287                           ; simple_byte            4     3 (average)
  8288                           ;	Chosen strategy is simple_byte
  8289   001F64  51E3               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
  8290   001F66  0A00               	xorlw	0	; case 0
  8291   001F68  B4D8               	btfsc	status,2,c
  8292   001F6A  EFB9  F00F         	goto	l9272
  8293   001F6E  EF9A  F00F         	goto	l7344
  8294   001F72                     l9272:
  8295                           
  8296                           ; BSR set to: 0
  8297                           ; Switch size 1, requested type "simple"
  8298                           ; Number of cases is 4, Range of values is 1 to 4
  8299                           ; switch strategies available:
  8300                           ; Name         Instructions Cycles
  8301                           ; simple_byte           13     7 (average)
  8302                           ;	Chosen strategy is simple_byte
  8303   001F72  51E2               	movf	??_I2C_DO_TX& (0+255),w,b
  8304   001F74  0A01               	xorlw	1	; case 1
  8305   001F76  B4D8               	btfsc	status,2,c
  8306   001F78  EF9A  F00F         	goto	l7344
  8307   001F7C  0A03               	xorlw	3	; case 2
  8308   001F7E  B4D8               	btfsc	status,2,c
  8309   001F80  EF92  F00F         	goto	l7336
  8310   001F84  0A01               	xorlw	1	; case 3
  8311   001F86  B4D8               	btfsc	status,2,c
  8312   001F88  EF96  F00F         	goto	l7340
  8313   001F8C  0A07               	xorlw	7	; case 4
  8314   001F8E  B4D8               	btfsc	status,2,c
  8315   001F90  EF9A  F00F         	goto	l7344
  8316   001F94  EF9A  F00F         	goto	l7344
  8317   001F98                     l306:
  8318                           
  8319                           ;mcc_generated_files/i2c_master.c: 329:     {;mcc_generated_files/i2c_master.c: 330:    
      +                               I2C_Status.addressNackCheck = 0;
  8320   001F98  0100               	movlb	0	; () banked
  8321   001F9A  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
  8322   001F9C                     
  8323                           ; BSR set to: 0
  8324                           ;mcc_generated_files/i2c_master.c: 331:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  8325   001F9C  C0CD  FFD9         	movff	_I2C_Status+29,fsr2l
  8326   001FA0  C0CE  FFDA         	movff	_I2C_Status+30,fsr2h
  8327   001FA4  4BCD               	infsnz	(_I2C_Status+29)& (0+255),f,b
  8328   001FA6  2BCE               	incf	(_I2C_Status+30)& (0+255),f,b
  8329   001FA8  50DF               	movf	indf2,w,c
  8330   001FAA  ECB4  F01E         	call	_I2C_MasterSendTxData
  8331   001FAE                     
  8332                           ;mcc_generated_files/i2c_master.c: 332:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  8333   001FAE  0100               	movlb	0	; () banked
  8334   001FB0  07CF               	decf	(_I2C_Status+31)& (0+255),f,b
  8335   001FB2  A0D8               	btfss	status,0,c
  8336   001FB4  07D0               	decf	(_I2C_Status+32)& (0+255),f,b
  8337   001FB6  51CF               	movf	(_I2C_Status+31)& (0+255),w,b
  8338   001FB8  11D0               	iorwf	(_I2C_Status+32)& (0+255),w,b
  8339   001FBA  A4D8               	btfss	status,2,c
  8340   001FBC  EFE2  F00F         	goto	u4551
  8341   001FC0  EFE4  F00F         	goto	u4550
  8342   001FC4                     u4551:
  8343   001FC4  EFE7  F00F         	goto	l7358
  8344   001FC8                     u4550:
  8345   001FC8                     
  8346                           ; BSR set to: 0
  8347   001FC8  0E06               	movlw	6
  8348   001FCA  EFE8  F00F         	goto	l309
  8349   001FCE                     l7358:
  8350                           
  8351                           ; BSR set to: 0
  8352   001FCE  0E03               	movlw	3
  8353   001FD0                     l309:
  8354   001FD0  0012               	return		;funcret
  8355   001FD2                     __end_of_I2C_DO_TX:
  8356                           	callstack 0
  8357                           
  8358 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  8359 ;; Defined at:
  8360 ;;		line 305 in file "mcc_generated_files/i2c_master.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      enum E2876
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;Total ram usage:        0 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; Hardware stack levels required when called: 14
  8381 ;; This function calls:
  8382 ;;		_I2C_MasterSendTxData
  8383 ;; This function is called by:
  8384 ;;		i2_I2C_MasterFsm
  8385 ;;		_I2C_MasterFsm
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text60
  8390   003B86                     __ptext60:
  8391                           	callstack 0
  8392   003B86                     _I2C_DO_SEND_ADR_WRITE:
  8393                           	callstack 0
  8394                           
  8395                           ;Skip over the trampoline to the duplicate function for level 2
  8396   003B86  A257               	btfss	int$flags,1,c
  8397   003B88  EFC8  F01D         	goto	_I2C_DO_SEND_ADR_WRITE$intlevel0
  8398   003B8C  EF97  F01E         	goto	i2_I2C_DO_SEND_ADR_WRITE
  8399   003B90                     _I2C_DO_SEND_ADR_WRITE$intlevel0:
  8400                           	callstack 10
  8401   003B90                     
  8402                           ;mcc_generated_files/i2c_master.c: 307:     I2C_Status.addressNackCheck = 1;
  8403   003B90  0100               	movlb	0	; () banked
  8404   003B92  81D3               	bsf	(_I2C_Status+35)& (0+255),0,b
  8405   003B94                     
  8406                           ; BSR set to: 0
  8407                           ;mcc_generated_files/i2c_master.c: 308:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
  8408   003B94  51CC               	movf	(_I2C_Status+28)& (0+255),w,b
  8409   003B96  ECB4  F01E         	call	_I2C_MasterSendTxData
  8410   003B9A                     
  8411                           ;mcc_generated_files/i2c_master.c: 309:     return I2C_TX;
  8412   003B9A  0E03               	movlw	3
  8413   003B9C  0012               	return		;funcret
  8414   003B9E                     __end_of_I2C_DO_SEND_ADR_WRITE:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  8418 ;; Defined at:
  8419 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      enum E2876
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 14
  8440 ;; This function calls:
  8441 ;;		_I2C_MasterSendTxData
  8442 ;; This function is called by:
  8443 ;;		i2_I2C_MasterFsm
  8444 ;;		_I2C_MasterFsm
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text61
  8449   003B54                     __ptext61:
  8450                           	callstack 0
  8451   003B54                     _I2C_DO_SEND_ADR_READ:
  8452                           	callstack 0
  8453                           
  8454                           ;Skip over the trampoline to the duplicate function for level 2
  8455   003B54  A257               	btfss	int$flags,1,c
  8456   003B56  EFAF  F01D         	goto	_I2C_DO_SEND_ADR_READ$intlevel0
  8457   003B5A  EF81  F01E         	goto	i2_I2C_DO_SEND_ADR_READ
  8458   003B5E                     _I2C_DO_SEND_ADR_READ$intlevel0:
  8459                           	callstack 10
  8460   003B5E                     
  8461                           ;mcc_generated_files/i2c_master.c: 300:     I2C_Status.addressNackCheck = 1;
  8462   003B5E  0100               	movlb	0	; () banked
  8463   003B60  81D3               	bsf	(_I2C_Status+35)& (0+255),0,b
  8464   003B62                     
  8465                           ; BSR set to: 0
  8466                           ;mcc_generated_files/i2c_master.c: 301:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
  8467   003B62  51CC               	movf	(_I2C_Status+28)& (0+255),w,b
  8468   003B64  0901               	iorlw	1
  8469   003B66  ECB4  F01E         	call	_I2C_MasterSendTxData
  8470   003B6A                     
  8471                           ;mcc_generated_files/i2c_master.c: 302:     return I2C_RCEN;
  8472   003B6A  0E05               	movlw	5
  8473   003B6C  0012               	return		;funcret
  8474   003B6E                     __end_of_I2C_DO_SEND_ADR_READ:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function _I2C_DO_IDLE *****************
  8478 ;; Defined at:
  8479 ;;		line 291 in file "mcc_generated_files/i2c_master.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      enum E2876
  8486 ;; Registers used:
  8487 ;;		wreg, status,2
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 13
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		i2_I2C_MasterFsm
  8504 ;;		_I2C_MasterFsm
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text62
  8509   003C12                     __ptext62:
  8510                           	callstack 0
  8511   003C12                     _I2C_DO_IDLE:
  8512                           	callstack 0
  8513                           
  8514                           ;Skip over the trampoline to the duplicate function for level 2
  8515   003C12  A257               	btfss	int$flags,1,c
  8516   003C14  EF0E  F01E         	goto	_I2C_DO_IDLE$intlevel0
  8517   003C18  EFAA  F01E         	goto	i2_I2C_DO_IDLE
  8518   003C1C                     _I2C_DO_IDLE$intlevel0:
  8519                           	callstack 11
  8520   003C1C                     
  8521                           ;mcc_generated_files/i2c_master.c: 293:     I2C_Status.busy = 0;
  8522   003C1C  0100               	movlb	0	; () banked
  8523   003C1E  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
  8524   003C20                     
  8525                           ; BSR set to: 0
  8526                           ;mcc_generated_files/i2c_master.c: 294:     I2C_Status.error = I2C_NOERR;
  8527   003C20  0E00               	movlw	0
  8528   003C22  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
  8529   003C24                     
  8530                           ; BSR set to: 0
  8531                           ;mcc_generated_files/i2c_master.c: 295:     return I2C_RESET;
  8532   003C24  0E0E               	movlw	14
  8533   003C26                     
  8534                           ; BSR set to: 0
  8535   003C26  0012               	return		;funcret
  8536   003C28                     __end_of_I2C_DO_IDLE:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _I2C_DO_TX_EMPTY *****************
  8540 ;; Defined at:
  8541 ;;		line 367 in file "mcc_generated_files/i2c_master.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;		None
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      enum E2876
  8548 ;; Registers used:
  8549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;Total ram usage:        2 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 16
  8562 ;; This function calls:
  8563 ;;		NULL
  8564 ;;		_I2C_CallbackReturnReset
  8565 ;;		_I2C_CallbackReturnStop
  8566 ;;		_I2C_DO_SEND_RESTART
  8567 ;;		_I2C_DO_SEND_STOP
  8568 ;;		_I2C_MasterSetIrq
  8569 ;;		_rd1RegCompleteHandler
  8570 ;;		_rd2RegCompleteHandler
  8571 ;;		_rdBlkRegCompleteHandler
  8572 ;;		_wr1RegCompleteHandler
  8573 ;;		_wr2RegCompleteHandler
  8574 ;; This function is called by:
  8575 ;;		i2_I2C_MasterFsm
  8576 ;;		_I2C_MasterFsm
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text63
  8581   0029D6                     __ptext63:
  8582                           	callstack 0
  8583   0029D6                     _I2C_DO_TX_EMPTY:
  8584                           	callstack 0
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;Skip over the trampoline to the duplicate function for level 2
  8588   0029D6  A257               	btfss	int$flags,1,c
  8589   0029D8  EFF0  F014         	goto	_I2C_DO_TX_EMPTY$intlevel0
  8590   0029DC  EF6D  F015         	goto	i2_I2C_DO_TX_EMPTY
  8591   0029E0                     _I2C_DO_TX_EMPTY$intlevel0:
  8592                           	callstack 8
  8593   0029E0                     
  8594                           ;mcc_generated_files/i2c_master.c: 369:     I2C_Status.bufferFree = 1;
  8595   0029E0  0100               	movlb	0	; () banked
  8596   0029E2  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
  8597                           
  8598                           ;mcc_generated_files/i2c_master.c: 370:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  8599   0029E4  EF01  F015         	goto	l7422
  8600   0029E8                     l7406:
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;mcc_generated_files/i2c_master.c: 374:             return I2C_DO_SEND_RESTART();
  8604   0029E8  EC56  F01E         	call	_I2C_DO_SEND_RESTART	;wreg free
  8605   0029EC  EF2E  F015         	goto	l340
  8606   0029F0                     l7410:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;mcc_generated_files/i2c_master.c: 376:             I2C_MasterSetIrq();
  8610   0029F0  ECEB  F01E         	call	_I2C_MasterSetIrq	;wreg free
  8611   0029F4                     
  8612                           ;mcc_generated_files/i2c_master.c: 377:             return I2C_TX;
  8613   0029F4  0E03               	movlw	3
  8614   0029F6  EF2E  F015         	goto	l340
  8615   0029FA                     l7416:
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;mcc_generated_files/i2c_master.c: 380:             return I2C_DO_SEND_STOP();
  8619   0029FA  EC4D  F01E         	call	_I2C_DO_SEND_STOP	;wreg free
  8620   0029FE  EF2E  F015         	goto	l340
  8621   002A02                     l7422:
  8622                           
  8623                           ; BSR set to: 0
  8624   002A02  C0BC  F0DF         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
  8625   002A06  C0BD  F0E0         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
  8626   002A0A  D802               	call	u4588
  8627   002A0C  EF11  F015         	goto	u4589
  8628   002A10                     u4588:
  8629   002A10  0005               	push	
  8630   002A12  6EFA               	movwf	pclath,c
  8631   002A14  51B0               	movf	_I2C_Status& (0+255),w,b
  8632   002A16  6EFD               	movwf	tosl,c
  8633   002A18  51B1               	movf	(_I2C_Status+1)& (0+255),w,b
  8634   002A1A  6EFE               	movwf	tosh,c
  8635   002A1C  6AFF               	clrf	tosu,c
  8636   002A1E  50FA               	movf	pclath,w,c
  8637   002A20  0012               	return		;indir
  8638   002A22                     u4589:
  8639   002A22  0100               	movlb	0	; () banked
  8640   002A24  6FE2               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
  8641   002A26  6BE3               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
  8642                           
  8643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8644                           ; Switch size 1, requested type "simple"
  8645                           ; Number of cases is 1, Range of values is 0 to 0
  8646                           ; switch strategies available:
  8647                           ; Name         Instructions Cycles
  8648                           ; simple_byte            4     3 (average)
  8649                           ;	Chosen strategy is simple_byte
  8650   002A28  51E3               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
  8651   002A2A  0A00               	xorlw	0	; case 0
  8652   002A2C  B4D8               	btfsc	status,2,c
  8653   002A2E  EF1B  F015         	goto	l9274
  8654   002A32  EFFD  F014         	goto	l7416
  8655   002A36                     l9274:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ; Switch size 1, requested type "simple"
  8659                           ; Number of cases is 4, Range of values is 1 to 4
  8660                           ; switch strategies available:
  8661                           ; Name         Instructions Cycles
  8662                           ; simple_byte           13     7 (average)
  8663                           ;	Chosen strategy is simple_byte
  8664   002A36  51E2               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
  8665   002A38  0A01               	xorlw	1	; case 1
  8666   002A3A  B4D8               	btfsc	status,2,c
  8667   002A3C  EFFD  F014         	goto	l7416
  8668   002A40  0A03               	xorlw	3	; case 2
  8669   002A42  B4D8               	btfsc	status,2,c
  8670   002A44  EFF4  F014         	goto	l7406
  8671   002A48  0A01               	xorlw	1	; case 3
  8672   002A4A  B4D8               	btfsc	status,2,c
  8673   002A4C  EFF4  F014         	goto	l7406
  8674   002A50  0A07               	xorlw	7	; case 4
  8675   002A52  B4D8               	btfsc	status,2,c
  8676   002A54  EFF8  F014         	goto	l7410
  8677   002A58  EFFD  F014         	goto	l7416
  8678   002A5C                     l340:
  8679   002A5C  0012               	return		;funcret
  8680   002A5E                     __end_of_I2C_DO_TX_EMPTY:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _I2C_MasterSetIrq *****************
  8684 ;; Defined at:
  8685 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		None
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 13
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_I2C_DO_TX_EMPTY
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text64
  8714   003DD6                     __ptext64:
  8715                           	callstack 0
  8716   003DD6                     _I2C_MasterSetIrq:
  8717                           	callstack 10
  8718   003DD6                     
  8719                           ;mcc_generated_files/i2c_master.c: 605:     PIR1bits.SSPIF = 1;
  8720   003DD6  869E               	bsf	158,3,c	;volatile
  8721   003DD8  0012               	return		;funcret
  8722   003DDA                     __end_of_I2C_MasterSetIrq:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _I2C_MasterIsNack *****************
  8726 ;; Defined at:
  8727 ;;		line 556 in file "mcc_generated_files/i2c_master.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      _Bool 
  8734 ;; Registers used:
  8735 ;;		wreg
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 13
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_I2C_MasterFsm
  8752 ;;		_I2C_DO_TX
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text65
  8757   003C3C                     __ptext65:
  8758                           	callstack 0
  8759   003C3C                     _I2C_MasterIsNack:
  8760                           	callstack 11
  8761   003C3C                     
  8762                           ;mcc_generated_files/i2c_master.c: 558:     return SSPCON2bits.ACKSTAT;
  8763   003C3C  BCC5               	btfsc	197,6,c	;volatile
  8764   003C3E  EF23  F01E         	goto	u4491
  8765   003C42  EF26  F01E         	goto	u4490
  8766   003C46                     u4491:
  8767   003C46  0E01               	movlw	1
  8768   003C48  EF27  F01E         	goto	u4496
  8769   003C4C                     u4490:
  8770   003C4C  0E00               	movlw	0
  8771   003C4E                     u4496:
  8772   003C4E  0012               	return		;funcret
  8773   003C50                     __end_of_I2C_MasterIsNack:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _I2C_MasterSendTxData *****************
  8777 ;; Defined at:
  8778 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  data            1    wreg     unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  data            1   40[COMRAM] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;Total ram usage:        1 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 13
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_I2C_DO_SEND_ADR_READ
  8803 ;;		_I2C_DO_SEND_ADR_WRITE
  8804 ;;		_I2C_DO_TX
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text66
  8809   003D68                     __ptext66:
  8810                           	callstack 0
  8811   003D68                     _I2C_MasterSendTxData:
  8812                           	callstack 10
  8813                           
  8814                           ;incstack = 0
  8815                           ;I2C_MasterSendTxData@data stored from wreg
  8816   003D68  6E29               	movwf	I2C_MasterSendTxData@data^0,c
  8817   003D6A                     
  8818                           ;mcc_generated_files/i2c_master.c: 526: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_
      +                          master.c: 528:     SSPBUF = data;
  8819   003D6A  C029  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  8820   003D6E  0012               	return		;funcret
  8821   003D70                     __end_of_I2C_MasterSendTxData:
  8822                           	callstack 0
  8823                           
  8824 ;; *************** function _I2C_MasterSendAck *****************
  8825 ;; Defined at:
  8826 ;;		line 561 in file "mcc_generated_files/i2c_master.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;		None
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;		None
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		None
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8844 ;;Total ram usage:        0 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 13
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_I2C_DO_RX
  8851 ;;		_I2C_DO_RX_ACK
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text67
  8856   003DB8                     __ptext67:
  8857                           	callstack 0
  8858   003DB8                     _I2C_MasterSendAck:
  8859                           	callstack 10
  8860   003DB8                     
  8861                           ;mcc_generated_files/i2c_master.c: 563:     SSPCON2bits.ACKDT = 0;
  8862   003DB8  9AC5               	bcf	197,5,c	;volatile
  8863                           
  8864                           ;mcc_generated_files/i2c_master.c: 564:     SSPCON2bits.ACKEN = 1;
  8865   003DBA  88C5               	bsf	197,4,c	;volatile
  8866   003DBC  0012               	return		;funcret
  8867   003DBE                     __end_of_I2C_MasterSendAck:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _I2C_MasterGetRxData *****************
  8871 ;; Defined at:
  8872 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      unsigned char 
  8879 ;; Registers used:
  8880 ;;		wreg, status,2
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;Total ram usage:        0 bytes
  8891 ;; Hardware stack levels used: 1
  8892 ;; Hardware stack levels required when called: 13
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_I2C_DO_RX
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text68
  8901   003DDA                     __ptext68:
  8902                           	callstack 0
  8903   003DDA                     _I2C_MasterGetRxData:
  8904                           	callstack 10
  8905   003DDA                     
  8906                           ;mcc_generated_files/i2c_master.c: 523:     return SSPBUF;
  8907   003DDA  50C9               	movf	201,w,c	;volatile
  8908   003DDC  0012               	return		;funcret
  8909   003DDE                     __end_of_I2C_MasterGetRxData:
  8910                           	callstack 0
  8911                           
  8912 ;; *************** function _I2C_MasterSendNack *****************
  8913 ;; Defined at:
  8914 ;;		line 567 in file "mcc_generated_files/i2c_master.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		None
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;Total ram usage:        0 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 13
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_I2C_DO_RX_NACK_STOP
  8939 ;;		_I2C_DO_RX_NACK_RESTART
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text69
  8944   003DBE                     __ptext69:
  8945                           	callstack 0
  8946   003DBE                     _I2C_MasterSendNack:
  8947                           	callstack 10
  8948   003DBE                     
  8949                           ;mcc_generated_files/i2c_master.c: 569:     SSPCON2bits.ACKDT = 1;
  8950   003DBE  8AC5               	bsf	197,5,c	;volatile
  8951                           
  8952                           ;mcc_generated_files/i2c_master.c: 570:     SSPCON2bits.ACKEN = 1;
  8953   003DC0  88C5               	bsf	197,4,c	;volatile
  8954   003DC2  0012               	return		;funcret
  8955   003DC4                     __end_of_I2C_MasterSendNack:
  8956                           	callstack 0
  8957                           
  8958 ;; *************** function _I2C_MasterStartRx *****************
  8959 ;; Defined at:
  8960 ;;		line 541 in file "mcc_generated_files/i2c_master.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      void 
  8967 ;; Registers used:
  8968 ;;		None
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used: 1
  8980 ;; Hardware stack levels required when called: 13
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_I2C_DO_RCEN
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text70
  8989   003DDE                     __ptext70:
  8990                           	callstack 0
  8991   003DDE                     _I2C_MasterStartRx:
  8992                           	callstack 10
  8993   003DDE                     
  8994                           ;mcc_generated_files/i2c_master.c: 543:     SSPCON2bits.RCEN = 1;
  8995   003DDE  86C5               	bsf	197,3,c	;volatile
  8996   003DE0  0012               	return		;funcret
  8997   003DE2                     __end_of_I2C_MasterStartRx:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function _I2C_CallbackReturnReset *****************
  9001 ;; Defined at:
  9002 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  funPtr          2    4[BANK0 ] PTR void 
  9005 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9006 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      enum E363
  9011 ;; Registers used:
  9012 ;;		wreg
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;Total ram usage:        2 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; Hardware stack levels required when called: 13
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_I2C_Open
  9029 ;;		i2_I2C_DO_TX
  9030 ;;		i2_I2C_DO_RX
  9031 ;;		i2_I2C_DO_TX_EMPTY
  9032 ;;		i2_I2C_DO_ADDRESS_NACK
  9033 ;;		_I2C_DO_TX
  9034 ;;		_I2C_DO_RX
  9035 ;;		_I2C_DO_TX_EMPTY
  9036 ;;		_I2C_DO_ADDRESS_NACK
  9037 ;;		_I2C_DO_RX_EMPTY
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text71
  9042   003D12                     __ptext71:
  9043                           	callstack 0
  9044   003D12                     _I2C_CallbackReturnReset:
  9045                           	callstack 0
  9046                           
  9047                           ;Skip over the trampoline to the duplicate function for level 2
  9048   003D12  A257               	btfss	int$flags,1,c
  9049   003D14  EF8E  F01E         	goto	_I2C_CallbackReturnReset$intlevel0
  9050   003D18  EF03  F01F         	goto	i2_I2C_CallbackReturnReset
  9051   003D1C                     _I2C_CallbackReturnReset$intlevel0:
  9052                           	callstack 10
  9053   003D1C                     
  9054                           ;mcc_generated_files/i2c_master.c: 483: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 484: {;mcc_generated_files/i2c_master.c: 485:  
      +                             return I2C_RESET_LINK;
  9055   003D1C  0E05               	movlw	5
  9056   003D1E  0012               	return		;funcret
  9057   003D20                     __end_of_I2C_CallbackReturnReset:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _I2C_CallbackReturnStop *****************
  9061 ;; Defined at:
  9062 ;;		line 478 in file "mcc_generated_files/i2c_master.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  funPtr          2    4[BANK0 ] PTR void 
  9065 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9066 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      enum E363
  9071 ;; Registers used:
  9072 ;;		wreg
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;Total ram usage:        2 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; Hardware stack levels required when called: 13
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_I2C_Open
  9089 ;;		_I2C_SetCallback
  9090 ;;		i2_I2C_DO_TX
  9091 ;;		i2_I2C_DO_RX
  9092 ;;		i2_I2C_DO_TX_EMPTY
  9093 ;;		i2_I2C_DO_ADDRESS_NACK
  9094 ;;		_I2C_DO_TX
  9095 ;;		_I2C_DO_RX
  9096 ;;		_I2C_DO_TX_EMPTY
  9097 ;;		_I2C_DO_ADDRESS_NACK
  9098 ;;		_I2C_DO_RX_EMPTY
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text72
  9103   003D20                     __ptext72:
  9104                           	callstack 0
  9105   003D20                     _I2C_CallbackReturnStop:
  9106                           	callstack 0
  9107                           
  9108                           ;Skip over the trampoline to the duplicate function for level 2
  9109   003D20  A257               	btfss	int$flags,1,c
  9110   003D22  EF95  F01E         	goto	_I2C_CallbackReturnStop$intlevel0
  9111   003D26  EF05  F01F         	goto	i2_I2C_CallbackReturnStop
  9112   003D2A                     _I2C_CallbackReturnStop$intlevel0:
  9113                           	callstack 10
  9114   003D2A                     
  9115                           ;mcc_generated_files/i2c_master.c: 478: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 479: {;mcc_generated_files/i2c_master.c: 480:   
      +                            return I2C_STOP;
  9116   003D2A  0E01               	movlw	1
  9117   003D2C  0012               	return		;funcret
  9118   003D2E                     __end_of_I2C_CallbackReturnStop:
  9119                           	callstack 0
  9120                           
  9121 ;; *************** function _rdBlkRegCompleteHandler *****************
  9122 ;; Defined at:
  9123 ;;		line 128 in file "mcc_generated_files/examples/i2c_master_example.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  ptr             2    4[BANK0 ] PTR void 
  9126 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9127 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      enum E363
  9132 ;; Registers used:
  9133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;Total ram usage:        3 bytes
  9144 ;; Hardware stack levels used: 1
  9145 ;; Hardware stack levels required when called: 15
  9146 ;; This function calls:
  9147 ;;		_I2C_SetBuffer
  9148 ;;		_I2C_SetDataCompleteCallback
  9149 ;; This function is called by:
  9150 ;;		_I2C_ReadDataBlock
  9151 ;;		i2_I2C_DO_TX
  9152 ;;		i2_I2C_DO_RX
  9153 ;;		i2_I2C_DO_TX_EMPTY
  9154 ;;		i2_I2C_DO_ADDRESS_NACK
  9155 ;;		_I2C_DO_TX
  9156 ;;		_I2C_DO_RX
  9157 ;;		_I2C_DO_TX_EMPTY
  9158 ;;		_I2C_DO_ADDRESS_NACK
  9159 ;;		_I2C_DO_RX_EMPTY
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text73
  9164   003468                     __ptext73:
  9165                           	callstack 0
  9166   003468                     _rdBlkRegCompleteHandler:
  9167                           	callstack 0
  9168                           
  9169                           ;Skip over the trampoline to the duplicate function for level 2
  9170   003468  A257               	btfss	int$flags,1,c
  9171   00346A  EF39  F01A         	goto	_rdBlkRegCompleteHandler$intlevel0
  9172   00346E  EF09  F01B         	goto	i2_rdBlkRegCompleteHandler
  9173   003472                     _rdBlkRegCompleteHandler$intlevel0:
  9174                           	callstack 8
  9175   003472                     
  9176                           ;mcc_generated_files/examples/i2c_master_example.c: 128: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 129: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 130:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  9177   003472  0100               	movlb	0	; () banked
  9178   003474  EE20 F002          	lfsr	2,2
  9179   003478  51DF               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
  9180   00347A  26D9               	addwf	fsr2l,f,c
  9181   00347C  51E0               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
  9182   00347E  22DA               	addwfc	fsr2h,f,c
  9183   003480  50DF               	movf	indf2,w,c
  9184   003482  6FE1               	movwf	??_rdBlkRegCompleteHandler& (0+255),b
  9185   003484  C0E1  F029         	movff	??_rdBlkRegCompleteHandler,I2C_SetBuffer@buffer
  9186   003488  6A2A               	clrf	(I2C_SetBuffer@buffer+1)^0,c
  9187   00348A  C0DF  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  9188   00348E  C0E0  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  9189   003492  CFDE F02B          	movff	postinc2,I2C_SetBuffer@bufferSize
  9190   003496  CFDD F02C          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  9191   00349A  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  9192   00349E                     
  9193                           ;mcc_generated_files/examples/i2c_master_example.c: 131:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9194   00349E  0E00               	movlw	0
  9195   0034A0  0100               	movlb	0	; () banked
  9196   0034A2  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  9197   0034A4  0E00               	movlw	0
  9198   0034A6  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  9199   0034A8  0E00               	movlw	0
  9200   0034AA  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  9201   0034AC  0E00               	movlw	0
  9202   0034AE  6FDE               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  9203   0034B0  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  9204   0034B4                     
  9205                           ;mcc_generated_files/examples/i2c_master_example.c: 132:     return I2C_RESTART_READ;
  9206   0034B4  0E02               	movlw	2
  9207   0034B6  0012               	return		;funcret
  9208   0034B8                     __end_of_rdBlkRegCompleteHandler:
  9209                           	callstack 0
  9210                           
  9211 ;; *************** function _wr1RegCompleteHandler *****************
  9212 ;; Defined at:
  9213 ;;		line 114 in file "mcc_generated_files/examples/i2c_master_example.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  ptr             2    4[BANK0 ] PTR void 
  9216 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9217 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      enum E363
  9222 ;; Registers used:
  9223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;Total ram usage:        2 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 15
  9236 ;; This function calls:
  9237 ;;		_I2C_SetBuffer
  9238 ;;		_I2C_SetDataCompleteCallback
  9239 ;; This function is called by:
  9240 ;;		i2_I2C_DO_TX
  9241 ;;		i2_I2C_DO_RX
  9242 ;;		i2_I2C_DO_TX_EMPTY
  9243 ;;		i2_I2C_DO_ADDRESS_NACK
  9244 ;;		_I2C_DO_TX
  9245 ;;		_I2C_DO_RX
  9246 ;;		_I2C_DO_TX_EMPTY
  9247 ;;		_I2C_DO_ADDRESS_NACK
  9248 ;;		_I2C_DO_RX_EMPTY
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text74
  9253   00368C                     __ptext74:
  9254                           	callstack 0
  9255   00368C                     _wr1RegCompleteHandler:
  9256                           	callstack 0
  9257                           
  9258                           ;Skip over the trampoline to the duplicate function for level 2
  9259   00368C  A257               	btfss	int$flags,1,c
  9260   00368E  EF4B  F01B         	goto	_wr1RegCompleteHandler$intlevel0
  9261   003692  EF73  F01C         	goto	i2_wr1RegCompleteHandler
  9262   003696                     _wr1RegCompleteHandler$intlevel0:
  9263                           	callstack 8
  9264   003696                     
  9265                           ;mcc_generated_files/examples/i2c_master_example.c: 114: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 115: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 116:     I2C_SetBuffer(ptr,1);
  9266   003696  C0DF  F029         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  9267   00369A  C0E0  F02A         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  9268   00369E  0E00               	movlw	0
  9269   0036A0  6E2C               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9270   0036A2  0E01               	movlw	1
  9271   0036A4  6E2B               	movwf	I2C_SetBuffer@bufferSize^0,c
  9272   0036A6  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  9273   0036AA                     
  9274                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9275   0036AA  0E00               	movlw	0
  9276   0036AC  0100               	movlb	0	; () banked
  9277   0036AE  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  9278   0036B0  0E00               	movlw	0
  9279   0036B2  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  9280   0036B4  0E00               	movlw	0
  9281   0036B6  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  9282   0036B8  0E00               	movlw	0
  9283   0036BA  6FDE               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  9284   0036BC  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  9285   0036C0                     
  9286                           ;mcc_generated_files/examples/i2c_master_example.c: 118:     return I2C_CONTINUE;
  9287   0036C0  0E04               	movlw	4
  9288   0036C2  0012               	return		;funcret
  9289   0036C4                     __end_of_wr1RegCompleteHandler:
  9290                           	callstack 0
  9291                           
  9292 ;; *************** function _rd2RegCompleteHandler *****************
  9293 ;; Defined at:
  9294 ;;		line 107 in file "mcc_generated_files/examples/i2c_master_example.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  ptr             2    4[BANK0 ] PTR void 
  9297 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9298 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      enum E363
  9303 ;; Registers used:
  9304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;Total ram usage:        2 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 15
  9317 ;; This function calls:
  9318 ;;		_I2C_SetBuffer
  9319 ;;		_I2C_SetDataCompleteCallback
  9320 ;; This function is called by:
  9321 ;;		_I2C_Read2ByteRegister
  9322 ;;		i2_I2C_DO_TX
  9323 ;;		i2_I2C_DO_RX
  9324 ;;		i2_I2C_DO_TX_EMPTY
  9325 ;;		i2_I2C_DO_ADDRESS_NACK
  9326 ;;		_I2C_DO_TX
  9327 ;;		_I2C_DO_RX
  9328 ;;		_I2C_DO_TX_EMPTY
  9329 ;;		_I2C_DO_ADDRESS_NACK
  9330 ;;		_I2C_DO_RX_EMPTY
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text75
  9335   0036C4                     __ptext75:
  9336                           	callstack 0
  9337   0036C4                     _rd2RegCompleteHandler:
  9338                           	callstack 0
  9339                           
  9340                           ;Skip over the trampoline to the duplicate function for level 2
  9341   0036C4  A257               	btfss	int$flags,1,c
  9342   0036C6  EF67  F01B         	goto	_rd2RegCompleteHandler$intlevel0
  9343   0036CA  EF89  F01C         	goto	i2_rd2RegCompleteHandler
  9344   0036CE                     _rd2RegCompleteHandler$intlevel0:
  9345                           	callstack 8
  9346   0036CE                     
  9347                           ;mcc_generated_files/examples/i2c_master_example.c: 107: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 108: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 109:     I2C_SetBuffer(ptr,2);
  9348   0036CE  C0DF  F029         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  9349   0036D2  C0E0  F02A         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  9350   0036D6  0E00               	movlw	0
  9351   0036D8  6E2C               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9352   0036DA  0E02               	movlw	2
  9353   0036DC  6E2B               	movwf	I2C_SetBuffer@bufferSize^0,c
  9354   0036DE  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  9355   0036E2                     
  9356                           ;mcc_generated_files/examples/i2c_master_example.c: 110:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9357   0036E2  0E00               	movlw	0
  9358   0036E4  0100               	movlb	0	; () banked
  9359   0036E6  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  9360   0036E8  0E00               	movlw	0
  9361   0036EA  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  9362   0036EC  0E00               	movlw	0
  9363   0036EE  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  9364   0036F0  0E00               	movlw	0
  9365   0036F2  6FDE               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  9366   0036F4  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  9367   0036F8                     
  9368                           ;mcc_generated_files/examples/i2c_master_example.c: 111:     return I2C_RESTART_READ;
  9369   0036F8  0E02               	movlw	2
  9370   0036FA  0012               	return		;funcret
  9371   0036FC                     __end_of_rd2RegCompleteHandler:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _rd1RegCompleteHandler *****************
  9375 ;; Defined at:
  9376 ;;		line 100 in file "mcc_generated_files/examples/i2c_master_example.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  ptr             2    4[BANK0 ] PTR void 
  9379 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
  9380 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;		None
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      enum E363
  9385 ;; Registers used:
  9386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;Total ram usage:        2 bytes
  9397 ;; Hardware stack levels used: 1
  9398 ;; Hardware stack levels required when called: 15
  9399 ;; This function calls:
  9400 ;;		_I2C_SetBuffer
  9401 ;;		_I2C_SetDataCompleteCallback
  9402 ;; This function is called by:
  9403 ;;		_I2C_Read1ByteRegister
  9404 ;;		i2_I2C_DO_TX
  9405 ;;		i2_I2C_DO_RX
  9406 ;;		i2_I2C_DO_TX_EMPTY
  9407 ;;		i2_I2C_DO_ADDRESS_NACK
  9408 ;;		_I2C_DO_TX
  9409 ;;		_I2C_DO_RX
  9410 ;;		_I2C_DO_TX_EMPTY
  9411 ;;		_I2C_DO_ADDRESS_NACK
  9412 ;;		_I2C_DO_RX_EMPTY
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text76
  9417   0036FC                     __ptext76:
  9418                           	callstack 0
  9419   0036FC                     _rd1RegCompleteHandler:
  9420                           	callstack 0
  9421                           
  9422                           ;Skip over the trampoline to the duplicate function for level 2
  9423   0036FC  A257               	btfss	int$flags,1,c
  9424   0036FE  EF83  F01B         	goto	_rd1RegCompleteHandler$intlevel0
  9425   003702  EF9F  F01C         	goto	i2_rd1RegCompleteHandler
  9426   003706                     _rd1RegCompleteHandler$intlevel0:
  9427                           	callstack 8
  9428   003706                     
  9429                           ;mcc_generated_files/examples/i2c_master_example.c: 100: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 101: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 102:     I2C_SetBuffer(ptr,1);
  9430   003706  C0DF  F029         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  9431   00370A  C0E0  F02A         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  9432   00370E  0E00               	movlw	0
  9433   003710  6E2C               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9434   003712  0E01               	movlw	1
  9435   003714  6E2B               	movwf	I2C_SetBuffer@bufferSize^0,c
  9436   003716  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  9437   00371A                     
  9438                           ;mcc_generated_files/examples/i2c_master_example.c: 103:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9439   00371A  0E00               	movlw	0
  9440   00371C  0100               	movlb	0	; () banked
  9441   00371E  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  9442   003720  0E00               	movlw	0
  9443   003722  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  9444   003724  0E00               	movlw	0
  9445   003726  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  9446   003728  0E00               	movlw	0
  9447   00372A  6FDE               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  9448   00372C  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  9449   003730                     
  9450                           ;mcc_generated_files/examples/i2c_master_example.c: 104:     return I2C_RESTART_READ;
  9451   003730  0E02               	movlw	2
  9452   003732  0012               	return		;funcret
  9453   003734                     __end_of_rd1RegCompleteHandler:
  9454                           	callstack 0
  9455                           
  9456 ;; *************** function _wr2RegCompleteHandler *****************
  9457 ;; Defined at:
  9458 ;;		line 121 in file "mcc_generated_files/examples/i2c_master_example.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  ptr             2    4[BANK0 ] PTR void 
  9461 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9462 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      enum E363
  9467 ;; Registers used:
  9468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;Total ram usage:        2 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 15
  9481 ;; This function calls:
  9482 ;;		_I2C_SetBuffer
  9483 ;;		_I2C_SetDataCompleteCallback
  9484 ;; This function is called by:
  9485 ;;		_I2C_Write2ByteRegister
  9486 ;;		i2_I2C_DO_TX
  9487 ;;		i2_I2C_DO_RX
  9488 ;;		i2_I2C_DO_TX_EMPTY
  9489 ;;		i2_I2C_DO_ADDRESS_NACK
  9490 ;;		_I2C_DO_TX
  9491 ;;		_I2C_DO_RX
  9492 ;;		_I2C_DO_TX_EMPTY
  9493 ;;		_I2C_DO_ADDRESS_NACK
  9494 ;;		_I2C_DO_RX_EMPTY
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           	psect	text77
  9499   003734                     __ptext77:
  9500                           	callstack 0
  9501   003734                     _wr2RegCompleteHandler:
  9502                           	callstack 0
  9503                           
  9504                           ;Skip over the trampoline to the duplicate function for level 2
  9505   003734  A257               	btfss	int$flags,1,c
  9506   003736  EF9F  F01B         	goto	_wr2RegCompleteHandler$intlevel0
  9507   00373A  EFB5  F01C         	goto	i2_wr2RegCompleteHandler
  9508   00373E                     _wr2RegCompleteHandler$intlevel0:
  9509                           	callstack 8
  9510   00373E                     
  9511                           ;mcc_generated_files/examples/i2c_master_example.c: 121: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 122: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(ptr,2);
  9512   00373E  C0DF  F029         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  9513   003742  C0E0  F02A         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  9514   003746  0E00               	movlw	0
  9515   003748  6E2C               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  9516   00374A  0E02               	movlw	2
  9517   00374C  6E2B               	movwf	I2C_SetBuffer@bufferSize^0,c
  9518   00374E  EC46  F01D         	call	_I2C_SetBuffer	;wreg free
  9519   003752                     
  9520                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  9521   003752  0E00               	movlw	0
  9522   003754  0100               	movlb	0	; () banked
  9523   003756  6FDB               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  9524   003758  0E00               	movlw	0
  9525   00375A  6FDC               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  9526   00375C  0E00               	movlw	0
  9527   00375E  6FDD               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  9528   003760  0E00               	movlw	0
  9529   003762  6FDE               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  9530   003764  ECCF  F01D         	call	_I2C_SetDataCompleteCallback	;wreg free
  9531   003768                     
  9532                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     return I2C_CONTINUE;
  9533   003768  0E04               	movlw	4
  9534   00376A  0012               	return		;funcret
  9535   00376C                     __end_of_wr2RegCompleteHandler:
  9536                           	callstack 0
  9537                           
  9538 ;; *************** function _I2C_SetDataCompleteCallback *****************
  9539 ;; Defined at:
  9540 ;;		line 231 in file "mcc_generated_files/i2c_master.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  9543 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  9544 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9545 ;;  ptr             2    2[BANK0 ] PTR void 
  9546 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9547 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;Total ram usage:        4 bytes
  9564 ;; Hardware stack levels used: 1
  9565 ;; Hardware stack levels required when called: 14
  9566 ;; This function calls:
  9567 ;;		_I2C_SetCallback
  9568 ;; This function is called by:
  9569 ;;		_I2C_Read1ByteRegister
  9570 ;;		_rd1RegCompleteHandler
  9571 ;;		_rd2RegCompleteHandler
  9572 ;;		_wr1RegCompleteHandler
  9573 ;;		_wr2RegCompleteHandler
  9574 ;;		_rdBlkRegCompleteHandler
  9575 ;;		_I2C_Read2ByteRegister
  9576 ;;		_I2C_Write2ByteRegister
  9577 ;;		_I2C_ReadDataBlock
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text78
  9582   003B9E                     __ptext78:
  9583                           	callstack 0
  9584   003B9E                     _I2C_SetDataCompleteCallback:
  9585                           	callstack 14
  9586   003B9E                     
  9587                           ;mcc_generated_files/i2c_master.c: 231: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 232: {;mcc_generated_files/i2c_master.c
      +                          : 233:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  9588   003B9E  C0DB  F029         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  9589   003BA2  C0DC  F02A         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  9590   003BA6  C0DD  F02B         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  9591   003BAA  C0DE  F02C         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  9592   003BAE  0E00               	movlw	0
  9593   003BB0  ECEA  F018         	call	_I2C_SetCallback
  9594   003BB4  0012               	return		;funcret
  9595   003BB6                     __end_of_I2C_SetDataCompleteCallback:
  9596                           	callstack 0
  9597                           
  9598 ;; *************** function _I2C_SetCallback *****************
  9599 ;; Defined at:
  9600 ;;		line 256 in file "mcc_generated_files/i2c_master.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  idx             1    wreg     enum E2894
  9603 ;;  cb              2   40[COMRAM] PTR FTN(PTR void ,)enum 
  9604 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  9605 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9606 ;;  ptr             2   42[COMRAM] PTR void 
  9607 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9608 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  idx             1   44[COMRAM] enum E2894
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;Total ram usage:        5 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 13
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_I2C_SetDataCompleteCallback
  9631 ;;		_I2C_SetAddressNackCallback
  9632 ;;		_I2C_SetWriteCollisionCallback
  9633 ;;		_I2C_SetDataNackCallback
  9634 ;;		_I2C_SetTimeoutCallback
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text79
  9639   0031D4                     __ptext79:
  9640                           	callstack 0
  9641   0031D4                     _I2C_SetCallback:
  9642                           	callstack 14
  9643                           
  9644                           ;incstack = 0
  9645                           ;I2C_SetCallback@idx stored from wreg
  9646   0031D4  6E2D               	movwf	I2C_SetCallback@idx^0,c
  9647   0031D6                     
  9648                           ;mcc_generated_files/i2c_master.c: 256: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 257: {;mcc_generate
      +                          d_files/i2c_master.c: 258:     if(cb)
  9649   0031D6  5029               	movf	I2C_SetCallback@cb^0,w,c
  9650   0031D8  102A               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  9651   0031DA  B4D8               	btfsc	status,2,c
  9652   0031DC  EFF2  F018         	goto	u4391
  9653   0031E0  EFF4  F018         	goto	u4390
  9654   0031E4                     u4391:
  9655   0031E4  EF0A  F019         	goto	l6952
  9656   0031E8                     u4390:
  9657   0031E8                     
  9658                           ;mcc_generated_files/i2c_master.c: 259:     {;mcc_generated_files/i2c_master.c: 260:    
      +                               I2C_Status.callbackTable[idx] = cb;
  9659   0031E8  502D               	movf	I2C_SetCallback@idx^0,w,c
  9660   0031EA  0D02               	mullw	2
  9661   0031EC  50F3               	movf	243,w,c
  9662   0031EE  0FB0               	addlw	low _I2C_Status
  9663   0031F0  6ED9               	movwf	fsr2l,c
  9664   0031F2  6ADA               	clrf	fsr2h,c
  9665   0031F4  C029  FFDE         	movff	I2C_SetCallback@cb,postinc2
  9666   0031F8  C02A  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  9667                           
  9668                           ;mcc_generated_files/i2c_master.c: 261:         I2C_Status.callbackPayload[idx] = ptr;
  9669   0031FC  502D               	movf	I2C_SetCallback@idx^0,w,c
  9670   0031FE  0D02               	mullw	2
  9671   003200  50F3               	movf	243,w,c
  9672   003202  0FBC               	addlw	low (_I2C_Status+12)
  9673   003204  6ED9               	movwf	fsr2l,c
  9674   003206  6ADA               	clrf	fsr2h,c
  9675   003208  C02B  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  9676   00320C  C02C  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  9677                           
  9678                           ;mcc_generated_files/i2c_master.c: 262:     }
  9679   003210  EF1C  F019         	goto	l284
  9680   003214                     l6952:
  9681                           
  9682                           ;mcc_generated_files/i2c_master.c: 264:     {;mcc_generated_files/i2c_master.c: 265:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  9683   003214  502D               	movf	I2C_SetCallback@idx^0,w,c
  9684   003216  0D02               	mullw	2
  9685   003218  50F3               	movf	243,w,c
  9686   00321A  0FB0               	addlw	low _I2C_Status
  9687   00321C  6ED9               	movwf	fsr2l,c
  9688   00321E  6ADA               	clrf	fsr2h,c
  9689   003220  0E20               	movlw	low _I2C_CallbackReturnStop
  9690   003222  6EDE               	movwf	postinc2,c
  9691   003224  0E3D               	movlw	high _I2C_CallbackReturnStop
  9692   003226  6EDD               	movwf	postdec2,c
  9693                           
  9694                           ;mcc_generated_files/i2c_master.c: 266:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  9695   003228  502D               	movf	I2C_SetCallback@idx^0,w,c
  9696   00322A  0D02               	mullw	2
  9697   00322C  50F3               	movf	243,w,c
  9698   00322E  0FBC               	addlw	low (_I2C_Status+12)
  9699   003230  6ED9               	movwf	fsr2l,c
  9700   003232  6ADA               	clrf	fsr2h,c
  9701   003234  6ADE               	clrf	postinc2,c
  9702   003236  6ADD               	clrf	postdec2,c
  9703   003238                     l284:
  9704   003238  0012               	return		;funcret
  9705   00323A                     __end_of_I2C_SetCallback:
  9706                           	callstack 0
  9707                           
  9708 ;; *************** function _I2C_SetBuffer *****************
  9709 ;; Defined at:
  9710 ;;		line 221 in file "mcc_generated_files/i2c_master.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  buffer          2   40[COMRAM] PTR void 
  9713 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
  9714 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$
      +data(3), 
  9715 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  9716 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  9717 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  9718 ;;  bufferSize      2   42[COMRAM] unsigned int 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;Total ram usage:        4 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 13
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_I2C_Read1ByteRegister
  9741 ;;		_rd1RegCompleteHandler
  9742 ;;		_rd2RegCompleteHandler
  9743 ;;		_wr1RegCompleteHandler
  9744 ;;		_wr2RegCompleteHandler
  9745 ;;		_rdBlkRegCompleteHandler
  9746 ;;		_I2C_Read2ByteRegister
  9747 ;;		_I2C_Write2ByteRegister
  9748 ;;		_I2C_WriteNBytes
  9749 ;;		_I2C_ReadNBytes
  9750 ;;		_I2C_ReadDataBlock
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text80
  9755   003A8C                     __ptext80:
  9756                           	callstack 0
  9757   003A8C                     _I2C_SetBuffer:
  9758                           	callstack 15
  9759   003A8C                     
  9760                           ;mcc_generated_files/i2c_master.c: 221: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 222: {;mcc_generated_files/i2c_master.c: 223:     
      +                          if(I2C_Status.bufferFree)
  9761   003A8C  0100               	movlb	0	; () banked
  9762   003A8E  A7D3               	btfss	(_I2C_Status+35)& (0+255),3,b
  9763   003A90  EF4C  F01D         	goto	u4411
  9764   003A94  EF4E  F01D         	goto	u4410
  9765   003A98                     u4411:
  9766   003A98  EF57  F01D         	goto	l264
  9767   003A9C                     u4410:
  9768   003A9C                     
  9769                           ; BSR set to: 0
  9770                           ;mcc_generated_files/i2c_master.c: 224:     {;mcc_generated_files/i2c_master.c: 225:    
      +                               I2C_Status.data_ptr = buffer;
  9771   003A9C  C029  F0CD         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  9772   003AA0  C02A  F0CE         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  9773   003AA4                     
  9774                           ; BSR set to: 0
  9775                           ;mcc_generated_files/i2c_master.c: 226:         I2C_Status.data_length = bufferSize;
  9776   003AA4  C02B  F0CF         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  9777   003AA8  C02C  F0D0         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  9778   003AAC                     
  9779                           ; BSR set to: 0
  9780                           ;mcc_generated_files/i2c_master.c: 227:         I2C_Status.bufferFree = 0;
  9781   003AAC  97D3               	bcf	(_I2C_Status+35)& (0+255),3,b
  9782   003AAE                     l264:
  9783                           
  9784                           ; BSR set to: 0
  9785   003AAE  0012               	return		;funcret
  9786   003AB0                     __end_of_I2C_SetBuffer:
  9787                           	callstack 0
  9788                           
  9789 ;; *************** function _I2C_MasterStop *****************
  9790 ;; Defined at:
  9791 ;;		line 551 in file "mcc_generated_files/i2c_master.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		None
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;Total ram usage:        0 bytes
  9810 ;; Hardware stack levels used: 1
  9811 ;; Hardware stack levels required when called: 13
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_I2C_DO_SEND_STOP
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text81
  9820   003DE2                     __ptext81:
  9821                           	callstack 0
  9822   003DE2                     _I2C_MasterStop:
  9823                           	callstack 9
  9824   003DE2                     
  9825                           ;mcc_generated_files/i2c_master.c: 553:     SSPCON2bits.PEN = 1;
  9826   003DE2  84C5               	bsf	197,2,c	;volatile
  9827   003DE4  0012               	return		;funcret
  9828   003DE6                     __end_of_I2C_MasterStop:
  9829                           	callstack 0
  9830                           
  9831 ;; *************** function _I2C_MasterEnableRestart *****************
  9832 ;; Defined at:
  9833 ;;		line 531 in file "mcc_generated_files/i2c_master.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		None
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;Total ram usage:        0 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; Hardware stack levels required when called: 13
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_I2C_DO_SEND_RESTART_READ
  9858 ;;		_I2C_DO_SEND_RESTART_WRITE
  9859 ;;		_I2C_DO_SEND_RESTART
  9860 ;;		_I2C_DO_RX_EMPTY
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text82
  9865   003DE6                     __ptext82:
  9866                           	callstack 0
  9867   003DE6                     _I2C_MasterEnableRestart:
  9868                           	callstack 9
  9869   003DE6                     
  9870                           ;mcc_generated_files/i2c_master.c: 533:     SSPCON2bits.RSEN = 1;
  9871   003DE6  82C5               	bsf	197,1,c	;volatile
  9872   003DE8  0012               	return		;funcret
  9873   003DEA                     __end_of_I2C_MasterEnableRestart:
  9874                           	callstack 0
  9875                           
  9876 ;; *************** function _I2C_MasterStart *****************
  9877 ;; Defined at:
  9878 ;;		line 546 in file "mcc_generated_files/i2c_master.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;		None
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;		None
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      void 
  9885 ;; Registers used:
  9886 ;;		None
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;Total ram usage:        0 bytes
  9897 ;; Hardware stack levels used: 1
  9898 ;; Hardware stack levels required when called: 13
  9899 ;; This function calls:
  9900 ;;		Nothing
  9901 ;; This function is called by:
  9902 ;;		_I2C_MasterOperation
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text83
  9907   003DEA                     __ptext83:
  9908                           	callstack 0
  9909   003DEA                     _I2C_MasterStart:
  9910                           	callstack 13
  9911   003DEA                     
  9912                           ;mcc_generated_files/i2c_master.c: 548:     SSPCON2bits.SEN = 1;
  9913   003DEA  80C5               	bsf	197,0,c	;volatile
  9914   003DEC  0012               	return		;funcret
  9915   003DEE                     __end_of_I2C_MasterStart:
  9916                           	callstack 0
  9917                           
  9918 ;; *************** function _I2C_Close *****************
  9919 ;; Defined at:
  9920 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;		None
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;  returnValue     1   40[COMRAM] enum E358
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      enum E358
  9927 ;; Registers used:
  9928 ;;		wreg, status,2, cstack
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;Total ram usage:        1 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; Hardware stack levels required when called: 14
  9941 ;; This function calls:
  9942 ;;		_I2C_MasterClearIrq
  9943 ;;		_I2C_MasterClose
  9944 ;;		_I2C_MasterDisableIrq
  9945 ;; This function is called by:
  9946 ;;		_I2C_Read1ByteRegister
  9947 ;;		_I2C_Read2ByteRegister
  9948 ;;		_I2C_Write2ByteRegister
  9949 ;;		_I2C_WriteNBytes
  9950 ;;		_I2C_ReadNBytes
  9951 ;;		_I2C_ReadDataBlock
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text84
  9956   0038BA                     __ptext84:
  9957                           	callstack 0
  9958   0038BA                     _I2C_Close:
  9959                           	callstack 14
  9960   0038BA                     
  9961                           ;mcc_generated_files/i2c_master.c: 169:     i2c_error_t returnValue = I2C_BUSY;
  9962   0038BA  0E01               	movlw	1
  9963   0038BC  6E29               	movwf	I2C_Close@returnValue^0,c
  9964   0038BE                     
  9965                           ;mcc_generated_files/i2c_master.c: 170:     if(!I2C_Status.busy)
  9966   0038BE  0100               	movlb	0	; () banked
  9967   0038C0  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9968   0038C2  EF65  F01C         	goto	u5241
  9969   0038C6  EF67  F01C         	goto	u5240
  9970   0038CA                     u5241:
  9971   0038CA  EF71  F01C         	goto	l8006
  9972   0038CE                     u5240:
  9973   0038CE                     
  9974                           ; BSR set to: 0
  9975                           ;mcc_generated_files/i2c_master.c: 171:     {;mcc_generated_files/i2c_master.c: 172:    
      +                               I2C_Status.inUse = 0;
  9976   0038CE  95D3               	bcf	(_I2C_Status+35)& (0+255),2,b
  9977                           
  9978                           ;mcc_generated_files/i2c_master.c: 173:         I2C_Status.address = 0xff;
  9979   0038D0  69CC               	setf	(_I2C_Status+28)& (0+255),b
  9980   0038D2                     
  9981                           ; BSR set to: 0
  9982                           ;mcc_generated_files/i2c_master.c: 174:         I2C_MasterClearIrq();
  9983   0038D2  ECFB  F01E         	call	_I2C_MasterClearIrq	;wreg free
  9984                           
  9985                           ;mcc_generated_files/i2c_master.c: 175:         I2C_MasterDisableIrq();
  9986   0038D6  ECF7  F01E         	call	_I2C_MasterDisableIrq	;wreg free
  9987                           
  9988                           ;mcc_generated_files/i2c_master.c: 176:         I2C_MasterClose();
  9989   0038DA  ECF9  F01E         	call	_I2C_MasterClose	;wreg free
  9990   0038DE                     
  9991                           ;mcc_generated_files/i2c_master.c: 177:         returnValue = I2C_Status.error;
  9992   0038DE  C0D2  F029         	movff	_I2C_Status+34,I2C_Close@returnValue
  9993   0038E2                     l8006:
  9994                           
  9995                           ;mcc_generated_files/i2c_master.c: 179:     return returnValue;
  9996   0038E2  5029               	movf	I2C_Close@returnValue^0,w,c
  9997   0038E4  0012               	return		;funcret
  9998   0038E6                     __end_of_I2C_Close:
  9999                           	callstack 0
 10000                           
 10001 ;; *************** function _I2C_MasterDisableIrq *****************
 10002 ;; Defined at:
 10003 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;		None
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;		None
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      void 
 10010 ;; Registers used:
 10011 ;;		None
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;Total ram usage:        0 bytes
 10022 ;; Hardware stack levels used: 1
 10023 ;; Hardware stack levels required when called: 13
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_I2C_Close
 10028 ;;		_I2C_SetTimeOut
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text85
 10033   003DEE                     __ptext85:
 10034                           	callstack 0
 10035   003DEE                     _I2C_MasterDisableIrq:
 10036                           	callstack 14
 10037   003DEE                     
 10038                           ;mcc_generated_files/i2c_master.c: 595:     PIE1bits.SSPIE = 0;
 10039   003DEE  969D               	bcf	157,3,c	;volatile
 10040   003DF0  0012               	return		;funcret
 10041   003DF2                     __end_of_I2C_MasterDisableIrq:
 10042                           	callstack 0
 10043                           
 10044 ;; *************** function _I2C_MasterClose *****************
 10045 ;; Defined at:
 10046 ;;		line 515 in file "mcc_generated_files/i2c_master.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		None
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;Total ram usage:        0 bytes
 10065 ;; Hardware stack levels used: 1
 10066 ;; Hardware stack levels required when called: 13
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_I2C_Close
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text86
 10075   003DF2                     __ptext86:
 10076                           	callstack 0
 10077   003DF2                     _I2C_MasterClose:
 10078                           	callstack 14
 10079   003DF2                     
 10080                           ;mcc_generated_files/i2c_master.c: 518:     SSPCON1bits.SSPEN = 0;
 10081   003DF2  9AC6               	bcf	198,5,c	;volatile
 10082   003DF4  0012               	return		;funcret
 10083   003DF6                     __end_of_I2C_MasterClose:
 10084                           	callstack 0
 10085                           
 10086 ;; *************** function _I2C_MasterClearIrq *****************
 10087 ;; Defined at:
 10088 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;		None
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;		None
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      void 
 10095 ;; Registers used:
 10096 ;;		None
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;Total ram usage:        0 bytes
 10107 ;; Hardware stack levels used: 1
 10108 ;; Hardware stack levels required when called: 13
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		_I2C_Open
 10113 ;;		_I2C_Close
 10114 ;;		_I2C_MasterFsm
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text87
 10119   003DF6                     __ptext87:
 10120                           	callstack 0
 10121   003DF6                     _I2C_MasterClearIrq:
 10122                           	callstack 14
 10123   003DF6                     
 10124                           ;mcc_generated_files/i2c_master.c: 600:     PIR1bits.SSPIF = 0;
 10125   003DF6  969E               	bcf	158,3,c	;volatile
 10126   003DF8  0012               	return		;funcret
 10127   003DFA                     __end_of_I2C_MasterClearIrq:
 10128                           	callstack 0
 10129                           
 10130 ;; *************** function _InterruptManager *****************
 10131 ;; Defined at:
 10132 ;;		line 39 in file "MCAL/INTERRUPT/mcall_interrupt_manager.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;		None
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;		None
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10150 ;;Total ram usage:       12 bytes
 10151 ;; Hardware stack levels used: 1
 10152 ;; Hardware stack levels required when called: 12
 10153 ;; This function calls:
 10154 ;;		_INT0_ISR
 10155 ;;		_INT1_ISR
 10156 ;;		_INT2_ISR
 10157 ;; This function is called by:
 10158 ;;		Interrupt level 2
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           	psect	intcode
 10163   000008                     __pintcode:
 10164                           	callstack 0
 10165   000008                     _InterruptManager:
 10166                           	callstack 8
 10167                           
 10168                           ;incstack = 0
 10169   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10170   00000A  ED4C  F010         	call	int_func,f	;refresh shadow registers
 10171                           
 10172                           	psect	intcode_body
 10173   002098                     __pintcode_body:
 10174                           	callstack 8
 10175   002098                     int_func:
 10176                           	callstack 8
 10177   002098  0006               	pop		; remove dummy address from shadow register refresh
 10178   00209A  CFFA F01D          	movff	pclath,??_InterruptManager
 10179   00209E  CFFB F01E          	movff	pclatu,??_InterruptManager+1
 10180   0020A2  CFE9 F01F          	movff	fsr0l,??_InterruptManager+2
 10181   0020A6  CFEA F020          	movff	fsr0h,??_InterruptManager+3
 10182   0020AA  CFD9 F021          	movff	fsr2l,??_InterruptManager+4
 10183   0020AE  CFDA F022          	movff	fsr2h,??_InterruptManager+5
 10184   0020B2  CFF3 F023          	movff	prodl,??_InterruptManager+6
 10185   0020B6  CFF4 F024          	movff	prodh,??_InterruptManager+7
 10186   0020BA  CFF6 F025          	movff	tblptrl,??_InterruptManager+8
 10187   0020BE  CFF7 F026          	movff	tblptrh,??_InterruptManager+9
 10188   0020C2  CFF8 F027          	movff	tblptru,??_InterruptManager+10
 10189   0020C6  CFF5 F028          	movff	tablat,??_InterruptManager+11
 10190   0020CA                     
 10191                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 41:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF)){
 10192   0020CA  A8F2               	btfss	242,4,c	;volatile
 10193   0020CC  EF6A  F010         	goto	i2u603_41
 10194   0020D0  EF6C  F010         	goto	i2u603_40
 10195   0020D4                     i2u603_41:
 10196   0020D4  EF75  F010         	goto	i2l8806
 10197   0020D8                     i2u603_40:
 10198   0020D8  A2F2               	btfss	242,1,c	;volatile
 10199   0020DA  EF71  F010         	goto	i2u604_41
 10200   0020DE  EF73  F010         	goto	i2u604_40
 10201   0020E2                     i2u604_41:
 10202   0020E2  EF75  F010         	goto	i2l8806
 10203   0020E6                     i2u604_40:
 10204   0020E6                     
 10205                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 42:         INT0_ISR();
 10206   0020E6  EC30  F01C         	call	_INT0_ISR	;wreg free
 10207   0020EA                     i2l8806:
 10208                           
 10209                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 44:     if((1 == INTCON3bits.INT1E) && (1 == 
      +                          INTCON3bits.INT1F)){
 10210   0020EA  A6F0               	btfss	240,3,c	;volatile
 10211   0020EC  EF7A  F010         	goto	i2u605_41
 10212   0020F0  EF7C  F010         	goto	i2u605_40
 10213   0020F4                     i2u605_41:
 10214   0020F4  EF85  F010         	goto	i2l8812
 10215   0020F8                     i2u605_40:
 10216   0020F8  A0F0               	btfss	240,0,c	;volatile
 10217   0020FA  EF81  F010         	goto	i2u606_41
 10218   0020FE  EF83  F010         	goto	i2u606_40
 10219   002102                     i2u606_41:
 10220   002102  EF85  F010         	goto	i2l8812
 10221   002106                     i2u606_40:
 10222   002106                     
 10223                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 45:         INT1_ISR();
 10224   002106  EC19  F01C         	call	_INT1_ISR	;wreg free
 10225   00210A                     i2l8812:
 10226                           
 10227                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 47:     if((1 == INTCON3bits.INT2IE) && (1 ==
      +                           INTCON3bits.INT2IF)){
 10228   00210A  A8F0               	btfss	240,4,c	;volatile
 10229   00210C  EF8A  F010         	goto	i2u607_41
 10230   002110  EF8C  F010         	goto	i2u607_40
 10231   002114                     i2u607_41:
 10232   002114  EF95  F010         	goto	i2l929
 10233   002118                     i2u607_40:
 10234   002118  A2F0               	btfss	240,1,c	;volatile
 10235   00211A  EF91  F010         	goto	i2u608_41
 10236   00211E  EF93  F010         	goto	i2u608_40
 10237   002122                     i2u608_41:
 10238   002122  EF95  F010         	goto	i2l929
 10239   002126                     i2u608_40:
 10240   002126                     
 10241                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 48:         INT2_ISR();
 10242   002126  EC02  F01C         	call	_INT2_ISR	;wreg free
 10243   00212A                     i2l929:
 10244   00212A  C028  FFF5         	movff	??_InterruptManager+11,tablat
 10245   00212E  C027  FFF8         	movff	??_InterruptManager+10,tblptru
 10246   002132  C026  FFF7         	movff	??_InterruptManager+9,tblptrh
 10247   002136  C025  FFF6         	movff	??_InterruptManager+8,tblptrl
 10248   00213A  C024  FFF4         	movff	??_InterruptManager+7,prodh
 10249   00213E  C023  FFF3         	movff	??_InterruptManager+6,prodl
 10250   002142  C022  FFDA         	movff	??_InterruptManager+5,fsr2h
 10251   002146  C021  FFD9         	movff	??_InterruptManager+4,fsr2l
 10252   00214A  C020  FFEA         	movff	??_InterruptManager+3,fsr0h
 10253   00214E  C01F  FFE9         	movff	??_InterruptManager+2,fsr0l
 10254   002152  C01E  FFFB         	movff	??_InterruptManager+1,pclatu
 10255   002156  C01D  FFFA         	movff	??_InterruptManager,pclath
 10256   00215A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10257   00215C  0011               	retfie		f
 10258   00215E                     __end_of_InterruptManager:
 10259                           	callstack 0
 10260                           
 10261 ;; *************** function _INT2_ISR *****************
 10262 ;; Defined at:
 10263 ;;		line 106 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;		None
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;		None
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;Total ram usage:        0 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 11
 10284 ;; This function calls:
 10285 ;;		NULL
 10286 ;;		_APP_INT0_ISR
 10287 ;;		_APP_INT1_ISR
 10288 ;; This function is called by:
 10289 ;;		_InterruptManager
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text89
 10294   003804                     __ptext89:
 10295                           	callstack 0
 10296   003804                     _INT2_ISR:
 10297                           	callstack 8
 10298   003804                     
 10299                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 108:     (INTCON3bits.INT2F=0);
 10300   003804  92F0               	bcf	240,1,c	;volatile
 10301   003806                     
 10302                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 110:     if(INT2_InterruptHandler){INT2_Inter
      +                          ruptHandler();}
 10303   003806  5038               	movf	_INT2_InterruptHandler^0,w,c
 10304   003808  1039               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
 10305   00380A  B4D8               	btfsc	status,2,c
 10306   00380C  EF0A  F01C         	goto	i2u570_41
 10307   003810  EF0C  F01C         	goto	i2u570_40
 10308   003814                     i2u570_41:
 10309   003814  EF18  F01C         	goto	i2l978
 10310   003818                     i2u570_40:
 10311   003818  D802               	call	i2u571_48
 10312   00381A  EF18  F01C         	goto	i2u571_49
 10313   00381E                     i2u571_48:
 10314   00381E  0005               	push	
 10315   003820  6EFA               	movwf	pclath,c
 10316   003822  5038               	movf	_INT2_InterruptHandler^0,w,c
 10317   003824  6EFD               	movwf	tosl,c
 10318   003826  5039               	movf	(_INT2_InterruptHandler+1)^0,w,c
 10319   003828  6EFE               	movwf	tosh,c
 10320   00382A  6AFF               	clrf	tosu,c
 10321   00382C  50FA               	movf	pclath,w,c
 10322   00382E  0012               	return		;indir
 10323   003830                     i2u571_49:
 10324   003830                     i2l978:
 10325   003830  0012               	return		;funcret
 10326   003832                     __end_of_INT2_ISR:
 10327                           	callstack 0
 10328                           
 10329 ;; *************** function _INT1_ISR *****************
 10330 ;; Defined at:
 10331 ;;		line 97 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 11
 10352 ;; This function calls:
 10353 ;;		NULL
 10354 ;;		_APP_INT0_ISR
 10355 ;;		_APP_INT1_ISR
 10356 ;; This function is called by:
 10357 ;;		_InterruptManager
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text90
 10362   003832                     __ptext90:
 10363                           	callstack 0
 10364   003832                     _INT1_ISR:
 10365                           	callstack 8
 10366   003832                     
 10367                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 99:     (INTCON3bits.INT1F=0);
 10368   003832  90F0               	bcf	240,0,c	;volatile
 10369   003834                     
 10370                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 101:     if(INT1_InterruptHandler){INT1_Inter
      +                          ruptHandler();}
 10371   003834  503A               	movf	_INT1_InterruptHandler^0,w,c
 10372   003836  103B               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 10373   003838  B4D8               	btfsc	status,2,c
 10374   00383A  EF21  F01C         	goto	i2u568_41
 10375   00383E  EF23  F01C         	goto	i2u568_40
 10376   003842                     i2u568_41:
 10377   003842  EF2F  F01C         	goto	i2l974
 10378   003846                     i2u568_40:
 10379   003846  D802               	call	i2u569_48
 10380   003848  EF2F  F01C         	goto	i2u569_49
 10381   00384C                     i2u569_48:
 10382   00384C  0005               	push	
 10383   00384E  6EFA               	movwf	pclath,c
 10384   003850  503A               	movf	_INT1_InterruptHandler^0,w,c
 10385   003852  6EFD               	movwf	tosl,c
 10386   003854  503B               	movf	(_INT1_InterruptHandler+1)^0,w,c
 10387   003856  6EFE               	movwf	tosh,c
 10388   003858  6AFF               	clrf	tosu,c
 10389   00385A  50FA               	movf	pclath,w,c
 10390   00385C  0012               	return		;indir
 10391   00385E                     i2u569_49:
 10392   00385E                     i2l974:
 10393   00385E  0012               	return		;funcret
 10394   003860                     __end_of_INT1_ISR:
 10395                           	callstack 0
 10396                           
 10397 ;; *************** function _INT0_ISR *****************
 10398 ;; Defined at:
 10399 ;;		line 88 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; Hardware stack levels required when called: 11
 10420 ;; This function calls:
 10421 ;;		NULL
 10422 ;;		_APP_INT0_ISR
 10423 ;;		_APP_INT1_ISR
 10424 ;; This function is called by:
 10425 ;;		_InterruptManager
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text91
 10430   003860                     __ptext91:
 10431                           	callstack 0
 10432   003860                     _INT0_ISR:
 10433                           	callstack 8
 10434   003860                     
 10435                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 90:     (INTCONbits.INT0F=0);
 10436   003860  92F2               	bcf	242,1,c	;volatile
 10437   003862                     
 10438                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 92:     if(INT0_InterruptHandler){INT0_Interr
      +                          uptHandler();}
 10439   003862  503C               	movf	_INT0_InterruptHandler^0,w,c
 10440   003864  103D               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 10441   003866  B4D8               	btfsc	status,2,c
 10442   003868  EF38  F01C         	goto	i2u566_41
 10443   00386C  EF3A  F01C         	goto	i2u566_40
 10444   003870                     i2u566_41:
 10445   003870  EF46  F01C         	goto	i2l970
 10446   003874                     i2u566_40:
 10447   003874  D802               	call	i2u567_48
 10448   003876  EF46  F01C         	goto	i2u567_49
 10449   00387A                     i2u567_48:
 10450   00387A  0005               	push	
 10451   00387C  6EFA               	movwf	pclath,c
 10452   00387E  503C               	movf	_INT0_InterruptHandler^0,w,c
 10453   003880  6EFD               	movwf	tosl,c
 10454   003882  503D               	movf	(_INT0_InterruptHandler+1)^0,w,c
 10455   003884  6EFE               	movwf	tosh,c
 10456   003886  6AFF               	clrf	tosu,c
 10457   003888  50FA               	movf	pclath,w,c
 10458   00388A  0012               	return		;indir
 10459   00388C                     i2u567_49:
 10460   00388C                     i2l970:
 10461   00388C  0012               	return		;funcret
 10462   00388E                     __end_of_INT0_ISR:
 10463                           	callstack 0
 10464                           
 10465 ;; *************** function _APP_INT0_ISR *****************
 10466 ;; Defined at:
 10467 ;;		line 18 in file "app.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;		None
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;Total ram usage:        0 bytes
 10486 ;; Hardware stack levels used: 1
 10487 ;; Hardware stack levels required when called: 10
 10488 ;; This function calls:
 10489 ;;		_I2C_Write1ByteRegister
 10490 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 10491 ;; This function is called by:
 10492 ;;		_INT0_ISR
 10493 ;;		_INT1_ISR
 10494 ;;		_INT2_ISR
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text92
 10499   00282A                     __ptext92:
 10500                           	callstack 0
 10501   00282A                     _APP_INT0_ISR:
 10502                           	callstack 8
 10503   00282A                     
 10504                           ;app.c: 19:     if(category_counter==0){
 10505   00282A  5044               	movf	_category_counter^0,w,c	;volatile
 10506   00282C  A4D8               	btfss	status,2,c
 10507   00282E  EF1B  F014         	goto	i2u550_41
 10508   002832  EF1D  F014         	goto	i2u550_40
 10509   002836                     i2u550_41:
 10510   002836  EF26  F014         	goto	i2l8280
 10511   00283A                     i2u550_40:
 10512   00283A                     
 10513                           ;app.c: 20:        RTC1307 = RealTimeClockDS1307_Get_Date_Time();
 10514   00283A  ECB3  F019         	call	i2_RealTimeClockDS1307_Get_Date_Time	;wreg free
 10515   00283E  EE20  F045         	lfsr	2,_RTC1307	;volatile
 10516   002842  0E05               	movlw	5
 10517   002844                     i2u551_41:
 10518   002844  CFEB FFDB          	movff	plusw0,plusw2
 10519   002848  06E8               	decf	wreg,f,c
 10520   00284A  E2FC               	bc	i2u551_41
 10521   00284C                     i2l8280:
 10522                           
 10523                           ;app.c: 22:    category_counter++;
 10524   00284C  2A44               	incf	_category_counter^0,f,c	;volatile
 10525   00284E                     
 10526                           ;app.c: 23:    if(category_counter==7){
 10527   00284E  0E07               	movlw	7
 10528   002850  1844               	xorwf	_category_counter^0,w,c	;volatile
 10529   002852  A4D8               	btfss	status,2,c
 10530   002854  EF2E  F014         	goto	i2u552_41
 10531   002858  EF30  F014         	goto	i2u552_40
 10532   00285C                     i2u552_41:
 10533   00285C  EF5C  F014         	goto	i2l510
 10534   002860                     i2u552_40:
 10535   002860                     
 10536                           ;app.c: 24:        category_counter=0;
 10537   002860  0E00               	movlw	0
 10538   002862  6E44               	movwf	_category_counter^0,c	;volatile
 10539   002864                     
 10540                           ;app.c: 26:        I2C_Write1ByteRegister(0xD0, 0x00,RTC1307._Seconds);
 10541   002864  0E00               	movlw	0
 10542   002866  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10543   002868  C047  F015         	movff	_RTC1307+2,I2C_Write1ByteRegister@data	;volatile
 10544   00286C  0ED0               	movlw	208
 10545   00286E  EC4E  F018         	call	_I2C_Write1ByteRegister
 10546   002872                     
 10547                           ;app.c: 27:        I2C_Write1ByteRegister(0xD0, 0x01,RTC1307._Minutes);
 10548   002872  0E01               	movlw	1
 10549   002874  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10550   002876  C046  F015         	movff	_RTC1307+1,I2C_Write1ByteRegister@data	;volatile
 10551   00287A  0ED0               	movlw	208
 10552   00287C  EC4E  F018         	call	_I2C_Write1ByteRegister
 10553   002880                     
 10554                           ;app.c: 28:        I2C_Write1ByteRegister(0xD0, 0x02,RTC1307._Hours);
 10555   002880  0E02               	movlw	2
 10556   002882  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10557   002884  C045  F015         	movff	_RTC1307,I2C_Write1ByteRegister@data	;volatile
 10558   002888  0ED0               	movlw	208
 10559   00288A  EC4E  F018         	call	_I2C_Write1ByteRegister
 10560   00288E                     
 10561                           ;app.c: 29:        I2C_Write1ByteRegister(0xD0, 0x04,RTC1307._Day);
 10562   00288E  0E04               	movlw	4
 10563   002890  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10564   002892  C04A  F015         	movff	_RTC1307+5,I2C_Write1ByteRegister@data	;volatile
 10565   002896  0ED0               	movlw	208
 10566   002898  EC4E  F018         	call	_I2C_Write1ByteRegister
 10567   00289C                     
 10568                           ;app.c: 30:        I2C_Write1ByteRegister(0xD0, 0x05,RTC1307._Month);
 10569   00289C  0E05               	movlw	5
 10570   00289E  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10571   0028A0  C049  F015         	movff	_RTC1307+4,I2C_Write1ByteRegister@data	;volatile
 10572   0028A4  0ED0               	movlw	208
 10573   0028A6  EC4E  F018         	call	_I2C_Write1ByteRegister
 10574   0028AA                     
 10575                           ;app.c: 31:        I2C_Write1ByteRegister(0xD0, 0x06,RTC1307._Year);
 10576   0028AA  0E06               	movlw	6
 10577   0028AC  6E14               	movwf	I2C_Write1ByteRegister@reg^0,c
 10578   0028AE  C048  F015         	movff	_RTC1307+3,I2C_Write1ByteRegister@data	;volatile
 10579   0028B2  0ED0               	movlw	208
 10580   0028B4  EC4E  F018         	call	_I2C_Write1ByteRegister
 10581   0028B8                     i2l510:
 10582   0028B8  0012               	return		;funcret
 10583   0028BA                     __end_of_APP_INT0_ISR:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function _APP_INT1_ISR *****************
 10587 ;; Defined at:
 10588 ;;		line 35 in file "app.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 2
 10609 ;; This function calls:
 10610 ;;		_convert_int_to_BCD
 10611 ;; This function is called by:
 10612 ;;		_INT0_ISR
 10613 ;;		_INT1_ISR
 10614 ;;		_INT2_ISR
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text93
 10619   001914                     __ptext93:
 10620                           	callstack 0
 10621   001914                     _APP_INT1_ISR:
 10622                           	callstack 16
 10623   001914                     
 10624                           ;app.c: 36:    if(category_counter==1){
 10625   001914  0444               	decf	_category_counter^0,w,c	;volatile
 10626   001916  A4D8               	btfss	status,2,c
 10627   001918  EF90  F00C         	goto	i2u350_41
 10628   00191C  EF92  F00C         	goto	i2u350_40
 10629   001920                     i2u350_41:
 10630   001920  EFA4  F00C         	goto	i2l5822
 10631   001924                     i2u350_40:
 10632   001924                     
 10633                           ;app.c: 37:        seconds_counter++;
 10634   001924  2A51               	incf	_seconds_counter^0,f,c	;volatile
 10635   001926                     
 10636                           ;app.c: 38:        if(seconds_counter>59){
 10637   001926  0E3B               	movlw	59
 10638   001928  6451               	cpfsgt	_seconds_counter^0,c	;volatile
 10639   00192A  EF99  F00C         	goto	i2u351_41
 10640   00192E  EF9B  F00C         	goto	i2u351_40
 10641   001932                     i2u351_41:
 10642   001932  EF9D  F00C         	goto	i2l5820
 10643   001936                     i2u351_40:
 10644   001936                     
 10645                           ;app.c: 39:            seconds_counter=0;
 10646   001936  0E00               	movlw	0
 10647   001938  6E51               	movwf	_seconds_counter^0,c	;volatile
 10648   00193A                     i2l5820:
 10649                           
 10650                           ;app.c: 41:        convert_int_to_BCD(seconds_counter,&RTC1307._Seconds);
 10651   00193A  0E47               	movlw	low (_RTC1307+2)
 10652   00193C  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10653   00193E  5051               	movf	_seconds_counter^0,w,c	;volatile
 10654   001940  ECC1  F00B         	call	_convert_int_to_BCD
 10655                           
 10656                           ;app.c: 42:    }
 10657   001944  EF2B  F00D         	goto	i2l530
 10658   001948                     i2l5822:
 10659   001948  0E02               	movlw	2
 10660   00194A  1844               	xorwf	_category_counter^0,w,c	;volatile
 10661   00194C  A4D8               	btfss	status,2,c
 10662   00194E  EFAB  F00C         	goto	i2u352_41
 10663   001952  EFAD  F00C         	goto	i2u352_40
 10664   001956                     i2u352_41:
 10665   001956  EFBF  F00C         	goto	i2l5832
 10666   00195A                     i2u352_40:
 10667   00195A                     
 10668                           ;app.c: 44:        minutes_counter++;
 10669   00195A  2A50               	incf	_minutes_counter^0,f,c	;volatile
 10670   00195C                     
 10671                           ;app.c: 45:        if(minutes_counter>59){
 10672   00195C  0E3B               	movlw	59
 10673   00195E  6450               	cpfsgt	_minutes_counter^0,c	;volatile
 10674   001960  EFB4  F00C         	goto	i2u353_41
 10675   001964  EFB6  F00C         	goto	i2u353_40
 10676   001968                     i2u353_41:
 10677   001968  EFB8  F00C         	goto	i2l5830
 10678   00196C                     i2u353_40:
 10679   00196C                     
 10680                           ;app.c: 46:            minutes_counter=0;
 10681   00196C  0E00               	movlw	0
 10682   00196E  6E50               	movwf	_minutes_counter^0,c	;volatile
 10683   001970                     i2l5830:
 10684                           
 10685                           ;app.c: 48:        convert_int_to_BCD(minutes_counter,&RTC1307._Minutes);
 10686   001970  0E46               	movlw	low (_RTC1307+1)
 10687   001972  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10688   001974  5050               	movf	_minutes_counter^0,w,c	;volatile
 10689   001976  ECC1  F00B         	call	_convert_int_to_BCD
 10690                           
 10691                           ;app.c: 49:    }
 10692   00197A  EF2B  F00D         	goto	i2l530
 10693   00197E                     i2l5832:
 10694   00197E  0E03               	movlw	3
 10695   001980  1844               	xorwf	_category_counter^0,w,c	;volatile
 10696   001982  A4D8               	btfss	status,2,c
 10697   001984  EFC6  F00C         	goto	i2u354_41
 10698   001988  EFC8  F00C         	goto	i2u354_40
 10699   00198C                     i2u354_41:
 10700   00198C  EFDA  F00C         	goto	i2l5842
 10701   001990                     i2u354_40:
 10702   001990                     
 10703                           ;app.c: 51:        hours_counter++;
 10704   001990  2A4F               	incf	_hours_counter^0,f,c	;volatile
 10705   001992                     
 10706                           ;app.c: 52:        if(hours_counter>24){
 10707   001992  0E18               	movlw	24
 10708   001994  644F               	cpfsgt	_hours_counter^0,c	;volatile
 10709   001996  EFCF  F00C         	goto	i2u355_41
 10710   00199A  EFD1  F00C         	goto	i2u355_40
 10711   00199E                     i2u355_41:
 10712   00199E  EFD3  F00C         	goto	i2l5840
 10713   0019A2                     i2u355_40:
 10714   0019A2                     
 10715                           ;app.c: 53:            hours_counter=0;
 10716   0019A2  0E00               	movlw	0
 10717   0019A4  6E4F               	movwf	_hours_counter^0,c	;volatile
 10718   0019A6                     i2l5840:
 10719                           
 10720                           ;app.c: 55:        convert_int_to_BCD(hours_counter,&RTC1307._Hours);
 10721   0019A6  0E45               	movlw	low _RTC1307
 10722   0019A8  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10723   0019AA  504F               	movf	_hours_counter^0,w,c	;volatile
 10724   0019AC  ECC1  F00B         	call	_convert_int_to_BCD
 10725                           
 10726                           ;app.c: 56:    }
 10727   0019B0  EF2B  F00D         	goto	i2l530
 10728   0019B4                     i2l5842:
 10729   0019B4  0E04               	movlw	4
 10730   0019B6  1844               	xorwf	_category_counter^0,w,c	;volatile
 10731   0019B8  A4D8               	btfss	status,2,c
 10732   0019BA  EFE1  F00C         	goto	i2u356_41
 10733   0019BE  EFE3  F00C         	goto	i2u356_40
 10734   0019C2                     i2u356_41:
 10735   0019C2  EFF5  F00C         	goto	i2l5852
 10736   0019C6                     i2u356_40:
 10737   0019C6                     
 10738                           ;app.c: 58:        day_counter++;
 10739   0019C6  2A4E               	incf	_day_counter^0,f,c	;volatile
 10740   0019C8                     
 10741                           ;app.c: 59:        if(day_counter>30){
 10742   0019C8  0E1E               	movlw	30
 10743   0019CA  644E               	cpfsgt	_day_counter^0,c	;volatile
 10744   0019CC  EFEA  F00C         	goto	i2u357_41
 10745   0019D0  EFEC  F00C         	goto	i2u357_40
 10746   0019D4                     i2u357_41:
 10747   0019D4  EFEE  F00C         	goto	i2l5850
 10748   0019D8                     i2u357_40:
 10749   0019D8                     
 10750                           ;app.c: 60:            day_counter=0;
 10751   0019D8  0E00               	movlw	0
 10752   0019DA  6E4E               	movwf	_day_counter^0,c	;volatile
 10753   0019DC                     i2l5850:
 10754                           
 10755                           ;app.c: 62:        convert_int_to_BCD(day_counter,&RTC1307._Day);
 10756   0019DC  0E4A               	movlw	low (_RTC1307+5)
 10757   0019DE  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10758   0019E0  504E               	movf	_day_counter^0,w,c	;volatile
 10759   0019E2  ECC1  F00B         	call	_convert_int_to_BCD
 10760                           
 10761                           ;app.c: 63:    }
 10762   0019E6  EF2B  F00D         	goto	i2l530
 10763   0019EA                     i2l5852:
 10764   0019EA  0E05               	movlw	5
 10765   0019EC  1844               	xorwf	_category_counter^0,w,c	;volatile
 10766   0019EE  A4D8               	btfss	status,2,c
 10767   0019F0  EFFC  F00C         	goto	i2u358_41
 10768   0019F4  EFFE  F00C         	goto	i2u358_40
 10769   0019F8                     i2u358_41:
 10770   0019F8  EF10  F00D         	goto	i2l5862
 10771   0019FC                     i2u358_40:
 10772   0019FC                     
 10773                           ;app.c: 65:        month_counter++;
 10774   0019FC  2A4D               	incf	_month_counter^0,f,c	;volatile
 10775   0019FE                     
 10776                           ;app.c: 66:        if(month_counter>12){
 10777   0019FE  0E0C               	movlw	12
 10778   001A00  644D               	cpfsgt	_month_counter^0,c	;volatile
 10779   001A02  EF05  F00D         	goto	i2u359_41
 10780   001A06  EF07  F00D         	goto	i2u359_40
 10781   001A0A                     i2u359_41:
 10782   001A0A  EF09  F00D         	goto	i2l5860
 10783   001A0E                     i2u359_40:
 10784   001A0E                     
 10785                           ;app.c: 67:            month_counter=0;
 10786   001A0E  0E00               	movlw	0
 10787   001A10  6E4D               	movwf	_month_counter^0,c	;volatile
 10788   001A12                     i2l5860:
 10789                           
 10790                           ;app.c: 69:        convert_int_to_BCD(month_counter,&RTC1307._Month);
 10791   001A12  0E49               	movlw	low (_RTC1307+4)
 10792   001A14  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10793   001A16  504D               	movf	_month_counter^0,w,c	;volatile
 10794   001A18  ECC1  F00B         	call	_convert_int_to_BCD
 10795                           
 10796                           ;app.c: 70:    }
 10797   001A1C  EF2B  F00D         	goto	i2l530
 10798   001A20                     i2l5862:
 10799   001A20  0E06               	movlw	6
 10800   001A22  1844               	xorwf	_category_counter^0,w,c	;volatile
 10801   001A24  A4D8               	btfss	status,2,c
 10802   001A26  EF17  F00D         	goto	i2u360_41
 10803   001A2A  EF19  F00D         	goto	i2u360_40
 10804   001A2E                     i2u360_41:
 10805   001A2E  EF2B  F00D         	goto	i2l521
 10806   001A32                     i2u360_40:
 10807   001A32                     
 10808                           ;app.c: 72:        year_counter++;
 10809   001A32  2A4C               	incf	_year_counter^0,f,c	;volatile
 10810   001A34                     
 10811                           ;app.c: 73:         if(year_counter>99){
 10812   001A34  0E63               	movlw	99
 10813   001A36  644C               	cpfsgt	_year_counter^0,c	;volatile
 10814   001A38  EF20  F00D         	goto	i2u361_41
 10815   001A3C  EF22  F00D         	goto	i2u361_40
 10816   001A40                     i2u361_41:
 10817   001A40  EF24  F00D         	goto	i2l5870
 10818   001A44                     i2u361_40:
 10819   001A44                     
 10820                           ;app.c: 74:            year_counter=0;
 10821   001A44  0E00               	movlw	0
 10822   001A46  6E4C               	movwf	_year_counter^0,c	;volatile
 10823   001A48                     i2l5870:
 10824                           
 10825                           ;app.c: 76:        convert_int_to_BCD(year_counter,&RTC1307._Year);
 10826   001A48  0E48               	movlw	low (_RTC1307+3)
 10827   001A4A  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 10828   001A4C  504C               	movf	_year_counter^0,w,c	;volatile
 10829   001A4E  ECC1  F00B         	call	_convert_int_to_BCD
 10830   001A52  EF2B  F00D         	goto	i2l530
 10831   001A56                     i2l521:
 10832   001A56                     i2l530:
 10833   001A56  0012               	return		;funcret
 10834   001A58                     __end_of_APP_INT1_ISR:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _convert_int_to_BCD *****************
 10838 ;; Defined at:
 10839 ;;		line 50 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  int_num         1    wreg     unsigned char 
 10842 ;;  BCD_num         1    8[COMRAM] PTR unsigned char 
 10843 ;;		 -> RTC1307$_Day(1), RTC1307$_Month(1), RTC1307$_Year(1), RTC1307$_Seconds(1), 
 10844 ;;		 -> RTC1307$_Minutes(1), RTC1307$_Hours(1), RTC1307(6), 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  int_num         1    9[COMRAM] unsigned char 
 10847 ;;  h_nipple        1   11[COMRAM] unsigned char 
 10848 ;;  l_nipple        1   10[COMRAM] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;Total ram usage:        4 bytes
 10863 ;; Hardware stack levels used: 1
 10864 ;; Hardware stack levels required when called: 1
 10865 ;; This function calls:
 10866 ;;		i2___awdiv
 10867 ;;		i2___awmod
 10868 ;; This function is called by:
 10869 ;;		_APP_INT1_ISR
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           	psect	text94
 10874   001782                     __ptext94:
 10875                           	callstack 0
 10876   001782                     _convert_int_to_BCD:
 10877                           	callstack 16
 10878                           
 10879                           ;incstack = 0
 10880                           ;convert_int_to_BCD@int_num stored from wreg
 10881   001782  6E0A               	movwf	convert_int_to_BCD@int_num^0,c
 10882   001784                     
 10883                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 51:     uint8 l_nipple,h_nipple;;ECUAL
      +                          /RealTimeClockDS1307/RealTimeClockDS1307.c: 52:     switch(int_num%10){
 10884   001784  EFE8  F00B         	goto	i2l5498
 10885   001788                     i2l5476:
 10886   001788  0E00               	movlw	0
 10887   00178A  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10888   00178C  EF47  F00C         	goto	i2l5522
 10889   001790                     i2l5478:
 10890   001790  0E01               	movlw	1
 10891   001792  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10892   001794  EF47  F00C         	goto	i2l5522
 10893   001798                     i2l5480:
 10894   001798  0E02               	movlw	2
 10895   00179A  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10896   00179C  EF47  F00C         	goto	i2l5522
 10897   0017A0                     i2l5482:
 10898   0017A0  0E03               	movlw	3
 10899   0017A2  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10900   0017A4  EF47  F00C         	goto	i2l5522
 10901   0017A8                     i2l5484:
 10902   0017A8  0E04               	movlw	4
 10903   0017AA  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10904   0017AC  EF47  F00C         	goto	i2l5522
 10905   0017B0                     i2l5486:
 10906   0017B0  0E05               	movlw	5
 10907   0017B2  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10908   0017B4  EF47  F00C         	goto	i2l5522
 10909   0017B8                     i2l5488:
 10910   0017B8  0E06               	movlw	6
 10911   0017BA  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10912   0017BC  EF47  F00C         	goto	i2l5522
 10913   0017C0                     i2l5490:
 10914   0017C0  0E07               	movlw	7
 10915   0017C2  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10916   0017C4  EF47  F00C         	goto	i2l5522
 10917   0017C8                     i2l5492:
 10918   0017C8  0E08               	movlw	8
 10919   0017CA  6E0B               	movwf	convert_int_to_BCD@l_nipple^0,c
 10920   0017CC  EF47  F00C         	goto	i2l5522
 10921   0017D0                     i2l5498:
 10922   0017D0  C00A  F001         	movff	convert_int_to_BCD@int_num,i2___awmod@dividend
 10923   0017D4  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 10924   0017D6  0E00               	movlw	0
 10925   0017D8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 10926   0017DA  0E0A               	movlw	10
 10927   0017DC  6E03               	movwf	i2___awmod@divisor^0,c
 10928   0017DE  EC25  F012         	call	i2___awmod	;wreg free
 10929                           
 10930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10931                           ; Switch size 1, requested type "simple"
 10932                           ; Number of cases is 1, Range of values is 0 to 0
 10933                           ; switch strategies available:
 10934                           ; Name         Instructions Cycles
 10935                           ; simple_byte            4     3 (average)
 10936                           ;	Chosen strategy is simple_byte
 10937   0017E2  5002               	movf	(?i2___awmod+1)^0,w,c
 10938   0017E4  0A00               	xorlw	0	; case 0
 10939   0017E6  B4D8               	btfsc	status,2,c
 10940   0017E8  EFF8  F00B         	goto	i2l9276
 10941   0017EC  EF47  F00C         	goto	i2l5522
 10942   0017F0                     i2l9276:
 10943                           
 10944                           ; Switch size 1, requested type "simple"
 10945                           ; Number of cases is 10, Range of values is 0 to 9
 10946                           ; switch strategies available:
 10947                           ; Name         Instructions Cycles
 10948                           ; simple_byte           31    16 (average)
 10949                           ;	Chosen strategy is simple_byte
 10950   0017F0  5001               	movf	?i2___awmod^0,w,c
 10951   0017F2  0A00               	xorlw	0	; case 0
 10952   0017F4  B4D8               	btfsc	status,2,c
 10953   0017F6  EFC4  F00B         	goto	i2l5476
 10954   0017FA  0A01               	xorlw	1	; case 1
 10955   0017FC  B4D8               	btfsc	status,2,c
 10956   0017FE  EFC8  F00B         	goto	i2l5478
 10957   001802  0A03               	xorlw	3	; case 2
 10958   001804  B4D8               	btfsc	status,2,c
 10959   001806  EFCC  F00B         	goto	i2l5480
 10960   00180A  0A01               	xorlw	1	; case 3
 10961   00180C  B4D8               	btfsc	status,2,c
 10962   00180E  EFD0  F00B         	goto	i2l5482
 10963   001812  0A07               	xorlw	7	; case 4
 10964   001814  B4D8               	btfsc	status,2,c
 10965   001816  EFD4  F00B         	goto	i2l5484
 10966   00181A  0A01               	xorlw	1	; case 5
 10967   00181C  B4D8               	btfsc	status,2,c
 10968   00181E  EFD8  F00B         	goto	i2l5486
 10969   001822  0A03               	xorlw	3	; case 6
 10970   001824  B4D8               	btfsc	status,2,c
 10971   001826  EFDC  F00B         	goto	i2l5488
 10972   00182A  0A01               	xorlw	1	; case 7
 10973   00182C  B4D8               	btfsc	status,2,c
 10974   00182E  EFE0  F00B         	goto	i2l5490
 10975   001832  0A0F               	xorlw	15	; case 8
 10976   001834  B4D8               	btfsc	status,2,c
 10977   001836  EFE4  F00B         	goto	i2l5492
 10978   00183A  0A01               	xorlw	1	; case 9
 10979   00183C  B4D8               	btfsc	status,2,c
 10980   00183E  EFE4  F00B         	goto	i2l5492
 10981   001842  EF47  F00C         	goto	i2l5522
 10982   001846                     i2l5500:
 10983   001846  0E00               	movlw	0
 10984   001848  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 10985   00184A  EF82  F00C         	goto	i2l5524
 10986   00184E                     i2l5502:
 10987   00184E  0E01               	movlw	1
 10988   001850  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 10989   001852  EF82  F00C         	goto	i2l5524
 10990   001856                     i2l5504:
 10991   001856  0E02               	movlw	2
 10992   001858  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 10993   00185A  EF82  F00C         	goto	i2l5524
 10994   00185E                     i2l5506:
 10995   00185E  0E03               	movlw	3
 10996   001860  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 10997   001862  EF82  F00C         	goto	i2l5524
 10998   001866                     i2l5508:
 10999   001866  0E04               	movlw	4
 11000   001868  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 11001   00186A  EF82  F00C         	goto	i2l5524
 11002   00186E                     i2l5510:
 11003   00186E  0E05               	movlw	5
 11004   001870  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 11005   001872  EF82  F00C         	goto	i2l5524
 11006   001876                     i2l5512:
 11007   001876  0E06               	movlw	6
 11008   001878  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 11009   00187A  EF82  F00C         	goto	i2l5524
 11010   00187E                     i2l5514:
 11011   00187E  0E07               	movlw	7
 11012   001880  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 11013   001882  EF82  F00C         	goto	i2l5524
 11014   001886                     i2l5516:
 11015   001886  0E08               	movlw	8
 11016   001888  6E0C               	movwf	convert_int_to_BCD@h_nipple^0,c
 11017   00188A  EF82  F00C         	goto	i2l5524
 11018   00188E                     i2l5522:
 11019   00188E  C00A  F001         	movff	convert_int_to_BCD@int_num,i2___awdiv@dividend
 11020   001892  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
 11021   001894  0E00               	movlw	0
 11022   001896  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 11023   001898  0E0A               	movlw	10
 11024   00189A  6E03               	movwf	i2___awdiv@divisor^0,c
 11025   00189C  ECAF  F010         	call	i2___awdiv	;wreg free
 11026                           
 11027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11028                           ; Switch size 1, requested type "simple"
 11029                           ; Number of cases is 1, Range of values is 0 to 0
 11030                           ; switch strategies available:
 11031                           ; Name         Instructions Cycles
 11032                           ; simple_byte            4     3 (average)
 11033                           ;	Chosen strategy is simple_byte
 11034   0018A0  5002               	movf	(?i2___awdiv+1)^0,w,c
 11035   0018A2  0A00               	xorlw	0	; case 0
 11036   0018A4  B4D8               	btfsc	status,2,c
 11037   0018A6  EF57  F00C         	goto	i2l9278
 11038   0018AA  EF82  F00C         	goto	i2l5524
 11039   0018AE                     i2l9278:
 11040                           
 11041                           ; Switch size 1, requested type "simple"
 11042                           ; Number of cases is 10, Range of values is 0 to 9
 11043                           ; switch strategies available:
 11044                           ; Name         Instructions Cycles
 11045                           ; simple_byte           31    16 (average)
 11046                           ;	Chosen strategy is simple_byte
 11047   0018AE  5001               	movf	?i2___awdiv^0,w,c
 11048   0018B0  0A00               	xorlw	0	; case 0
 11049   0018B2  B4D8               	btfsc	status,2,c
 11050   0018B4  EF23  F00C         	goto	i2l5500
 11051   0018B8  0A01               	xorlw	1	; case 1
 11052   0018BA  B4D8               	btfsc	status,2,c
 11053   0018BC  EF27  F00C         	goto	i2l5502
 11054   0018C0  0A03               	xorlw	3	; case 2
 11055   0018C2  B4D8               	btfsc	status,2,c
 11056   0018C4  EF2B  F00C         	goto	i2l5504
 11057   0018C8  0A01               	xorlw	1	; case 3
 11058   0018CA  B4D8               	btfsc	status,2,c
 11059   0018CC  EF2F  F00C         	goto	i2l5506
 11060   0018D0  0A07               	xorlw	7	; case 4
 11061   0018D2  B4D8               	btfsc	status,2,c
 11062   0018D4  EF33  F00C         	goto	i2l5508
 11063   0018D8  0A01               	xorlw	1	; case 5
 11064   0018DA  B4D8               	btfsc	status,2,c
 11065   0018DC  EF37  F00C         	goto	i2l5510
 11066   0018E0  0A03               	xorlw	3	; case 6
 11067   0018E2  B4D8               	btfsc	status,2,c
 11068   0018E4  EF3B  F00C         	goto	i2l5512
 11069   0018E8  0A01               	xorlw	1	; case 7
 11070   0018EA  B4D8               	btfsc	status,2,c
 11071   0018EC  EF3F  F00C         	goto	i2l5514
 11072   0018F0  0A0F               	xorlw	15	; case 8
 11073   0018F2  B4D8               	btfsc	status,2,c
 11074   0018F4  EF43  F00C         	goto	i2l5516
 11075   0018F8  0A01               	xorlw	1	; case 9
 11076   0018FA  B4D8               	btfsc	status,2,c
 11077   0018FC  EF43  F00C         	goto	i2l5516
 11078   001900  EF82  F00C         	goto	i2l5524
 11079   001904                     i2l5524:
 11080                           
 11081                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 76:     *BCD_num=(h_nipple<<4)|(l_nipp
      +                          le);
 11082   001904  5009               	movf	convert_int_to_BCD@BCD_num^0,w,c
 11083   001906  6ED9               	movwf	fsr2l,c
 11084   001908  6ADA               	clrf	fsr2h,c
 11085   00190A  380C               	swapf	convert_int_to_BCD@h_nipple^0,w,c
 11086   00190C  0BF0               	andlw	240
 11087   00190E  100B               	iorwf	convert_int_to_BCD@l_nipple^0,w,c
 11088   001910  6EDF               	movwf	indf2,c
 11089   001912  0012               	return		;funcret
 11090   001914                     __end_of_convert_int_to_BCD:
 11091                           	callstack 0
 11092                           
 11093 ;; *************** function i2___awmod *****************
 11094 ;; Defined at:
 11095 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  dividend        2    0[COMRAM] int 
 11098 ;;  divisor         2    2[COMRAM] int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  sign            1    5[COMRAM] unsigned char 
 11101 ;;  counter         1    4[COMRAM] unsigned char 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  2    0[COMRAM] int 
 11104 ;; Registers used:
 11105 ;;		wreg, status,2, status,0
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11115 ;;Total ram usage:        6 bytes
 11116 ;; Hardware stack levels used: 1
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_convert_int_to_BCD
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text95
 11125   00244A                     __ptext95:
 11126                           	callstack 0
 11127   00244A                     i2___awmod:
 11128                           	callstack 16
 11129   00244A  0E00               	movlw	0
 11130   00244C  6E06               	movwf	i2___awmod@sign^0,c
 11131   00244E  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 11132   002450  EF2E  F012         	goto	i2u314_40
 11133   002454  EF2C  F012         	goto	i2u314_41
 11134   002458                     i2u314_41:
 11135   002458  EF34  F012         	goto	i2l5364
 11136   00245C                     i2u314_40:
 11137   00245C  6C01               	negf	i2___awmod@dividend^0,c
 11138   00245E  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 11139   002460  B0D8               	btfsc	status,0,c
 11140   002462  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 11141   002464  0E01               	movlw	1
 11142   002466  6E06               	movwf	i2___awmod@sign^0,c
 11143   002468                     i2l5364:
 11144   002468  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 11145   00246A  EF3B  F012         	goto	i2u315_40
 11146   00246E  EF39  F012         	goto	i2u315_41
 11147   002472                     i2u315_41:
 11148   002472  EF3F  F012         	goto	i2l5368
 11149   002476                     i2u315_40:
 11150   002476  6C03               	negf	i2___awmod@divisor^0,c
 11151   002478  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 11152   00247A  B0D8               	btfsc	status,0,c
 11153   00247C  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 11154   00247E                     i2l5368:
 11155   00247E  5003               	movf	i2___awmod@divisor^0,w,c
 11156   002480  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 11157   002482  B4D8               	btfsc	status,2,c
 11158   002484  EF46  F012         	goto	i2u316_41
 11159   002488  EF48  F012         	goto	i2u316_40
 11160   00248C                     i2u316_41:
 11161   00248C  EF6C  F012         	goto	i2l5384
 11162   002490                     i2u316_40:
 11163   002490  0E01               	movlw	1
 11164   002492  6E05               	movwf	i2___awmod@counter^0,c
 11165   002494  EF50  F012         	goto	i2l5374
 11166   002498                     i2l5372:
 11167   002498  90D8               	bcf	status,0,c
 11168   00249A  3603               	rlcf	i2___awmod@divisor^0,f,c
 11169   00249C  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 11170   00249E  2A05               	incf	i2___awmod@counter^0,f,c
 11171   0024A0                     i2l5374:
 11172   0024A0  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 11173   0024A2  EF55  F012         	goto	i2u317_41
 11174   0024A6  EF57  F012         	goto	i2u317_40
 11175   0024AA                     i2u317_41:
 11176   0024AA  EF4C  F012         	goto	i2l5372
 11177   0024AE                     i2u317_40:
 11178   0024AE                     i2l5376:
 11179   0024AE  5003               	movf	i2___awmod@divisor^0,w,c
 11180   0024B0  5C01               	subwf	i2___awmod@dividend^0,w,c
 11181   0024B2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 11182   0024B4  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 11183   0024B6  A0D8               	btfss	status,0,c
 11184   0024B8  EF60  F012         	goto	i2u318_41
 11185   0024BC  EF62  F012         	goto	i2u318_40
 11186   0024C0                     i2u318_41:
 11187   0024C0  EF66  F012         	goto	i2l5380
 11188   0024C4                     i2u318_40:
 11189   0024C4  5003               	movf	i2___awmod@divisor^0,w,c
 11190   0024C6  5E01               	subwf	i2___awmod@dividend^0,f,c
 11191   0024C8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 11192   0024CA  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 11193   0024CC                     i2l5380:
 11194   0024CC  90D8               	bcf	status,0,c
 11195   0024CE  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 11196   0024D0  3203               	rrcf	i2___awmod@divisor^0,f,c
 11197   0024D2  2E05               	decfsz	i2___awmod@counter^0,f,c
 11198   0024D4  EF57  F012         	goto	i2l5376
 11199   0024D8                     i2l5384:
 11200   0024D8  5006               	movf	i2___awmod@sign^0,w,c
 11201   0024DA  B4D8               	btfsc	status,2,c
 11202   0024DC  EF72  F012         	goto	i2u319_41
 11203   0024E0  EF74  F012         	goto	i2u319_40
 11204   0024E4                     i2u319_41:
 11205   0024E4  EF78  F012         	goto	i2l5388
 11206   0024E8                     i2u319_40:
 11207   0024E8  6C01               	negf	i2___awmod@dividend^0,c
 11208   0024EA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 11209   0024EC  B0D8               	btfsc	status,0,c
 11210   0024EE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 11211   0024F0                     i2l5388:
 11212   0024F0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 11213   0024F4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 11214   0024F8  0012               	return		;funcret
 11215   0024FA                     __end_ofi2___awmod:
 11216                           	callstack 0
 11217                           
 11218 ;; *************** function i2___awdiv *****************
 11219 ;; Defined at:
 11220 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;  dividend        2    0[COMRAM] int 
 11223 ;;  divisor         2    2[COMRAM] int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  quotient        2    6[COMRAM] int 
 11226 ;;  sign            1    5[COMRAM] unsigned char 
 11227 ;;  counter         1    4[COMRAM] unsigned char 
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  2    0[COMRAM] int 
 11230 ;; Registers used:
 11231 ;;		wreg, status,2, status,0
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11238 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11240 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;Total ram usage:        8 bytes
 11242 ;; Hardware stack levels used: 1
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_convert_int_to_BCD
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           	psect	text96
 11251   00215E                     __ptext96:
 11252                           	callstack 0
 11253   00215E                     i2___awdiv:
 11254                           	callstack 16
 11255   00215E  0E00               	movlw	0
 11256   002160  6E06               	movwf	i2___awdiv@sign^0,c
 11257   002162  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 11258   002164  EFB8  F010         	goto	i2u308_40
 11259   002168  EFB6  F010         	goto	i2u308_41
 11260   00216C                     i2u308_41:
 11261   00216C  EFBE  F010         	goto	i2l5320
 11262   002170                     i2u308_40:
 11263   002170  6C03               	negf	i2___awdiv@divisor^0,c
 11264   002172  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 11265   002174  B0D8               	btfsc	status,0,c
 11266   002176  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 11267   002178  0E01               	movlw	1
 11268   00217A  6E06               	movwf	i2___awdiv@sign^0,c
 11269   00217C                     i2l5320:
 11270   00217C  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 11271   00217E  EFC5  F010         	goto	i2u309_40
 11272   002182  EFC3  F010         	goto	i2u309_41
 11273   002186                     i2u309_41:
 11274   002186  EFCB  F010         	goto	i2l5326
 11275   00218A                     i2u309_40:
 11276   00218A  6C01               	negf	i2___awdiv@dividend^0,c
 11277   00218C  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 11278   00218E  B0D8               	btfsc	status,0,c
 11279   002190  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 11280   002192  0E01               	movlw	1
 11281   002194  1A06               	xorwf	i2___awdiv@sign^0,f,c
 11282   002196                     i2l5326:
 11283   002196  0E00               	movlw	0
 11284   002198  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 11285   00219A  0E00               	movlw	0
 11286   00219C  6E07               	movwf	i2___awdiv@quotient^0,c
 11287   00219E  5003               	movf	i2___awdiv@divisor^0,w,c
 11288   0021A0  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 11289   0021A2  B4D8               	btfsc	status,2,c
 11290   0021A4  EFD6  F010         	goto	i2u310_41
 11291   0021A8  EFD8  F010         	goto	i2u310_40
 11292   0021AC                     i2u310_41:
 11293   0021AC  EF00  F011         	goto	i2l5348
 11294   0021B0                     i2u310_40:
 11295   0021B0  0E01               	movlw	1
 11296   0021B2  6E05               	movwf	i2___awdiv@counter^0,c
 11297   0021B4  EFE0  F010         	goto	i2l5334
 11298   0021B8                     i2l5332:
 11299   0021B8  90D8               	bcf	status,0,c
 11300   0021BA  3603               	rlcf	i2___awdiv@divisor^0,f,c
 11301   0021BC  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 11302   0021BE  2A05               	incf	i2___awdiv@counter^0,f,c
 11303   0021C0                     i2l5334:
 11304   0021C0  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 11305   0021C2  EFE5  F010         	goto	i2u311_41
 11306   0021C6  EFE7  F010         	goto	i2u311_40
 11307   0021CA                     i2u311_41:
 11308   0021CA  EFDC  F010         	goto	i2l5332
 11309   0021CE                     i2u311_40:
 11310   0021CE                     i2l5336:
 11311   0021CE  90D8               	bcf	status,0,c
 11312   0021D0  3607               	rlcf	i2___awdiv@quotient^0,f,c
 11313   0021D2  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 11314   0021D4  5003               	movf	i2___awdiv@divisor^0,w,c
 11315   0021D6  5C01               	subwf	i2___awdiv@dividend^0,w,c
 11316   0021D8  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 11317   0021DA  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 11318   0021DC  A0D8               	btfss	status,0,c
 11319   0021DE  EFF3  F010         	goto	i2u312_41
 11320   0021E2  EFF5  F010         	goto	i2u312_40
 11321   0021E6                     i2u312_41:
 11322   0021E6  EFFA  F010         	goto	i2l5344
 11323   0021EA                     i2u312_40:
 11324   0021EA  5003               	movf	i2___awdiv@divisor^0,w,c
 11325   0021EC  5E01               	subwf	i2___awdiv@dividend^0,f,c
 11326   0021EE  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 11327   0021F0  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 11328   0021F2  8007               	bsf	i2___awdiv@quotient^0,0,c
 11329   0021F4                     i2l5344:
 11330   0021F4  90D8               	bcf	status,0,c
 11331   0021F6  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 11332   0021F8  3203               	rrcf	i2___awdiv@divisor^0,f,c
 11333   0021FA  2E05               	decfsz	i2___awdiv@counter^0,f,c
 11334   0021FC  EFE7  F010         	goto	i2l5336
 11335   002200                     i2l5348:
 11336   002200  5006               	movf	i2___awdiv@sign^0,w,c
 11337   002202  B4D8               	btfsc	status,2,c
 11338   002204  EF06  F011         	goto	i2u313_41
 11339   002208  EF08  F011         	goto	i2u313_40
 11340   00220C                     i2u313_41:
 11341   00220C  EF0C  F011         	goto	i2l5352
 11342   002210                     i2u313_40:
 11343   002210  6C07               	negf	i2___awdiv@quotient^0,c
 11344   002212  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 11345   002214  B0D8               	btfsc	status,0,c
 11346   002216  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 11347   002218                     i2l5352:
 11348   002218  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 11349   00221C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 11350   002220  0012               	return		;funcret
 11351   002222                     __end_ofi2___awdiv:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function i2_RealTimeClockDS1307_Get_Date_Time *****************
 11355 ;; Defined at:
 11356 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  6   22[COMRAM] struct .
 11363 ;; Registers used:
 11364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;Total ram usage:        6 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 9
 11377 ;; This function calls:
 11378 ;;		i2_I2C_Read1ByteRegister
 11379 ;; This function is called by:
 11380 ;;		_APP_INT0_ISR
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text97
 11385   003366                     __ptext97:
 11386                           	callstack 0
 11387   003366                     i2_RealTimeClockDS1307_Get_Date_Time:
 11388                           	callstack 8
 11389   003366                     
 11390                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
 11391   003366  0E00               	movlw	0
 11392   003368  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11393   00336A  0ED0               	movlw	208
 11394   00336C  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11395   003370  6E30               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+2)^0,c
 11396                           
 11397                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
 11398   003372  0E01               	movlw	1
 11399   003374  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11400   003376  0ED0               	movlw	208
 11401   003378  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11402   00337C  6E2F               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+1)^0,c
 11403                           
 11404                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
 11405   00337E  0E02               	movlw	2
 11406   003380  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11407   003382  0ED0               	movlw	208
 11408   003384  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11409   003388  6E2E               	movwf	_RTC1307@RealTimeClockDS1307$F1374^0,c
 11410                           
 11411                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
 11412   00338A  0E04               	movlw	4
 11413   00338C  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11414   00338E  0ED0               	movlw	208
 11415   003390  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11416   003394  6E33               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+5)^0,c
 11417                           
 11418                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
 11419   003396  0E05               	movlw	5
 11420   003398  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11421   00339A  0ED0               	movlw	208
 11422   00339C  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11423   0033A0  6E32               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+4)^0,c
 11424                           
 11425                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
 11426   0033A2  0E06               	movlw	6
 11427   0033A4  6E14               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 11428   0033A6  0ED0               	movlw	208
 11429   0033A8  ECCC  F016         	call	i2_I2C_Read1ByteRegister
 11430   0033AC  6E31               	movwf	(_RTC1307@RealTimeClockDS1307$F1374+3)^0,c
 11431   0033AE                     
 11432                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
 11433   0033AE  EE20  F02E         	lfsr	2,_RTC1307@RealTimeClockDS1307$F1374
 11434   0033B2  EE00  F017         	lfsr	0,?i2_RealTimeClockDS1307_Get_Date_Time
 11435   0033B6  0E05               	movlw	5
 11436   0033B8                     i2u547_41:
 11437   0033B8  CFDB FFEB          	movff	plusw2,plusw0
 11438   0033BC  06E8               	decf	wreg,f,c
 11439   0033BE  E2FC               	bc	i2u547_41
 11440   0033C0  0012               	return		;funcret
 11441   0033C2                     __end_ofi2_RealTimeClockDS1307_Get_Date_Time:
 11442                           	callstack 0
 11443                           
 11444 ;; *************** function i2_I2C_Read1ByteRegister *****************
 11445 ;; Defined at:
 11446 ;;		line 21 in file "mcc_generated_files/examples/i2c_master_example.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  address         1    wreg     unsigned char 
 11449 ;;  reg             1   19[COMRAM] unsigned char 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  address         1   20[COMRAM] unsigned char 
 11452 ;;  returnValue     1   21[COMRAM] unsigned char 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      unsigned char 
 11455 ;; Registers used:
 11456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;Total ram usage:        3 bytes
 11467 ;; Hardware stack levels used: 1
 11468 ;; Hardware stack levels required when called: 8
 11469 ;; This function calls:
 11470 ;;		i2_I2C_Close
 11471 ;;		i2_I2C_MasterWrite
 11472 ;;		i2_I2C_Open
 11473 ;;		i2_I2C_SetAddressNackCallback
 11474 ;;		i2_I2C_SetBuffer
 11475 ;;		i2_I2C_SetDataCompleteCallback
 11476 ;; This function is called by:
 11477 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text98
 11482   002D98                     __ptext98:
 11483                           	callstack 0
 11484   002D98                     i2_I2C_Read1ByteRegister:
 11485                           	callstack 8
 11486                           
 11487                           ;incstack = 0
 11488                           ;i2I2C_Read1ByteRegister@address stored from wreg
 11489   002D98  6E15               	movwf	i2I2C_Read1ByteRegister@address^0,c
 11490   002D9A                     
 11491                           ;mcc_generated_files/examples/i2c_master_example.c: 21: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 22:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 23:     uint8_t returnValue = 0x00
      +                          ;
 11492   002D9A  0E00               	movlw	0
 11493   002D9C  6E16               	movwf	i2I2C_Read1ByteRegister@returnValue^0,c
 11494   002D9E                     i2l7926:
 11495   002D9E  5015               	movf	i2I2C_Read1ByteRegister@address^0,w,c
 11496   002DA0  ECA4  F014         	call	i2_I2C_Open
 11497   002DA4  0900               	iorlw	0
 11498   002DA6  B4D8               	btfsc	status,2,c
 11499   002DA8  EFD8  F016         	goto	i2u521_41
 11500   002DAC  EFDA  F016         	goto	i2u521_40
 11501   002DB0                     i2u521_41:
 11502   002DB0  EFCF  F016         	goto	i2l7926
 11503   002DB4                     i2u521_40:
 11504   002DB4                     
 11505                           ;mcc_generated_files/examples/i2c_master_example.c: 26:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 11506   002DB4  0E3E               	movlw	low i2_rd1RegCompleteHandler
 11507   002DB6  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11508   002DB8  0E39               	movlw	high i2_rd1RegCompleteHandler
 11509   002DBA  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11510   002DBC  0E16               	movlw	low i2I2C_Read1ByteRegister@returnValue
 11511   002DBE  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11512   002DC0  6A09               	clrf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11513   002DC2  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11514   002DC6                     
 11515                           ;mcc_generated_files/examples/i2c_master_example.c: 27:     I2C_SetBuffer(&reg,1);
 11516   002DC6  0E14               	movlw	low i2I2C_Read1ByteRegister@reg
 11517   002DC8  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 11518   002DCA  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 11519   002DCC  0E00               	movlw	0
 11520   002DCE  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11521   002DD0  0E01               	movlw	1
 11522   002DD2  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11523   002DD4  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11524   002DD8                     
 11525                           ;mcc_generated_files/examples/i2c_master_example.c: 28:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 11526   002DD8  0E00               	movlw	0
 11527   002DDA  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 11528   002DDC  0E00               	movlw	0
 11529   002DDE  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 11530   002DE0  0E00               	movlw	0
 11531   002DE2  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 11532   002DE4  0E00               	movlw	0
 11533   002DE6  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 11534   002DE8  ECDB  F01D         	call	i2_I2C_SetAddressNackCallback	;wreg free
 11535   002DEC                     
 11536                           ;mcc_generated_files/examples/i2c_master_example.c: 29:     I2C_MasterWrite();
 11537   002DEC  ECB8  F01E         	call	i2_I2C_MasterWrite	;wreg free
 11538   002DF0                     i2l7936:
 11539   002DF0  ECCB  F01C         	call	i2_I2C_Close	;wreg free
 11540   002DF4  06E8               	decf	wreg,f,c
 11541   002DF6  B4D8               	btfsc	status,2,c
 11542   002DF8  EF00  F017         	goto	i2u522_41
 11543   002DFC  EF02  F017         	goto	i2u522_40
 11544   002E00                     i2u522_41:
 11545   002E00  EFF8  F016         	goto	i2l7936
 11546   002E04                     i2u522_40:
 11547   002E04                     
 11548                           ;mcc_generated_files/examples/i2c_master_example.c: 32:     return returnValue;
 11549   002E04  5016               	movf	i2I2C_Read1ByteRegister@returnValue^0,w,c
 11550   002E06  0012               	return		;funcret
 11551   002E08                     __end_ofi2_I2C_Read1ByteRegister:
 11552                           	callstack 0
 11553                           
 11554 ;; *************** function _I2C_Write1ByteRegister *****************
 11555 ;; Defined at:
 11556 ;;		line 49 in file "mcc_generated_files/examples/i2c_master_example.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  address         1    wreg     unsigned char 
 11559 ;;  reg             1   19[COMRAM] unsigned char 
 11560 ;;  data            1   20[COMRAM] unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;  address         1   21[COMRAM] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;Total ram usage:        3 bytes
 11577 ;; Hardware stack levels used: 1
 11578 ;; Hardware stack levels required when called: 8
 11579 ;; This function calls:
 11580 ;;		i2_I2C_Close
 11581 ;;		i2_I2C_MasterWrite
 11582 ;;		i2_I2C_Open
 11583 ;;		i2_I2C_SetAddressNackCallback
 11584 ;;		i2_I2C_SetBuffer
 11585 ;;		i2_I2C_SetDataCompleteCallback
 11586 ;; This function is called by:
 11587 ;;		_APP_INT0_ISR
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text99
 11592   00309C                     __ptext99:
 11593                           	callstack 0
 11594   00309C                     _I2C_Write1ByteRegister:
 11595                           	callstack 9
 11596                           
 11597                           ;incstack = 0
 11598                           ;I2C_Write1ByteRegister@address stored from wreg
 11599   00309C  6E16               	movwf	I2C_Write1ByteRegister@address^0,c
 11600   00309E                     i2l8012:
 11601   00309E  5016               	movf	I2C_Write1ByteRegister@address^0,w,c
 11602   0030A0  ECA4  F014         	call	i2_I2C_Open
 11603   0030A4  0900               	iorlw	0
 11604   0030A6  B4D8               	btfsc	status,2,c
 11605   0030A8  EF58  F018         	goto	i2u525_41
 11606   0030AC  EF5A  F018         	goto	i2u525_40
 11607   0030B0                     i2u525_41:
 11608   0030B0  EF4F  F018         	goto	i2l8012
 11609   0030B4                     i2u525_40:
 11610   0030B4                     
 11611                           ;mcc_generated_files/examples/i2c_master_example.c: 52:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 11612   0030B4  0EE6               	movlw	low i2_wr1RegCompleteHandler
 11613   0030B6  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11614   0030B8  0E38               	movlw	high i2_wr1RegCompleteHandler
 11615   0030BA  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11616   0030BC  0E15               	movlw	low I2C_Write1ByteRegister@data
 11617   0030BE  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11618   0030C0  6A09               	clrf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11619   0030C2  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11620   0030C6                     
 11621                           ;mcc_generated_files/examples/i2c_master_example.c: 53:     I2C_SetBuffer(&reg,1);
 11622   0030C6  0E14               	movlw	low I2C_Write1ByteRegister@reg
 11623   0030C8  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 11624   0030CA  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 11625   0030CC  0E00               	movlw	0
 11626   0030CE  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11627   0030D0  0E01               	movlw	1
 11628   0030D2  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11629   0030D4  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 11630   0030D8                     
 11631                           ;mcc_generated_files/examples/i2c_master_example.c: 54:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 11632   0030D8  0E00               	movlw	0
 11633   0030DA  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 11634   0030DC  0E00               	movlw	0
 11635   0030DE  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 11636   0030E0  0E00               	movlw	0
 11637   0030E2  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 11638   0030E4  0E00               	movlw	0
 11639   0030E6  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 11640   0030E8  ECDB  F01D         	call	i2_I2C_SetAddressNackCallback	;wreg free
 11641   0030EC                     
 11642                           ;mcc_generated_files/examples/i2c_master_example.c: 55:     I2C_MasterWrite();
 11643   0030EC  ECB8  F01E         	call	i2_I2C_MasterWrite	;wreg free
 11644   0030F0                     i2l8022:
 11645   0030F0  ECCB  F01C         	call	i2_I2C_Close	;wreg free
 11646   0030F4  06E8               	decf	wreg,f,c
 11647   0030F6  B4D8               	btfsc	status,2,c
 11648   0030F8  EF80  F018         	goto	i2u526_41
 11649   0030FC  EF82  F018         	goto	i2u526_40
 11650   003100                     i2u526_41:
 11651   003100  EF78  F018         	goto	i2l8022
 11652   003104                     i2u526_40:
 11653   003104  0012               	return		;funcret
 11654   003106                     __end_of_I2C_Write1ByteRegister:
 11655                           	callstack 0
 11656                           
 11657 ;; *************** function i2_I2C_SetAddressNackCallback *****************
 11658 ;; Defined at:
 11659 ;;		line 241 in file "mcc_generated_files/i2c_master.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11662 ;;		 -> NULL(1), 
 11663 ;;  ptr             2    7[COMRAM] PTR void 
 11664 ;;		 -> NULL(0), 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;		None
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  1    wreg      void 
 11669 ;; Registers used:
 11670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;Total ram usage:        4 bytes
 11681 ;; Hardware stack levels used: 1
 11682 ;; Hardware stack levels required when called: 1
 11683 ;; This function calls:
 11684 ;;		i2_I2C_SetCallback
 11685 ;; This function is called by:
 11686 ;;		_I2C_Write1ByteRegister
 11687 ;;		i2_I2C_Read1ByteRegister
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           	psect	text100
 11692   003BB6                     __ptext100:
 11693                           	callstack 0
 11694   003BB6                     i2_I2C_SetAddressNackCallback:
 11695                           	callstack 14
 11696   003BB6                     
 11697                           ;mcc_generated_files/i2c_master.c: 241: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 242: {;mcc_generated_files/i2c_master.c:
      +                           243:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 11698   003BB6  C006  F001         	movff	i2I2C_SetAddressNackCallback@cb,i2I2C_SetCallback@cb
 11699   003BBA  C007  F002         	movff	i2I2C_SetAddressNackCallback@cb+1,i2I2C_SetCallback@cb+1
 11700   003BBE  C008  F003         	movff	i2I2C_SetAddressNackCallback@ptr,i2I2C_SetCallback@ptr
 11701   003BC2  C009  F004         	movff	i2I2C_SetAddressNackCallback@ptr+1,i2I2C_SetCallback@ptr+1
 11702   003BC6  0E02               	movlw	2
 11703   003BC8  EC50  F019         	call	i2_I2C_SetCallback
 11704   003BCC  0012               	return		;funcret
 11705   003BCE                     __end_ofi2_I2C_SetAddressNackCallback:
 11706                           	callstack 0
 11707                           
 11708 ;; *************** function i2_I2C_Open *****************
 11709 ;; Defined at:
 11710 ;;		line 134 in file "mcc_generated_files/i2c_master.c"
 11711 ;; Parameters:    Size  Location     Type
 11712 ;;  address         1    wreg     unsigned char 
 11713 ;; Auto vars:     Size  Location     Type
 11714 ;;  address         1    0[COMRAM] unsigned char 
 11715 ;;  returnValue     1    1[COMRAM] enum E358
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      enum E358
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;Total ram usage:        2 bytes
 11730 ;; Hardware stack levels used: 1
 11731 ;; Hardware stack levels required when called: 1
 11732 ;; This function calls:
 11733 ;;		i2_I2C_MasterClearIrq
 11734 ;;		i2_I2C_MasterOpen
 11735 ;; This function is called by:
 11736 ;;		_I2C_Write1ByteRegister
 11737 ;;		i2_I2C_Read1ByteRegister
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text101
 11742   002948                     __ptext101:
 11743                           	callstack 0
 11744   002948                     i2_I2C_Open:
 11745                           	callstack 14
 11746                           
 11747                           ;incstack = 0
 11748                           ;i2I2C_Open@address stored from wreg
 11749   002948  6E01               	movwf	i2I2C_Open@address^0,c
 11750   00294A                     
 11751                           ;mcc_generated_files/i2c_master.c: 134: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 135: {;mcc_generated_files/i2c_master.c: 136:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 11752   00294A  0E01               	movlw	1
 11753   00294C  6E02               	movwf	i2I2C_Open@returnValue^0,c
 11754   00294E                     
 11755                           ;mcc_generated_files/i2c_master.c: 138:     if(!I2C_Status.inUse)
 11756   00294E  0100               	movlb	0	; () banked
 11757   002950  B5D3               	btfsc	(_I2C_Status+35)& (0+255),2,b
 11758   002952  EFAD  F014         	goto	i2u509_41
 11759   002956  EFAF  F014         	goto	i2u509_40
 11760   00295A                     i2u509_41:
 11761   00295A  EFE9  F014         	goto	i2l7790
 11762   00295E                     i2u509_40:
 11763   00295E                     
 11764                           ; BSR set to: 0
 11765                           ;mcc_generated_files/i2c_master.c: 139:     {;mcc_generated_files/i2c_master.c: 140:    
      +                               I2C_Status.address = address;
 11766   00295E  C001  F0CC         	movff	i2I2C_Open@address,_I2C_Status+28
 11767   002962                     
 11768                           ; BSR set to: 0
 11769                           ;mcc_generated_files/i2c_master.c: 141:         I2C_Status.busy = 0;
 11770   002962  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
 11771   002964                     
 11772                           ; BSR set to: 0
 11773                           ;mcc_generated_files/i2c_master.c: 142:         I2C_Status.inUse = 1;
 11774   002964  85D3               	bsf	(_I2C_Status+35)& (0+255),2,b
 11775   002966                     
 11776                           ; BSR set to: 0
 11777                           ;mcc_generated_files/i2c_master.c: 143:         I2C_Status.addressNackCheck = 0;
 11778   002966  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
 11779   002968                     
 11780                           ; BSR set to: 0
 11781                           ;mcc_generated_files/i2c_master.c: 144:         I2C_Status.state = I2C_RESET;
 11782   002968  0E0E               	movlw	14
 11783   00296A  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
 11784   00296C                     
 11785                           ; BSR set to: 0
 11786                           ;mcc_generated_files/i2c_master.c: 145:         I2C_Status.time_out_value = 500;
 11787   00296C  0E01               	movlw	1
 11788   00296E  6FCB               	movwf	(_I2C_Status+27)& (0+255),b
 11789   002970  0EF4               	movlw	244
 11790   002972  6FCA               	movwf	(_I2C_Status+26)& (0+255),b
 11791   002974                     
 11792                           ; BSR set to: 0
 11793                           ;mcc_generated_files/i2c_master.c: 146:         I2C_Status.bufferFree = 1;
 11794   002974  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
 11795   002976                     
 11796                           ; BSR set to: 0
 11797                           ;mcc_generated_files/i2c_master.c: 149:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 11798   002976  0E0A               	movlw	low i2_I2C_CallbackReturnStop
 11799   002978  6FB0               	movwf	_I2C_Status& (0+255),b
 11800   00297A  0E3E               	movlw	high i2_I2C_CallbackReturnStop
 11801   00297C  6FB1               	movwf	(_I2C_Status+1)& (0+255),b
 11802   00297E                     
 11803                           ; BSR set to: 0
 11804                           ;mcc_generated_files/i2c_master.c: 150:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 11805   00297E  0E00               	movlw	0
 11806   002980  6FBC               	movwf	(_I2C_Status+12)& (0+255),b
 11807   002982  0E00               	movlw	0
 11808   002984  6FBD               	movwf	(_I2C_Status+13)& (0+255),b
 11809   002986                     
 11810                           ; BSR set to: 0
 11811                           ;mcc_generated_files/i2c_master.c: 151:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 11812   002986  0E0A               	movlw	low i2_I2C_CallbackReturnStop
 11813   002988  6FB2               	movwf	(_I2C_Status+2)& (0+255),b
 11814   00298A  0E3E               	movlw	high i2_I2C_CallbackReturnStop
 11815   00298C  6FB3               	movwf	(_I2C_Status+3)& (0+255),b
 11816   00298E                     
 11817                           ; BSR set to: 0
 11818                           ;mcc_generated_files/i2c_master.c: 152:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 11819   00298E  0E00               	movlw	0
 11820   002990  6FBE               	movwf	(_I2C_Status+14)& (0+255),b
 11821   002992  0E00               	movlw	0
 11822   002994  6FBF               	movwf	(_I2C_Status+15)& (0+255),b
 11823   002996                     
 11824                           ; BSR set to: 0
 11825                           ;mcc_generated_files/i2c_master.c: 153:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 11826   002996  0E0A               	movlw	low i2_I2C_CallbackReturnStop
 11827   002998  6FB4               	movwf	(_I2C_Status+4)& (0+255),b
 11828   00299A  0E3E               	movlw	high i2_I2C_CallbackReturnStop
 11829   00299C  6FB5               	movwf	(_I2C_Status+5)& (0+255),b
 11830   00299E                     
 11831                           ; BSR set to: 0
 11832                           ;mcc_generated_files/i2c_master.c: 154:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 11833   00299E  0E00               	movlw	0
 11834   0029A0  6FC0               	movwf	(_I2C_Status+16)& (0+255),b
 11835   0029A2  0E00               	movlw	0
 11836   0029A4  6FC1               	movwf	(_I2C_Status+17)& (0+255),b
 11837   0029A6                     
 11838                           ; BSR set to: 0
 11839                           ;mcc_generated_files/i2c_master.c: 155:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 11840   0029A6  0E0A               	movlw	low i2_I2C_CallbackReturnStop
 11841   0029A8  6FB6               	movwf	(_I2C_Status+6)& (0+255),b
 11842   0029AA  0E3E               	movlw	high i2_I2C_CallbackReturnStop
 11843   0029AC  6FB7               	movwf	(_I2C_Status+7)& (0+255),b
 11844   0029AE                     
 11845                           ; BSR set to: 0
 11846                           ;mcc_generated_files/i2c_master.c: 156:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 11847   0029AE  0E00               	movlw	0
 11848   0029B0  6FC2               	movwf	(_I2C_Status+18)& (0+255),b
 11849   0029B2  0E00               	movlw	0
 11850   0029B4  6FC3               	movwf	(_I2C_Status+19)& (0+255),b
 11851   0029B6                     
 11852                           ; BSR set to: 0
 11853                           ;mcc_generated_files/i2c_master.c: 157:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 11854   0029B6  0E06               	movlw	low i2_I2C_CallbackReturnReset
 11855   0029B8  6FB8               	movwf	(_I2C_Status+8)& (0+255),b
 11856   0029BA  0E3E               	movlw	high i2_I2C_CallbackReturnReset
 11857   0029BC  6FB9               	movwf	(_I2C_Status+9)& (0+255),b
 11858   0029BE                     
 11859                           ; BSR set to: 0
 11860                           ;mcc_generated_files/i2c_master.c: 158:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 11861   0029BE  0E00               	movlw	0
 11862   0029C0  6FC4               	movwf	(_I2C_Status+20)& (0+255),b
 11863   0029C2  0E00               	movlw	0
 11864   0029C4  6FC5               	movwf	(_I2C_Status+21)& (0+255),b
 11865   0029C6                     
 11866                           ; BSR set to: 0
 11867                           ;mcc_generated_files/i2c_master.c: 160:         I2C_MasterClearIrq();
 11868   0029C6  EC11  F01F         	call	i2_I2C_MasterClearIrq	;wreg free
 11869   0029CA                     
 11870                           ;mcc_generated_files/i2c_master.c: 161:         I2C_MasterOpen();
 11871   0029CA  EC7B  F01D         	call	i2_I2C_MasterOpen	;wreg free
 11872   0029CE                     
 11873                           ;mcc_generated_files/i2c_master.c: 162:         returnValue = I2C_NOERR;
 11874   0029CE  0E00               	movlw	0
 11875   0029D0  6E02               	movwf	i2I2C_Open@returnValue^0,c
 11876   0029D2                     i2l7790:
 11877                           
 11878                           ;mcc_generated_files/i2c_master.c: 164:     return returnValue;
 11879   0029D2  5002               	movf	i2I2C_Open@returnValue^0,w,c
 11880   0029D4  0012               	return		;funcret
 11881   0029D6                     __end_ofi2_I2C_Open:
 11882                           	callstack 0
 11883                           
 11884 ;; *************** function i2_I2C_MasterOpen *****************
 11885 ;; Defined at:
 11886 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;		None
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;		None
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      _Bool 
 11893 ;; Registers used:
 11894 ;;		wreg, status,2
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11904 ;;Total ram usage:        0 bytes
 11905 ;; Hardware stack levels used: 1
 11906 ;; This function calls:
 11907 ;;		Nothing
 11908 ;; This function is called by:
 11909 ;;		i2_I2C_Open
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           	psect	text102
 11914   003AF6                     __ptext102:
 11915                           	callstack 0
 11916   003AF6                     i2_I2C_MasterOpen:
 11917                           	callstack 14
 11918   003AF6                     
 11919                           ;mcc_generated_files/i2c_master.c: 503:     if(!SSPCON1bits.SSPEN)
 11920   003AF6  BAC6               	btfsc	198,5,c	;volatile
 11921   003AF8  EF80  F01D         	goto	i2u273_41
 11922   003AFC  EF82  F01D         	goto	i2u273_40
 11923   003B00                     i2u273_41:
 11924   003B00  EF8B  F01D         	goto	i2l406
 11925   003B04                     i2u273_40:
 11926   003B04                     
 11927                           ;mcc_generated_files/i2c_master.c: 504:     {;mcc_generated_files/i2c_master.c: 505:    
      +                               SSPSTAT = 0x00;
 11928   003B04  0E00               	movlw	0
 11929   003B06  6EC7               	movwf	199,c	;volatile
 11930                           
 11931                           ;mcc_generated_files/i2c_master.c: 506:         SSPCON1 = 0x08;
 11932   003B08  0E08               	movlw	8
 11933   003B0A  6EC6               	movwf	198,c	;volatile
 11934                           
 11935                           ;mcc_generated_files/i2c_master.c: 507:         SSPCON2 = 0x00;
 11936   003B0C  0E00               	movlw	0
 11937   003B0E  6EC5               	movwf	197,c	;volatile
 11938                           
 11939                           ;mcc_generated_files/i2c_master.c: 508:         SSPADD = 0x13;
 11940   003B10  0E13               	movlw	19
 11941   003B12  6EC8               	movwf	200,c	;volatile
 11942   003B14                     
 11943                           ;mcc_generated_files/i2c_master.c: 509:         SSPCON1bits.SSPEN = 1;
 11944   003B14  8AC6               	bsf	198,5,c	;volatile
 11945   003B16                     i2l406:
 11946   003B16  0012               	return		;funcret
 11947   003B18                     __end_ofi2_I2C_MasterOpen:
 11948                           	callstack 0
 11949                           
 11950 ;; *************** function i2_I2C_MasterWrite *****************
 11951 ;; Defined at:
 11952 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;		None
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  1    wreg      enum E358
 11959 ;; Registers used:
 11960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;Total ram usage:        0 bytes
 11971 ;; Hardware stack levels used: 1
 11972 ;; Hardware stack levels required when called: 7
 11973 ;; This function calls:
 11974 ;;		i2_I2C_MasterOperation
 11975 ;; This function is called by:
 11976 ;;		_I2C_Write1ByteRegister
 11977 ;;		i2_I2C_Read1ByteRegister
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text103
 11982   003D70                     __ptext103:
 11983                           	callstack 0
 11984   003D70                     i2_I2C_MasterWrite:
 11985                           	callstack 8
 11986   003D70                     
 11987                           ;mcc_generated_files/i2c_master.c: 211:     return I2C_MasterOperation(0);;	Return value
      +                           of i2_I2C_MasterWrite is never used
 11988   003D70  0E00               	movlw	0
 11989   003D72  ECC6  F01A         	call	i2_I2C_MasterOperation
 11990   003D76  0012               	return		;funcret
 11991   003D78                     __end_ofi2_I2C_MasterWrite:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function i2_I2C_MasterOperation *****************
 11995 ;; Defined at:
 11996 ;;		line 182 in file "mcc_generated_files/i2c_master.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  read            1    wreg     _Bool 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  read            1   17[COMRAM] _Bool 
 12001 ;;  returnValue     1   18[COMRAM] enum E358
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      enum E358
 12004 ;; Registers used:
 12005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;Total ram usage:        2 bytes
 12016 ;; Hardware stack levels used: 1
 12017 ;; Hardware stack levels required when called: 6
 12018 ;; This function calls:
 12019 ;;		i2_I2C_MasterStart
 12020 ;;		i2_I2C_Poller
 12021 ;; This function is called by:
 12022 ;;		i2_I2C_MasterWrite
 12023 ;; This function uses a non-reentrant model
 12024 ;;
 12025                           
 12026                           	psect	text104
 12027   00358C                     __ptext104:
 12028                           	callstack 0
 12029   00358C                     i2_I2C_MasterOperation:
 12030                           	callstack 8
 12031                           
 12032                           ;incstack = 0
 12033                           ;i2I2C_MasterOperation@read stored from wreg
 12034   00358C  6E12               	movwf	i2I2C_MasterOperation@read^0,c
 12035   00358E                     
 12036                           ;mcc_generated_files/i2c_master.c: 182: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 183: {;mcc_generated_files/i2c_master.c: 184:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12037   00358E  0E01               	movlw	1
 12038   003590  6E13               	movwf	i2I2C_MasterOperation@returnValue^0,c
 12039   003592                     
 12040                           ;mcc_generated_files/i2c_master.c: 185:     if(!I2C_Status.busy)
 12041   003592  0100               	movlb	0	; () banked
 12042   003594  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12043   003596  EFCF  F01A         	goto	i2u488_41
 12044   00359A  EFD1  F01A         	goto	i2u488_40
 12045   00359E                     i2u488_41:
 12046   00359E  EFE6  F01A         	goto	i2l7628
 12047   0035A2                     i2u488_40:
 12048   0035A2                     
 12049                           ; BSR set to: 0
 12050                           ;mcc_generated_files/i2c_master.c: 186:     {;mcc_generated_files/i2c_master.c: 187:    
      +                               I2C_Status.busy = 1;
 12051   0035A2  83D3               	bsf	(_I2C_Status+35)& (0+255),1,b
 12052   0035A4                     
 12053                           ; BSR set to: 0
 12054                           ;mcc_generated_files/i2c_master.c: 188:         returnValue = I2C_NOERR;
 12055   0035A4  0E00               	movlw	0
 12056   0035A6  6E13               	movwf	i2I2C_MasterOperation@returnValue^0,c
 12057   0035A8                     
 12058                           ; BSR set to: 0
 12059                           ;mcc_generated_files/i2c_master.c: 190:         if(read)
 12060   0035A8  5012               	movf	i2I2C_MasterOperation@read^0,w,c
 12061   0035AA  B4D8               	btfsc	status,2,c
 12062   0035AC  EFDA  F01A         	goto	i2u489_41
 12063   0035B0  EFDC  F01A         	goto	i2u489_40
 12064   0035B4                     i2u489_41:
 12065   0035B4  EFE0  F01A         	goto	i2l7622
 12066   0035B8                     i2u489_40:
 12067   0035B8                     
 12068                           ; BSR set to: 0
 12069                           ;mcc_generated_files/i2c_master.c: 191:         {;mcc_generated_files/i2c_master.c: 192:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 12070   0035B8  0E01               	movlw	1
 12071   0035BA  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
 12072                           
 12073                           ;mcc_generated_files/i2c_master.c: 193:         }
 12074   0035BC  EFE2  F01A         	goto	i2l7624
 12075   0035C0                     i2l7622:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;mcc_generated_files/i2c_master.c: 195:         {;mcc_generated_files/i2c_master.c: 196:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 12079   0035C0  0E02               	movlw	2
 12080   0035C2  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
 12081   0035C4                     i2l7624:
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;mcc_generated_files/i2c_master.c: 198:         I2C_MasterStart();
 12085   0035C4  EC0B  F01F         	call	i2_I2C_MasterStart	;wreg free
 12086   0035C8                     
 12087                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Poller();
 12088   0035C8  EC9B  F01D         	call	i2_I2C_Poller	;wreg free
 12089   0035CC                     i2l7628:
 12090                           
 12091                           ;mcc_generated_files/i2c_master.c: 201:     return returnValue;
 12092   0035CC  5013               	movf	i2I2C_MasterOperation@returnValue^0,w,c
 12093   0035CE  0012               	return		;funcret
 12094   0035D0                     __end_ofi2_I2C_MasterOperation:
 12095                           	callstack 0
 12096                           
 12097 ;; *************** function i2_I2C_Poller *****************
 12098 ;; Defined at:
 12099 ;;		line 270 in file "mcc_generated_files/i2c_master.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;		None
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        0 bytes
 12118 ;; Hardware stack levels used: 1
 12119 ;; Hardware stack levels required when called: 5
 12120 ;; This function calls:
 12121 ;;		i2_I2C_MasterFsm
 12122 ;;		i2_I2C_MasterWaitForEvent
 12123 ;; This function is called by:
 12124 ;;		i2_I2C_MasterOperation
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text105
 12129   003B36                     __ptext105:
 12130                           	callstack 0
 12131   003B36                     i2_I2C_Poller:
 12132                           	callstack 8
 12133   003B36                     
 12134                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
 12135   003B36  EFA1  F01D         	goto	i2l7468
 12136   003B3A                     i2l7464:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;mcc_generated_files/i2c_master.c: 273:     {;mcc_generated_files/i2c_master.c: 274:    
      +                               I2C_MasterWaitForEvent();
 12140   003B3A  EC79  F01E         	call	i2_I2C_MasterWaitForEvent	;wreg free
 12141   003B3E                     
 12142                           ;mcc_generated_files/i2c_master.c: 275:         I2C_MasterFsm();
 12143   003B3E  EC17  F018         	call	i2_I2C_MasterFsm	;wreg free
 12144   003B42                     i2l7468:
 12145                           
 12146                           ;mcc_generated_files/i2c_master.c: 272:     while(I2C_Status.busy)
 12147   003B42  0100               	movlb	0	; () banked
 12148   003B44  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12149   003B46  EFA7  F01D         	goto	i2u460_41
 12150   003B4A  EFA9  F01D         	goto	i2u460_40
 12151   003B4E                     i2u460_41:
 12152   003B4E  EF9D  F01D         	goto	i2l7464
 12153   003B52                     i2u460_40:
 12154   003B52                     
 12155                           ; BSR set to: 0
 12156   003B52  0012               	return		;funcret
 12157   003B54                     __end_ofi2_I2C_Poller:
 12158                           	callstack 0
 12159                           
 12160 ;; *************** function i2_I2C_MasterWaitForEvent *****************
 12161 ;; Defined at:
 12162 ;;		line 608 in file "mcc_generated_files/i2c_master.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;		None
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  1    wreg      void 
 12169 ;; Registers used:
 12170 ;;		None
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;Total ram usage:        0 bytes
 12181 ;; Hardware stack levels used: 1
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		i2_I2C_Poller
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text106
 12190   003CF2                     __ptext106:
 12191                           	callstack 0
 12192   003CF2                     i2_I2C_MasterWaitForEvent:
 12193                           	callstack 12
 12194   003CF2                     i2l463:
 12195                           
 12196                           ;mcc_generated_files/i2c_master.c: 611:     {;mcc_generated_files/i2c_master.c: 612:    
      +                               if(PIR1bits.SSPIF)
 12197   003CF2  A69E               	btfss	158,3,c	;volatile
 12198   003CF4  EF7E  F01E         	goto	i2u235_41
 12199   003CF8  EF80  F01E         	goto	i2u235_40
 12200   003CFC                     i2u235_41:
 12201   003CFC  EF79  F01E         	goto	i2l463
 12202   003D00                     i2u235_40:
 12203   003D00  0012               	return		;funcret
 12204   003D02                     __end_ofi2_I2C_MasterWaitForEvent:
 12205                           	callstack 0
 12206                           
 12207 ;; *************** function i2_I2C_MasterFsm *****************
 12208 ;; Defined at:
 12209 ;;		line 279 in file "mcc_generated_files/i2c_master.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;		None
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;		None
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  1    wreg      void 
 12216 ;; Registers used:
 12217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12226 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;Total ram usage:        3 bytes
 12228 ;; Hardware stack levels used: 1
 12229 ;; Hardware stack levels required when called: 4
 12230 ;; This function calls:
 12231 ;;		i2_I2C_DO_ADDRESS_NACK
 12232 ;;		i2_I2C_DO_IDLE
 12233 ;;		i2_I2C_DO_RCEN
 12234 ;;		i2_I2C_DO_RESET
 12235 ;;		i2_I2C_DO_RX
 12236 ;;		i2_I2C_DO_RX_ACK
 12237 ;;		i2_I2C_DO_RX_NACK_RESTART
 12238 ;;		i2_I2C_DO_RX_NACK_STOP
 12239 ;;		i2_I2C_DO_SEND_ADR_READ
 12240 ;;		i2_I2C_DO_SEND_ADR_WRITE
 12241 ;;		i2_I2C_DO_SEND_RESTART
 12242 ;;		i2_I2C_DO_SEND_RESTART_READ
 12243 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 12244 ;;		i2_I2C_DO_SEND_STOP
 12245 ;;		i2_I2C_DO_TX
 12246 ;;		i2_I2C_DO_TX_EMPTY
 12247 ;;		i2_I2C_MasterClearIrq
 12248 ;;		i2_I2C_MasterIsNack
 12249 ;; This function is called by:
 12250 ;;		i2_I2C_Poller
 12251 ;; This function uses a non-reentrant model
 12252 ;;
 12253                           
 12254                           	psect	text107
 12255   00302E                     __ptext107:
 12256                           	callstack 0
 12257   00302E                     i2_I2C_MasterFsm:
 12258                           	callstack 8
 12259   00302E                     
 12260                           ;mcc_generated_files/i2c_master.c: 281:     I2C_MasterClearIrq();
 12261   00302E  EC11  F01F         	call	i2_I2C_MasterClearIrq	;wreg free
 12262   003032                     
 12263                           ;mcc_generated_files/i2c_master.c: 283:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12264   003032  0100               	movlb	0	; () banked
 12265   003034  A1D3               	btfss	(_I2C_Status+35)& (0+255),0,b
 12266   003036  EF1F  F018         	goto	i2u450_41
 12267   00303A  EF21  F018         	goto	i2u450_40
 12268   00303E                     i2u450_41:
 12269   00303E  EF2E  F018         	goto	i2l7304
 12270   003042                     i2u450_40:
 12271   003042                     
 12272                           ; BSR set to: 0
 12273   003042  EC28  F01E         	call	i2_I2C_MasterIsNack	;wreg free
 12274   003046  0900               	iorlw	0
 12275   003048  B4D8               	btfsc	status,2,c
 12276   00304A  EF29  F018         	goto	i2u451_41
 12277   00304E  EF2B  F018         	goto	i2u451_40
 12278   003052                     i2u451_41:
 12279   003052  EF2E  F018         	goto	i2l7304
 12280   003056                     i2u451_40:
 12281   003056                     
 12282                           ;mcc_generated_files/i2c_master.c: 284:     {;mcc_generated_files/i2c_master.c: 285:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12283   003056  0E0F               	movlw	15
 12284   003058  0100               	movlb	0	; () banked
 12285   00305A  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
 12286   00305C                     i2l7304:
 12287                           
 12288                           ;mcc_generated_files/i2c_master.c: 287:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12289   00305C  0100               	movlb	0	; () banked
 12290   00305E  51D1               	movf	(_I2C_Status+33)& (0+255),w,b
 12291   003060  0D02               	mullw	2
 12292   003062  50F3               	movf	243,w,c
 12293   003064  0F01               	addlw	low _i2c_fsmStateTable
 12294   003066  6E0F               	movwf	??i2_I2C_MasterFsm^0,c
 12295   003068  C00F  FFF6         	movff	??i2_I2C_MasterFsm,tblptrl
 12296   00306C                     	if	1	;There is more than 1 active tblptr byte
 12297   00306C  0E10               	movlw	high __smallconst
 12298   00306E  6EF7               	movwf	tblptrh,c
 12299   003070                     	endif
 12300   003070                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12301   003070  6AF8               	clrf	tblptru,c
 12302   003072                     	endif
 12303   003072                     	if	0	;tblptru may be non-zero
 12304   003072                     	endif
 12305   003072  0009               	tblrd		*+
 12306   003074  CFF5 F010          	movff	tablat,??i2_I2C_MasterFsm+1
 12307   003078  0009               	tblrd		*+
 12308   00307A  CFF5 F011          	movff	tablat,??i2_I2C_MasterFsm+2
 12309   00307E  D802               	call	i2u452_48
 12310   003080  EF4B  F018         	goto	i2u452_49
 12311   003084                     i2u452_48:
 12312   003084  0005               	push	
 12313   003086  6EFA               	movwf	pclath,c
 12314   003088  5010               	movf	(??i2_I2C_MasterFsm+1)^0,w,c
 12315   00308A  6EFD               	movwf	tosl,c
 12316   00308C  5011               	movf	(??i2_I2C_MasterFsm+2)^0,w,c
 12317   00308E  6EFE               	movwf	tosh,c
 12318   003090  6AFF               	clrf	tosu,c
 12319   003092  50FA               	movf	pclath,w,c
 12320   003094  0012               	return		;indir
 12321   003096                     i2u452_49:
 12322   003096  0100               	movlb	0	; () banked
 12323   003098  6FD1               	movwf	(_I2C_Status+33)& (0+255),b
 12324   00309A                     
 12325                           ; BSR set to: 0
 12326   00309A  0012               	return		;funcret
 12327   00309C                     __end_ofi2_I2C_MasterFsm:
 12328                           	callstack 0
 12329                           
 12330 ;; *************** function i2_I2C_DO_ADDRESS_NACK *****************
 12331 ;; Defined at:
 12332 ;;		line 458 in file "mcc_generated_files/i2c_master.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      enum E2876
 12339 ;; Registers used:
 12340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        2 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 3
 12353 ;; This function calls:
 12354 ;;		NULL
 12355 ;;		i2_I2C_CallbackReturnReset
 12356 ;;		i2_I2C_CallbackReturnStop
 12357 ;;		i2_I2C_DO_SEND_RESTART
 12358 ;;		i2_I2C_DO_SEND_STOP
 12359 ;;		i2_rd1RegCompleteHandler
 12360 ;;		i2_rd2RegCompleteHandler
 12361 ;;		i2_rdBlkRegCompleteHandler
 12362 ;;		i2_wr1RegCompleteHandler
 12363 ;;		i2_wr2RegCompleteHandler
 12364 ;; This function is called by:
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text108
 12369   00323A                     __ptext108:
 12370                           	callstack 0
 12371   00323A                     i2_I2C_DO_ADDRESS_NACK:
 12372                           	callstack 8
 12373   00323A                     
 12374                           ;mcc_generated_files/i2c_master.c: 460:     I2C_Status.addressNackCheck = 0;
 12375   00323A  0100               	movlb	0	; () banked
 12376   00323C  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
 12377   00323E                     
 12378                           ; BSR set to: 0
 12379                           ;mcc_generated_files/i2c_master.c: 461:     I2C_Status.error = I2C_FAIL;
 12380   00323E  0E02               	movlw	2
 12381   003240  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
 12382                           
 12383                           ;mcc_generated_files/i2c_master.c: 462:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 12384   003242  EF2B  F019         	goto	i2l7190
 12385   003246                     i2l7180:
 12386                           
 12387                           ;mcc_generated_files/i2c_master.c: 466:             return I2C_DO_SEND_RESTART();
 12388   003246  ECCC  F01E         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 12389   00324A  EF4F  F019         	goto	i2l385
 12390   00324E                     i2l7184:
 12391                           
 12392                           ;mcc_generated_files/i2c_master.c: 468:             return I2C_DO_SEND_STOP();
 12393   00324E  ECC8  F01E         	call	i2_I2C_DO_SEND_STOP	;wreg free
 12394   003252  EF4F  F019         	goto	i2l385
 12395   003256                     i2l7190:
 12396                           
 12397                           ; BSR set to: 0
 12398   003256  C0C0  F00A         	movff	_I2C_Status+16,i2rd1RegCompleteHandler@ptr
 12399   00325A  C0C1  F00B         	movff	_I2C_Status+17,i2rd1RegCompleteHandler@ptr+1
 12400   00325E  D802               	call	i2u448_48
 12401   003260  EF3B  F019         	goto	i2u448_49
 12402   003264                     i2u448_48:
 12403   003264  0005               	push	
 12404   003266  6EFA               	movwf	pclath,c
 12405   003268  51B4               	movf	(_I2C_Status+4)& (0+255),w,b
 12406   00326A  6EFD               	movwf	tosl,c
 12407   00326C  51B5               	movf	(_I2C_Status+5)& (0+255),w,b
 12408   00326E  6EFE               	movwf	tosh,c
 12409   003270  6AFF               	clrf	tosu,c
 12410   003272  50FA               	movf	pclath,w,c
 12411   003274  0012               	return		;indir
 12412   003276                     i2u448_49:
 12413   003276  6E0D               	movwf	??i2_I2C_DO_ADDRESS_NACK^0,c
 12414   003278  6A0E               	clrf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,c
 12415                           
 12416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12417                           ; Switch size 1, requested type "simple"
 12418                           ; Number of cases is 1, Range of values is 0 to 0
 12419                           ; switch strategies available:
 12420                           ; Name         Instructions Cycles
 12421                           ; simple_byte            4     3 (average)
 12422                           ;	Chosen strategy is simple_byte
 12423   00327A  500E               	movf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,w,c
 12424   00327C  0A00               	xorlw	0	; case 0
 12425   00327E  B4D8               	btfsc	status,2,c
 12426   003280  EF44  F019         	goto	i2l9280
 12427   003284  EF27  F019         	goto	i2l7184
 12428   003288                     i2l9280:
 12429                           
 12430                           ; Switch size 1, requested type "simple"
 12431                           ; Number of cases is 2, Range of values is 2 to 3
 12432                           ; switch strategies available:
 12433                           ; Name         Instructions Cycles
 12434                           ; simple_byte            7     4 (average)
 12435                           ;	Chosen strategy is simple_byte
 12436   003288  500D               	movf	??i2_I2C_DO_ADDRESS_NACK^0,w,c
 12437   00328A  0A02               	xorlw	2	; case 2
 12438   00328C  B4D8               	btfsc	status,2,c
 12439   00328E  EF23  F019         	goto	i2l7180
 12440   003292  0A01               	xorlw	1	; case 3
 12441   003294  B4D8               	btfsc	status,2,c
 12442   003296  EF23  F019         	goto	i2l7180
 12443   00329A  EF27  F019         	goto	i2l7184
 12444   00329E                     i2l385:
 12445   00329E  0012               	return		;funcret
 12446   0032A0                     __end_ofi2_I2C_DO_ADDRESS_NACK:
 12447                           	callstack 0
 12448                           
 12449 ;; *************** function i2_I2C_DO_RESET *****************
 12450 ;; Defined at:
 12451 ;;		line 452 in file "mcc_generated_files/i2c_master.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;		None
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;		None
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      enum E2876
 12458 ;; Registers used:
 12459 ;;		wreg, status,2
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;Total ram usage:        0 bytes
 12470 ;; Hardware stack levels used: 1
 12471 ;; This function calls:
 12472 ;;		Nothing
 12473 ;; This function is called by:
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           	psect	text109
 12478   003D3C                     __ptext109:
 12479                           	callstack 0
 12480   003D3C                     i2_I2C_DO_RESET:
 12481                           	callstack 11
 12482   003D3C                     
 12483                           ;mcc_generated_files/i2c_master.c: 454:     I2C_Status.busy = 0;
 12484   003D3C  0100               	movlb	0	; () banked
 12485   003D3E  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
 12486   003D40                     
 12487                           ; BSR set to: 0
 12488                           ;mcc_generated_files/i2c_master.c: 455:     I2C_Status.error = I2C_NOERR;
 12489   003D40  0E00               	movlw	0
 12490   003D42  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
 12491   003D44                     
 12492                           ; BSR set to: 0
 12493                           ;mcc_generated_files/i2c_master.c: 456:     return I2C_RESET;
 12494   003D44  0E0E               	movlw	14
 12495   003D46                     
 12496                           ; BSR set to: 0
 12497   003D46  0012               	return		;funcret
 12498   003D48                     __end_ofi2_I2C_DO_RESET:
 12499                           	callstack 0
 12500                           
 12501 ;; *************** function i2_I2C_DO_RX_NACK_RESTART *****************
 12502 ;; Defined at:
 12503 ;;		line 446 in file "mcc_generated_files/i2c_master.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;		None
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      enum E2876
 12510 ;; Registers used:
 12511 ;;		wreg, cstack
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;Total ram usage:        0 bytes
 12522 ;; Hardware stack levels used: 1
 12523 ;; Hardware stack levels required when called: 1
 12524 ;; This function calls:
 12525 ;;		i2_I2C_MasterSendNack
 12526 ;; This function is called by:
 12527 ;;		i2_I2C_DO_RX
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text110
 12532   003D78                     __ptext110:
 12533                           	callstack 0
 12534   003D78                     i2_I2C_DO_RX_NACK_RESTART:
 12535                           	callstack 10
 12536   003D78                     
 12537                           ;mcc_generated_files/i2c_master.c: 448:     I2C_MasterSendNack();
 12538   003D78  ECE5  F01E         	call	i2_I2C_MasterSendNack	;wreg free
 12539   003D7C                     
 12540                           ;mcc_generated_files/i2c_master.c: 449:     return I2C_SEND_RESTART;
 12541   003D7C  0E09               	movlw	9
 12542   003D7E  0012               	return		;funcret
 12543   003D80                     __end_ofi2_I2C_DO_RX_NACK_RESTART:
 12544                           	callstack 0
 12545                           
 12546 ;; *************** function i2_I2C_DO_RX_NACK_STOP *****************
 12547 ;; Defined at:
 12548 ;;		line 440 in file "mcc_generated_files/i2c_master.c"
 12549 ;; Parameters:    Size  Location     Type
 12550 ;;		None
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;		None
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  1    wreg      enum E2876
 12555 ;; Registers used:
 12556 ;;		wreg, cstack
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;Total ram usage:        0 bytes
 12567 ;; Hardware stack levels used: 1
 12568 ;; Hardware stack levels required when called: 1
 12569 ;; This function calls:
 12570 ;;		i2_I2C_MasterSendNack
 12571 ;; This function is called by:
 12572 ;;		i2_I2C_DO_RX
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text111
 12577   003D80                     __ptext111:
 12578                           	callstack 0
 12579   003D80                     i2_I2C_DO_RX_NACK_STOP:
 12580                           	callstack 10
 12581   003D80                     
 12582                           ;mcc_generated_files/i2c_master.c: 442:     I2C_MasterSendNack();
 12583   003D80  ECE5  F01E         	call	i2_I2C_MasterSendNack	;wreg free
 12584   003D84                     
 12585                           ;mcc_generated_files/i2c_master.c: 443:     return I2C_SEND_STOP;
 12586   003D84  0E0A               	movlw	10
 12587   003D86  0012               	return		;funcret
 12588   003D88                     __end_ofi2_I2C_DO_RX_NACK_STOP:
 12589                           	callstack 0
 12590                           
 12591 ;; *************** function i2_I2C_DO_RX_ACK *****************
 12592 ;; Defined at:
 12593 ;;		line 433 in file "mcc_generated_files/i2c_master.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      enum E2876
 12600 ;; Registers used:
 12601 ;;		wreg, cstack
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12611 ;;Total ram usage:        0 bytes
 12612 ;; Hardware stack levels used: 1
 12613 ;; Hardware stack levels required when called: 1
 12614 ;; This function calls:
 12615 ;;		i2_I2C_MasterSendAck
 12616 ;; This function is called by:
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           	psect	text112
 12621   003D88                     __ptext112:
 12622                           	callstack 0
 12623   003D88                     i2_I2C_DO_RX_ACK:
 12624                           	callstack 10
 12625   003D88                     
 12626                           ;mcc_generated_files/i2c_master.c: 435:     I2C_MasterSendAck();
 12627   003D88  ECE2  F01E         	call	i2_I2C_MasterSendAck	;wreg free
 12628   003D8C                     
 12629                           ;mcc_generated_files/i2c_master.c: 436:     return I2C_RCEN;
 12630   003D8C  0E05               	movlw	5
 12631   003D8E  0012               	return		;funcret
 12632   003D90                     __end_ofi2_I2C_DO_RX_ACK:
 12633                           	callstack 0
 12634                           
 12635 ;; *************** function i2_I2C_DO_SEND_STOP *****************
 12636 ;; Defined at:
 12637 ;;		line 427 in file "mcc_generated_files/i2c_master.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;		None
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;		None
 12642 ;; Return value:  Size  Location     Type
 12643 ;;                  1    wreg      enum E2876
 12644 ;; Registers used:
 12645 ;;		wreg, cstack
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/0
 12648 ;;		On exit  : 0/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;Total ram usage:        0 bytes
 12656 ;; Hardware stack levels used: 1
 12657 ;; Hardware stack levels required when called: 1
 12658 ;; This function calls:
 12659 ;;		i2_I2C_MasterStop
 12660 ;; This function is called by:
 12661 ;;		i2_I2C_DO_TX
 12662 ;;		i2_I2C_DO_TX_EMPTY
 12663 ;;		i2_I2C_DO_ADDRESS_NACK
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           	psect	text113
 12668   003D90                     __ptext113:
 12669                           	callstack 0
 12670   003D90                     i2_I2C_DO_SEND_STOP:
 12671                           	callstack 9
 12672   003D90                     
 12673                           ;mcc_generated_files/i2c_master.c: 429:     I2C_MasterStop();
 12674   003D90  EC07  F01F         	call	i2_I2C_MasterStop	;wreg free
 12675   003D94                     
 12676                           ;mcc_generated_files/i2c_master.c: 430:     return I2C_IDLE;
 12677   003D94  0E00               	movlw	0
 12678   003D96  0012               	return		;funcret
 12679   003D98                     __end_ofi2_I2C_DO_SEND_STOP:
 12680                           	callstack 0
 12681                           
 12682 ;; *************** function i2_I2C_DO_SEND_RESTART *****************
 12683 ;; Defined at:
 12684 ;;		line 421 in file "mcc_generated_files/i2c_master.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;		None
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;		None
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      enum E2876
 12691 ;; Registers used:
 12692 ;;		wreg, cstack
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12702 ;;Total ram usage:        0 bytes
 12703 ;; Hardware stack levels used: 1
 12704 ;; Hardware stack levels required when called: 1
 12705 ;; This function calls:
 12706 ;;		i2_I2C_MasterEnableRestart
 12707 ;; This function is called by:
 12708 ;;		i2_I2C_DO_TX_EMPTY
 12709 ;;		i2_I2C_DO_ADDRESS_NACK
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text114
 12714   003D98                     __ptext114:
 12715                           	callstack 0
 12716   003D98                     i2_I2C_DO_SEND_RESTART:
 12717                           	callstack 9
 12718   003D98                     
 12719                           ;mcc_generated_files/i2c_master.c: 423:     I2C_MasterEnableRestart();
 12720   003D98  EC09  F01F         	call	i2_I2C_MasterEnableRestart	;wreg free
 12721   003D9C                     
 12722                           ;mcc_generated_files/i2c_master.c: 424:     return I2C_SEND_ADR_READ;
 12723   003D9C  0E01               	movlw	1
 12724   003D9E  0012               	return		;funcret
 12725   003DA0                     __end_ofi2_I2C_DO_SEND_RESTART:
 12726                           	callstack 0
 12727                           
 12728 ;; *************** function i2_I2C_DO_SEND_RESTART_WRITE *****************
 12729 ;; Defined at:
 12730 ;;		line 414 in file "mcc_generated_files/i2c_master.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      enum E2876
 12737 ;; Registers used:
 12738 ;;		wreg, cstack
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;Total ram usage:        0 bytes
 12749 ;; Hardware stack levels used: 1
 12750 ;; Hardware stack levels required when called: 1
 12751 ;; This function calls:
 12752 ;;		i2_I2C_MasterEnableRestart
 12753 ;; This function is called by:
 12754 ;;		i2_I2C_DO_TX
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text115
 12759   003DA0                     __ptext115:
 12760                           	callstack 0
 12761   003DA0                     i2_I2C_DO_SEND_RESTART_WRITE:
 12762                           	callstack 9
 12763   003DA0                     
 12764                           ;mcc_generated_files/i2c_master.c: 416:     I2C_MasterEnableRestart();
 12765   003DA0  EC09  F01F         	call	i2_I2C_MasterEnableRestart	;wreg free
 12766   003DA4                     
 12767                           ;mcc_generated_files/i2c_master.c: 417:     return I2C_SEND_ADR_WRITE;
 12768   003DA4  0E02               	movlw	2
 12769   003DA6  0012               	return		;funcret
 12770   003DA8                     __end_ofi2_I2C_DO_SEND_RESTART_WRITE:
 12771                           	callstack 0
 12772                           
 12773 ;; *************** function i2_I2C_DO_SEND_RESTART_READ *****************
 12774 ;; Defined at:
 12775 ;;		line 408 in file "mcc_generated_files/i2c_master.c"
 12776 ;; Parameters:    Size  Location     Type
 12777 ;;		None
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;		None
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  1    wreg      enum E2876
 12782 ;; Registers used:
 12783 ;;		wreg, cstack
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/0
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12793 ;;Total ram usage:        0 bytes
 12794 ;; Hardware stack levels used: 1
 12795 ;; Hardware stack levels required when called: 1
 12796 ;; This function calls:
 12797 ;;		i2_I2C_MasterEnableRestart
 12798 ;; This function is called by:
 12799 ;;		i2_I2C_DO_TX
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           	psect	text116
 12804   003DA8                     __ptext116:
 12805                           	callstack 0
 12806   003DA8                     i2_I2C_DO_SEND_RESTART_READ:
 12807                           	callstack 9
 12808   003DA8                     
 12809                           ;mcc_generated_files/i2c_master.c: 410:     I2C_MasterEnableRestart();
 12810   003DA8  EC09  F01F         	call	i2_I2C_MasterEnableRestart	;wreg free
 12811   003DAC                     
 12812                           ;mcc_generated_files/i2c_master.c: 411:     return I2C_SEND_ADR_READ;
 12813   003DAC  0E01               	movlw	1
 12814   003DAE  0012               	return		;funcret
 12815   003DB0                     __end_ofi2_I2C_DO_SEND_RESTART_READ:
 12816                           	callstack 0
 12817                           
 12818 ;; *************** function i2_I2C_DO_RCEN *****************
 12819 ;; Defined at:
 12820 ;;		line 360 in file "mcc_generated_files/i2c_master.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;		None
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  1    wreg      enum E2876
 12827 ;; Registers used:
 12828 ;;		wreg, cstack
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/0
 12831 ;;		On exit  : 0/0
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;Total ram usage:        0 bytes
 12839 ;; Hardware stack levels used: 1
 12840 ;; Hardware stack levels required when called: 1
 12841 ;; This function calls:
 12842 ;;		i2_I2C_MasterStartRx
 12843 ;; This function is called by:
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           	psect	text117
 12848   003D48                     __ptext117:
 12849                           	callstack 0
 12850   003D48                     i2_I2C_DO_RCEN:
 12851                           	callstack 10
 12852   003D48                     
 12853                           ;mcc_generated_files/i2c_master.c: 362:     I2C_Status.addressNackCheck = 0;
 12854   003D48  0100               	movlb	0	; () banked
 12855   003D4A  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
 12856   003D4C                     
 12857                           ; BSR set to: 0
 12858                           ;mcc_generated_files/i2c_master.c: 363:     I2C_MasterStartRx();
 12859   003D4C  EC01  F01F         	call	i2_I2C_MasterStartRx	;wreg free
 12860   003D50                     
 12861                           ;mcc_generated_files/i2c_master.c: 364:     return I2C_RX;
 12862   003D50  0E04               	movlw	4
 12863   003D52  0012               	return		;funcret
 12864   003D54                     __end_ofi2_I2C_DO_RCEN:
 12865                           	callstack 0
 12866                           
 12867 ;; *************** function i2_I2C_DO_RX *****************
 12868 ;; Defined at:
 12869 ;;		line 336 in file "mcc_generated_files/i2c_master.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;		None
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      enum E2876
 12876 ;; Registers used:
 12877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;Total ram usage:        2 bytes
 12888 ;; Hardware stack levels used: 1
 12889 ;; Hardware stack levels required when called: 3
 12890 ;; This function calls:
 12891 ;;		NULL
 12892 ;;		i2_I2C_CallbackReturnReset
 12893 ;;		i2_I2C_CallbackReturnStop
 12894 ;;		i2_I2C_DO_RX_NACK_RESTART
 12895 ;;		i2_I2C_DO_RX_NACK_STOP
 12896 ;;		i2_I2C_MasterGetRxData
 12897 ;;		i2_I2C_MasterSendAck
 12898 ;;		i2_rd1RegCompleteHandler
 12899 ;;		i2_rd2RegCompleteHandler
 12900 ;;		i2_rdBlkRegCompleteHandler
 12901 ;;		i2_wr1RegCompleteHandler
 12902 ;;		i2_wr2RegCompleteHandler
 12903 ;; This function is called by:
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text118
 12908   0025A8                     __ptext118:
 12909                           	callstack 0
 12910   0025A8                     i2_I2C_DO_RX:
 12911                           	callstack 8
 12912   0025A8                     
 12913                           ;mcc_generated_files/i2c_master.c: 338:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 12914   0025A8  ECFF  F01E         	call	i2_I2C_MasterGetRxData	;wreg free
 12915   0025AC  C0CD  FFD9         	movff	_I2C_Status+29,fsr2l
 12916   0025B0  C0CE  FFDA         	movff	_I2C_Status+30,fsr2h
 12917   0025B4  6EDF               	movwf	indf2,c
 12918   0025B6  0100               	movlb	0	; () banked
 12919   0025B8  4BCD               	infsnz	(_I2C_Status+29)& (0+255),f,b
 12920   0025BA  2BCE               	incf	(_I2C_Status+30)& (0+255),f,b
 12921   0025BC                     
 12922                           ; BSR set to: 0
 12923                           ;mcc_generated_files/i2c_master.c: 339:     if(--I2C_Status.data_length)
 12924   0025BC  07CF               	decf	(_I2C_Status+31)& (0+255),f,b
 12925   0025BE  A0D8               	btfss	status,0,c
 12926   0025C0  07D0               	decf	(_I2C_Status+32)& (0+255),f,b
 12927   0025C2  51CF               	movf	(_I2C_Status+31)& (0+255),w,b
 12928   0025C4  11D0               	iorwf	(_I2C_Status+32)& (0+255),w,b
 12929   0025C6  B4D8               	btfsc	status,2,c
 12930   0025C8  EFE8  F012         	goto	i2u445_41
 12931   0025CC  EFEA  F012         	goto	i2u445_40
 12932   0025D0                     i2u445_41:
 12933   0025D0  EFEF  F012         	goto	i2l322
 12934   0025D4                     i2u445_40:
 12935   0025D4                     
 12936                           ; BSR set to: 0
 12937                           ;mcc_generated_files/i2c_master.c: 340:     {;mcc_generated_files/i2c_master.c: 341:    
      +                               I2C_MasterSendAck();
 12938   0025D4  ECE2  F01E         	call	i2_I2C_MasterSendAck	;wreg free
 12939   0025D8                     
 12940                           ;mcc_generated_files/i2c_master.c: 342:         return I2C_RCEN;
 12941   0025D8  0E05               	movlw	5
 12942   0025DA  EF26  F013         	goto	i2l323
 12943   0025DE                     i2l322:
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;mcc_generated_files/i2c_master.c: 345:     {;mcc_generated_files/i2c_master.c: 346:    
      +                               I2C_Status.bufferFree = 1;
 12947   0025DE  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
 12948                           
 12949                           ;mcc_generated_files/i2c_master.c: 347:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 12950   0025E0  EFFA  F012         	goto	i2l7140
 12951   0025E4                     i2l7130:
 12952                           
 12953                           ;mcc_generated_files/i2c_master.c: 351:                 return I2C_DO_RX_NACK_RESTART();
 12954   0025E4  ECBC  F01E         	call	i2_I2C_DO_RX_NACK_RESTART	;wreg free
 12955   0025E8  EF26  F013         	goto	i2l323
 12956   0025EC                     i2l7134:
 12957                           
 12958                           ;mcc_generated_files/i2c_master.c: 355:                 return I2C_DO_RX_NACK_STOP();
 12959   0025EC  ECC0  F01E         	call	i2_I2C_DO_RX_NACK_STOP	;wreg free
 12960   0025F0  EF26  F013         	goto	i2l323
 12961   0025F4                     i2l7140:
 12962                           
 12963                           ; BSR set to: 0
 12964   0025F4  C0BC  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 12965   0025F8  C0BD  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 12966   0025FC  D802               	call	i2u446_48
 12967   0025FE  EF0A  F013         	goto	i2u446_49
 12968   002602                     i2u446_48:
 12969   002602  0005               	push	
 12970   002604  6EFA               	movwf	pclath,c
 12971   002606  51B0               	movf	_I2C_Status& (0+255),w,b
 12972   002608  6EFD               	movwf	tosl,c
 12973   00260A  51B1               	movf	(_I2C_Status+1)& (0+255),w,b
 12974   00260C  6EFE               	movwf	tosh,c
 12975   00260E  6AFF               	clrf	tosu,c
 12976   002610  50FA               	movf	pclath,w,c
 12977   002612  0012               	return		;indir
 12978   002614                     i2u446_49:
 12979   002614  6E0D               	movwf	??i2_I2C_DO_RX^0,c
 12980   002616  6A0E               	clrf	(??i2_I2C_DO_RX+1)^0,c
 12981                           
 12982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12983                           ; Switch size 1, requested type "simple"
 12984                           ; Number of cases is 1, Range of values is 0 to 0
 12985                           ; switch strategies available:
 12986                           ; Name         Instructions Cycles
 12987                           ; simple_byte            4     3 (average)
 12988                           ;	Chosen strategy is simple_byte
 12989   002618  500E               	movf	(??i2_I2C_DO_RX+1)^0,w,c
 12990   00261A  0A00               	xorlw	0	; case 0
 12991   00261C  B4D8               	btfsc	status,2,c
 12992   00261E  EF13  F013         	goto	i2l9282
 12993   002622  EFF6  F012         	goto	i2l7134
 12994   002626                     i2l9282:
 12995                           
 12996                           ; Switch size 1, requested type "simple"
 12997                           ; Number of cases is 4, Range of values is 1 to 4
 12998                           ; switch strategies available:
 12999                           ; Name         Instructions Cycles
 13000                           ; simple_byte           13     7 (average)
 13001                           ;	Chosen strategy is simple_byte
 13002   002626  500D               	movf	??i2_I2C_DO_RX^0,w,c
 13003   002628  0A01               	xorlw	1	; case 1
 13004   00262A  B4D8               	btfsc	status,2,c
 13005   00262C  EFF6  F012         	goto	i2l7134
 13006   002630  0A03               	xorlw	3	; case 2
 13007   002632  B4D8               	btfsc	status,2,c
 13008   002634  EFF2  F012         	goto	i2l7130
 13009   002638  0A01               	xorlw	1	; case 3
 13010   00263A  B4D8               	btfsc	status,2,c
 13011   00263C  EFF2  F012         	goto	i2l7130
 13012   002640  0A07               	xorlw	7	; case 4
 13013   002642  B4D8               	btfsc	status,2,c
 13014   002644  EFF6  F012         	goto	i2l7134
 13015   002648  EFF6  F012         	goto	i2l7134
 13016   00264C                     i2l323:
 13017   00264C  0012               	return		;funcret
 13018   00264E                     __end_ofi2_I2C_DO_RX:
 13019                           	callstack 0
 13020                           
 13021 ;; *************** function i2_I2C_DO_TX *****************
 13022 ;; Defined at:
 13023 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;		None
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      enum E2876
 13030 ;; Registers used:
 13031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;Total ram usage:        2 bytes
 13042 ;; Hardware stack levels used: 1
 13043 ;; Hardware stack levels required when called: 3
 13044 ;; This function calls:
 13045 ;;		NULL
 13046 ;;		i2_I2C_CallbackReturnReset
 13047 ;;		i2_I2C_CallbackReturnStop
 13048 ;;		i2_I2C_DO_SEND_RESTART_READ
 13049 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 13050 ;;		i2_I2C_DO_SEND_STOP
 13051 ;;		i2_I2C_MasterIsNack
 13052 ;;		i2_I2C_MasterSendTxData
 13053 ;;		i2_rd1RegCompleteHandler
 13054 ;;		i2_rd2RegCompleteHandler
 13055 ;;		i2_rdBlkRegCompleteHandler
 13056 ;;		i2_wr1RegCompleteHandler
 13057 ;;		i2_wr2RegCompleteHandler
 13058 ;; This function is called by:
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text119
 13063   002222                     __ptext119:
 13064                           	callstack 0
 13065   002222                     i2_I2C_DO_TX:
 13066                           	callstack 8
 13067   002222                     
 13068                           ;mcc_generated_files/i2c_master.c: 314:     if(I2C_MasterIsNack())
 13069   002222  EC28  F01E         	call	i2_I2C_MasterIsNack	;wreg free
 13070   002226  0900               	iorlw	0
 13071   002228  B4D8               	btfsc	status,2,c
 13072   00222A  EF19  F011         	goto	i2u442_41
 13073   00222E  EF1B  F011         	goto	i2u442_40
 13074   002232                     i2u442_41:
 13075   002232  EF56  F011         	goto	i2l306
 13076   002236                     i2u442_40:
 13077   002236  EF29  F011         	goto	i2l7100
 13078   00223A                     i2l7086:
 13079                           
 13080                           ;mcc_generated_files/i2c_master.c: 319:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13081   00223A  ECD4  F01E         	call	i2_I2C_DO_SEND_RESTART_READ	;wreg free
 13082   00223E  EF72  F011         	goto	i2l309
 13083   002242                     i2l7090:
 13084                           
 13085                           ;mcc_generated_files/i2c_master.c: 321:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13086   002242  ECD0  F01E         	call	i2_I2C_DO_SEND_RESTART_WRITE	;wreg free
 13087   002246  EF72  F011         	goto	i2l309
 13088   00224A                     i2l7094:
 13089                           
 13090                           ;mcc_generated_files/i2c_master.c: 325:                 return I2C_DO_SEND_STOP();
 13091   00224A  ECC8  F01E         	call	i2_I2C_DO_SEND_STOP	;wreg free
 13092   00224E  EF72  F011         	goto	i2l309
 13093   002252                     i2l7100:
 13094   002252  C0C2  F00A         	movff	_I2C_Status+18,i2rd1RegCompleteHandler@ptr
 13095   002256  C0C3  F00B         	movff	_I2C_Status+19,i2rd1RegCompleteHandler@ptr+1
 13096   00225A  D802               	call	i2u443_48
 13097   00225C  EF3A  F011         	goto	i2u443_49
 13098   002260                     i2u443_48:
 13099   002260  0005               	push	
 13100   002262  6EFA               	movwf	pclath,c
 13101   002264  0100               	movlb	0	; () banked
 13102   002266  51B6               	movf	(_I2C_Status+6)& (0+255),w,b
 13103   002268  6EFD               	movwf	tosl,c
 13104   00226A  51B7               	movf	(_I2C_Status+7)& (0+255),w,b
 13105   00226C  6EFE               	movwf	tosh,c
 13106   00226E  6AFF               	clrf	tosu,c
 13107   002270  50FA               	movf	pclath,w,c
 13108   002272  0012               	return		;indir
 13109   002274                     i2u443_49:
 13110   002274  6E0D               	movwf	??i2_I2C_DO_TX^0,c
 13111   002276  6A0E               	clrf	(??i2_I2C_DO_TX+1)^0,c
 13112                           
 13113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13114                           ; Switch size 1, requested type "simple"
 13115                           ; Number of cases is 1, Range of values is 0 to 0
 13116                           ; switch strategies available:
 13117                           ; Name         Instructions Cycles
 13118                           ; simple_byte            4     3 (average)
 13119                           ;	Chosen strategy is simple_byte
 13120   002278  500E               	movf	(??i2_I2C_DO_TX+1)^0,w,c
 13121   00227A  0A00               	xorlw	0	; case 0
 13122   00227C  B4D8               	btfsc	status,2,c
 13123   00227E  EF43  F011         	goto	i2l9284
 13124   002282  EF25  F011         	goto	i2l7094
 13125   002286                     i2l9284:
 13126                           
 13127                           ; Switch size 1, requested type "simple"
 13128                           ; Number of cases is 4, Range of values is 1 to 4
 13129                           ; switch strategies available:
 13130                           ; Name         Instructions Cycles
 13131                           ; simple_byte           13     7 (average)
 13132                           ;	Chosen strategy is simple_byte
 13133   002286  500D               	movf	??i2_I2C_DO_TX^0,w,c
 13134   002288  0A01               	xorlw	1	; case 1
 13135   00228A  B4D8               	btfsc	status,2,c
 13136   00228C  EF25  F011         	goto	i2l7094
 13137   002290  0A03               	xorlw	3	; case 2
 13138   002292  B4D8               	btfsc	status,2,c
 13139   002294  EF1D  F011         	goto	i2l7086
 13140   002298  0A01               	xorlw	1	; case 3
 13141   00229A  B4D8               	btfsc	status,2,c
 13142   00229C  EF21  F011         	goto	i2l7090
 13143   0022A0  0A07               	xorlw	7	; case 4
 13144   0022A2  B4D8               	btfsc	status,2,c
 13145   0022A4  EF25  F011         	goto	i2l7094
 13146   0022A8  EF25  F011         	goto	i2l7094
 13147   0022AC                     i2l306:
 13148                           
 13149                           ;mcc_generated_files/i2c_master.c: 329:     {;mcc_generated_files/i2c_master.c: 330:    
      +                               I2C_Status.addressNackCheck = 0;
 13150   0022AC  0100               	movlb	0	; () banked
 13151   0022AE  91D3               	bcf	(_I2C_Status+35)& (0+255),0,b
 13152   0022B0                     
 13153                           ; BSR set to: 0
 13154                           ;mcc_generated_files/i2c_master.c: 331:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13155   0022B0  C0CD  FFD9         	movff	_I2C_Status+29,fsr2l
 13156   0022B4  C0CE  FFDA         	movff	_I2C_Status+30,fsr2h
 13157   0022B8  4BCD               	infsnz	(_I2C_Status+29)& (0+255),f,b
 13158   0022BA  2BCE               	incf	(_I2C_Status+30)& (0+255),f,b
 13159   0022BC  50DF               	movf	indf2,w,c
 13160   0022BE  ECD8  F01E         	call	i2_I2C_MasterSendTxData
 13161   0022C2                     
 13162                           ;mcc_generated_files/i2c_master.c: 332:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13163   0022C2  0100               	movlb	0	; () banked
 13164   0022C4  07CF               	decf	(_I2C_Status+31)& (0+255),f,b
 13165   0022C6  A0D8               	btfss	status,0,c
 13166   0022C8  07D0               	decf	(_I2C_Status+32)& (0+255),f,b
 13167   0022CA  51CF               	movf	(_I2C_Status+31)& (0+255),w,b
 13168   0022CC  11D0               	iorwf	(_I2C_Status+32)& (0+255),w,b
 13169   0022CE  A4D8               	btfss	status,2,c
 13170   0022D0  EF6C  F011         	goto	i2u444_41
 13171   0022D4  EF6E  F011         	goto	i2u444_40
 13172   0022D8                     i2u444_41:
 13173   0022D8  EF71  F011         	goto	i2l7108
 13174   0022DC                     i2u444_40:
 13175   0022DC                     
 13176                           ; BSR set to: 0
 13177   0022DC  0E06               	movlw	6
 13178   0022DE  EF72  F011         	goto	i2l309
 13179   0022E2                     i2l7108:
 13180                           
 13181                           ; BSR set to: 0
 13182   0022E2  0E03               	movlw	3
 13183   0022E4                     i2l309:
 13184   0022E4  0012               	return		;funcret
 13185   0022E6                     __end_ofi2_I2C_DO_TX:
 13186                           	callstack 0
 13187                           
 13188 ;; *************** function i2_I2C_DO_SEND_ADR_WRITE *****************
 13189 ;; Defined at:
 13190 ;;		line 305 in file "mcc_generated_files/i2c_master.c"
 13191 ;; Parameters:    Size  Location     Type
 13192 ;;		None
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;		None
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  1    wreg      enum E2876
 13197 ;; Registers used:
 13198 ;;		wreg, status,2, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13208 ;;Total ram usage:        0 bytes
 13209 ;; Hardware stack levels used: 1
 13210 ;; Hardware stack levels required when called: 1
 13211 ;; This function calls:
 13212 ;;		i2_I2C_MasterSendTxData
 13213 ;; This function is called by:
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text120
 13218   003D2E                     __ptext120:
 13219                           	callstack 0
 13220   003D2E                     i2_I2C_DO_SEND_ADR_WRITE:
 13221                           	callstack 10
 13222   003D2E                     
 13223                           ;mcc_generated_files/i2c_master.c: 307:     I2C_Status.addressNackCheck = 1;
 13224   003D2E  0100               	movlb	0	; () banked
 13225   003D30  81D3               	bsf	(_I2C_Status+35)& (0+255),0,b
 13226   003D32                     
 13227                           ; BSR set to: 0
 13228                           ;mcc_generated_files/i2c_master.c: 308:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 13229   003D32  51CC               	movf	(_I2C_Status+28)& (0+255),w,b
 13230   003D34  ECD8  F01E         	call	i2_I2C_MasterSendTxData
 13231   003D38                     
 13232                           ;mcc_generated_files/i2c_master.c: 309:     return I2C_TX;
 13233   003D38  0E03               	movlw	3
 13234   003D3A  0012               	return		;funcret
 13235   003D3C                     __end_ofi2_I2C_DO_SEND_ADR_WRITE:
 13236                           	callstack 0
 13237                           
 13238 ;; *************** function i2_I2C_DO_SEND_ADR_READ *****************
 13239 ;; Defined at:
 13240 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;		None
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;		None
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      enum E2876
 13247 ;; Registers used:
 13248 ;;		wreg, status,2, status,0, cstack
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13258 ;;Total ram usage:        0 bytes
 13259 ;; Hardware stack levels used: 1
 13260 ;; Hardware stack levels required when called: 1
 13261 ;; This function calls:
 13262 ;;		i2_I2C_MasterSendTxData
 13263 ;; This function is called by:
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	text121
 13268   003D02                     __ptext121:
 13269                           	callstack 0
 13270   003D02                     i2_I2C_DO_SEND_ADR_READ:
 13271                           	callstack 10
 13272   003D02                     
 13273                           ;mcc_generated_files/i2c_master.c: 300:     I2C_Status.addressNackCheck = 1;
 13274   003D02  0100               	movlb	0	; () banked
 13275   003D04  81D3               	bsf	(_I2C_Status+35)& (0+255),0,b
 13276   003D06                     
 13277                           ; BSR set to: 0
 13278                           ;mcc_generated_files/i2c_master.c: 301:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
 13279   003D06  51CC               	movf	(_I2C_Status+28)& (0+255),w,b
 13280   003D08  0901               	iorlw	1
 13281   003D0A  ECD8  F01E         	call	i2_I2C_MasterSendTxData
 13282   003D0E                     
 13283                           ;mcc_generated_files/i2c_master.c: 302:     return I2C_RCEN;
 13284   003D0E  0E05               	movlw	5
 13285   003D10  0012               	return		;funcret
 13286   003D12                     __end_ofi2_I2C_DO_SEND_ADR_READ:
 13287                           	callstack 0
 13288                           
 13289 ;; *************** function i2_I2C_DO_IDLE *****************
 13290 ;; Defined at:
 13291 ;;		line 291 in file "mcc_generated_files/i2c_master.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;		None
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;		None
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      enum E2876
 13298 ;; Registers used:
 13299 ;;		wreg, status,2
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;Total ram usage:        0 bytes
 13310 ;; Hardware stack levels used: 1
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317                           	psect	text122
 13318   003D54                     __ptext122:
 13319                           	callstack 0
 13320   003D54                     i2_I2C_DO_IDLE:
 13321                           	callstack 11
 13322   003D54                     
 13323                           ;mcc_generated_files/i2c_master.c: 293:     I2C_Status.busy = 0;
 13324   003D54  0100               	movlb	0	; () banked
 13325   003D56  93D3               	bcf	(_I2C_Status+35)& (0+255),1,b
 13326   003D58                     
 13327                           ; BSR set to: 0
 13328                           ;mcc_generated_files/i2c_master.c: 294:     I2C_Status.error = I2C_NOERR;
 13329   003D58  0E00               	movlw	0
 13330   003D5A  6FD2               	movwf	(_I2C_Status+34)& (0+255),b
 13331   003D5C                     
 13332                           ; BSR set to: 0
 13333                           ;mcc_generated_files/i2c_master.c: 295:     return I2C_RESET;
 13334   003D5C  0E0E               	movlw	14
 13335   003D5E                     
 13336                           ; BSR set to: 0
 13337   003D5E  0012               	return		;funcret
 13338   003D60                     __end_ofi2_I2C_DO_IDLE:
 13339                           	callstack 0
 13340                           
 13341 ;; *************** function i2_I2C_DO_TX_EMPTY *****************
 13342 ;; Defined at:
 13343 ;;		line 367 in file "mcc_generated_files/i2c_master.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;		None
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;		None
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  1    wreg      enum E2876
 13350 ;; Registers used:
 13351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;Total ram usage:        2 bytes
 13362 ;; Hardware stack levels used: 1
 13363 ;; Hardware stack levels required when called: 3
 13364 ;; This function calls:
 13365 ;;		NULL
 13366 ;;		i2_I2C_CallbackReturnReset
 13367 ;;		i2_I2C_CallbackReturnStop
 13368 ;;		i2_I2C_DO_SEND_RESTART
 13369 ;;		i2_I2C_DO_SEND_STOP
 13370 ;;		i2_I2C_MasterSetIrq
 13371 ;;		i2_rd1RegCompleteHandler
 13372 ;;		i2_rd2RegCompleteHandler
 13373 ;;		i2_rdBlkRegCompleteHandler
 13374 ;;		i2_wr1RegCompleteHandler
 13375 ;;		i2_wr2RegCompleteHandler
 13376 ;; This function is called by:
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text123
 13381   002ADA                     __ptext123:
 13382                           	callstack 0
 13383   002ADA                     i2_I2C_DO_TX_EMPTY:
 13384                           	callstack 8
 13385   002ADA                     
 13386                           ;mcc_generated_files/i2c_master.c: 369:     I2C_Status.bufferFree = 1;
 13387   002ADA  0100               	movlb	0	; () banked
 13388   002ADC  87D3               	bsf	(_I2C_Status+35)& (0+255),3,b
 13389                           
 13390                           ;mcc_generated_files/i2c_master.c: 370:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13391   002ADE  EF7E  F015         	goto	i2l7164
 13392   002AE2                     i2l7148:
 13393                           
 13394                           ;mcc_generated_files/i2c_master.c: 374:             return I2C_DO_SEND_RESTART();
 13395   002AE2  ECCC  F01E         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 13396   002AE6  EFAA  F015         	goto	i2l340
 13397   002AEA                     i2l7152:
 13398                           
 13399                           ;mcc_generated_files/i2c_master.c: 376:             I2C_MasterSetIrq();
 13400   002AEA  ECFD  F01E         	call	i2_I2C_MasterSetIrq	;wreg free
 13401   002AEE                     
 13402                           ;mcc_generated_files/i2c_master.c: 377:             return I2C_TX;
 13403   002AEE  0E03               	movlw	3
 13404   002AF0  EFAA  F015         	goto	i2l340
 13405   002AF4                     i2l7158:
 13406                           
 13407                           ;mcc_generated_files/i2c_master.c: 380:             return I2C_DO_SEND_STOP();
 13408   002AF4  ECC8  F01E         	call	i2_I2C_DO_SEND_STOP	;wreg free
 13409   002AF8  EFAA  F015         	goto	i2l340
 13410   002AFC                     i2l7164:
 13411                           
 13412                           ; BSR set to: 0
 13413   002AFC  C0BC  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 13414   002B00  C0BD  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 13415   002B04  D802               	call	i2u447_48
 13416   002B06  EF8E  F015         	goto	i2u447_49
 13417   002B0A                     i2u447_48:
 13418   002B0A  0005               	push	
 13419   002B0C  6EFA               	movwf	pclath,c
 13420   002B0E  51B0               	movf	_I2C_Status& (0+255),w,b
 13421   002B10  6EFD               	movwf	tosl,c
 13422   002B12  51B1               	movf	(_I2C_Status+1)& (0+255),w,b
 13423   002B14  6EFE               	movwf	tosh,c
 13424   002B16  6AFF               	clrf	tosu,c
 13425   002B18  50FA               	movf	pclath,w,c
 13426   002B1A  0012               	return		;indir
 13427   002B1C                     i2u447_49:
 13428   002B1C  6E0D               	movwf	??i2_I2C_DO_TX_EMPTY^0,c
 13429   002B1E  6A0E               	clrf	(??i2_I2C_DO_TX_EMPTY+1)^0,c
 13430                           
 13431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13432                           ; Switch size 1, requested type "simple"
 13433                           ; Number of cases is 1, Range of values is 0 to 0
 13434                           ; switch strategies available:
 13435                           ; Name         Instructions Cycles
 13436                           ; simple_byte            4     3 (average)
 13437                           ;	Chosen strategy is simple_byte
 13438   002B20  500E               	movf	(??i2_I2C_DO_TX_EMPTY+1)^0,w,c
 13439   002B22  0A00               	xorlw	0	; case 0
 13440   002B24  B4D8               	btfsc	status,2,c
 13441   002B26  EF97  F015         	goto	i2l9286
 13442   002B2A  EF7A  F015         	goto	i2l7158
 13443   002B2E                     i2l9286:
 13444                           
 13445                           ; Switch size 1, requested type "simple"
 13446                           ; Number of cases is 4, Range of values is 1 to 4
 13447                           ; switch strategies available:
 13448                           ; Name         Instructions Cycles
 13449                           ; simple_byte           13     7 (average)
 13450                           ;	Chosen strategy is simple_byte
 13451   002B2E  500D               	movf	??i2_I2C_DO_TX_EMPTY^0,w,c
 13452   002B30  0A01               	xorlw	1	; case 1
 13453   002B32  B4D8               	btfsc	status,2,c
 13454   002B34  EF7A  F015         	goto	i2l7158
 13455   002B38  0A03               	xorlw	3	; case 2
 13456   002B3A  B4D8               	btfsc	status,2,c
 13457   002B3C  EF71  F015         	goto	i2l7148
 13458   002B40  0A01               	xorlw	1	; case 3
 13459   002B42  B4D8               	btfsc	status,2,c
 13460   002B44  EF71  F015         	goto	i2l7148
 13461   002B48  0A07               	xorlw	7	; case 4
 13462   002B4A  B4D8               	btfsc	status,2,c
 13463   002B4C  EF75  F015         	goto	i2l7152
 13464   002B50  EF7A  F015         	goto	i2l7158
 13465   002B54                     i2l340:
 13466   002B54  0012               	return		;funcret
 13467   002B56                     __end_ofi2_I2C_DO_TX_EMPTY:
 13468                           	callstack 0
 13469                           
 13470 ;; *************** function i2_I2C_MasterSetIrq *****************
 13471 ;; Defined at:
 13472 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;		None
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      void 
 13479 ;; Registers used:
 13480 ;;		None
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;Total ram usage:        0 bytes
 13491 ;; Hardware stack levels used: 1
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		i2_I2C_DO_TX_EMPTY
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text124
 13500   003DFA                     __ptext124:
 13501                           	callstack 0
 13502   003DFA                     i2_I2C_MasterSetIrq:
 13503                           	callstack 10
 13504   003DFA                     
 13505                           ;mcc_generated_files/i2c_master.c: 605:     PIR1bits.SSPIF = 1;
 13506   003DFA  869E               	bsf	158,3,c	;volatile
 13507   003DFC  0012               	return		;funcret
 13508   003DFE                     __end_ofi2_I2C_MasterSetIrq:
 13509                           	callstack 0
 13510                           
 13511 ;; *************** function i2_I2C_MasterIsNack *****************
 13512 ;; Defined at:
 13513 ;;		line 556 in file "mcc_generated_files/i2c_master.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;		None
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;		None
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  1    wreg      _Bool 
 13520 ;; Registers used:
 13521 ;;		wreg
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13531 ;;Total ram usage:        0 bytes
 13532 ;; Hardware stack levels used: 1
 13533 ;; This function calls:
 13534 ;;		Nothing
 13535 ;; This function is called by:
 13536 ;;		i2_I2C_MasterFsm
 13537 ;;		i2_I2C_DO_TX
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text125
 13542   003C50                     __ptext125:
 13543                           	callstack 0
 13544   003C50                     i2_I2C_MasterIsNack:
 13545                           	callstack 11
 13546   003C50                     
 13547                           ;mcc_generated_files/i2c_master.c: 558:     return SSPCON2bits.ACKSTAT;
 13548   003C50  BCC5               	btfsc	197,6,c	;volatile
 13549   003C52  EF2D  F01E         	goto	i2u440_41
 13550   003C56  EF30  F01E         	goto	i2u440_40
 13551   003C5A                     i2u440_41:
 13552   003C5A  0E01               	movlw	1
 13553   003C5C  EF31  F01E         	goto	i2u440_46
 13554   003C60                     i2u440_40:
 13555   003C60  0E00               	movlw	0
 13556   003C62                     i2u440_46:
 13557   003C62  0012               	return		;funcret
 13558   003C64                     __end_ofi2_I2C_MasterIsNack:
 13559                           	callstack 0
 13560                           
 13561 ;; *************** function i2_I2C_MasterSendTxData *****************
 13562 ;; Defined at:
 13563 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;  data            1    wreg     unsigned char 
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;  data            1    0[COMRAM] unsigned char 
 13568 ;; Return value:  Size  Location     Type
 13569 ;;                  1    wreg      void 
 13570 ;; Registers used:
 13571 ;;		wreg
 13572 ;; Tracked objects:
 13573 ;;		On entry : 0/0
 13574 ;;		On exit  : 0/0
 13575 ;;		Unchanged: 0/0
 13576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;Total ram usage:        1 bytes
 13582 ;; Hardware stack levels used: 1
 13583 ;; This function calls:
 13584 ;;		Nothing
 13585 ;; This function is called by:
 13586 ;;		i2_I2C_DO_SEND_ADR_READ
 13587 ;;		i2_I2C_DO_SEND_ADR_WRITE
 13588 ;;		i2_I2C_DO_TX
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text126
 13593   003DB0                     __ptext126:
 13594                           	callstack 0
 13595   003DB0                     i2_I2C_MasterSendTxData:
 13596                           	callstack 10
 13597                           
 13598                           ;incstack = 0
 13599                           ;i2I2C_MasterSendTxData@data stored from wreg
 13600   003DB0  6E01               	movwf	i2I2C_MasterSendTxData@data^0,c
 13601   003DB2                     
 13602                           ;mcc_generated_files/i2c_master.c: 526: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_
      +                          master.c: 528:     SSPBUF = data;
 13603   003DB2  C001  FFC9         	movff	i2I2C_MasterSendTxData@data,4041	;volatile
 13604   003DB6  0012               	return		;funcret
 13605   003DB8                     __end_ofi2_I2C_MasterSendTxData:
 13606                           	callstack 0
 13607                           
 13608 ;; *************** function i2_I2C_MasterSendAck *****************
 13609 ;; Defined at:
 13610 ;;		line 561 in file "mcc_generated_files/i2c_master.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;		None
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;		None
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		None
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13628 ;;Total ram usage:        0 bytes
 13629 ;; Hardware stack levels used: 1
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		i2_I2C_DO_RX
 13634 ;;		i2_I2C_DO_RX_ACK
 13635 ;; This function uses a non-reentrant model
 13636 ;;
 13637                           
 13638                           	psect	text127
 13639   003DC4                     __ptext127:
 13640                           	callstack 0
 13641   003DC4                     i2_I2C_MasterSendAck:
 13642                           	callstack 10
 13643   003DC4                     
 13644                           ;mcc_generated_files/i2c_master.c: 563:     SSPCON2bits.ACKDT = 0;
 13645   003DC4  9AC5               	bcf	197,5,c	;volatile
 13646                           
 13647                           ;mcc_generated_files/i2c_master.c: 564:     SSPCON2bits.ACKEN = 1;
 13648   003DC6  88C5               	bsf	197,4,c	;volatile
 13649   003DC8  0012               	return		;funcret
 13650   003DCA                     __end_ofi2_I2C_MasterSendAck:
 13651                           	callstack 0
 13652                           
 13653 ;; *************** function i2_I2C_MasterGetRxData *****************
 13654 ;; Defined at:
 13655 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;		None
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      unsigned char 
 13662 ;; Registers used:
 13663 ;;		wreg, status,2
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;Total ram usage:        0 bytes
 13674 ;; Hardware stack levels used: 1
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		i2_I2C_DO_RX
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text128
 13683   003DFE                     __ptext128:
 13684                           	callstack 0
 13685   003DFE                     i2_I2C_MasterGetRxData:
 13686                           	callstack 10
 13687   003DFE                     
 13688                           ;mcc_generated_files/i2c_master.c: 523:     return SSPBUF;
 13689   003DFE  50C9               	movf	201,w,c	;volatile
 13690   003E00  0012               	return		;funcret
 13691   003E02                     __end_ofi2_I2C_MasterGetRxData:
 13692                           	callstack 0
 13693                           
 13694 ;; *************** function i2_I2C_MasterSendNack *****************
 13695 ;; Defined at:
 13696 ;;		line 567 in file "mcc_generated_files/i2c_master.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;		None
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;		None
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      void 
 13703 ;; Registers used:
 13704 ;;		None
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;Total ram usage:        0 bytes
 13715 ;; Hardware stack levels used: 1
 13716 ;; This function calls:
 13717 ;;		Nothing
 13718 ;; This function is called by:
 13719 ;;		i2_I2C_DO_RX_NACK_STOP
 13720 ;;		i2_I2C_DO_RX_NACK_RESTART
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text129
 13725   003DCA                     __ptext129:
 13726                           	callstack 0
 13727   003DCA                     i2_I2C_MasterSendNack:
 13728                           	callstack 10
 13729   003DCA                     
 13730                           ;mcc_generated_files/i2c_master.c: 569:     SSPCON2bits.ACKDT = 1;
 13731   003DCA  8AC5               	bsf	197,5,c	;volatile
 13732                           
 13733                           ;mcc_generated_files/i2c_master.c: 570:     SSPCON2bits.ACKEN = 1;
 13734   003DCC  88C5               	bsf	197,4,c	;volatile
 13735   003DCE  0012               	return		;funcret
 13736   003DD0                     __end_ofi2_I2C_MasterSendNack:
 13737                           	callstack 0
 13738                           
 13739 ;; *************** function i2_I2C_MasterStartRx *****************
 13740 ;; Defined at:
 13741 ;;		line 541 in file "mcc_generated_files/i2c_master.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;		None
 13744 ;; Auto vars:     Size  Location     Type
 13745 ;;		None
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  1    wreg      void 
 13748 ;; Registers used:
 13749 ;;		None
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13759 ;;Total ram usage:        0 bytes
 13760 ;; Hardware stack levels used: 1
 13761 ;; This function calls:
 13762 ;;		Nothing
 13763 ;; This function is called by:
 13764 ;;		i2_I2C_DO_RCEN
 13765 ;; This function uses a non-reentrant model
 13766 ;;
 13767                           
 13768                           	psect	text130
 13769   003E02                     __ptext130:
 13770                           	callstack 0
 13771   003E02                     i2_I2C_MasterStartRx:
 13772                           	callstack 10
 13773   003E02                     
 13774                           ;mcc_generated_files/i2c_master.c: 543:     SSPCON2bits.RCEN = 1;
 13775   003E02  86C5               	bsf	197,3,c	;volatile
 13776   003E04  0012               	return		;funcret
 13777   003E06                     __end_ofi2_I2C_MasterStartRx:
 13778                           	callstack 0
 13779                           
 13780 ;; *************** function i2_I2C_CallbackReturnReset *****************
 13781 ;; Defined at:
 13782 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  funPtr          2    9[COMRAM] PTR void 
 13785 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13786 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13787 ;; Auto vars:     Size  Location     Type
 13788 ;;		None
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  1    wreg      enum E363
 13791 ;; Registers used:
 13792 ;;		wreg
 13793 ;; Tracked objects:
 13794 ;;		On entry : 0/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;Total ram usage:        2 bytes
 13803 ;; Hardware stack levels used: 1
 13804 ;; This function calls:
 13805 ;;		Nothing
 13806 ;; This function is called by:
 13807 ;;		i2_I2C_Open
 13808 ;;		i2_I2C_DO_TX
 13809 ;;		i2_I2C_DO_RX
 13810 ;;		i2_I2C_DO_TX_EMPTY
 13811 ;;		i2_I2C_DO_ADDRESS_NACK
 13812 ;;		_I2C_DO_TX
 13813 ;;		_I2C_DO_RX
 13814 ;;		_I2C_DO_TX_EMPTY
 13815 ;;		_I2C_DO_ADDRESS_NACK
 13816 ;;		_I2C_DO_RX_EMPTY
 13817 ;; This function uses a non-reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text131
 13821   003E06                     __ptext131:
 13822                           	callstack 0
 13823   003E06                     i2_I2C_CallbackReturnReset:
 13824                           	callstack 10
 13825   003E06                     
 13826                           ;mcc_generated_files/i2c_master.c: 483: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 484: {;mcc_generated_files/i2c_master.c: 485:  
      +                             return I2C_RESET_LINK;
 13827   003E06  0E05               	movlw	5
 13828   003E08  0012               	return		;funcret
 13829   003E0A                     __end_ofi2_I2C_CallbackReturnReset:
 13830                           	callstack 0
 13831                           
 13832 ;; *************** function i2_I2C_CallbackReturnStop *****************
 13833 ;; Defined at:
 13834 ;;		line 478 in file "mcc_generated_files/i2c_master.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;  funPtr          2    9[COMRAM] PTR void 
 13837 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13838 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  1    wreg      enum E363
 13843 ;; Registers used:
 13844 ;;		wreg
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;Total ram usage:        2 bytes
 13855 ;; Hardware stack levels used: 1
 13856 ;; This function calls:
 13857 ;;		Nothing
 13858 ;; This function is called by:
 13859 ;;		i2_I2C_Open
 13860 ;;		i2_I2C_SetCallback
 13861 ;;		i2_I2C_DO_TX
 13862 ;;		i2_I2C_DO_RX
 13863 ;;		i2_I2C_DO_TX_EMPTY
 13864 ;;		i2_I2C_DO_ADDRESS_NACK
 13865 ;;		_I2C_DO_TX
 13866 ;;		_I2C_DO_RX
 13867 ;;		_I2C_DO_TX_EMPTY
 13868 ;;		_I2C_DO_ADDRESS_NACK
 13869 ;;		_I2C_DO_RX_EMPTY
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           	psect	text132
 13874   003E0A                     __ptext132:
 13875                           	callstack 0
 13876   003E0A                     i2_I2C_CallbackReturnStop:
 13877                           	callstack 10
 13878   003E0A                     
 13879                           ;mcc_generated_files/i2c_master.c: 478: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 479: {;mcc_generated_files/i2c_master.c: 480:   
      +                            return I2C_STOP;
 13880   003E0A  0E01               	movlw	1
 13881   003E0C  0012               	return		;funcret
 13882   003E0E                     __end_ofi2_I2C_CallbackReturnStop:
 13883                           	callstack 0
 13884                           
 13885 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 13886 ;; Defined at:
 13887 ;;		line 128 in file "mcc_generated_files/examples/i2c_master_example.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;  ptr             2    9[COMRAM] PTR void 
 13890 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13891 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;		None
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      enum E363
 13896 ;; Registers used:
 13897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;Total ram usage:        3 bytes
 13908 ;; Hardware stack levels used: 1
 13909 ;; Hardware stack levels required when called: 2
 13910 ;; This function calls:
 13911 ;;		i2_I2C_SetBuffer
 13912 ;;		i2_I2C_SetDataCompleteCallback
 13913 ;; This function is called by:
 13914 ;;		i2_I2C_DO_TX
 13915 ;;		i2_I2C_DO_RX
 13916 ;;		i2_I2C_DO_TX_EMPTY
 13917 ;;		i2_I2C_DO_ADDRESS_NACK
 13918 ;;		_I2C_DO_TX
 13919 ;;		_I2C_DO_RX
 13920 ;;		_I2C_DO_TX_EMPTY
 13921 ;;		_I2C_DO_ADDRESS_NACK
 13922 ;;		_I2C_DO_RX_EMPTY
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text133
 13927   003612                     __ptext133:
 13928                           	callstack 0
 13929   003612                     i2_rdBlkRegCompleteHandler:
 13930                           	callstack 8
 13931   003612                     
 13932                           ;mcc_generated_files/examples/i2c_master_example.c: 128: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 129: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 130:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 13933   003612  EE20 F002          	lfsr	2,2
 13934   003616  500A               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 13935   003618  26D9               	addwf	fsr2l,f,c
 13936   00361A  500B               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 13937   00361C  22DA               	addwfc	fsr2h,f,c
 13938   00361E  50DF               	movf	indf2,w,c
 13939   003620  6E0C               	movwf	??i2_rdBlkRegCompleteHandler^0,c
 13940   003622  C00C  F001         	movff	??i2_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
 13941   003626  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 13942   003628  C00A  FFD9         	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 13943   00362C  C00B  FFDA         	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 13944   003630  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 13945   003634  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 13946   003638  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 13947   00363C                     
 13948                           ;mcc_generated_files/examples/i2c_master_example.c: 131:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13949   00363C  0E00               	movlw	0
 13950   00363E  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 13951   003640  0E00               	movlw	0
 13952   003642  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 13953   003644  0E00               	movlw	0
 13954   003646  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 13955   003648  0E00               	movlw	0
 13956   00364A  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 13957   00364C  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 13958   003650                     
 13959                           ;mcc_generated_files/examples/i2c_master_example.c: 132:     return I2C_RESTART_READ;
 13960   003650  0E02               	movlw	2
 13961   003652  0012               	return		;funcret
 13962   003654                     __end_ofi2_rdBlkRegCompleteHandler:
 13963                           	callstack 0
 13964                           
 13965 ;; *************** function i2_wr1RegCompleteHandler *****************
 13966 ;; Defined at:
 13967 ;;		line 114 in file "mcc_generated_files/examples/i2c_master_example.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  ptr             2    9[COMRAM] PTR void 
 13970 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13971 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;		None
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      enum E363
 13976 ;; Registers used:
 13977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;Total ram usage:        2 bytes
 13988 ;; Hardware stack levels used: 1
 13989 ;; Hardware stack levels required when called: 2
 13990 ;; This function calls:
 13991 ;;		i2_I2C_SetBuffer
 13992 ;;		i2_I2C_SetDataCompleteCallback
 13993 ;; This function is called by:
 13994 ;;		_I2C_Write1ByteRegister
 13995 ;;		i2_I2C_DO_TX
 13996 ;;		i2_I2C_DO_RX
 13997 ;;		i2_I2C_DO_TX_EMPTY
 13998 ;;		i2_I2C_DO_ADDRESS_NACK
 13999 ;;		_I2C_DO_TX
 14000 ;;		_I2C_DO_RX
 14001 ;;		_I2C_DO_TX_EMPTY
 14002 ;;		_I2C_DO_ADDRESS_NACK
 14003 ;;		_I2C_DO_RX_EMPTY
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text134
 14008   0038E6                     __ptext134:
 14009                           	callstack 0
 14010   0038E6                     i2_wr1RegCompleteHandler:
 14011                           	callstack 8
 14012   0038E6                     
 14013                           ;mcc_generated_files/examples/i2c_master_example.c: 114: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 115: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 116:     I2C_SetBuffer(ptr,1);
 14014   0038E6  C00A  F001         	movff	i2wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 14015   0038EA  C00B  F002         	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 14016   0038EE  0E00               	movlw	0
 14017   0038F0  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 14018   0038F2  0E01               	movlw	1
 14019   0038F4  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 14020   0038F6  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 14021   0038FA                     
 14022                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14023   0038FA  0E00               	movlw	0
 14024   0038FC  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 14025   0038FE  0E00               	movlw	0
 14026   003900  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 14027   003902  0E00               	movlw	0
 14028   003904  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 14029   003906  0E00               	movlw	0
 14030   003908  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 14031   00390A  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 14032   00390E                     
 14033                           ;mcc_generated_files/examples/i2c_master_example.c: 118:     return I2C_CONTINUE;
 14034   00390E  0E04               	movlw	4
 14035   003910  0012               	return		;funcret
 14036   003912                     __end_ofi2_wr1RegCompleteHandler:
 14037                           	callstack 0
 14038                           
 14039 ;; *************** function i2_rd2RegCompleteHandler *****************
 14040 ;; Defined at:
 14041 ;;		line 107 in file "mcc_generated_files/examples/i2c_master_example.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;  ptr             2    9[COMRAM] PTR void 
 14044 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14045 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;		None
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      enum E363
 14050 ;; Registers used:
 14051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;Total ram usage:        2 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; Hardware stack levels required when called: 2
 14064 ;; This function calls:
 14065 ;;		i2_I2C_SetBuffer
 14066 ;;		i2_I2C_SetDataCompleteCallback
 14067 ;; This function is called by:
 14068 ;;		i2_I2C_DO_TX
 14069 ;;		i2_I2C_DO_RX
 14070 ;;		i2_I2C_DO_TX_EMPTY
 14071 ;;		i2_I2C_DO_ADDRESS_NACK
 14072 ;;		_I2C_DO_TX
 14073 ;;		_I2C_DO_RX
 14074 ;;		_I2C_DO_TX_EMPTY
 14075 ;;		_I2C_DO_ADDRESS_NACK
 14076 ;;		_I2C_DO_RX_EMPTY
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text135
 14081   003912                     __ptext135:
 14082                           	callstack 0
 14083   003912                     i2_rd2RegCompleteHandler:
 14084                           	callstack 8
 14085   003912                     
 14086                           ;mcc_generated_files/examples/i2c_master_example.c: 107: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 108: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 109:     I2C_SetBuffer(ptr,2);
 14087   003912  C00A  F001         	movff	i2rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 14088   003916  C00B  F002         	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 14089   00391A  0E00               	movlw	0
 14090   00391C  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 14091   00391E  0E02               	movlw	2
 14092   003920  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 14093   003922  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 14094   003926                     
 14095                           ;mcc_generated_files/examples/i2c_master_example.c: 110:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14096   003926  0E00               	movlw	0
 14097   003928  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 14098   00392A  0E00               	movlw	0
 14099   00392C  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 14100   00392E  0E00               	movlw	0
 14101   003930  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 14102   003932  0E00               	movlw	0
 14103   003934  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 14104   003936  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 14105   00393A                     
 14106                           ;mcc_generated_files/examples/i2c_master_example.c: 111:     return I2C_RESTART_READ;
 14107   00393A  0E02               	movlw	2
 14108   00393C  0012               	return		;funcret
 14109   00393E                     __end_ofi2_rd2RegCompleteHandler:
 14110                           	callstack 0
 14111                           
 14112 ;; *************** function i2_rd1RegCompleteHandler *****************
 14113 ;; Defined at:
 14114 ;;		line 100 in file "mcc_generated_files/examples/i2c_master_example.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  ptr             2    9[COMRAM] PTR void 
 14117 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 14118 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      enum E363
 14123 ;; Registers used:
 14124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;Total ram usage:        2 bytes
 14135 ;; Hardware stack levels used: 1
 14136 ;; Hardware stack levels required when called: 2
 14137 ;; This function calls:
 14138 ;;		i2_I2C_SetBuffer
 14139 ;;		i2_I2C_SetDataCompleteCallback
 14140 ;; This function is called by:
 14141 ;;		i2_I2C_Read1ByteRegister
 14142 ;;		i2_I2C_DO_TX
 14143 ;;		i2_I2C_DO_RX
 14144 ;;		i2_I2C_DO_TX_EMPTY
 14145 ;;		i2_I2C_DO_ADDRESS_NACK
 14146 ;;		_I2C_DO_TX
 14147 ;;		_I2C_DO_RX
 14148 ;;		_I2C_DO_TX_EMPTY
 14149 ;;		_I2C_DO_ADDRESS_NACK
 14150 ;;		_I2C_DO_RX_EMPTY
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           
 14154                           	psect	text136
 14155   00393E                     __ptext136:
 14156                           	callstack 0
 14157   00393E                     i2_rd1RegCompleteHandler:
 14158                           	callstack 8
 14159   00393E                     
 14160                           ;mcc_generated_files/examples/i2c_master_example.c: 100: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 101: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 102:     I2C_SetBuffer(ptr,1);
 14161   00393E  C00A  F001         	movff	i2rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 14162   003942  C00B  F002         	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 14163   003946  0E00               	movlw	0
 14164   003948  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 14165   00394A  0E01               	movlw	1
 14166   00394C  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 14167   00394E  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 14168   003952                     
 14169                           ;mcc_generated_files/examples/i2c_master_example.c: 103:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14170   003952  0E00               	movlw	0
 14171   003954  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 14172   003956  0E00               	movlw	0
 14173   003958  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 14174   00395A  0E00               	movlw	0
 14175   00395C  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 14176   00395E  0E00               	movlw	0
 14177   003960  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 14178   003962  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 14179   003966                     
 14180                           ;mcc_generated_files/examples/i2c_master_example.c: 104:     return I2C_RESTART_READ;
 14181   003966  0E02               	movlw	2
 14182   003968  0012               	return		;funcret
 14183   00396A                     __end_ofi2_rd1RegCompleteHandler:
 14184                           	callstack 0
 14185                           
 14186 ;; *************** function i2_wr2RegCompleteHandler *****************
 14187 ;; Defined at:
 14188 ;;		line 121 in file "mcc_generated_files/examples/i2c_master_example.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  ptr             2    9[COMRAM] PTR void 
 14191 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14192 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;		None
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  1    wreg      enum E363
 14197 ;; Registers used:
 14198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;Total ram usage:        2 bytes
 14209 ;; Hardware stack levels used: 1
 14210 ;; Hardware stack levels required when called: 2
 14211 ;; This function calls:
 14212 ;;		i2_I2C_SetBuffer
 14213 ;;		i2_I2C_SetDataCompleteCallback
 14214 ;; This function is called by:
 14215 ;;		i2_I2C_DO_TX
 14216 ;;		i2_I2C_DO_RX
 14217 ;;		i2_I2C_DO_TX_EMPTY
 14218 ;;		i2_I2C_DO_ADDRESS_NACK
 14219 ;;		_I2C_DO_TX
 14220 ;;		_I2C_DO_RX
 14221 ;;		_I2C_DO_TX_EMPTY
 14222 ;;		_I2C_DO_ADDRESS_NACK
 14223 ;;		_I2C_DO_RX_EMPTY
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           	psect	text137
 14228   00396A                     __ptext137:
 14229                           	callstack 0
 14230   00396A                     i2_wr2RegCompleteHandler:
 14231                           	callstack 8
 14232   00396A                     
 14233                           ;mcc_generated_files/examples/i2c_master_example.c: 121: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 122: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(ptr,2);
 14234   00396A  C00A  F001         	movff	i2wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 14235   00396E  C00B  F002         	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 14236   003972  0E00               	movlw	0
 14237   003974  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 14238   003976  0E02               	movlw	2
 14239   003978  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 14240   00397A  EC58  F01D         	call	i2_I2C_SetBuffer	;wreg free
 14241   00397E                     
 14242                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14243   00397E  0E00               	movlw	0
 14244   003980  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 14245   003982  0E00               	movlw	0
 14246   003984  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 14247   003986  0E00               	movlw	0
 14248   003988  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 14249   00398A  0E00               	movlw	0
 14250   00398C  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 14251   00398E  ECE7  F01D         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 14252   003992                     
 14253                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     return I2C_CONTINUE;
 14254   003992  0E04               	movlw	4
 14255   003994  0012               	return		;funcret
 14256   003996                     __end_ofi2_wr2RegCompleteHandler:
 14257                           	callstack 0
 14258                           
 14259 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 14260 ;; Defined at:
 14261 ;;		line 231 in file "mcc_generated_files/i2c_master.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 14264 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), NULL(1), rdBlkRegCompleteHandler(1), 
 14265 ;;		 -> wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14266 ;;  ptr             2    7[COMRAM] PTR void 
 14267 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 14268 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;		None
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  1    wreg      void 
 14273 ;; Registers used:
 14274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;Total ram usage:        4 bytes
 14285 ;; Hardware stack levels used: 1
 14286 ;; Hardware stack levels required when called: 1
 14287 ;; This function calls:
 14288 ;;		i2_I2C_SetCallback
 14289 ;; This function is called by:
 14290 ;;		_I2C_Write1ByteRegister
 14291 ;;		i2_I2C_Read1ByteRegister
 14292 ;;		i2_rd1RegCompleteHandler
 14293 ;;		i2_rd2RegCompleteHandler
 14294 ;;		i2_wr1RegCompleteHandler
 14295 ;;		i2_wr2RegCompleteHandler
 14296 ;;		i2_rdBlkRegCompleteHandler
 14297 ;; This function uses a non-reentrant model
 14298 ;;
 14299                           
 14300                           	psect	text138
 14301   003BCE                     __ptext138:
 14302                           	callstack 0
 14303   003BCE                     i2_I2C_SetDataCompleteCallback:
 14304                           	callstack 14
 14305   003BCE                     
 14306                           ;mcc_generated_files/i2c_master.c: 231: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 232: {;mcc_generated_files/i2c_master.c
      +                          : 233:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 14307   003BCE  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 14308   003BD2  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 14309   003BD6  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 14310   003BDA  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 14311   003BDE  0E00               	movlw	0
 14312   003BE0  EC50  F019         	call	i2_I2C_SetCallback
 14313   003BE4  0012               	return		;funcret
 14314   003BE6                     __end_ofi2_I2C_SetDataCompleteCallback:
 14315                           	callstack 0
 14316                           
 14317 ;; *************** function i2_I2C_SetCallback *****************
 14318 ;; Defined at:
 14319 ;;		line 256 in file "mcc_generated_files/i2c_master.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;  idx             1    wreg     enum E2894
 14322 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 14323 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), NULL(1), rdBlkRegCompleteHandler(1), 
 14324 ;;		 -> wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14325 ;;  ptr             2    2[COMRAM] PTR void 
 14326 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Wr
      +ite1ByteRegister@data(1), 
 14327 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  idx             1    4[COMRAM] enum E2894
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  1    wreg      void 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14342 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14343 ;;Total ram usage:        5 bytes
 14344 ;; Hardware stack levels used: 1
 14345 ;; This function calls:
 14346 ;;		Nothing
 14347 ;; This function is called by:
 14348 ;;		i2_I2C_SetDataCompleteCallback
 14349 ;;		i2_I2C_SetAddressNackCallback
 14350 ;; This function uses a non-reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text139
 14354   0032A0                     __ptext139:
 14355                           	callstack 0
 14356   0032A0                     i2_I2C_SetCallback:
 14357                           	callstack 14
 14358                           
 14359                           ;incstack = 0
 14360                           ;i2I2C_SetCallback@idx stored from wreg
 14361   0032A0  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 14362   0032A2                     
 14363                           ;mcc_generated_files/i2c_master.c: 256: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 257: {;mcc_generate
      +                          d_files/i2c_master.c: 258:     if(cb)
 14364   0032A2  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 14365   0032A4  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 14366   0032A6  B4D8               	btfsc	status,2,c
 14367   0032A8  EF58  F019         	goto	i2u437_41
 14368   0032AC  EF5A  F019         	goto	i2u437_40
 14369   0032B0                     i2u437_41:
 14370   0032B0  EF70  F019         	goto	i2l6930
 14371   0032B4                     i2u437_40:
 14372   0032B4                     
 14373                           ;mcc_generated_files/i2c_master.c: 259:     {;mcc_generated_files/i2c_master.c: 260:    
      +                               I2C_Status.callbackTable[idx] = cb;
 14374   0032B4  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 14375   0032B6  0D02               	mullw	2
 14376   0032B8  50F3               	movf	243,w,c
 14377   0032BA  0FB0               	addlw	low _I2C_Status
 14378   0032BC  6ED9               	movwf	fsr2l,c
 14379   0032BE  6ADA               	clrf	fsr2h,c
 14380   0032C0  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 14381   0032C4  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 14382                           
 14383                           ;mcc_generated_files/i2c_master.c: 261:         I2C_Status.callbackPayload[idx] = ptr;
 14384   0032C8  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 14385   0032CA  0D02               	mullw	2
 14386   0032CC  50F3               	movf	243,w,c
 14387   0032CE  0FBC               	addlw	low (_I2C_Status+12)
 14388   0032D0  6ED9               	movwf	fsr2l,c
 14389   0032D2  6ADA               	clrf	fsr2h,c
 14390   0032D4  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 14391   0032D8  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 14392                           
 14393                           ;mcc_generated_files/i2c_master.c: 262:     }
 14394   0032DC  EF82  F019         	goto	i2l284
 14395   0032E0                     i2l6930:
 14396                           
 14397                           ;mcc_generated_files/i2c_master.c: 264:     {;mcc_generated_files/i2c_master.c: 265:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 14398   0032E0  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 14399   0032E2  0D02               	mullw	2
 14400   0032E4  50F3               	movf	243,w,c
 14401   0032E6  0FB0               	addlw	low _I2C_Status
 14402   0032E8  6ED9               	movwf	fsr2l,c
 14403   0032EA  6ADA               	clrf	fsr2h,c
 14404   0032EC  0E0A               	movlw	low i2_I2C_CallbackReturnStop
 14405   0032EE  6EDE               	movwf	postinc2,c
 14406   0032F0  0E3E               	movlw	high i2_I2C_CallbackReturnStop
 14407   0032F2  6EDD               	movwf	postdec2,c
 14408                           
 14409                           ;mcc_generated_files/i2c_master.c: 266:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 14410   0032F4  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 14411   0032F6  0D02               	mullw	2
 14412   0032F8  50F3               	movf	243,w,c
 14413   0032FA  0FBC               	addlw	low (_I2C_Status+12)
 14414   0032FC  6ED9               	movwf	fsr2l,c
 14415   0032FE  6ADA               	clrf	fsr2h,c
 14416   003300  6ADE               	clrf	postinc2,c
 14417   003302  6ADD               	clrf	postdec2,c
 14418   003304                     i2l284:
 14419   003304  0012               	return		;funcret
 14420   003306                     __end_ofi2_I2C_SetCallback:
 14421                           	callstack 0
 14422                           
 14423 ;; *************** function i2_I2C_SetBuffer *****************
 14424 ;; Defined at:
 14425 ;;		line 221 in file "mcc_generated_files/i2c_master.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  buffer          2    0[COMRAM] PTR void 
 14428 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
 14429 ;;		 -> i2I2C_Read1ByteRegister@returnValue(1), i2I2C_Read1ByteRegister@reg(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBl
      +ock@bufferBlock(4), 
 14430 ;;		 -> bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 14431 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 14432 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 14433 ;;  bufferSize      2    2[COMRAM] unsigned int 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;		None
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      void 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;Total ram usage:        4 bytes
 14450 ;; Hardware stack levels used: 1
 14451 ;; This function calls:
 14452 ;;		Nothing
 14453 ;; This function is called by:
 14454 ;;		_I2C_Write1ByteRegister
 14455 ;;		i2_I2C_Read1ByteRegister
 14456 ;;		i2_rd1RegCompleteHandler
 14457 ;;		i2_rd2RegCompleteHandler
 14458 ;;		i2_wr1RegCompleteHandler
 14459 ;;		i2_wr2RegCompleteHandler
 14460 ;;		i2_rdBlkRegCompleteHandler
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text140
 14465   003AB0                     __ptext140:
 14466                           	callstack 0
 14467   003AB0                     i2_I2C_SetBuffer:
 14468                           	callstack 15
 14469   003AB0                     
 14470                           ;mcc_generated_files/i2c_master.c: 221: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 222: {;mcc_generated_files/i2c_master.c: 223:     
      +                          if(I2C_Status.bufferFree)
 14471   003AB0  0100               	movlb	0	; () banked
 14472   003AB2  A7D3               	btfss	(_I2C_Status+35)& (0+255),3,b
 14473   003AB4  EF5E  F01D         	goto	i2u438_41
 14474   003AB8  EF60  F01D         	goto	i2u438_40
 14475   003ABC                     i2u438_41:
 14476   003ABC  EF69  F01D         	goto	i2l264
 14477   003AC0                     i2u438_40:
 14478   003AC0                     
 14479                           ; BSR set to: 0
 14480                           ;mcc_generated_files/i2c_master.c: 224:     {;mcc_generated_files/i2c_master.c: 225:    
      +                               I2C_Status.data_ptr = buffer;
 14481   003AC0  C001  F0CD         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 14482   003AC4  C002  F0CE         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 14483   003AC8                     
 14484                           ; BSR set to: 0
 14485                           ;mcc_generated_files/i2c_master.c: 226:         I2C_Status.data_length = bufferSize;
 14486   003AC8  C003  F0CF         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 14487   003ACC  C004  F0D0         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 14488   003AD0                     
 14489                           ; BSR set to: 0
 14490                           ;mcc_generated_files/i2c_master.c: 227:         I2C_Status.bufferFree = 0;
 14491   003AD0  97D3               	bcf	(_I2C_Status+35)& (0+255),3,b
 14492   003AD2                     i2l264:
 14493                           
 14494                           ; BSR set to: 0
 14495   003AD2  0012               	return		;funcret
 14496   003AD4                     __end_ofi2_I2C_SetBuffer:
 14497                           	callstack 0
 14498                           
 14499 ;; *************** function i2_I2C_MasterStop *****************
 14500 ;; Defined at:
 14501 ;;		line 551 in file "mcc_generated_files/i2c_master.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;		None
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		None
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14519 ;;Total ram usage:        0 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		i2_I2C_DO_SEND_STOP
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           	psect	text141
 14529   003E0E                     __ptext141:
 14530                           	callstack 0
 14531   003E0E                     i2_I2C_MasterStop:
 14532                           	callstack 9
 14533   003E0E                     
 14534                           ;mcc_generated_files/i2c_master.c: 553:     SSPCON2bits.PEN = 1;
 14535   003E0E  84C5               	bsf	197,2,c	;volatile
 14536   003E10  0012               	return		;funcret
 14537   003E12                     __end_ofi2_I2C_MasterStop:
 14538                           	callstack 0
 14539                           
 14540 ;; *************** function i2_I2C_MasterEnableRestart *****************
 14541 ;; Defined at:
 14542 ;;		line 531 in file "mcc_generated_files/i2c_master.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;		None
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;		None
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      void 
 14549 ;; Registers used:
 14550 ;;		None
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14560 ;;Total ram usage:        0 bytes
 14561 ;; Hardware stack levels used: 1
 14562 ;; This function calls:
 14563 ;;		Nothing
 14564 ;; This function is called by:
 14565 ;;		i2_I2C_DO_SEND_RESTART_READ
 14566 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 14567 ;;		i2_I2C_DO_SEND_RESTART
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           	psect	text142
 14572   003E12                     __ptext142:
 14573                           	callstack 0
 14574   003E12                     i2_I2C_MasterEnableRestart:
 14575                           	callstack 9
 14576   003E12                     
 14577                           ;mcc_generated_files/i2c_master.c: 533:     SSPCON2bits.RSEN = 1;
 14578   003E12  82C5               	bsf	197,1,c	;volatile
 14579   003E14  0012               	return		;funcret
 14580   003E16                     __end_ofi2_I2C_MasterEnableRestart:
 14581                           	callstack 0
 14582                           
 14583 ;; *************** function i2_I2C_MasterStart *****************
 14584 ;; Defined at:
 14585 ;;		line 546 in file "mcc_generated_files/i2c_master.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;		None
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;		None
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		None
 14594 ;; Tracked objects:
 14595 ;;		On entry : 0/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;Total ram usage:        0 bytes
 14604 ;; Hardware stack levels used: 1
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		i2_I2C_MasterOperation
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text143
 14613   003E16                     __ptext143:
 14614                           	callstack 0
 14615   003E16                     i2_I2C_MasterStart:
 14616                           	callstack 13
 14617   003E16                     
 14618                           ;mcc_generated_files/i2c_master.c: 548:     SSPCON2bits.SEN = 1;
 14619   003E16  80C5               	bsf	197,0,c	;volatile
 14620   003E18  0012               	return		;funcret
 14621   003E1A                     __end_ofi2_I2C_MasterStart:
 14622                           	callstack 0
 14623                           
 14624 ;; *************** function i2_I2C_Close *****************
 14625 ;; Defined at:
 14626 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;		None
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;  returnValue     1    0[COMRAM] enum E358
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  1    wreg      enum E358
 14633 ;; Registers used:
 14634 ;;		wreg, status,2, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14644 ;;Total ram usage:        1 bytes
 14645 ;; Hardware stack levels used: 1
 14646 ;; Hardware stack levels required when called: 1
 14647 ;; This function calls:
 14648 ;;		i2_I2C_MasterClearIrq
 14649 ;;		i2_I2C_MasterClose
 14650 ;;		i2_I2C_MasterDisableIrq
 14651 ;; This function is called by:
 14652 ;;		_I2C_Write1ByteRegister
 14653 ;;		i2_I2C_Read1ByteRegister
 14654 ;; This function uses a non-reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text144
 14658   003996                     __ptext144:
 14659                           	callstack 0
 14660   003996                     i2_I2C_Close:
 14661                           	callstack 14
 14662   003996                     
 14663                           ;mcc_generated_files/i2c_master.c: 169:     i2c_error_t returnValue = I2C_BUSY;
 14664   003996  0E01               	movlw	1
 14665   003998  6E01               	movwf	i2I2C_Close@returnValue^0,c
 14666   00399A                     
 14667                           ;mcc_generated_files/i2c_master.c: 170:     if(!I2C_Status.busy)
 14668   00399A  0100               	movlb	0	; () banked
 14669   00399C  B3D3               	btfsc	(_I2C_Status+35)& (0+255),1,b
 14670   00399E  EFD3  F01C         	goto	i2u294_41
 14671   0039A2  EFD5  F01C         	goto	i2u294_40
 14672   0039A6                     i2u294_41:
 14673   0039A6  EFDF  F01C         	goto	i2l5160
 14674   0039AA                     i2u294_40:
 14675   0039AA                     
 14676                           ; BSR set to: 0
 14677                           ;mcc_generated_files/i2c_master.c: 171:     {;mcc_generated_files/i2c_master.c: 172:    
      +                               I2C_Status.inUse = 0;
 14678   0039AA  95D3               	bcf	(_I2C_Status+35)& (0+255),2,b
 14679                           
 14680                           ;mcc_generated_files/i2c_master.c: 173:         I2C_Status.address = 0xff;
 14681   0039AC  69CC               	setf	(_I2C_Status+28)& (0+255),b
 14682   0039AE                     
 14683                           ; BSR set to: 0
 14684                           ;mcc_generated_files/i2c_master.c: 174:         I2C_MasterClearIrq();
 14685   0039AE  EC11  F01F         	call	i2_I2C_MasterClearIrq	;wreg free
 14686                           
 14687                           ;mcc_generated_files/i2c_master.c: 175:         I2C_MasterDisableIrq();
 14688   0039B2  EC0D  F01F         	call	i2_I2C_MasterDisableIrq	;wreg free
 14689                           
 14690                           ;mcc_generated_files/i2c_master.c: 176:         I2C_MasterClose();
 14691   0039B6  EC0F  F01F         	call	i2_I2C_MasterClose	;wreg free
 14692   0039BA                     
 14693                           ;mcc_generated_files/i2c_master.c: 177:         returnValue = I2C_Status.error;
 14694   0039BA  C0D2  F001         	movff	_I2C_Status+34,i2I2C_Close@returnValue
 14695   0039BE                     i2l5160:
 14696                           
 14697                           ;mcc_generated_files/i2c_master.c: 179:     return returnValue;
 14698   0039BE  5001               	movf	i2I2C_Close@returnValue^0,w,c
 14699   0039C0  0012               	return		;funcret
 14700   0039C2                     __end_ofi2_I2C_Close:
 14701                           	callstack 0
 14702                           
 14703 ;; *************** function i2_I2C_MasterDisableIrq *****************
 14704 ;; Defined at:
 14705 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;		None
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;		None
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1    wreg      void 
 14712 ;; Registers used:
 14713 ;;		None
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/0
 14716 ;;		On exit  : 0/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;Total ram usage:        0 bytes
 14724 ;; Hardware stack levels used: 1
 14725 ;; This function calls:
 14726 ;;		Nothing
 14727 ;; This function is called by:
 14728 ;;		i2_I2C_Close
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732                           	psect	text145
 14733   003E1A                     __ptext145:
 14734                           	callstack 0
 14735   003E1A                     i2_I2C_MasterDisableIrq:
 14736                           	callstack 14
 14737   003E1A                     
 14738                           ;mcc_generated_files/i2c_master.c: 595:     PIE1bits.SSPIE = 0;
 14739   003E1A  969D               	bcf	157,3,c	;volatile
 14740   003E1C  0012               	return		;funcret
 14741   003E1E                     __end_ofi2_I2C_MasterDisableIrq:
 14742                           	callstack 0
 14743                           
 14744 ;; *************** function i2_I2C_MasterClose *****************
 14745 ;; Defined at:
 14746 ;;		line 515 in file "mcc_generated_files/i2c_master.c"
 14747 ;; Parameters:    Size  Location     Type
 14748 ;;		None
 14749 ;; Auto vars:     Size  Location     Type
 14750 ;;		None
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  1    wreg      void 
 14753 ;; Registers used:
 14754 ;;		None
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14764 ;;Total ram usage:        0 bytes
 14765 ;; Hardware stack levels used: 1
 14766 ;; This function calls:
 14767 ;;		Nothing
 14768 ;; This function is called by:
 14769 ;;		i2_I2C_Close
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text146
 14774   003E1E                     __ptext146:
 14775                           	callstack 0
 14776   003E1E                     i2_I2C_MasterClose:
 14777                           	callstack 14
 14778   003E1E                     
 14779                           ;mcc_generated_files/i2c_master.c: 518:     SSPCON1bits.SSPEN = 0;
 14780   003E1E  9AC6               	bcf	198,5,c	;volatile
 14781   003E20  0012               	return		;funcret
 14782   003E22                     __end_ofi2_I2C_MasterClose:
 14783                           	callstack 0
 14784                           
 14785 ;; *************** function i2_I2C_MasterClearIrq *****************
 14786 ;; Defined at:
 14787 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 14788 ;; Parameters:    Size  Location     Type
 14789 ;;		None
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;		None
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  1    wreg      void 
 14794 ;; Registers used:
 14795 ;;		None
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;Total ram usage:        0 bytes
 14806 ;; Hardware stack levels used: 1
 14807 ;; This function calls:
 14808 ;;		Nothing
 14809 ;; This function is called by:
 14810 ;;		i2_I2C_Open
 14811 ;;		i2_I2C_Close
 14812 ;;		i2_I2C_MasterFsm
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text147
 14817   003E22                     __ptext147:
 14818                           	callstack 0
 14819   003E22                     i2_I2C_MasterClearIrq:
 14820                           	callstack 14
 14821   003E22                     
 14822                           ;mcc_generated_files/i2c_master.c: 600:     PIR1bits.SSPIF = 0;
 14823   003E22  969E               	bcf	158,3,c	;volatile
 14824   003E24  0012               	return		;funcret
 14825   003E26                     __end_ofi2_I2C_MasterClearIrq:
 14826                           	callstack 0
 14827                           
 14828                           	psect	text148
 14829   000000                     __ptext148:
 14830                           	callstack 0
 14831   000000                     
 14832                           	psect	rparam
 14833   000000                     
 14834                           	psect	temp
 14835   000057                     btemp:
 14836                           	callstack 0
 14837   000057                     	ds	1
 14838   000000                     int$flags	set	btemp
 14839   000000                     wtemp8	set	btemp+1
 14840   000000                     ttemp5	set	btemp+1
 14841   000000                     ttemp6	set	btemp+4
 14842   000000                     ttemp7	set	btemp+8
 14843                           
 14844                           	psect	config
 14845                           
 14846                           ; Padding undefined space
 14847   300000                     	org	3145728
 14848   300000  FF                 	db	255
 14849                           
 14850                           ;Config register CONFIG1H @ 0x300001
 14851                           ;	Oscillator Selection bits
 14852                           ;	OSC = HS, HS oscillator
 14853                           ;	Fail-Safe Clock Monitor Enable bit
 14854                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14855                           ;	Internal/External Oscillator Switchover bit
 14856                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14857   300001                     	org	3145729
 14858   300001  02                 	db	2
 14859                           
 14860                           ;Config register CONFIG2L @ 0x300002
 14861                           ;	Power-up Timer Enable bit
 14862                           ;	PWRT = OFF, PWRT disabled
 14863                           ;	Brown-out Reset Enable bits
 14864                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 14865                           ;	Brown Out Reset Voltage bits
 14866                           ;	BORV = 1, 
 14867   300002                     	org	3145730
 14868   300002  09                 	db	9
 14869                           
 14870                           ;Config register CONFIG2H @ 0x300003
 14871                           ;	Watchdog Timer Enable bit
 14872                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14873                           ;	Watchdog Timer Postscale Select bits
 14874                           ;	WDTPS = 32768, 1:32768
 14875   300003                     	org	3145731
 14876   300003  1E                 	db	30
 14877                           
 14878                           ; Padding undefined space
 14879   300004                     	org	3145732
 14880   300004  FF                 	db	255
 14881                           
 14882                           ;Config register CONFIG3H @ 0x300005
 14883                           ;	CCP2 MUX bit
 14884                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14885                           ;	PORTB A/D Enable bit
 14886                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14887                           ;	Low-Power Timer1 Oscillator Enable bit
 14888                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14889                           ;	MCLR Pin Enable bit
 14890                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14891   300005                     	org	3145733
 14892   300005  81                 	db	129
 14893                           
 14894                           ;Config register CONFIG4L @ 0x300006
 14895                           ;	Stack Full/Underflow Reset Enable bit
 14896                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14897                           ;	Single-Supply ICSP Enable bit
 14898                           ;	LVP = OFF, Single-Supply ICSP disabled
 14899                           ;	Extended Instruction Set Enable bit
 14900                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14901                           ;	Background Debugger Enable bit
 14902                           ;	DEBUG = 0x1, unprogrammed default
 14903   300006                     	org	3145734
 14904   300006  81                 	db	129
 14905                           
 14906                           ; Padding undefined space
 14907   300007                     	org	3145735
 14908   300007  FF                 	db	255
 14909                           
 14910                           ;Config register CONFIG5L @ 0x300008
 14911                           ;	Code Protection bit
 14912                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14913                           ;	Code Protection bit
 14914                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14915                           ;	Code Protection bit
 14916                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14917                           ;	Code Protection bit
 14918                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14919   300008                     	org	3145736
 14920   300008  0F                 	db	15
 14921                           
 14922                           ;Config register CONFIG5H @ 0x300009
 14923                           ;	Boot Block Code Protection bit
 14924                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14925                           ;	Data EEPROM Code Protection bit
 14926                           ;	CPD = OFF, Data EEPROM not code-protected
 14927   300009                     	org	3145737
 14928   300009  C0                 	db	192
 14929                           
 14930                           ;Config register CONFIG6L @ 0x30000A
 14931                           ;	Write Protection bit
 14932                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14933                           ;	Write Protection bit
 14934                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14935                           ;	Write Protection bit
 14936                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14937                           ;	Write Protection bit
 14938                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 14939   30000A                     	org	3145738
 14940   30000A  0F                 	db	15
 14941                           
 14942                           ;Config register CONFIG6H @ 0x30000B
 14943                           ;	Configuration Register Write Protection bit
 14944                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14945                           ;	Boot Block Write Protection bit
 14946                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14947                           ;	Data EEPROM Write Protection bit
 14948                           ;	WRTD = OFF, Data EEPROM not write-protected
 14949   30000B                     	org	3145739
 14950   30000B  E0                 	db	224
 14951                           
 14952                           ;Config register CONFIG7L @ 0x30000C
 14953                           ;	Table Read Protection bit
 14954                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14955                           ;	Table Read Protection bit
 14956                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14957                           ;	Table Read Protection bit
 14958                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14959                           ;	Table Read Protection bit
 14960                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14961   30000C                     	org	3145740
 14962   30000C  0F                 	db	15
 14963                           
 14964                           ;Config register CONFIG7H @ 0x30000D
 14965                           ;	Boot Block Table Read Protection bit
 14966                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14967   30000D                     	org	3145741
 14968   30000D  40                 	db	64
 14969                           tosu	equ	0xFFF
 14970                           tosh	equ	0xFFE
 14971                           tosl	equ	0xFFD
 14972                           stkptr	equ	0xFFC
 14973                           pclatu	equ	0xFFB
 14974                           pclath	equ	0xFFA
 14975                           pcl	equ	0xFF9
 14976                           tblptru	equ	0xFF8
 14977                           tblptrh	equ	0xFF7
 14978                           tblptrl	equ	0xFF6
 14979                           tablat	equ	0xFF5
 14980                           prodh	equ	0xFF4
 14981                           prodl	equ	0xFF3
 14982                           indf0	equ	0xFEF
 14983                           postinc0	equ	0xFEE
 14984                           postdec0	equ	0xFED
 14985                           preinc0	equ	0xFEC
 14986                           plusw0	equ	0xFEB
 14987                           fsr0h	equ	0xFEA
 14988                           fsr0l	equ	0xFE9
 14989                           wreg	equ	0xFE8
 14990                           indf1	equ	0xFE7
 14991                           postinc1	equ	0xFE6
 14992                           postdec1	equ	0xFE5
 14993                           preinc1	equ	0xFE4
 14994                           plusw1	equ	0xFE3
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           bsr	equ	0xFE0
 14998                           indf2	equ	0xFDF
 14999                           postinc2	equ	0xFDE
 15000                           postdec2	equ	0xFDD
 15001                           preinc2	equ	0xFDC
 15002                           plusw2	equ	0xFDB
 15003                           fsr2h	equ	0xFDA
 15004                           fsr2l	equ	0xFD9
 15005                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    32
    Data        53
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      86
    BANK0           128     37     128
    BANK1           256     10      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    convert_BCD_to_int@int_num	PTR unsigned char  size(1) Largest target is 1
		 -> day_counter(COMRAM[1]), hours_counter(COMRAM[1]), minutes_counter(COMRAM[1]), month_counter(COMRAM[1]), 
		 -> seconds_counter(COMRAM[1]), year_counter(COMRAM[1]), 

    convert_int_to_BCD@BCD_num	PTR unsigned char  size(1) Largest target is 6
		 -> RTC1307(COMRAM[6]), RTC1307$_Day(COMRAM[1]), RTC1307$_Hours(COMRAM[1]), RTC1307$_Minutes(COMRAM[1]), 
		 -> RTC1307$_Month(COMRAM[1]), RTC1307$_Seconds(COMRAM[1]), RTC1307$_Year(COMRAM[1]), 

    convert_uint8_to_string@str	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@pin	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$lcd_pins(BANK0[4]), MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    gpio_pin_input_init@pin	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    gpio_pin_logic_write@pin	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$lcd_pins(BANK0[4]), 

    gpio_pin_output_low_init@pin	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), lcd$lcd_pins(BANK0[4]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$2776	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$2776$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$2781	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$2788$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$2770	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$2770$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$2775	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2782	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$2782$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$2787	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E2876[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$2769	const PTR FTN()enum E2876 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> i2_I2C_CallbackReturnReset(), i2_I2C_CallbackReturnStop(), i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), I2C_CallbackReturnReset(), 
		 -> I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), i2I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), NULL(), 

    INT0_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), NULL(), 

    INT1_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), NULL(), 

    INT2_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    interrupt_INTx_clear_flag@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_clear_flag@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    interrupt_INTx_disable@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_disable@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    interrupt_INTx_edge_init@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_edge_init@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    interrupt_INTx_enable@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_enable@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    interrupt_INTx_init@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_pin_init@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    interrupt_INTx_pin_init@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    INTx_select_InterruptHandler@_interrupt	PTR struct . size(1) Largest target is 6
		 -> MY_INT0(BANK0[6]), MY_INT1(BANK0[6]), 

    INTx_select_InterruptHandler@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    latx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(ABS[1]), LATC(ABS[1]), LATD(BITBIGSFRll[1]), 
		 -> LATE(BITBIGSFRll[1]), 

    lcd_init@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_char_data@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_char_data_pos@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_command@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_enable@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_nbits@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_number_pos@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_string@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(BANK0[1]), STR_1(CODE[6]), STR_2(CODE[6]), 
		 -> STR_3(CODE[9]), STR_4(CODE[9]), STR_5(CODE[7]), STR_6(CODE[5]), 
		 -> STR_7(CODE[7]), STR_8(CODE[6]), 

    lcd_send_string_pos@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_send_string_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> lcd_send_number_pos@number(BANK0[1]), STR_1(CODE[6]), STR_2(CODE[6]), STR_3(CODE[9]), 
		 -> STR_4(CODE[9]), STR_5(CODE[7]), STR_6(CODE[5]), STR_7(CODE[7]), 
		 -> STR_8(CODE[6]), 

    lcd_set_curser@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(BANK0[1]), 

    memset@p	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(BANK0[1]), 

    MY_INT0$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    MY_INT1$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    portx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S1092$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT0_ISR(), APP_INT1_ISR(), 

    S165$data	PTR unsigned char  size(2) Largest target is 0

    S2343$buffer	PTR unsigned char  size(2) Largest target is 0

    S2343$source	PTR const unsigned char  size(2) Largest target is 0

    S317$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S317$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S317$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S317$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), lcd_send_number_pos@number(BANK0[1]), 

    trisx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(BITBIGSFRhll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _convert_uint8_to_string->_memset
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->___awmod
    _abs->___awmod
    _lcd_send_char_data->_lcd_send_enable
    _lcd_send_char_data->_lcd_send_nbits
    _lcd_init->_gpio_pin_output_low_init
    _lcd_send_command->_lcd_send_enable
    _lcd_send_command->_lcd_send_nbits
    _lcd_send_nbits->_gpio_pin_logic_write
    _lcd_send_enable->_gpio_pin_logic_write
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _interrupt_INTx_init->_INTx_select_InterruptHandler
    _interrupt_INTx_pin_init->_gpio_pin_input_init
    _gpio_pin_input_init->_gpio_pin_direction_init
    _INTx_select_InterruptHandler->_INT0_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT1_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT2_set_InterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _InterruptManager in COMRAM

    _APP_INT1_ISR->_convert_int_to_BCD
    _convert_int_to_BCD->i2___awdiv
    _APP_INT0_ISR->i2_RealTimeClockDS1307_Get_Date_Time
    i2_RealTimeClockDS1307_Get_Date_Time->i2_I2C_Read1ByteRegister
    i2_I2C_SetAddressNackCallback->i2_I2C_SetCallback
    i2_I2C_MasterWrite->i2_I2C_MasterOperation
    i2_I2C_Poller->i2_I2C_MasterFsm
    i2_I2C_MasterFsm->i2_I2C_DO_ADDRESS_NACK
    i2_I2C_MasterFsm->i2_I2C_DO_RX
    i2_I2C_MasterFsm->i2_I2C_DO_TX
    i2_I2C_MasterFsm->i2_I2C_DO_TX_EMPTY
    i2_I2C_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_TX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_RX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _lcd_send_string_pos->_lcd_set_curser
    _lcd_send_string->_lcd_send_char_data
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _lcd_send_char_data_pos->_lcd_set_curser
    _lcd_set_curser->_lcd_send_command
    _lcd_send_char_data->_lcd_send_nbits
    __Initialize->_lcd_init
    _lcd_init->_lcd_send_command
    _lcd_send_command->_lcd_send_nbits
    _lcd_send_nbits->_gpio_pin_logic_write
    _lcd_send_enable->_gpio_pin_logic_write
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _interrupt_INTx_init->_interrupt_INTx_pin_init
    _interrupt_INTx_pin_init->_gpio_pin_input_init
    _gpio_pin_input_init->_gpio_pin_direction_init
    _RealTimeClockDS1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_lcd_send_number_pos
    _lcd_send_number_pos->_convert_uint8_to_string

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  215857
                                              8 BANK1      2     2      0
  _RealTimeClockDS1307_Get_Date_Time
                        __Initialize
                 _convert_BCD_to_int
             _lcd_send_char_data_pos
                   _lcd_send_command
                _lcd_send_number_pos
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_number_pos                                  7     3      4   32981
                                              2 BANK1      6     2      4
            _convert_uint8_to_string
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_pos                                  8     3      5   22376
                                             21 BANK0      7     2      5
                    _lcd_send_string
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string                                      6     3      3    7641
                                             14 BANK0      6     3      3
                 _lcd_send_char_data
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              3     2      1    6111
                                              0 BANK1      2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    15      4    4937
                                             20 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    4091
                                             16 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    3630
                                             44 COMRAM     1     1      0
                                              6 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     957
                                             40 COMRAM     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     723
                                             40 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     735
                                             40 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     947
                                             40 COMRAM     5     0      5
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send_char_data_pos                               7     3      4   20362
                                             21 BANK0      7     3      4
                 _lcd_send_char_data
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_set_curser                                       8     5      3   11188
                                             14 BANK0      7     4      3
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_char_data                                   5     3      2    7074
                                              9 BANK0      5     3      2
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (1) _convert_BCD_to_int                                   6     5      1     755
                                             40 COMRAM     3     2      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) __Initialize                                          0     0      0   17574
                     _I2C_Initialize
                _interrupt_INTx_init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             7     6      1   13882
                                             14 BANK0      6     5      1
           _gpio_pin_output_low_init
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     5     3      2   10314
                                              9 BANK0      5     3      2
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nbits                                       7     5      2    2534
                                             43 COMRAM     2     0      2
                                              5 BANK0      4     4      0
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      3     2      1    2078
                                             43 COMRAM     2     1      1
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_output_low_init                             4     3      1    2949
                                             43 COMRAM     2     1      1
                                              5 BANK0      2     2      0
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_logic_write                                 8     6      2    1613
                                             40 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_init                                  2     1      1    3692
                                              9 BANK0      2     1      1
       _INTx_select_InterruptHandler
          _interrupt_INTx_clear_flag
             _interrupt_INTx_disable
           _interrupt_INTx_edge_init
              _interrupt_INTx_enable
            _interrupt_INTx_pin_init
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_pin_init                              2     1      1    1314
                                              7 BANK0      2     1      1
                _gpio_pin_input_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_input_init                                  4     3      1    1122
                                             43 COMRAM     2     1      1
                                              5 BANK0      2     2      0
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              8     6      2     893
                                             40 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_enable                                4     3      1     201
                                             40 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_edge_init                             4     3      1     387
                                             40 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_disable                               4     3      1     291
                                             40 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_clear_flag                            4     3      1     201
                                             40 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _INTx_select_InterruptHandler                         4     3      1     870
                                             43 COMRAM     2     1      1
                                              0 BANK0      2     2      0
          _INT0_set_InterruptHandler
          _INT1_set_InterruptHandler
          _INT2_set_InterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_set_InterruptHandler                            3     1      2     192
                                             40 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_set_InterruptHandler                            3     1      2     192
                                             40 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_set_InterruptHandler                            3     1      2     192
                                             40 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClockDS1307_Get_Date_Time                    6     0      6  111495
                                             17 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1  111495
                                             14 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2189
                                              0 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      68
                                             40 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0  103425
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0  103425
                                             12 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0  103357
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0  103357
                                              9 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   25816
                                              7 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   25847
                                              7 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      31
                                             40 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   25816
                                              7 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   25816
                                              7 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    5092
                                              4 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    5092
                                              4 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              3     1      2    5123
                                              4 BANK0      3     1      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    5092
                                              4 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    5267
                                              4 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2909
                                              0 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                             40 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    2152
                                             40 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     150
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (21) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                             40 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManager                                   12    12      0  205422
                                             28 COMRAM    12    12      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0   68474
                                NULL *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0   68474
                                NULL *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0   68474
                                NULL *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
 ---------------------------------------------------------------------------------
 (13) _APP_INT1_ISR                                        0     0      0    1286
                 _convert_int_to_BCD
 ---------------------------------------------------------------------------------
 (14) _convert_int_to_BCD                                  4     3      1    1286
                                              8 COMRAM     4     3      1
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) _APP_INT0_ISR                                        0     0      0   67188
             _I2C_Write1ByteRegister
i2_RealTimeClockDS1307_Get_Date_Time
 ---------------------------------------------------------------------------------
 (14) i2_RealTimeClockDS1307_Get_Date_Time                 6     0      6   33170
                                             22 COMRAM     6     0      6
            i2_I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (15) i2_I2C_Read1ByteRegister                             3     2      1   33170
                                             19 COMRAM     3     2      1
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _I2C_Write1ByteRegister                              3     1      2   34018
                                             19 COMRAM     3     1      2
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetAddressNackCallback                        4     0      4     559
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Open                                          2     2      0      68
                                              0 COMRAM     2     2      0
               i2_I2C_MasterClearIrq
                   i2_I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOpen                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_MasterWrite                                   0     0      0   30685
              i2_I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOperation                               2     2      0   30685
                                             17 COMRAM     2     2      0
                  i2_I2C_MasterStart
                       i2_I2C_Poller
 ---------------------------------------------------------------------------------
 (18) i2_I2C_Poller                                        0     0      0   30617
                    i2_I2C_MasterFsm
           i2_I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterWaitForEvent                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterFsm                                     3     3      0   30617
                                             14 COMRAM     3     3      0
              i2_I2C_DO_ADDRESS_NACK *
                      i2_I2C_DO_IDLE *
                      i2_I2C_DO_RCEN *
                     i2_I2C_DO_RESET *
                        i2_I2C_DO_RX *
                    i2_I2C_DO_RX_ACK *
           i2_I2C_DO_RX_NACK_RESTART *
              i2_I2C_DO_RX_NACK_STOP *
             i2_I2C_DO_SEND_ADR_READ *
            i2_I2C_DO_SEND_ADR_WRITE *
              i2_I2C_DO_SEND_RESTART *
         i2_I2C_DO_SEND_RESTART_READ *
        i2_I2C_DO_SEND_RESTART_WRITE *
                 i2_I2C_DO_SEND_STOP *
                        i2_I2C_DO_TX *
                  i2_I2C_DO_TX_EMPTY *
               i2_I2C_MasterClearIrq
                 i2_I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX_EMPTY                                   2     2      0    7631
                                             12 COMRAM     2     2      0
                                NULL *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterSetIrq
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSetIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX                                         2     2      0    7662
                                             12 COMRAM     2     2      0
                                NULL *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
         i2_I2C_DO_SEND_RESTART_READ
        i2_I2C_DO_SEND_RESTART_WRITE
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterIsNack
             i2_I2C_MasterSendTxData
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (20) i2_I2C_MasterIsNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_WRITE                         0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_READ                          0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_WRITE                             0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_READ                              0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendTxData                              1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_ACK                                     0     0      0       0
                i2_I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX                                         2     2      0    7631
                                             12 COMRAM     2     2      0
                                NULL *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
           i2_I2C_DO_RX_NACK_RESTART
              i2_I2C_DO_RX_NACK_STOP
              i2_I2C_MasterGetRxData
                i2_I2C_MasterSendAck
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendAck                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterGetRxData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_STOP                               0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_RESTART                            0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendNack                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RESET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RCEN                                       0     0      0       0
                i2_I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterStartRx                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_ADDRESS_NACK                               2     2      0    7631
                                             12 COMRAM     2     2      0
                                NULL *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_wr2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_wr1RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rdBlkRegCompleteHandler                           3     1      2    1523
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd1RegCompleteHandler                             2     0      2    1632
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetDataCompleteCallback                       4     0      4     909
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (17) i2_I2C_SetCallback                                   5     1      4     357
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetBuffer                                     4     0      4     552
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_STOP                                  0     0      0       0
                   i2_I2C_MasterStop
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterStop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART                               0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterEnableRestart                           0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnStop                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnReset                           2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 (18) i2_I2C_MasterStart                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Close                                         1     1      0      24
                                              0 COMRAM     1     1      0
               i2_I2C_MasterClearIrq
                  i2_I2C_MasterClose
             i2_I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterDisableIrq                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClose                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RealTimeClockDS1307_Get_Date_Time
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   __Initialize
     _I2C_Initialize
     _interrupt_INTx_init
       _INTx_select_InterruptHandler
         _INT0_set_InterruptHandler
         _INT1_set_InterruptHandler
         _INT2_set_InterruptHandler
       _interrupt_INTx_clear_flag
       _interrupt_INTx_disable
       _interrupt_INTx_edge_init
       _interrupt_INTx_enable
       _interrupt_INTx_pin_init
         _gpio_pin_input_init
           _gpio_pin_direction_init
     _lcd_init
       _gpio_pin_output_low_init
         _gpio_pin_direction_init
         _gpio_pin_logic_write
       _lcd_send_command
         _gpio_pin_logic_write
         _lcd_send_enable
           _gpio_pin_logic_write
         _lcd_send_nbits
           _gpio_pin_logic_write
   _convert_BCD_to_int
   _lcd_send_char_data_pos
     _lcd_send_char_data
       _gpio_pin_logic_write
       _lcd_send_enable
       _lcd_send_nbits
     _lcd_set_curser
       _lcd_send_command
   _lcd_send_command
   _lcd_send_number_pos
     _convert_uint8_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     _lcd_send_string_pos
       _lcd_send_string
         _lcd_send_char_data
       _lcd_set_curser
   _lcd_send_string_pos

 _InterruptManager (ROOT)
   _INT0_ISR
     NULL(Fake) *
     _APP_INT0_ISR *
       _I2C_Write1ByteRegister
         i2_I2C_Close
           i2_I2C_MasterClearIrq
           i2_I2C_MasterClose
           i2_I2C_MasterDisableIrq
         i2_I2C_MasterWrite
           i2_I2C_MasterOperation
             i2_I2C_MasterStart
             i2_I2C_Poller
               i2_I2C_MasterFsm
                 i2_I2C_DO_ADDRESS_NACK *
                   NULL(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                     i2_I2C_MasterEnableRestart
                   i2_I2C_DO_SEND_STOP *
                     i2_I2C_MasterStop
                   i2_rd1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                       i2_I2C_SetCallback
                   i2_rd2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_rdBlkRegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                 i2_I2C_DO_IDLE *
                 i2_I2C_DO_RCEN *
                   i2_I2C_MasterStartRx
                 i2_I2C_DO_RESET *
                 i2_I2C_DO_RX *
                   NULL(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_RX_NACK_RESTART *
                     i2_I2C_MasterSendNack
                   i2_I2C_DO_RX_NACK_STOP *
                     i2_I2C_MasterSendNack
                   i2_I2C_MasterGetRxData *
                   i2_I2C_MasterSendAck *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_RX_ACK *
                   i2_I2C_MasterSendAck
                 i2_I2C_DO_RX_NACK_RESTART *
                 i2_I2C_DO_RX_NACK_STOP *
                 i2_I2C_DO_SEND_ADR_READ *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_ADR_WRITE *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_RESTART *
                 i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_STOP *
                 i2_I2C_DO_TX *
                   NULL(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterIsNack *
                   i2_I2C_MasterSendTxData *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_TX_EMPTY *
                   NULL(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterSetIrq *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_MasterClearIrq *
                 i2_I2C_MasterIsNack *
               i2_I2C_MasterWaitForEvent
         i2_I2C_Open
           i2_I2C_MasterClearIrq
           i2_I2C_MasterOpen
         i2_I2C_SetAddressNackCallback
           i2_I2C_SetCallback
         i2_I2C_SetBuffer
         i2_I2C_SetDataCompleteCallback
       i2_RealTimeClockDS1307_Get_Date_Time
         i2_I2C_Read1ByteRegister
           i2_I2C_Close
           i2_I2C_MasterWrite
           i2_I2C_Open
           i2_I2C_SetAddressNackCallback
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
     _APP_INT1_ISR *
       _convert_int_to_BCD
         i2___awdiv
         i2___awmod
   _INT1_ISR
     NULL(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *
   _INT2_ISR
     NULL(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      2A       7       16.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     25      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      56       1       68.3%
BITBIGSFRhhlhl      26      0       0      38        0.0%
BITBIGSFRhhllh      23      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllll      6      0       0      41        0.0%
BITBIGSFRhll         4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BITBIGSFRhhlllh      2      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100      12        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 13 06:53:24 2024

                         ??_InterruptManager 001D                       ??_I2C_DO_SEND_ADR_READ 0029  
               lcd_send_char_data_pos@column 00F2                           i2_I2C_MasterSetIrq 3DFA  
                                          _n 0056                               fp_i2_I2C_DO_RX 0000  
                             fp_i2_I2C_DO_TX 0000                          i2_I2C_MasterSendAck 3DC4  
                gpio_pin_output_low_init@pin 002C                  gpio_pin_output_low_init@ret 00E1  
                    ??_I2C_DO_SEND_ADR_WRITE 002A                                  _SSPSTATbits 0FC7  
                                         l61 2AD8                                 ___awdiv@sign 00DC  
                          i2_I2C_DO_TX_EMPTY 2ADA                         ??i2_I2C_DO_SEND_STOP 0001  
                        ?i2_I2C_MasterIsNack 0001                          i2_I2C_MasterStartRx 3E02  
                      ??_I2C_DO_SEND_RESTART 0029                         i2_I2C_MasterSendNack 3DCA  
                         ?i2_I2C_DO_TX_EMPTY 0001                          ?i2_I2C_MasterSetIrq 0001  
               INT1_set_InterruptHandler@ret 002B                                          l121 36FA  
                                        l130 34B6                                          l124 36C2  
                                        l300 3B6C                                          l118 3732  
                                        l127 376A                                          l303 3B9C  
                                        l241 2946                                          l306 1F98  
                                        l322 23D8                                          l323 2448  
                                        l251 3546                                          l412 3DDC  
                                        l340 2A5C                                          l245 38E4  
                                        l309 1FD0                                          l237 3C3A  
                                        l430 3DE4                                          l334 3C10  
                                        l406 3AF4                                          l415 3D6E  
                                        l264 3AAE                                          l424 3DE0  
                                        l409 3DF4                                          l433 3C4E  
                                        l361 3CCE                                          l257 3D66  
                                        l273 3B84                                          l418 3DE8  
                                        l370 3C98                                          l290 3B34  
                                        l602 1F00                                          l427 3DEC  
                                        l267 3BB4                                          l284 3238  
                                        l436 3DBC                                          l460 3DD8  
                                        l364 3CBC                                          l612 2CB2  
                                        l373 3C86                                          l454 3DF0  
                                        l358 3CE0                                          l294 302C  
                                        l439 3DC2                                          l367 3CAA  
                                        l463 3CE2                                          l607 2D24  
                                        l543 1410                                          l376 3C74  
                                        l457 3DF8                                          l393 3D2C  
                                        l297 3C26                                          l385 2D96  
                                        l625 26EE                                          l714 316C  
                                        l570 3A8A                                          l379 3BFA  
                                        l467 3CF0                                          l707 2828  
                                        l619 2EE2                                          l396 3D1E  
                                        l636 2C40                                          l741 1780  
                                        l629 26F0                                          l816 1CCA  
                                        l674 34FE                                          l835 1B90  
                                        l669 3610                                          l870 3414  
                                        l695 3466                                          l856 31D2  
                                        l698 3A66                                          l966 3364  
                                        l991 2B7C                                          l992 2B86  
                                        l994 2BCE                                          l989 2B6E  
                            ?_lcd_send_nbits 002C                             fp_i2_I2C_DO_IDLE 0000  
                  lcd_send_string_pos@column 00F2                        i2_I2C_DO_ADDRESS_NACK 323A  
                           fp_i2_I2C_DO_RCEN 0000                                          _abs 376C  
                     ??_gpio_pin_logic_write 00DB                                          _lcd 00AA  
                     fp__I2C_DO_RX_NACK_STOP 0000                    ?i2_I2C_MasterWaitForEvent 0001  
                     _I2C_MasterWaitForEvent 3CE2                                  lcd_init@lcd 00E9  
                                ?i2_I2C_Open 0001                                 ___awmod@sign 00DC  
                                        tosl 0FFD                                          wreg 0FE8  
                   ?i2_rd1RegCompleteHandler 000A                   __end_of_lcd_send_char_data 2CB4  
                      _I2C_DO_RCEN$intlevel0 3C06                 ??_I2C_SetAddressNackCallback 002E  
                        ??i2_I2C_DO_TX_EMPTY 000D                     ?i2_wr1RegCompleteHandler 000A  
                     _I2C_Write1ByteRegister 309C                              ?_lcd_set_curser 00E9  
                   ??_I2C_CallbackReturnStop 002E                                 _I2C_DO_RESET 3BE6  
                       ?i2_I2C_MasterSendAck 0001                       lcd_set_curser@gpio_ret 00EE  
                                       l1000 2EFC                                         l1002 2F06  
                                       l1011 2F6A                                         l1003 2F0C  
                                       l1013 2F74                                         l1005 2F50  
                                       l1014 2F7A                                         l1016 2FBE  
                                       l1041 38B8                                         ?_abs 00DD  
                                       l1052 2792                                         l1036 1DE6  
                    ??_rd2RegCompleteHandler 002E                                         l1301 2096  
                                       l1062 3A14                                         l1057 3A3E  
                                       l1314 2396                                         l1067 39EA  
                                       l1802 3788                                         l1805 37A0  
                                       l1817 25A6                                         l1754 368A  
                                       l1747 37D2                                         l1828 3E26  
                                       l1792 15EC                                         l1798 358A  
                                       l8000 38CE                                         l7200 3730  
                                       l8002 38D2                                         l7050 3B9E  
                                       l8004 38DE                                         l7060 3DE6  
                                       l7052 3A8C                                         l7220 373E  
                                       l7204 36CE                                         l7212 3696  
                                       l8100 2EF4                                         l8006 38E2  
                                       l7062 3DE2                                         l7054 3A9C  
                                       l7222 3752                                         l7206 36E2  
                                       l7214 36AA                                         l7230 349E  
                                       l7310 3C20                                         l8102 2EFE  
                                       l8030 31AC                                         l7056 3AA4  
                                       l7224 3768                                         l7208 36F8  
                                       l7216 36C0                                         l7232 34B4  
                                       l7064 3DBE                                         l7240 3D6A  
                                       l7312 3C24                                         l7320 3B6A  
                                       l7400 3C0E                                         l8112 2F12  
                                       l8200 38B6                                         l8032 31CC  
                                       l8024 316E                                         l8040 279E  
                                       l7306 3DF6                                         l7058 3AAC  
                                       l7410 29F0                                         l7242 3CDA  
                                       l7250 3CCC                                         l8210 2722  
                                       l8122 2F52                                         l8114 2F4E  
                                       l8034 31D0                                         l8026 3184  
                                       l8042 27A4                                         l7228 3472  
                                       l7260 3DDA                                         l7236 3C3C  
                                       l7412 29F4                                         l7404 29E0  
                                       l7308 3C1C                                         l7316 3B5E  
                                       l7324 3B90                                         l7340 1F2C  
                                       l7332 1F0C                                         l7244 3CDE  
                                       l8212 273A                                         l8220 2790  
                                       l8204 26F2                                         l8124 2F62  
                                       l7500 1B8A                                         l8028 31A4  
                                       l8044 27B6                                         l8052 27EC  
                                       l8300 2BEA                                         l7406 29E8  
                                       l7422 2A02                                         l7318 3B62  
                                       l7326 3B94                                         l7350 1F3C  
                                       l7254 3CA4                                         l7430 3C96  
                                       l8206 2702                                         l8126 2F6C  
                                       l8150 1CE4                                         l8230 2B66  
                                       l7502 1B8E                                         l8046 27C8  
                                       l8054 2826                                         l8038 2794  
                                       l8070 26B0                                         l8062 264E  
                                       l8310 2C30                                         l8302 2BFC  
                                       l7264 3DB8                                         l7416 29FA  
                                       l7328 3B9A                                         l7352 1F9C  
                                       l7344 1F34                                         l7336 1F24  
                                       l7248 3CC8                                         l7280 3CB6  
                                       l7256 3CA8                                         l7272 3C80  
                                       l8208 270A                                         l8136 2F80  
                                       l8160 1D28                                         l8152 1CFE  
                                       l8232 2B74                                         l8320 1E06  
                                       l8400 15FE                                         l8048 27DA  
                                       l8080 37AA                                         l7520 1FF2  
                                       l7512 1FD2                                         l7600 2540  
                                       l8072 26B6                                         l8064 2668  
                                       l8312 2C40                                         l8304 2C0C  
                                       l7354 1FAE                                         l7370 23B6  
                                       l7282 3CBA                                         l7274 3C84  
                                       l7266 3C6E                                         l7434 3BF0  
                                       l7450 2D44                                         l7442 2D30  
                                       l8218 2752                                         l8138 2FBC  
                                       l8170 1D68                                         l8162 1D42  
                                       l8154 1D04                                         l8146 1CCC  
                                       l8242 2B90                                         l8330 1E46  
                                       l8322 1E1E                                         l8410 1626  
                                       l8402 1606                                         l8082 37B6  
                                       l7530 2026                                         l7522 2000  
                                       l7514 1FD8                                         l7602 2574  
                                       l8090 3666                                         l8074 26E8  
                                       l8066 267A                                         l8306 2C1C  
                                       l7196 3706                                         l7292 3D1C  
                                       l7356 1FC8                                         l7380 23DE  
                                       l7372 23CE                                         l7428 3C92  
                                       l7268 3C72                                         l7436 3BF4  
                                       l7444 2D34                                         l8260 2A68  
                                       l8172 1D82                                         l8164 1D48  
                                       l8156 1D1E                                         l8148 1CDC  
                                       l8244 2BCC                                         l8228 2B56  
                                       l8340 1EAC                                         l8332 1E58  
                                       l8324 1E26                                         l8316 1DE8  
                                       l8412 162E                                         l8404 160E  
                                       l8420 1646                                         l8084 37B8  
                                       l7540 2060                                         l7532 202E  
                                       l7524 2008                                         l7516 1FE6  
                                       l7700 1446                                         l8092 366E  
                                       l8068 2682                                         l8308 2C20  
                                       l7198 371A                                         l7278 3DDE  
                                       l7286 3DD6                                         l7358 1FCE  
                                       l7390 23EE                                         l7374 23D2  
                                       l7366 23A2                                         l7438 3BF8  
                                       l7446 2D3C                                         l8270 2AC0  
                                       l8262 2A80                                         l8174 1D88  
                                       l8166 1D62                                         l8158 1D20  
                                       l8350 1EF2                                         l8342 1EBA  
                                       l8334 1E66                                         l8326 1E32  
                                       l8318 1E02                                         l8430 16D4  
                                       l8422 16B4                                         l8414 1636  
                                       l8406 1616                                         l8078 37A2  
                                       l7550 2086                                         l7542 2068  
                                       l7534 2036                                         l7526 200C  
                                       l7518 1FEE                                         l7606 376C  
                                       l7710 149C                                         l7702 1452  
                                       l8094 367E                                         l8086 3654  
                                       l7632 3DEA                                         l7288 3D2A  
                                       l7384 23E6                                         l7368 23B0  
                                       l7456 2D4C                                         l7480 2FEE  
                                       l7472 2FC0                                         l7640 3B24  
                                       l7800 3AD4                                         l8272 2AD4  
                                       l8264 2A94                                         l8176 1DA2  
                                       l8184 1DA8                                         l8360 331C  
                                       l8352 1F00                                         l8344 1EC8  
                                       l8336 1E86                                         l8328 1E36  
                                       l8440 16FC                                         l8432 16DC  
                                       l8424 16BC                                         l8416 163E  
                                       l8408 161E                                         l7552 208E  
                                       l7544 206A                                         l7536 2044  
                                       l7528 2014                                         l7560 22FA  
                                       l7608 377C                                         l7720 1528  
                                       l7712 14B4                                         l7704 1456  
                                       l8088 365E                                         l7810 3DF2  
                                       l7474 2FC4                                         l7634 3B18  
                                       l7802 3AE2                                         l8266 2AA6  
                                       l8258 2A62                                         l5786 3C28  
                                       l8098 2EE4                                         l8186 1DE4  
                                       l8194 388E                                         l8362 3340  
                                       l7490 1AA2                                         l7482 1A58  
                                       l7650 3464                                         l7642 3416  
                                       l8346 1ED6                                         l8338 1E9E  
                                       l8434 16E4                                         l8426 16C4  
                                       l9250 165E                                         l7546 2070  
                                       l7538 204A                                         l7570 232E  
                                       l7562 2302                                         l7730 1582  
                                       l7722 153C                                         l7714 14BE  
                                       l7706 1460                                         l8370 34BC  
                                       l8610 107E                                         l7396 3C06  
                                       l7476 2FD4                                         l7636 3B1C  
                                       l7820 351E                                         l7812 3504  
                                       l7804 3AF2                                         l8268 2ABC  
                                       l5788 3C38                                         l7900 39C2  
                                       l9260 1DC6                                         l8196 38A0  
                                       l8364 334C                                         l8356 3306  
                                       l7492 1AFA                                         l7484 1A68  
                                       l7660 3A58                                         l7644 3424  
                                       l8348 1EE4                                         l9252 171A  
                                       l8436 16EC                                         l8428 16CC  
                                       l8444 1704                                         l7548 2076  
                                       l7580 236A                                         l7572 2336  
                                       l7564 2306                                         l7556 22E6  
                                       l7732 15A0                                         l7724 154C  
                                       l7716 14D6                                         l7708 147E  
                                       l7740 15C8                                         l8372 34BC  
                                       l8460 35EE                                         l8700 13B8  
                                       l8620 10E4                                         l8612 1090  
                                       l8604 105C                                         l6950 31E8  
                                       l9270 2422                                         l7398 3C0A  
                                       l7478 2FE8                                         l7638 3B20  
                                       l7822 352E                                         l7830 3542  
                                       l7814 350A                                         l8382 3106  
                                       l7910 39E8                                         l7902 39C2  
                                       l9262 2F30                                         l7670 1BC4  
                                       l8198 38A8                                         l8366 3358  
                                       l8358 3318                                         l9254 1B64  
                                       l7494 1B4C                                         l7486 1A8A  
                                       l7662 3A64                                         l7654 3A40  
                                       l7646 3450                                         l8390 3A6C  
                                       l8438 16F4                                         l8446 1770  
                                       l8470 2EA0                                         l7582 2370  
                                       l7574 233E                                         l7566 2314  
                                       l7558 22EC                                         l7726 155C  
                                       l7734 15A4                                         l7718 150C  
                                       l8374 34CE                                         l8462 35F8  
                                       l8702 13CA                                         l8630 113A  
                                       l8622 10EE                                         l8614 10AE  
                                       l8606 1060                                         l7808 3DEE  
                                       l6952 3214                                         l9272 1F72  
                                       l7824 3536                                         l7816 3518  
                                       l8384 315A                                         l7904 39D4  
                                       l9264 2F9E                                         l9256 1C9E  
                                       l7680 1C8A                                         l7672 1BD4  
                                       l7496 1B50                                         l7488 1A9A  
                                       l7656 3A44                                         l7648 3454  
                                       l7840 2D1E                                         l8392 3A76  
                                       l9248 2800                                         l8472 2EB0  
                                       l7576 234C                                         l7584 2376  
                                       l7568 231C                                         l7592 24FA  
                                       l7728 156C                                         l7736 15BA  
                                       l7920 3580                                         l8376 34D2  
                                       l8456 35D0                                         l8704 13D8  
                                       l8640 1198                                         l8632 1158  
                                       l8624 1104                                         l8616 10B8  
                                       l8608 1070                                         l9274 2A36  
                                       l7826 353A                                         l7818 351A  
                                       l7906 39DC                                         l9266 2772  
                                       l9258 2BAE                                         l7682 1CB4  
                                       l7674 1BDC                                         l7666 1B92  
                                       l7498 1B7A                                         l7658 3A50  
                                       l7842 2D22                                         l7834 2CB4  
                                       l8394 3A80                                         l7850 2C64  
                                       l8474 2EB8                                         l8466 2E76  
                                       l7586 2386                                         l7578 2362  
                                       l7594 250A                                         l7914 3548  
                                       l8378 34EA                                         l8298 2BD0  
                                       l8458 35EA                                         l8706 13F6  
                                       l8642 11AE                                         l8634 1162  
                                       l8626 111A                                         l8618 10CE  
                                       l8650 1202                                         l6948 31D6  
                                       l9268 2D80                                         l7828 353E  
                                       l7908 39E4                                         l7684 1CC4  
                                       l7676 1C34                                         l7668 1BA2  
                                       l7860 33D8                                         l7836 2CCE  
                                       l8388 3A68                                         l8396 15F2  
                                       l7852 2CAC                                         l8476 2EDC  
                                       l8468 2E90                                         l7588 238E  
                                       l7596 251A                                         l7916 3550  
                                       l8652 1212                                         l8660 1258  
                                       l8644 11C4                                         l8636 1178  
                                       l8628 1124                                         l7950 28D6  
                                       l7942 28BC                                         l7678 1C86  
                                       l7686 1CC8                                         l7862 33F8  
                                       l7838 2CD6                                         l8398 15F6  
                                       l7854 2CB0                                         l7846 2C42  
                                       l8478 2EE0                                         l7598 2524  
                                       l7918 3562                                         l8662 126A  
                                       l8670 12B0                                         l8654 1220  
                                       l8646 11CE                                         l8638 118E  
                                       l7960 28E8                                         l7952 28D8  
                                       l7944 28C0                                         l7880 3A38  
                                       l7872 3A16                                         l7864 3400  
                                       l7848 2C5C                                         l7696 1418  
                                       l8672 12C2                                         l8680 1308  
                                       l8664 1278                                         l8656 123E  
                                       l8648 11E4                                         l7970 2910  
                                       l7962 28F0                                         l7954 28DA  
                                       l7946 28D0                                         l7882 3A3C  
                                       l7874 3A16                                         l7890 39FE  
                                       l7866 340C                                         l7858 33C2  
                                       l7698 143E                                         l8682 131A  
                                       l8690 1360                                         l8674 12D0  
                                       l8666 1296                                         l7980 2938  
                                       l7972 2918                                         l7964 28F8  
                                       l7956 28DE                                         l7948 28D4  
                                       l7876 3A28                                         l7892 3A06  
                                       l7868 3412                                         l8692 1372  
                                       l8684 1328                                         l8676 12EE  
                                       l7982 293C                                         l7974 2920  
                                       l7966 2900                                         l7958 28E6  
                                       l7990 3B6E                                         l7878 3A30  
                                       l7894 3A0E                                         l7886 39EC  
                                       l8694 1380                                         l8686 1346  
                                       l7992 3D60                                         l7984 2940  
                                       l7976 2928                                         l7968 2908  
                                       l7896 3A12                                         l7888 39EC  
                                       l8696 139E                                         l7978 2930  
                                       l7986 2944                                         l7996 38BA  
                                       l7998 38BE                                         STR_1 1041  
                                       STR_2 1047                                         STR_3 1021  
                                       STR_4 102A                                         STR_5 103A  
                                       STR_6 1053                                         STR_7 1033  
                                       STR_8 104D                                         STR_9 1058  
               fp_i2_rdBlkRegCompleteHandler 0000                             ?_lcd_send_enable 002C  
                                       _LATA 0F89                                         _LATB 0F8A  
                                       _LATC 0F8B                                         _LATD 0F8C  
                                       _LATE 0F8D                                         u5000 147E  
                                       u5001 147A                                         u5010 149C  
                                       u5011 1498                                         u5100 3AE2  
                                       u5020 14D2                                         u5101 3ADE  
                                       u5021 14CC                                         u5110 3518  
                                       u5030 14D4                                         u5111 3514  
                                       u5120 352E                                         u5040 153C  
                                       u5200 3580                                         u5121 352A  
                                       u5041 1538                                         u5201 357C  
                                       u4410 3A9C                                         u5130 2CCE  
                                       u5050 154C                                         u4411 3A98  
                                       u5131 2CCA                                         u5051 1548  
                                       u5140 2C5C                                         u5060 155C  
                                       u5300 267A                                         u5141 2C58  
                                       u5061 1558                                         u5301 2676  
                                       u5230 28D0                                         u5150 33D8  
                                       u5070 156C                                         u5310 26A8  
                                       u5231 28CC                                         u5151 33D4  
                                       u5071 1568                                         u5240 38CE  
                                       u5400 1D42                                         u5160 33F8  
                                       u5080 15B6                                         u5320 26D8  
                                       u5241 38CA                                         u5401 1D3E  
                                       u5161 33F4                                         u5081 15B2  
                                       u4530 1F20                                         u4610 3CF0  
                                       u5170 3A28                                         u5410 1D62  
                                       u5330 26E8                                         u4531 1F1C  
                                       u4611 3CEC                                         u5171 3A24  
                                       u5411 1D5E                                         u5331 26E4  
                                       u6107 11F0                                         u4620 2FD4  
                                       u5180 39FE                                         u5420 1D82  
                                       u5340 37D2                                         u4621 2FD0  
                                       u5181 39FA                                         u5421 1D7E  
                                       u6117 1E4E                                         u5341 37CE  
                                       u5317 269E                                         u4390 31E8  
                                       u4550 1FC8                                         u4630 2FE8  
                                       u5190 39D4                                         u5350 2EF4  
                                       u5430 1DA2                                         u5270 3184  
                                       u4710 1FE6                                         u4391 31E4  
                                       u4551 1FC4                                         u4631 2FE4  
                                       u5191 39D0                                         u5351 2EF0  
                                       u5431 1D9E                                         u5271 3180  
                                       u6127 1E6E                                         u4711 1FE2  
                                       u5327 26CE                                         u4560 23CE  
                                       u5360 2F62                                         u5440 38A0  
                                       u5280 31A4                                         u4720 2000  
                                       u4800 234C                                         u5600 34CE  
                                       u4561 23CA                                         u5361 2F5E  
                                       u5441 389C                                         u4705 1B88  
                                       u5281 31A0                                         u6137 1E92  
                                       u4721 1FFC                                         u4801 2348  
                                       u5601 34CA                                         u4490 3C4C  
                                       u5450 2702                                         u5370 1CDC  
                                       u4706 1B8A                                         u4650 1A68  
                                       u4730 2026                                         u4810 2362  
                                       u5290 2668                                         u5530 2BEA  
                                       u4491 3C46                                         u5611 3164  
                                       u5451 26FE                                         u5371 1CD8  
                                       u4651 1A64                                         u6147 3A52  
                                       u4731 2022                                         u4811 235E  
                                       u5291 2664                                         u5531 2BE6  
                                       u4548 1F4A                                         u4900 3B34  
                                       u5380 1CFE                                         u5460 2B66  
                                       u4660 1A8A                                         u4740 2044  
                                       u4820 2386                                         u5540 2BFC  
                                       u5620 35EA                                         u4549 1F5E  
                                       u4901 3B30                                         u5381 1CFA  
                                       u5461 2B62                                         u4661 1A86  
                                       u4741 2040                                         u4821 2382  
                                       u5541 2BF8                                         u5621 35E6  
                                       u5390 1D1E                                         u4670 1A9A  
                                       u5630 2E90                                         u4750 2060  
                                       u4830 250A                                         u5550 2C0C  
                                       u5391 1D1A                                         u4671 1A96  
                                       u5631 2E8C                                         u4751 205C  
                                       u4831 2506                                         u5551 2C08  
                                       u4496 3C4E                                         u4648 3016  
                                       u5480 2A80                                         u4920 3464  
                                       u5640 2EA0                                         u4760 2086  
                                       u4840 251A                                         u5560 2C1C  
                                       u4649 3028                                         u5481 2A7C  
                                       u4921 3460                                         u5641 2E9C  
                                       u4761 2082                                         u4841 2516  
                                       u5561 2C18                                         u4578 23FC  
                                       u5490 2AD4                                         u4930 1BA2  
                                       u4914 343E                                         u5570 1E02  
                                       u5650 2EB0                                         u4770 22FA  
                                       u4850 2540                                         u4579 240E  
                                       u5491 2AD0                                         u4931 1B9E  
                                       u4915 343A                                         u5571 1DFE  
                                       u5651 2EAC                                         u4771 22F6  
                                       u4851 253C                                         u4588 2A10  
                                       u4940 1BC4                                         u4684 1AC0  
                                       u5580 1E46                                         u4780 2314  
                                       u4860 2574                                         u5900 1372  
                                       i2l61 2E06                                         u4589 2A22  
                                       u4941 1BC0                                         u4685 1ABC  
                                       u5581 1E42                                         u4781 2310  
                                       u4861 2570                                         u5901 136E  
                                       u4598 2D5A                                         u4950 1BD4  
                                       u5590 3318                                         u4694 1B18  
                                       u4790 232E                                         u4870 377C  
                                       u5910 13CA                                         u4599 2D6C  
                                       u4951 1BD0                                         u5591 3314  
                                       u4695 1B14                                         u4791 232A  
                                       u4871 3778                                         u5911 13C6  
                                       u5840 1070                                         u5841 106C  
                                       u5851 1088                                         u4964 1BFA  
                                       u5860 1212                                         u4965 1BF6  
                                       u5861 120E                                         u4974 1C52  
                                       u4990 143E                                         u5870 126A  
                                       i2l79 3104                                         u4975 1C4E  
                                       u4991 143A                                         u5871 1266  
                                       u5880 12C2                                         u4985 1CC2  
                                       u5881 12BE                                         u4986 1CC4  
                                       u5890 131A                                         u5891 1316  
                               ?i2_I2C_DO_RX 0001                                 ?i2_I2C_DO_TX 0001  
                       ??i2_I2C_MasterIsNack 0001                      ??_wr2RegCompleteHandler 002E  
          __end_of_interrupt_INTx_clear_flag 2FC0                         ?i2_I2C_MasterStartRx 0001  
                          fp_i2_I2C_DO_RESET 0000                                         abs@a 00DD  
                                       _dbuf 0100                        i2_I2C_MasterOperation 358C  
                                       _main 105C                     ?_I2C_CallbackReturnReset 00DF  
                                       _latx 008A                                 ?i2_I2C_Close 0001  
                       ??i2_I2C_MasterSetIrq 0001                                         _prec 0036  
                                       fsr0h 0FEA                                         fsr1h 0FE2  
                                       indf0 0FEF                                         fsr2h 0FDA  
                                       fsr0l 0FE9                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                           __end_of_I2C_Open 2948                     ?_gpio_pin_direction_init 0029  
                                       btemp 0057                        ?i2_I2C_MasterClearIrq 0001  
                           ?_lcd_send_string 00E9                                         prodh 0FF4  
                                       prodl 0FF3                                         start 000E  
                  i2I2C_MasterOperation@read 0012                    convert_BCD_to_int@BCD_num 00DB  
               fp__I2C_DO_SEND_RESTART_WRITE 0000                   i2rd1RegCompleteHandler@ptr 000A  
               ??i2_I2C_DO_SEND_RESTART_READ 0001                                 ___param_bank 0000  
                     convert_BCD_to_int@ones 00DD                       convert_BCD_to_int@tens 00DC  
                    _interrupt_INTx_pin_init 388E                    __end_ofi2_I2C_DO_TX_EMPTY 2B56  
              _I2C_DO_RX_NACK_STOP$intlevel0 3C80                     _interrupt_INTx_edge_init 1CCC  
                                      ??_abs 00DF                             ?_I2C_MasterClose 0001  
                  ?_gpio_pin_output_low_init 002C                             __end_of_INT0_ISR 388E  
                ??_INT2_set_InterruptHandler 002B                             __end_of_INT1_ISR 3860  
                           __end_of_INT2_ISR 3832                             ?_I2C_MasterStart 0001  
                              _I2C_DO_RX_ACK 3C88                             ?_I2C_MasterWrite 0001  
                      ?i2_I2C_MasterSendNack 0001                       i2_I2C_MasterSendTxData 3DB0  
                                      ?_main 0001                              __end_of___awdiv 2098  
                            __end_of___awmod 2398                        _I2C_Read1ByteRegister 2A5E  
                            ___awdiv@divisor 002B                                        i2l121 393C  
                                      i2l130 3652                                        i2l124 3910  
                                      i2l300 3D10                                        i2l118 3968  
                                      i2l127 3994                                        i2l303 3D3A  
                                      i2l241 29D4                                        i2l306 22AC  
                                      i2l322 25DE                                        i2l323 264C  
                                      i2l251 35CE                                        i2l412 3E00  
                                      i2l340 2B54                                        i2l245 39C0  
                                      i2l309 22E4                                        i2l430 3E10  
                                      i2l334 3D52                                        i2l406 3B16  
                                      i2l510 28B8                                        i2l415 3DB6  
                                      i2l264 3AD2                                        i2l424 3E04  
                                      i2l409 3E20                                        i2l433 3C62  
                                      i2l361 3DA6                                        i2l257 3D76  
                                      i2l273 3BCC                                        i2l521 1A56  
                                      i2l418 3E14                                        i2l370 3D8E  
                                      i2l290 3B52                                        i2l530 1A56  
                                      i2l427 3E18                                        i2l267 3BE4  
                                      i2l284 3304                                        i2l436 3DC8  
                                      i2l460 3DFC                                        i2l364 3D9E  
                                      i2l373 3D86                                        i2l454 3E1C  
                                      i2l358 3DAE                                        i2l294 309A  
                                      i2l439 3DCE                                        i2l367 3D96  
                                      i2l463 3CF2                                        i2l376 3D7E  
                                      i2l457 3E24                                        i2l393 3E0C  
                                      i2l297 3D5E                                        i2l385 329E  
                                      i2l714 33C0                                        i2l379 3D46  
                                      i2l467 3D00                                        i2l396 3E08  
                                      i2l768 1912                                        i2l929 212A  
                                      i2l970 388C                              ___awdiv@counter 00DB  
                                      i2l974 385E                                        i2l978 3830  
                          ?_lcd_send_command 00E4                                 vfpfcnvrt@fmt 00E2  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                            ??_I2C_DO_TX_EMPTY 00E2  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                       gpio_pin_input_init@pin 002C  
                     gpio_pin_input_init@ret 00E1                           ??_lcd_send_command 002E  
                          __end_of_I2C_DO_RX 244A                            __end_of_I2C_DO_TX 1FD2  
                     lcd_send_string@lcd_ret 00ED                      ??i2_I2C_DO_SEND_RESTART 0001  
                                      _flags 003E                        ??i2_I2C_MasterSendAck 0001  
                                      _fputc 24FA                            __end_of_I2C_Close 38E6  
            INTx_select_InterruptHandler@ret 002D                           fp_i2_I2C_DO_RX_ACK 0000  
           i2I2C_MasterOperation@returnValue 0013               I2C_MasterOperation@returnValue 00E8  
                                      _width 0034                                        _portx 0080  
                                      _putch 3E26                                        _trisx 0094  
                 ?i2_I2C_MasterEnableRestart 0001                      _I2C_MasterEnableRestart 3DE6  
                        _I2C_DO_RX$intlevel0 23A2           _I2C_DO_SEND_RESTART_READ$intlevel0 3CDA  
                                      pclath 0FFA                                        pclatu 0FFB  
                              ?i2_I2C_Poller 0001                                        tablat 0FF5  
                           ?_I2C_SetCallback 0029                        ??i2_I2C_MasterStartRx 0001  
        __end_ofi2_I2C_DO_SEND_RESTART_WRITE 3DA8                  i2_I2C_DO_SEND_RESTART_WRITE 3DA0  
               I2C_SetAddressNackCallback@cb 00DB                                        plusw0 0FEB  
                                      plusw2 0FDB                           _convert_BCD_to_int 15EE  
                                      ttemp5 0058                                        ttemp6 005B  
                                      ttemp7 005F                                        status 0FD8  
                                      wtemp8 0058                              __end_of_sprintf 368C  
                          ?_I2C_DO_SEND_STOP 0001                       ?i2_I2C_MasterGetRxData 0001  
                              i2_I2C_DO_IDLE 3D54                        i2_I2C_DO_RX_NACK_STOP 3D80  
                              i2_I2C_DO_RCEN 3D48                           ??_I2C_DO_SEND_STOP 0029  
                   fp__rd1RegCompleteHandler 0000                              __initialization 2E08  
                        ?_convert_BCD_to_int 0029                        i2I2C_SetBuffer@buffer 0001  
                               __end_of_main 1418                     fp__wr1RegCompleteHandler 0000  
                  convert_BCD_to_int@int_num 0029         __end_of_INTx_select_InterruptHandler 2794  
               _INTx_select_InterruptHandler 26F2                    ?_I2C_DO_SEND_RESTART_READ 0001  
                 ?_INT1_set_InterruptHandler 0029                               ?_I2C_DO_RX_ACK 0001  
                       __end_of_APP_INT0_ISR 28BA                         __end_of_APP_INT1_ISR 1A58  
            __end_ofi2_rd1RegCompleteHandler 396A                       ?i2_I2C_DO_ADDRESS_NACK 0001  
                                     ??_main 0128                            ?_I2C_MasterIsNack 0001  
                  lcd_send_nbits@pin_counter 00E3         __end_ofi2_I2C_SetAddressNackCallback 3BCE  
               i2_I2C_SetAddressNackCallback 3BB6                                __activetblptr 0003  
            __end_ofi2_wr1RegCompleteHandler 3912            _RTC1307@RealTimeClockDS1307$F1374 002E  
                              ??__Initialize 002E                            ?_I2C_MasterSetIrq 0001  
                         ??_I2C_MasterIsNack 0029                   i2wr1RegCompleteHandler@ptr 000A  
                       ??_convert_BCD_to_int 002A                           ??_I2C_MasterSetIrq 0029  
                    lcd_send_enable@gpio_ret 002D              __end_of_I2C_CallbackReturnReset 3D20  
                                     ?_fputc 0029                             ___awdiv@dividend 0029  
                   ??i2_I2C_DO_SEND_ADR_READ 0001              i2I2C_SetDataCompleteCallback@cb 0006  
              I2C_SetDataCompleteCallback@cb 00DB                                       ?_putch 0001  
                             ??i2_I2C_Poller 0012                    _INT2_set_InterruptHandler 39C2  
                               ??_I2C_Poller 002E                       lcd_send_string_pos@lcd 00F0  
                     _lcd_send_char_data_pos 2E76                          _I2C_DO_TX$intlevel0 1F0C  
                                     i2l1301 2220                                       i2l1314 24F8  
                     lcd_send_string_pos@row 00F1                       lcd_send_string_pos@str 00F3  
                     lcd_send_number@counter 0041                                       i2l5150 3996  
                                     i2l4510 3D3C                                       i2l5160 39BE  
                                     i2l5152 399A                                       i2l7000 3DA0  
                                     i2l4512 3D40                                       i2l5320 217C  
                                     i2l5312 215E                       ?i2_I2C_MasterOperation 0001  
                                     i2l5154 39AA                                       i2l7002 3DA4  
                                     i2l4514 3D44                                       i2l5330 21B0  
                                     i2l5322 218A                                       i2l5314 2162  
                                     i2l5156 39AE                                       i2l7100 2252  
                                     i2l7012 3D90                                       i2l7020 3D84  
                                     i2l5340 21EA                                       i2l5332 21B8  
                                     i2l5324 2192                                       i2l5316 2170  
                                     i2l5500 1846                                       i2l5158 39BA  
                                     i2l7030 3E0A                                       i2l4358 3E02  
                                     i2l4366 3DFA                                       i2l7102 22B0  
                                     i2l7006 3D98                                       i2l7014 3D94  
                                     i2l5350 2210                                       i2l5342 21F2  
                                     i2l5334 21C0                                       i2l5326 2196  
                                     i2l5318 2178                                       i2l5510 186E  
                                     i2l5502 184E                                       i2l4384 3D54  
                                     i2l7104 22C2                                       i2l7120 25BC  
                                     i2l4472 3D48                                       i2l7008 3D9C  
                                     i2l7024 3D78                                       i2l5352 2218  
                                     i2l5344 21F4                                       i2l5336 21CE  
                                     i2l5328 219E                                       i2l5360 245C  
                                     i2l5512 1876                                       i2l5504 1856  
                                     i2l4538 3E22                                       i2l7034 3E06  
                                     i2l7042 3DB2                                       i2l4386 3D58  
                                     i2l7106 22DC                                       i2l7130 25E4  
                                     i2l7122 25D4                                       i2l4474 3D4C  
                                     i2l7018 3D80                                       i2l7026 3D7C  
                                     i2l8010 309E                                       i2l5346 21FA  
                                     i2l5338 21D4                                       i2l5370 2490  
                                     i2l5362 2464                                       i2l5514 187E  
                                     i2l5506 185E                                       i2l5522 188E  
                                     i2l7044 3C50                                       i2l4388 3D5C  
                                     i2l7108 22E2                                       i2l7140 25F4  
                                     i2l7124 25D8                                       i2l7116 25A8  
                                     i2l4476 3D50                                       i2l7300 3042  
                                     i2l8020 30EC                                       i2l8012 309E  
                                     i2l5348 2200                                       i2l5380 24CC  
                                     i2l5372 2498                                       i2l5364 2468  
                                     i2l5356 244A                                       i2l5516 1886  
                                     i2l5508 1866                                       i2l5524 1904  
                                     i2l7038 3DFE                                       i2l7070 3D0E  
                                     i2l7134 25EC                                       i2l7118 25B6  
                                     i2l7302 3056                                       i2l8022 30F0  
                                     i2l8014 30B4                                       i2l5382 24D2  
                                     i2l5374 24A0                                       i2l5366 2476  
                                     i2l5358 244E                                       i2l4816 3E16  
                                     i2l7048 3DC4                                       i2l7152 2AEA  
                                     i2l7304 305C                                       i2l8016 30C6  
                                     i2l5376 24AE                                       i2l5384 24D8  
                                     i2l5368 247E                                       i2l5480 1798  
                                     i2l7154 2AEE                                       i2l7146 2ADA  
                                     i2l7066 3D02                                       i2l7074 3D2E  
                                     i2l7090 2242                                       i2l7082 2222  
                                     i2l7170 3D88                                       i2l8018 30D8  
                                     i2l5386 24E8                                       i2l5378 24C4  
                                     i2l5490 17C0                                       i2l5482 17A0  
                                     i2l5474 1784                                       i2l7148 2AE2  
                                     i2l7164 2AFC                                       i2l7068 3D06  
                                     i2l7076 3D32                                       i2l7172 3D8C  
                                     i2l7180 3246                                       i2l5388 24F0  
                                     i2l5492 17C8                                       i2l5484 17A8  
                                     i2l5476 1788                                       i2l5820 193A  
                                     i2l5812 1914                                       i2l7158 2AF4  
                                     i2l7078 3D38                                       i2l7094 224A  
                                     i2l7086 223A                                       i2l7190 3256  
                                     i2l5486 17B0                                       i2l5478 1790  
                                     i2l5830 1970                                       i2l5814 1924  
                                     i2l5822 1948                                       i2l7184 324E  
                                     i2l7176 323A                                       i2l5488 17B8  
                                     i2l5840 19A6                                       i2l5824 195A  
                                     i2l5832 197E                                       i2l5816 1926  
                                     i2l7178 323E                                       i2l7610 358E  
                                     i2l5498 17D0                                       i2l5850 19DC  
                                     i2l5834 1990                                       i2l5842 19B4  
                                     i2l5826 195C                                       i2l5818 1936  
                                     i2l7620 35B8                                       i2l7612 3592  
                                     i2l4980 3B04                                       i2l8252 3366  
                                     i2l5860 1A12                                       i2l5844 19C6  
                                     i2l5852 19EA                                       i2l5836 1992  
                                     i2l5828 196C                                       i2l7462 3B36  
                                     i2l7622 35C0                                       i2l7614 35A2  
                                     i2l4982 3B14                                       i2l8254 33AE  
                                     i2l5870 1A48                                       i2l5854 19FC  
                                     i2l5862 1A20                                       i2l5846 19C8  
                                     i2l5838 19A2                                       i2l7296 302E  
                                     i2l7464 3B3A                                       i2l7624 35C4  
                                     i2l7616 35A4                                       i2l5864 1A32  
                                     i2l5856 19FE                                       i2l5848 19D8  
                                     i2l8280 284C                                       i2l4986 3E1E  
                                     i2l6930 32E0                                       i2l7298 3032  
                                     i2l7466 3B3E                                       i2l7626 35C8  
                                     i2l7618 35A8                                       i2l4978 3AF6  
                                     i2l5866 1A34                                       i2l5858 1A0E  
                                     i2l8290 2880                                       i2l8282 284E  
                                     i2l4988 3E1A                                       i2l6932 3AB0  
                                     i2l6940 3BCE                                       i2l7468 3B42  
                                     i2l7628 35CC                                       i2l5868 1A44  
                                     i2l8292 288E                                       i2l8284 2860  
                                     i2l8276 282A                                       i2l6942 3E12  
                                     i2l6934 3AC0                                       i2l6926 32A2  
                                     i2l7750 295E                                       i2l8294 289C  
                                     i2l8286 2864                                       i2l8278 283A  
                                     i2l6944 3E0E                                       i2l6936 3AC8  
                                     i2l6928 32B4                                       i2l9280 3288  
                                     i2l7760 296C                                       i2l7752 2962  
                                     i2l8296 28AA                                       i2l8288 2872  
                                     i2l8800 20CA                                       i2l6938 3AD0  
                                     i2l6954 393E                                       i2l6962 3912  
                                     i2l6970 38E6                                       i2l6946 3DCA  
                                     i2l9282 2626                                       i2l7770 298E  
                                     i2l7762 2974                                       i2l7754 2964  
                                     i2l7746 294A                                       i2l7930 2DC6  
                                     i2l8482 3860                                       i2l8490 3834  
                                     i2l8810 2106                                       i2l8802 20D8  
                                     i2l6980 397E                                       i2l6956 3952  
                                     i2l6964 3926                                       i2l6972 38FA  
                                     i2l9284 2286                                       i2l7780 29B6  
                                     i2l7772 2996                                       i2l7764 2976  
                                     i2l7756 2966                                       i2l7748 294E  
                                     i2l7932 2DD8                                       i2l7924 2D9A  
                                     i2l9276 17F0                                       i2l8484 3862  
                                     i2l8492 3846                                       i2l8812 210A  
                                     i2l8804 20E6                                       i2l6982 3992  
                                     i2l6958 3966                                       i2l6966 393A  
                                     i2l6974 390E                                       i2l6990 3650  
                                     i2l9286 2B2E                                       i2l7782 29BE  
                                     i2l7774 299E                                       i2l7766 297E  
                                     i2l7758 2968                                       i2l7790 29D2  
                                     i2l7934 2DEC                                       i2l7926 2D9E  
                                     i2l9278 18AE                                       i2l8486 3874  
                                     i2l8494 3804                                       i2l8814 2118  
                                     i2l8806 20EA                                       i2l7784 29C6  
                                     i2l7776 29A6                                       i2l7768 2986  
                                     i2l7936 2DF0                                       i2l7928 2DB4  
                                     i2l8488 3832                                       i2l8496 3806  
                                     i2l8816 2126                                       i2l8808 20F8  
                                     i2l6978 396A                                       i2l6986 3612  
                                     i2l6994 3DA8                                       i2l7794 3D70  
                                     i2l7786 29CA                                       i2l7778 29AE  
                                     i2l7938 2E04                                       i2l8498 3818  
                                     i2l6988 363C                                       i2l6996 3DAC  
                                     i2l7788 29CE                                       i2l7798 3BB6  
          __end_ofi2_I2C_MasterEnableRestart 3E16                       ??i2_I2C_MasterClearIrq 0001  
                              vfpfcnvrt@done 00E4                       _I2C_DO_RESET$intlevel0 3BF0  
                             ?i2_I2C_DO_IDLE 0001                                       _SSPADD 0FC8  
                             ?i2_I2C_DO_RCEN 0001                                       _SSPBUF 0FC9  
__end_ofi2_RealTimeClockDS1307_Get_Date_Time 33C2    __end_of_RealTimeClockDS1307_Get_Date_Time 316E  
        ??_RealTimeClockDS1307_Get_Date_Time 002E        ??i2_RealTimeClockDS1307_Get_Date_Time 001D  
       ?i2_RealTimeClockDS1307_Get_Date_Time 0017           ?_RealTimeClockDS1307_Get_Date_Time 00EC  
        i2_RealTimeClockDS1307_Get_Date_Time 3366            _RealTimeClockDS1307_Get_Date_Time 3106  
            _I2C_DO_SEND_ADR_WRITE$intlevel0 3B90                    ??_interrupt_INTx_pin_init 002E  
                        _I2C_MasterGetRxData 3DDA                                 vfprintf@cfmt 00EE  
                           __end_of_lcd_init 1F02                   _I2C_DO_SEND_STOP$intlevel0 3CA4  
                              _I2C_MasterFsm 2FC0                                    ??___awdiv 002D  
                                  ??___awmod 002D                    interrupt_INTx_disable@ret 002C  
                     ??i2_I2C_MasterSendNack 0001                                       _memset 37A2  
          __end_of_INT1_set_InterruptHandler 3A16                                       clear_0 2E4E  
                                     clear_1 2E5A                                       clear_2 2E66  
                          I2C_SetCallback@cb 0029                ?_INTx_select_InterruptHandler 002C  
                           ___awdiv@quotient 00DD                      fp__I2C_DO_SEND_ADR_READ 0000  
                            ___awmod@divisor 002B                      lcd_send_string@gpio_ret 00EC  
                     ?_I2C_Read1ByteRegister 00E9                                       isa$std 0001  
                            ___awmod@counter 00DB                                _I2C_SetBuffer 3A8C  
                         __end_of_I2C_Poller 3B36                               i2___awdiv@sign 0006  
               __end_of_I2C_MasterDisableIrq 3DF2                   ??i2_I2C_DO_RX_NACK_RESTART 0001  
                __end_of_lcd_send_number_pos 3612                                       fputc@c 0029  
             _I2C_DO_SEND_ADR_READ$intlevel0 3B5E                          _I2C_DO_ADDRESS_NACK 2D26  
                               __pdataCOMRAM 0052                         ?_I2C_MasterGetRxData 0001  
                          __end_ofi2___awdiv 2222                                    ?_I2C_Open 0001  
                          __end_ofi2___awmod 24FA           __end_of_I2C_SetAddressNackCallback 3B86  
              ?i2_I2C_SetAddressNackCallback 0006                   _I2C_SetAddressNackCallback 3B6E  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                  ??_I2C_MasterEnableRestart 0029                                       putch@c 0001  
                           __end_of_vfprintf 358C                               i2___awmod@sign 0006  
  INT2_set_InterruptHandler@InterruptHandler 0029    INT1_set_InterruptHandler@InterruptHandler 0029  
  INT0_set_InterruptHandler@InterruptHandler 0029                                    ??_sprintf 002E  
                        __end_of__Initialize 3A8C                      ?i2_I2C_MasterDisableIrq 0001  
                             i2_I2C_DO_RESET 3D3C                      _convert_uint8_to_string 34B8  
                                 __accesstop 0080                      __end_of__initialization 2E6C  
                     ?i2_I2C_DO_RX_NACK_STOP 0001                             i2_I2C_MasterOpen 3AF6  
                     lcd_send_number_pos@lcd 0122                                    ?_INT0_ISR 0001  
                           i2_I2C_MasterStop 3E0E                                    ?_INT1_ISR 0001  
              _I2C_DO_ADDRESS_NACK$intlevel0 2D30                                    ?_INT2_ISR 0001  
                     lcd_send_number_pos@num 0125                       lcd_send_number_pos@row 0123  
                        _I2C_MasterOperation 3500            interrupt_INTx_pin_init@_interrupt 00E2  
                          ??i2_I2C_DO_RX_ACK 0001                                ___rparam_used 0001  
                       ?_I2C_DO_ADDRESS_NACK 0001            _rdBlkRegCompleteHandler$intlevel0 3472  
                       lcd_set_curser@column 00EB           __end_ofi2_I2C_DO_SEND_RESTART_READ 3DB0  
                 i2_I2C_DO_SEND_RESTART_READ 3DA8                        _interrupt_INTx_enable 2B56  
                 convert_uint8_to_string@str 0120                   ?i2_rdBlkRegCompleteHandler 000A  
                    _rdBlkRegCompleteHandler 3468                   fp__rdBlkRegCompleteHandler 0000  
           __end_ofi2_I2C_MasterWaitForEvent 3D02                               __pcstackCOMRAM 0001  
                             ?_I2C_MasterFsm 0001                              ??_I2C_DO_RX_ACK 0029  
                               __pidataBANK0 37D4                    ?i2_I2C_CallbackReturnStop 000A  
                     _I2C_CallbackReturnStop 3D20                   i2I2C_Read1ByteRegister@reg 0014  
                           ??_lcd_send_nbits 00E0                                __end_of_fputc 25A8  
                              __end_of_putch 3E28                               ?_I2C_SetBuffer 0029  
                    ?_I2C_MasterWaitForEvent 0001                      i2_I2C_Read1ByteRegister 2D98  
                __end_of_lcd_send_string_pos 2C42                  lcd_send_string_pos@gpio_ret 00F5  
              __end_of_I2C_DO_SEND_ADR_WRITE 3B9E                   ?_I2C_DO_SEND_RESTART_WRITE 0001  
                       ?_I2C_MasterOperation 0001                     ??_interrupt_INTx_disable 002A  
                           ??_lcd_set_curser 00EC                        ??_I2C_MasterGetRxData 0029  
            __end_of_interrupt_INTx_pin_init 38BA                      ?_I2C_Write1ByteRegister 0014  
                               ??i2_I2C_Open 0001                                   ??_I2C_Open 0029  
                 __end_of_I2C_MasterClearIrq 3DFA                     interrupt_INTx_enable@ret 002C  
             __end_ofi2_I2C_MasterDisableIrq 3E1E                       __end_ofi2_I2C_DO_RESET 3D48  
                                    ??_fputc 00DB                                      ??_putch 0029  
                          _I2C_MasterSendAck 3DB8                              ??i2_I2C_DO_IDLE 0001  
                                 __pbssBANK0 00B0                                   __pbssBANK1 0100  
                            ??i2_I2C_DO_RCEN 0001                        lcd_send_char_data@lcd 00E4  
                              ??_I2C_DO_IDLE 0029                        lcd_send_char_data@ret 00E8  
                              ??_I2C_DO_RCEN 0029                __end_of_rd2RegCompleteHandler 36FC  
                         lcd_send_enable@lcd 002C                 __end_of_I2C_MasterSendTxData 3D70  
                         ?_I2C_MasterSendAck 0001                        _INT0_InterruptHandler 003C  
                                 ??_INT0_ISR 001D                            _I2C_MasterStartRx 3DDE  
                                 ??_INT1_ISR 001D                                   ??_INT2_ISR 001D  
               fp_i2_I2C_CallbackReturnReset 0000                 interrupt_INTx_clear_flag@ret 002C  
                 ??_interrupt_INTx_edge_init 002A                        ??_I2C_DO_ADDRESS_NACK 00E2  
              __end_of_wr2RegCompleteHandler 376C                           _lcd_send_char_data 2C42  
                        _I2C_DO_RX_NACK_STOP 3C76                        _rd1RegCompleteHandler 36FC  
                         ?_I2C_MasterStartRx 0001                   __end_of_I2C_MasterSendNack 3DC4  
                   ?i2_I2C_DO_SEND_ADR_WRITE 0001                        _wr1RegCompleteHandler 368C  
            _rd1RegCompleteHandler$intlevel0 3706              _wr1RegCompleteHandler$intlevel0 3696  
                        ??_I2C_MasterSendAck 0029                     rd1RegCompleteHandler@ptr 00DF  
          __end_ofi2_rdBlkRegCompleteHandler 3654                           __end_ofi2_I2C_Open 29D6  
                __end_of_I2C_DO_SEND_RESTART 3CBE                              _I2C_DO_TX_EMPTY 29D6  
                        I2C_SetBuffer@buffer 0029                 INT0_set_InterruptHandler@ret 002B  
                     interrupt_INTx_init@ret 00E5                              _minutes_counter 0050  
                        ?_lcd_send_char_data 00E4                      ?i2_I2C_MasterSendTxData 0001  
             __end_of_I2C_MasterWaitForEvent 3CF2                          ??_I2C_MasterStartRx 0029  
                       __end_ofi2_I2C_Poller 3B54                                      ?_memset 0029  
                    _I2C_DO_RX_ACK$intlevel0 3C92                        ??_I2C_MasterOperation 002E  
           i2I2C_SetDataCompleteCallback@ptr 0008               I2C_SetDataCompleteCallback@ptr 00DD  
             __end_of_I2C_Write1ByteRegister 3106                     ??_I2C_DO_RX_NACK_RESTART 0029  
             fp_i2_I2C_DO_SEND_RESTART_WRITE 0000            __end_of_I2C_DO_SEND_RESTART_WRITE 3CD0  
                       ?_I2C_DO_RX_NACK_STOP 0001       INTx_select_InterruptHandler@_interrupt 002C  
                           lcd_send_number@i 0042                                  __Initialize 3A68  
             ??_INTx_select_InterruptHandler 00DB                                      _RTC1307 0045  
                   ?i2_rd2RegCompleteHandler 000A                              _seconds_counter 0051  
                  __end_of_I2C_MasterSendAck 3DBE                     ?i2_wr2RegCompleteHandler 000A  
                       ??_lcd_send_char_data 002E                    ??_convert_uint8_to_string 002E  
                                    _SSPCON1 0FC6                                      _SSPCON2 0FC5  
                            ?i2_I2C_DO_RESET 0001          _I2C_DO_SEND_RESTART_WRITE$intlevel0 3CC8  
                                    _MY_INT0 00A4                                    ?_lcd_init 00E9  
                                    _MY_INT1 009E                                      _SSPSTAT 0FC7  
             ??i2_I2C_SetAddressNackCallback 000A                      ??i2_I2C_MasterGetRxData 0001  
                  __end_of_I2C_MasterStartRx 3DE2                         I2C_Close@returnValue 0029  
               ?_I2C_SetDataCompleteCallback 00DB                __end_ofi2_I2C_DO_SEND_RESTART 3DA0  
                ??i2_I2C_MasterEnableRestart 0001                                    _I2C_DO_RX 2398  
                                  _I2C_DO_TX 1F02                            ??i2_I2C_MasterFsm 000F  
           __end_of_I2C_DO_SEND_RESTART_READ 3CE2                 I2C_Read1ByteRegister@address 00EA  
                               _APP_INT0_ISR 282A                                 _APP_INT1_ISR 1914  
                                  _I2C_Close 38BA                   interrupt_INTx_pin_init@ret 00E3  
                  ??_rdBlkRegCompleteHandler 00E1                       ?_interrupt_INTx_enable 0029  
                 ?_interrupt_INTx_clear_flag 0029                lcd_send_nbits@data_or_command 002D  
                       _I2C_MasterDisableIrq 3DEE                            ??i2_I2C_SetBuffer 0005  
                            ??_I2C_MasterFsm 00E4                                      __Hparam 0000  
                                    __Lparam 0000                          __end_of_I2C_DO_IDLE 3C28  
                 i2rd2RegCompleteHandler@ptr 000A               __end_ofi2_I2C_MasterSendTxData 3DB8  
                        __end_of_I2C_DO_RCEN 3C12                    ??i2_I2C_Read1ByteRegister 0015  
                                    ___awdiv 1FD2                                      ___awmod 22E6  
                    ??i2_I2C_DO_ADDRESS_NACK 000D                              ??_I2C_SetBuffer 002D  
                     i2_I2C_DO_SEND_ADR_READ 3D02                                    ?_vfprintf 00EB  
                    I2C_SetBuffer@bufferSize 002B                                 __psmallconst 1000  
                ??_INT1_set_InterruptHandler 002B               i2I2C_SetAddressNackCallback@cb 0006  
                             _I2C_MasterOpen 3AD4                     i2_I2C_MasterWaitForEvent 3CF2  
                                    __pcinit 2E08                               _I2C_MasterStop 3DE2  
                             _I2C_Initialize 3C28                gpio_pin_logic_write@pin_logic 002A  
                                    __ramtop 1000                        i2I2C_Open@returnValue 0002  
                                    __ptext0 105C                                      __ptext1 35D0  
                                    __ptext2 2BD0                                      __ptext3 264E  
                                    __ptext4 34B8                                      __ptext5 3654  
                                    __ptext6 3548                                      __ptext7 1418  
                                    __ptext8 24FA                                      __ptext9 3E26  
                      ??_I2C_DO_RX_NACK_STOP 0029                  __end_ofi2_I2C_MasterSendAck 3DCA  
                        _gpio_pin_input_init 33C2                             ___awmod@dividend 0029  
                         I2C_SetCallback@idx 002D              i2I2C_CallbackReturnReset@funPtr 000A  
              I2C_CallbackReturnReset@funPtr 00DF                           I2C_SetCallback@ptr 002B  
                   wr1RegCompleteHandler@ptr 00DF                  __end_ofi2_I2C_MasterStartRx 3E06  
                  I2C_Write1ByteRegister@reg 0014                     fp__I2C_DO_SEND_ADR_WRITE 0000  
                 __end_of_convert_int_to_BCD 1914                      ?_lcd_send_char_data_pos 00F0  
                    ??i2_I2C_MasterOperation 0012                         fp_i2_I2C_DO_TX_EMPTY 0000  
                                    _sprintf 3654                                   ??_lcd_init 00EA  
                            lcd_init@lcd_ret 00EE             _I2C_CallbackReturnStop$intlevel0 3D2A  
                             __pintcode_body 2098                         end_of_initialization 2E6C  
               i2rdBlkRegCompleteHandler@ptr 000A                                   ?_I2C_DO_RX 0001  
                                 ?_I2C_DO_TX 0001                                      fputc@fp 002B  
            __end_ofi2_I2C_DO_SEND_ADR_WRITE 3D3C                                      memset@c 002A  
                                    memset@n 002C                                      memset@p 00DB  
                                 ?_I2C_Close 0001                                      int_func 2098  
                     ?_rd1RegCompleteHandler 00DF                      __end_of_I2C_DO_TX_EMPTY 2A5E  
                      ?_I2C_MasterDisableIrq 0001                         ?_gpio_pin_input_init 002C  
                     ?_wr1RegCompleteHandler 00DF                     fp__rd2RegCompleteHandler 0000  
                   _gpio_pin_output_low_init 316E                            __end_of_vfpfcnvrt 15EE  
            __end_of_convert_uint8_to_string 3500                                      postdec1 0FE5  
                                    postdec2 0FDD                      ??_I2C_Read1ByteRegister 002E  
                     __end_of_I2C_MasterOpen 3AF6                     fp__wr2RegCompleteHandler 0000  
                                    postinc0 0FEE                                      postinc1 0FE6  
                                    postinc2 0FDE                             vfpfcnvrt@convarg 00E6  
                     __end_of_I2C_MasterStop 3DE6                       __end_of_I2C_Initialize 3C3C  
                 ?_INT0_set_InterruptHandler 0029                    i2_I2C_MasterEnableRestart 3E12  
                                 ??_vfprintf 002E                    fp__I2C_CallbackReturnStop 0000  
            __end_ofi2_rd2RegCompleteHandler 393E                        _INT1_InterruptHandler 003A  
                   __end_ofi2_I2C_MasterOpen 3B18                     __end_ofi2_I2C_MasterStop 3E12  
            __end_of_rdBlkRegCompleteHandler 34B8                   i2I2C_MasterSendTxData@data 0001  
                       _I2C_MasterSendTxData 3D68                              fp__I2C_DO_RESET 0000  
                           _InterruptManager 0008              __end_ofi2_wr2RegCompleteHandler 3996  
             __end_of_lcd_send_char_data_pos 2EE4                         lcd_init@pins_counter 00ED  
              _I2C_DO_SEND_RESTART$intlevel0 3CB6                  ?_I2C_SetAddressNackCallback 00DB  
                 i2wr2RegCompleteHandler@ptr 000A                            i2_I2C_MasterClose 3E1E  
                            i2_I2C_DO_RX_ACK 3D88                            i2I2C_Open@address 0001  
                          i2_I2C_MasterStart 3E16                            i2_I2C_MasterWrite 3D70  
                         lcd_send_string@lcd 00E9                      ??i2_I2C_DO_RX_NACK_STOP 0001  
                                  i2___awdiv 215E                           lcd_send_string@ret 00EE  
                                  i2___awmod 244A                           lcd_send_string@str 00EA  
                         ?i2_I2C_MasterClose 0001                    _INT1_set_InterruptHandler 39EC  
           __end_ofi2_I2C_CallbackReturnStop 3E0E                           ?i2_I2C_MasterStart 0001  
                         ?i2_I2C_MasterWrite 0001             gpio_pin_output_low_init@gpio_ret 00E0  
                      lcd_set_curser@lcd_ret 00EF                                  _I2C_DO_IDLE 3C12  
           __end_of_interrupt_INTx_edge_init 1DE8                                  _I2C_DO_RCEN 3BFC  
                    i2_rd1RegCompleteHandler 393E                   rdBlkRegCompleteHandler@ptr 00DF  
                 fp_i2_rd1RegCompleteHandler 0000                                _hours_counter 004F  
              I2C_Write1ByteRegister@address 0016                        ??_gpio_pin_input_init 002D  
                     _interrupt_INTx_disable 2EE4                          ??i2_I2C_MasterClose 0001  
                         i2___awdiv@dividend 0001                      i2_wr1RegCompleteHandler 38E6  
                 fp_i2_wr1RegCompleteHandler 0000                      ?_I2C_CallbackReturnStop 00DF  
                        ??i2_I2C_MasterStart 0001                     fp_i2_I2C_DO_SEND_RESTART 0000  
                ?i2_I2C_DO_SEND_RESTART_READ 0001                     _I2C_DO_SEND_RESTART_READ 3CD0  
                        ??i2_I2C_MasterWrite 0014                  fp__I2C_DO_SEND_RESTART_READ 0000  
                ??i2_rdBlkRegCompleteHandler 000C                            i2_I2C_SetCallback 32A0  
               I2C_CallbackReturnStop@funPtr 00DF                              ?_I2C_MasterOpen 0001  
                            ?_I2C_MasterStop 0001                convert_uint16_to_string@F3180 00D4  
                            ?_I2C_Initialize 0001                   ?i2_I2C_CallbackReturnReset 000A  
                    _I2C_CallbackReturnReset 3D12                     I2C_Read1ByteRegister@reg 00E9  
                 fp__I2C_CallbackReturnReset 0000                      _gpio_pin_direction_init 1B92  
                         ?i2_I2C_SetCallback 0001                                  vfpfcnvrt@ap 00E3  
                                vfpfcnvrt@cp 00E5                                  vfpfcnvrt@fp 00E1  
          __end_of_INT0_set_InterruptHandler 3A40              ??i2_I2C_SetDataCompleteCallback 000A  
                          ??_lcd_send_enable 002D                                __pidataCOMRAM 3DD0  
                      ?_I2C_MasterSendTxData 0001                               __end_of_memset 37D4  
                ??_I2C_DO_SEND_RESTART_WRITE 0029                    __end_ofi2_I2C_MasterClose 3E22  
                          ??_lcd_send_string 002E                          ??i2_I2C_SetCallback 0005  
                        start_initialization 2E08                    __end_ofi2_I2C_MasterStart 3E1A  
                  __end_ofi2_I2C_MasterWrite 3D78                           i2___awdiv@quotient 0007  
                        _interrupt_INTx_init 3306                                  __end_of_abs 37A2  
                              ?_I2C_DO_RESET 0001                   convert_int_to_BCD@h_nipple 000C  
                                 ?i2___awdiv 0001                                   ?i2___awmod 0001  
        interrupt_INTx_clear_flag@_interrupt 0029                                ??i2_I2C_DO_RX 000D  
                              ??i2_I2C_DO_TX 000D                                  ??_I2C_DO_RX 00E2  
                                ??_I2C_DO_TX 00E2                     ?_interrupt_INTx_pin_init 00E2  
                          ??_I2C_MasterClose 0029                   convert_int_to_BCD@l_nipple 000B  
                               i2_I2C_Poller 3B36                                ??i2_I2C_Close 0001  
                     ??_I2C_MasterDisableIrq 0029                                  ??_I2C_Close 0029  
                          ??_I2C_MasterStart 0029                            ??_I2C_MasterWrite 002E  
                           _lcd_send_command 2CB4               __end_of_I2C_CallbackReturnStop 3D2E  
                  ?i2_I2C_DO_RX_NACK_RESTART 0001                       _I2C_DO_RX_NACK_RESTART 3C64  
                           ?_I2C_DO_TX_EMPTY 0001                  gpio_pin_input_init@gpio_ret 00E0  
                         _I2C_MasterClearIrq 3DF6                        lcd_send_number@number 004B  
                  __end_ofi2_I2C_SetCallback 3306                lcd_send_char_data_pos@lcd_ret 00F5  
                       ?_interrupt_INTx_init 00E4                                  vfprintf@fmt 00EC  
                        ?_I2C_MasterClearIrq 0001                  __end_of_I2C_MasterGetRxData 3DDE  
                  lcd_send_number_pos@column 0124                                  __pdataBANK0 0080  
                      __end_of_I2C_DO_RX_ACK 3C9A            __end_ofi2_I2C_CallbackReturnReset 3E0A  
                                   ??_memset 002E                    fp_i2_I2C_DO_SEND_ADR_READ 0000  
                  lcd_send_number_pos@number 00DA                             _I2C_DO_SEND_STOP 3C9A  
                                 memset@dest 0029                            ??_I2C_SetCallback 002D  
                    __end_ofi2_I2C_DO_RX_ACK 3D90                          I2C_Open@returnValue 002A  
                         _I2C_MasterSendNack 3DBE                     ?_I2C_MasterEnableRestart 0001  
                          _i2c_fsmStateTable 1001                       fp__I2C_DO_SEND_RESTART 0000  
                            i2_I2C_MasterFsm 302E                             ??i2_I2C_DO_RESET 0001  
                lcd_send_number_pos@gpio_ret 0126                        _I2C_DO_SEND_ADR_WRITE 3B86  
                               ?__Initialize 0001                                  __pbssCOMRAM 002E  
                     lcd_send_char_data@data 00E5                    lcd_send_char_data@lcd_ret 00E7  
                  i2_rdBlkRegCompleteHandler 3612                                __pcstackBANK0 00DB  
                              __pcstackBANK1 0120                             _category_counter 0044  
                             ??_I2C_DO_RESET 0029                          ?_I2C_MasterSendNack 0001  
               convert_uint8_to_string@value 0121                   lcd_send_string_pos@lcd_ret 00F6  
                            i2_I2C_SetBuffer 3AB0                 __end_of_I2C_DO_SEND_ADR_READ 3B6E  
                       ??_I2C_MasterClearIrq 0029                  __end_of_I2C_DO_ADDRESS_NACK 2D98  
                  ??i2_rd1RegCompleteHandler 000C                      ??_interrupt_INTx_enable 002A  
                  ??i2_wr1RegCompleteHandler 000C                             _I2C_MasterIsNack 3C3C  
                lcd_send_custom_char@counter 0043                __end_ofi2_I2C_MasterGetRxData 3E02  
               ?i2_I2C_DO_SEND_RESTART_WRITE 0001                    _I2C_DO_SEND_RESTART_WRITE 3CBE  
                      __end_ofi2_I2C_DO_IDLE 3D60                        _INT2_InterruptHandler 0038  
                      __end_ofi2_I2C_DO_RCEN 3D54                             _I2C_MasterSetIrq 3DD6  
              interrupt_INTx_init@_interrupt 00E4                  ??_interrupt_INTx_clear_flag 002A  
                      _rd2RegCompleteHandler 36C4                     i2_I2C_CallbackReturnStop 3E0A  
                 ??i2_I2C_MasterWaitForEvent 0001                  fp_i2_I2C_CallbackReturnStop 0000  
                      ??_interrupt_INTx_init 002E                 __end_of_gpio_pin_logic_write 1B92  
                        __end_ofi2_I2C_DO_RX 264E                          __end_ofi2_I2C_DO_TX 22E6  
                    ?i2_I2C_DO_SEND_ADR_READ 0001                        _wr2RegCompleteHandler 3734  
                  ??_I2C_CallbackReturnReset 002E                                  _day_counter 004E  
                  ??_gpio_pin_direction_init 00DB                  __end_of_I2C_MasterOperation 3548  
                       ??_I2C_MasterSendNack 0029                     rd2RegCompleteHandler@ptr 00DF  
                        __end_ofi2_I2C_Close 39C2                                    __pintcode 0008  
                                   ?___awdiv 0029                                    __ptext100 3BB6  
                                  __ptext101 2948                                    __ptext110 3D78  
                                  __ptext102 3AF6                                    __ptext111 3D80  
                                  __ptext103 3D70                                    __ptext120 3D2E  
                                  __ptext112 3D88                                    __ptext104 358C  
                                  __ptext121 3D02                                    __ptext113 3D90  
                                  __ptext105 3B36                                    __ptext130 3E02  
                                  __ptext122 3D54                                    __ptext114 3D98  
                                  __ptext106 3CF2                                    __ptext131 3E06  
                                  __ptext123 2ADA                                    __ptext115 3DA0  
                                  __ptext107 302E                                    __ptext140 3AB0  
                                  __ptext132 3E0A                                    __ptext124 3DFA  
                                  __ptext116 3DA8                                    __ptext108 323A  
                                  __ptext141 3E0E                                    __ptext133 3612  
                                  __ptext125 3C50                                    __ptext117 3D48  
                 __end_ofi2_I2C_DO_SEND_STOP 3D98                                    __ptext109 3D3C  
                                  __ptext142 3E12                                    __ptext134 38E6  
                                  __ptext126 3DB0                                    __ptext118 25A8  
                                  __ptext143 3E16                                    __ptext135 3912  
                                  __ptext127 3DC4                                    __ptext119 2222  
                                  __ptext144 3996                                    __ptext136 393E  
                                  __ptext128 3DFE                                    __ptext145 3E1A  
                                  __ptext137 396A                                    __ptext129 3DCA  
                                  __ptext146 3E1E                                    __ptext138 3BCE  
                                  __ptext147 3E22                                    __ptext139 32A0  
                                  __ptext148 0000                                     ?___awmod 0029  
              fp_i2_I2C_DO_SEND_RESTART_READ 0000               i2I2C_Read1ByteRegister@address 0015  
                     ??_I2C_MasterSendTxData 0029                          lcd_send_command@lcd 00E4  
                  __end_of_i2c_fsmStateTable 1021                          lcd_send_command@ret 00E8  
              __end_ofi2_I2C_DO_ADDRESS_NACK 32A0                                 fp__I2C_DO_RX 0000  
                               fp__I2C_DO_TX 0000                    ?_interrupt_INTx_edge_init 0029  
                          lcd_send_nbits@lcd 002C                            lcd_send_nbits@ret 00E2  
                                __smallconst 1000        __end_ofi2_I2C_SetDataCompleteCallback 3BE6  
              i2_I2C_SetDataCompleteCallback 3BCE                      I2C_MasterOperation@read 00E7  
                                   _I2C_Open 28BA                 INT2_set_InterruptHandler@ret 002B  
                  lcd_send_char_data_pos@lcd 00F0                    lcd_send_char_data_pos@ret 00F6  
                  lcd_send_char_data_pos@row 00F1                                  ??i2___awdiv 0005  
                                ??i2___awmod 0005                                     ?_sprintf 00EF  
                 __end_ofi2_I2C_MasterIsNack 3C64                      ??_rd1RegCompleteHandler 002E  
              __end_ofi2_I2C_MasterOperation 35D0                                _month_counter 004D  
                 __end_ofi2_I2C_MasterSetIrq 3DFE                   ??_gpio_pin_output_low_init 002D  
                    ??_wr1RegCompleteHandler 002E           interrupt_INTx_edge_init@_interrupt 0029  
                                   _INT0_ISR 3860                                     _INT1_ISR 3832  
                                   _INT2_ISR 3804                                     _RB4_Flag 0055  
                                   _RB5_Flag 0054                        i2_I2C_DO_SEND_RESTART 3D98  
                                   _RB6_Flag 0053                                     _RB7_Flag 0052  
                   __end_of_InterruptManager 215E               __end_ofi2_I2C_DO_SEND_ADR_READ 3D12  
                                   _PIE1bits 0F9D                ??i2_I2C_DO_SEND_RESTART_WRITE 0001  
                         _convert_int_to_BCD 1782                                     i2u310_40 21B0  
                                   i2u310_41 21AC                                     i2u311_40 21CE  
                                   i2u311_41 21CA                                     i2u312_40 21EA  
                                   i2u312_41 21E6                                     i2u313_40 2210  
                                   i2u313_41 220C                                     i2u314_40 245C  
                                   i2u314_41 2458                                     i2u235_40 3D00  
                                   i2u315_40 2476                                     i2u235_41 3CFC  
                                   i2u315_41 2472                                     i2u308_40 2170  
                                   i2u316_40 2490                                     i2u308_41 216C  
                                   i2u316_41 248C                                     i2u309_40 218A  
                                   i2u317_40 24AE                                     i2u309_41 2186  
                                   i2u317_41 24AA                                     i2u318_40 24C4  
                                   i2u350_40 1924                                     i2u318_41 24C0  
                                   i2u350_41 1920                                     i2u319_40 24E8  
                                   i2u351_40 1936                                     i2u319_41 24E4  
                                   i2u351_41 1932                                     i2u440_40 3C60  
                                   i2u360_40 1A32                                     i2u352_40 195A  
                                   i2u440_41 3C5A                                     i2u360_41 1A2E  
                                   i2u352_41 1956                                     i2u440_46 3C62  
                                   i2u273_40 3B04                                     i2u521_40 2DB4  
                                   i2u361_40 1A44                                     i2u353_40 196C  
                                   i2u273_41 3B00                                     i2u521_41 2DB0  
                                   i2u361_41 1A40                                     i2u353_41 1968  
                                   _PIR1bits 0F9E                                     i2u442_40 2236  
                                   i2u450_40 3042                                     i2u522_40 2E04  
                                   i2u354_40 1990                                     i2u442_41 2232  
                                   i2u450_41 303E                                     i2u522_41 2E00  
                                   i2u354_41 198C                                     i2u451_40 3056  
                                   i2u355_40 19A2                                     i2u603_40 20D8  
                                   i2u451_41 3052                                     i2u355_41 199E  
                                   i2u603_41 20D4                                     _PIR2bits 0FA1  
                                   i2u444_40 22DC                                     i2u443_48 2260  
                                   i2u460_40 3B52                                     i2u356_40 19C6  
                                   i2u604_40 20E6                                     i2u444_41 22D8  
                                   i2u443_49 2274                                     i2u460_41 3B4E  
                                   i2u356_41 19C2                                     i2u604_41 20E2  
                                   i2u437_40 32B4                                     i2u445_40 25D4  
                                   i2u452_48 3084                                     i2u509_40 295E  
                                   i2u525_40 30B4                                     i2u357_40 19D8  
                                   i2u605_40 20F8                                     i2u437_41 32B0  
                                   i2u445_41 25D0                                     i2u452_49 3096  
                                   i2u509_41 295A                                     i2u525_41 30B0  
                                   i2u357_41 19D4                                     i2u605_41 20F4  
                                   i2u294_40 39AA                                     i2u438_40 3AC0  
                                   i2u526_40 3104                                     i2u358_40 19FC  
                                   i2u550_40 283A                                     i2u606_40 2106  
                                   i2u294_41 39A6                                     i2u438_41 3ABC  
                                   i2u526_41 3100                                     i2u358_41 19F8  
                                   i2u550_41 2836                                     i2u606_41 2102  
                                   i2u446_48 2602                                     i2u359_40 1A0E  
                                   i2u607_40 2118                                     i2u446_49 2614  
                                   i2u359_41 1A0A                                     i2u551_41 2844  
                                   i2u607_41 2114                                     i2u447_48 2B0A  
                                   i2u552_40 2860                                     i2u608_40 2126  
                                   i2u447_49 2B1C                                     i2u552_41 285C  
                                   i2u608_41 2122                                     i2u448_48 3264  
                                   i2u448_49 3276                                     i2u570_40 3818  
                                   i2u570_41 3814                                     i2u547_41 33B8  
                                   i2u571_48 381E                                     i2u571_49 3830  
                                   i2u566_40 3874                                     i2u566_41 3870  
                                   i2u488_40 35A2                                     i2u567_48 387A  
                                   i2u568_40 3846                                     i2u488_41 359E  
                                   i2u567_49 388C                                     i2u568_41 3842  
                                   i2u489_40 35B8                                     i2u489_41 35B4  
                                   i2u569_48 384C                                     i2u569_49 385E  
                      __end_of_I2C_MasterFsm 302E                  __end_of_I2C_DO_RX_NACK_STOP 3C88  
            __end_of_I2C_MasterEnableRestart 3DEA                      __end_ofi2_I2C_MasterFsm 309C  
                        ?_convert_int_to_BCD 0009                               fp__I2C_DO_IDLE 0000  
                ??_INT0_set_InterruptHandler 002B                               fp__I2C_DO_RCEN 0000  
              __end_of_I2C_Read1ByteRegister 2ADA                                    _vfpfcnvrt 1418  
                interrupt_INTx_edge_init@ret 002C                        __end_of_I2C_SetBuffer 3AB0  
                           ?i2_I2C_DO_RX_ACK 0001                       ?_I2C_DO_SEND_ADR_WRITE 0001  
                    __end_ofi2_I2C_SetBuffer 3AD4                    _interrupt_INTx_clear_flag 2F52  
                          ?i2_I2C_MasterOpen 0001                            ?i2_I2C_MasterStop 0001  
                   ??i2_I2C_MasterDisableIrq 0001                     I2C_MasterSendTxData@data 0029  
                   ?_convert_uint8_to_string 0120                           ??i2_I2C_MasterOpen 0001  
                          i2___awdiv@divisor 0003                           ??i2_I2C_MasterStop 0001  
            __end_of_gpio_pin_direction_init 1CCC                            i2___awdiv@counter 0005  
                   wr2RegCompleteHandler@ptr 00DF                                   vfpfcnvrt@c 00EA  
                                _INTCON2bits 0FF1                                  _INTCON3bits 0FF0  
                       ??_convert_int_to_BCD 000A                   ??_I2C_DO_SEND_RESTART_READ 0029  
                                  copy_data0 2E1C                                    copy_data1 2E3C  
                   ?_rdBlkRegCompleteHandler 00DF                    i2I2C_SetBuffer@bufferSize 0003  
                    ?_interrupt_INTx_disable 0029                           i2___awmod@dividend 0001  
                                 _I2C_Poller 3B18                __end_ofi2_I2C_DO_RX_NACK_STOP 3D88  
                                i2_I2C_DO_RX 25A8                                  i2_I2C_DO_TX 2222  
                                 _I2C_Status 00B0                                 ?_I2C_DO_IDLE 0001  
                               ?_I2C_DO_RCEN 0001                       ?_rd2RegCompleteHandler 00DF  
                                i2_I2C_Close 3996              interrupt_INTx_enable@_interrupt 0029  
             lcd_send_char_data_pos@gpio_ret 00F4                             ??_I2C_MasterOpen 0029  
                  _I2C_DO_TX_EMPTY$intlevel0 29E0                              _lcd_send_enable 3A40  
                     ?_wr2RegCompleteHandler 00DF                             ??_I2C_MasterStop 0029  
                   ??_I2C_MasterWaitForEvent 0029                             ??_I2C_Initialize 0029  
                   ?i2_I2C_Read1ByteRegister 0014                    fp__I2C_DO_RX_NACK_RESTART 0000  
            _wr2RegCompleteHandler$intlevel0 373E              _rd2RegCompleteHandler$intlevel0 36CE  
                                   __Hrparam 0000         gpio_pin_direction_init@pin_direction 002A  
           interrupt_INTx_disable@_interrupt 0029                                   vfprintf@ap 00ED  
                                   __Lrparam 0000                                   vfprintf@fp 00EB  
                       __end_of_I2C_DO_RESET 3BFC                     ??_I2C_Write1ByteRegister 0016  
                            _lcd_send_string 264E                   lcd_send_number_pos@lcd_ret 0127  
                   lcd_send_command@gpio_ret 00E6                  ??i2_I2C_CallbackReturnReset 000C  
                        _lcd_send_number_pos 35D0                   ?_INT2_set_InterruptHandler 0029  
                       _I2C_DO_SEND_ADR_READ 3B54                   lcd_send_number_pos@counter 003F  
                       lcd_send_number_pos@i 0040                                   ?_vfpfcnvrt 00E1  
          _I2C_CallbackReturnReset$intlevel0 3D1C                        fp_i2_I2C_DO_SEND_STOP 0000  
         i2I2C_Read1ByteRegister@returnValue 0016             I2C_Read1ByteRegister@returnValue 00EB  
                    i2_I2C_DO_SEND_ADR_WRITE 3D2E                 __end_ofi2_I2C_MasterClearIrq 3E26  
                 fp_i2_I2C_DO_SEND_ADR_WRITE 0000                     __end_of_lcd_send_command 2D26  
                            _I2C_MasterClose 3DF2              i2I2C_SetAddressNackCallback@ptr 0008  
              I2C_SetAddressNackCallback@ptr 00DD                   __end_of_convert_BCD_to_int 1782  
                                 sprintf@fmt 00F0                              I2C_Open@address 0029  
           __end_ofi2_I2C_DO_RX_NACK_RESTART 3D80                          fp__I2C_DO_SEND_STOP 0000  
                       i2I2C_SetCallback@idx 0005                              _I2C_MasterStart 3DEA  
                       i2I2C_SetCallback@ptr 0003                              _I2C_MasterWrite 3D60  
                   fp_i2_I2C_DO_ADDRESS_NACK 0000               i2I2C_CallbackReturnStop@funPtr 000A  
                       _gpio_pin_logic_write 1A58                              fp__APP_INT0_ISR 0000  
                            fp__APP_INT1_ISR 0000                                     __ptext10 376C  
                                   __ptext11 22E6                                     __ptext20 2CB4  
                                   __ptext12 1FD2                                     __ptext21 3416  
                                   __ptext13 37A2                                     __ptext30 1CCC  
                                   __ptext22 3A40                                     __ptext14 2E76  
                                   __ptext31 2EE4                                     __ptext23 316E  
                                   __ptext15 2794                                     __ptext40 3B6E  
                                   __ptext32 2F52                                     __ptext24 1A58  
                                   __ptext16 2C42                                     __ptext41 28BA  
                                   __ptext33 26F2                                     __ptext25 3306  
                                   __ptext17 15EE                                     __ptext50 3C64  
                                   __ptext42 3AD4                                     __ptext34 39C2  
                                   __ptext26 388E                                     __ptext18 3A68  
                                   __ptext51 3C76                                     __ptext43 3D60  
                                   __ptext35 39EC                                     __ptext27 33C2  
                                   __ptext19 1DE8                                     __ptext60 3B86  
                                   __ptext52 3C88                                     __ptext44 3500  
                                   __ptext36 3A16                                     __ptext28 1B92  
                                   __ptext61 3B54                                     __ptext53 3C9A  
                                   __ptext45 3B18                                     __ptext37 3C28  
                                   __ptext29 2B56                                     __ptext70 3DDE  
                                   __ptext62 3C12                                     __ptext54 3CAC  
                                   __ptext46 3CE2                                     __ptext38 3106  
                                   __ptext71 3D12                                     __ptext63 29D6  
                                   __ptext55 3CBE                                     __ptext47 2FC0  
                                   __ptext39 2A5E                                     __ptext80 3A8C  
                                   __ptext72 3D20                                     __ptext64 3DD6  
                                   __ptext56 3CD0                                     __ptext48 2D26  
                                   __ptext81 3DE2                                     __ptext73 3468  
                                   __ptext65 3C3C                                     __ptext57 3BFC  
                                   __ptext49 3BE6                                     __ptext90 3832  
                                   __ptext82 3DE6                                     __ptext74 368C  
                                   __ptext66 3D68                                     __ptext58 2398  
                                   __ptext91 3860                                     __ptext83 3DEA  
                                   __ptext75 36C4                                     __ptext67 3DB8  
                                   __ptext59 1F02                                     __ptext92 282A  
                                   __ptext84 38BA                                     __ptext76 36FC  
                                   __ptext68 3DDA                                     __ptext93 1914  
                                   __ptext85 3DEE                                     __ptext77 3734  
                                   __ptext69 3DBE                                     __ptext94 1782  
                                   __ptext86 3DF2                                     __ptext78 3B9E  
                                   __ptext95 244A                                     __ptext87 3DF6  
                                   __ptext79 31D4                                     __ptext96 215E  
                                   __ptext97 3366                                     __ptext89 3804  
                                   __ptext98 2D98                                     __ptext99 309C  
             __end_of_interrupt_INTx_disable 2F52                  __end_of_gpio_pin_input_init 3416  
                                   _lcd_init 1DE8                    _INT0_set_InterruptHandler 3A16  
        __end_of_I2C_SetDataCompleteCallback 3BB6               ?i2_I2C_SetDataCompleteCallback 0006  
                _I2C_SetDataCompleteCallback 3B9E                         ?_lcd_send_number_pos 0122  
                    ?_I2C_DO_RX_NACK_RESTART 0001                 __end_ofi2_I2C_MasterSendNack 3DD0  
                     ?i2_I2C_DO_SEND_RESTART 0001                     __end_of_I2C_DO_SEND_STOP 3CAC  
                   ??i2_I2C_MasterSendTxData 0001                      i2_rd2RegCompleteHandler 3912  
                 fp_i2_rd2RegCompleteHandler 0000                   lcd_send_char_data@gpio_ret 00E6  
           _I2C_DO_RX_NACK_RESTART$intlevel0 3C6E                      i2_wr2RegCompleteHandler 396A  
                 fp_i2_wr2RegCompleteHandler 0000                              _I2C_SetCallback 31D4  
              ??_I2C_SetDataCompleteCallback 002E                   I2C_Write1ByteRegister@data 0015  
                        _lcd_send_string_pos 2BD0                                     isa$xinst 0000  
                                   int$flags 0057                        ?_I2C_DO_SEND_ADR_READ 0001  
                           ?i2_I2C_MasterFsm 0001                                     _vfprintf 3548  
          __end_of_INT2_set_InterruptHandler 39EC                     __end_of_I2C_MasterIsNack 3C50  
                   __end_of_I2C_MasterSetIrq 3DDA                             ?i2_I2C_SetBuffer 0001  
                          i2___awmod@divisor 0003                             lcd_init@gpio_ret 00EC  
                          i2___awmod@counter 0005                                   _INTCONbits 0FF2  
                                 i2_I2C_Open 2948                        ?_gpio_pin_logic_write 0029  
                             _lcd_send_nbits 3416                         ?_lcd_send_string_pos 00F0  
                    lcd_send_command@command 00E5                      lcd_send_command@lcd_ret 00E7  
             __end_of_I2C_DO_RX_NACK_RESTART 3C76                   ??i2_I2C_CallbackReturnStop 000C  
                      ??_lcd_send_number_pos 002E                            lcd_set_curser@lcd 00E9  
                    gpio_pin_logic_write@pin 0029                      gpio_pin_logic_write@ret 002B  
                  i2_I2C_CallbackReturnReset 3E06                            lcd_set_curser@row 00EA  
           __end_of_gpio_pin_output_low_init 31D4                      __end_of_lcd_send_enable 3A68  
                             _lcd_set_curser 2794                                     intlevel2 0000  
                                ?_I2C_Poller 0001                                    sprintf@ap 00F3  
            __end_ofi2_I2C_Read1ByteRegister 2E08                          i2I2C_SetCallback@cb 0001  
                              ?_APP_INT0_ISR 0001                                ?_APP_INT1_ISR 0001  
              __end_of_interrupt_INTx_enable 2BD0                      __end_of_lcd_send_string 26F2  
                        _I2C_DO_SEND_RESTART 3CAC                    convert_int_to_BCD@BCD_num 0009  
                     fp__I2C_DO_ADDRESS_NACK 0000                     fp_i2_I2C_DO_RX_NACK_STOP 0000  
                    __end_of_I2C_MasterClose 3DF6                    ??i2_I2C_DO_SEND_ADR_WRITE 0001  
                         fp__I2C_DO_TX_EMPTY 0000                     ??_lcd_send_char_data_pos 002E  
                                ??_vfpfcnvrt 002D                      __end_of_I2C_MasterStart 3DEE  
                    __end_of_I2C_MasterWrite 3D68                         ?_I2C_DO_SEND_RESTART 0001  
                                   sprintf@f 00F4                                     sprintf@s 00EF  
                     __end_of_lcd_send_nbits 3468                        ??_lcd_send_string_pos 002E  
                      _I2C_DO_IDLE$intlevel0 3C1C                           i2_I2C_DO_SEND_STOP 3D90  
                               _year_counter 004C                                  _SSPCON1bits 0FC6  
                                _SSPCON2bits 0FC5                       __end_of_lcd_set_curser 282A  
                 gpio_pin_direction_init@pin 0029                   gpio_pin_direction_init@ret 002B  
                     i2I2C_Close@returnValue 0001                    ??i2_rd2RegCompleteHandler 000C  
                   i2_I2C_DO_RX_NACK_RESTART 3D78                               ??_APP_INT0_ISR 001D  
                fp_i2_I2C_DO_RX_NACK_RESTART 0000                               ??_APP_INT1_ISR 000D  
                    __end_of_I2C_SetCallback 323A                  __end_of_interrupt_INTx_init 3366  
                  ??i2_wr2RegCompleteHandler 000C                          ?i2_I2C_DO_SEND_STOP 0001  
              __end_of_rd1RegCompleteHandler 3734                             fp__I2C_DO_RX_ACK 0000  
              __end_of_wr1RegCompleteHandler 36C4                       i2_I2C_MasterDisableIrq 3E1A  
                       i2_I2C_MasterClearIrq 3E22                        i2_I2C_MasterGetRxData 3DFE  
                          ?_InterruptManager 0001                           i2_I2C_MasterIsNack 3C50  
                 lcd_send_char_data_pos@data 00F3                    convert_int_to_BCD@int_num 000A  
